HEADER hducommfxram, Source Code Ver : 1.4, TestScript Ver : 1.4
--------------------------------------------------------------------------------
-- Author Name         :    Priyanka N
--
-- File Name           :    hducommfxram.ptu
--
-- Test Creation Date  :    30.10.2017
--
-- Tested Functions    :    XramInit
--
-- Version History     :
--
--  TEST-VERSION        TEST-DATE       TESTER NAME        MODIFICATIONS
--  ------------        ---------       -----------        -------------
--      1.1             30.10.2017       Priyanka N        Created the ptu file.
--      1.2             11.11.2017       Priyanka N        Updated as per #PR100171
--      1.3             10.04.2018       Hemalatha S       Updated as per #PR100201
--      1.4             28.04.2018      Vignesh Sunil      Updated as per #PR 100338
--------------------------------------------------------------------------------
--
-- TESTED FILE INCLUDE DIRECTIVES 
--
--------------------------------------------------------------------------------

#/*============================================================================*/
#/* Module specific includes                                                   */
#/*============================================================================*/

##include "hducommfxram.h"
##include "hdulibbasicfunc.h"
##include "hducommfmemmap.h"
##include "hducommfxramdata.h"
##include "hdulibstm32f4xxfsmc.h"

--------------------------------------------------------------------------------
--
-- TESTED FILE DECLARATIONS 
--
--------------------------------------------------------------------------------

-- Declarations of the global variables of the tested file

    --None
    
-- Declarations of the temporary variable

    --Temporary variables created to verify stub parameters
    # T_FSMC_NORSRAM_INIT PTU_fsmc_norsraminit_struct;
    # T_FSMC_NORSRAM_TIMING_INIT PTU_fsmc_readwrite_timing_struct,PTU_fsmc_write_timing_struct;
    
--------------------------------------------------------------------------------
BEGIN

    COMMENT Author Name      : Priyanka N 
    COMMENT
    COMMENT File Name        : hducommfxram.ptu
    COMMENT
    COMMENT Tested Functions : XramInit
    COMMENT
    COMMENT Assumptions and Constraints
    COMMENT <AC>
    COMMENT Assumption(s):
    COMMENT None
    COMMENT 
    COMMENT Constraint(s):
    COMMENT None
    COMMENT </AC>

    COMMENT Equivalence Class Description
    COMMENT <ECD>
    COMMENT 
    COMMENT Valid Class(es)
    COMMENT
    COMMENT Class 3
    COMMENT Function "XramInit", calls the function "FsmcNorSramInit".
    COMMENT
    COMMENT Class 4
    COMMENT Function "XramInit", calls the function "FsmcNorSramCmd".
    COMMENT
    COMMENT Invalid class(es)
    COMMENT None
    COMMENT </ECD>
    
--------------------------------------------------------------------------------
--
-- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
--
--------------------------------------------------------------------------------
SIMUL

    DEFINE STUB hducommfxram_c

        # void  FsmcNorSramCmd ( T_UINT32 _in fsmc_bank,T_FUNCTIONAL_STATE _in new_state);

        -- Paramter fsmc_norsraminit_struct is made as _no hence it is verified explicitly
        # void  FsmcNorSramInit ( T_FSMC_NORSRAM_INIT  _no *fsmc_norsraminit_struct )
        # {
        #  PTU_fsmc_norsraminit_struct  = *fsmc_norsraminit_struct;
        #  PTU_fsmc_readwrite_timing_struct=*(fsmc_norsraminit_struct->fsmc_readwrite_timing_struct);
        #  PTU_fsmc_write_timing_struct=*(fsmc_norsraminit_struct->fsmc_write_timing_struct);
        # }

    END DEFINE

ELSE_SIMUL

        -- No action defined as of now if the module is not simulated
    
END SIMUL   
--------------------------------------------------------------------------------
--
-- ENVIRONMENTS DECLARATIONS
--
--------------------------------------------------------------------------------
--IF HOST

-- No special things that have to be done on the host to run the test.

--ELSE

-- No action defined for the target execution as of now

--END IF

--------------------------------------------------------------------------------
-- TESTED FILE ENVIRONNEMENT
--------------------------------------------------------------------------------
--Enviornment of the file hducommfxram.c

    --ENVIRONMENT ENV_hducommfxram_c

      --None

    --END ENVIRONMENT --ENV_hducommfxram_c

--USE ENV_hducommfxram_c
--------------------------------------------------------------------------------
--
-- SERVICES DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Declaration of the service XramInit
--------------------------------------------------------------------------------
SERVICE XramInit
SERVICE_TYPE extern

TEST 1
FAMILY nominal
    
    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hducommfxram-XramInit-CB-LLR-001]
    COMMENT Performs FSMC Configuration for external NVRAM as follows:
    COMMENT - address setuptime field is set with DEC_ZERO,  
    COMMENT - address hold time field is set with DEC_ZERO,  
    COMMENT - data setup time field is set with DEC_SIX,  
    COMMENT - bus turn around duration field is set with DEC_TWO,  
    COMMENT - clock division field is set with DEC_ZERO,  
    COMMENT - data latency field is set with DEC_ZERO,  
    COMMENT - access mode field is set with FSMC_ACCESSMODE_A
    COMMENT Equivalence class None
    COMMENT
    COMMENT [hducommfxram-XramInit-CB-LLR-002]
    COMMENT Function Configures the fields of FSMC control register as follows:
    COMMENT - bank field is set with FSMC_BANK1_NORSRAM2,
    COMMENT - data address mux field is set with FSMC_DATAADDRESSMUX_DISABLE,
    COMMENT - memory type field is set with FSMC_MEMORYTYPE_PSRAM,
    COMMENT - memory data width field is set with FSMC_MEMORYDATAWIDTH_16B,
    COMMENT - burst access mode field is set with FSMC_BURSTACCESSMODE_DISABLE,
    COMMENT - asynchronous wait field is set with FSMC_ASYNCHRONOUSWAIT_DISABLE,
    COMMENT - wait signal polarity field is set with FSMC_WAITSIGNALPOLARITY_LOW,
    COMMENT - wrap mode field is set with FSMC_WRAPMODE_DISABLE,
    COMMENT - wait signal active field is set with FSMC_WAIT_SIG_ACTIVE_BEF_WAIT ,
    COMMENT - write operation field is set with FSMC_WRITEOPERATION_ENABLE,
    COMMENT - wait signal field is set with FSMC_WAITSIGNAL_DISABLE,
    COMMENT - extended mode field is set with FSMC_EXTENDEDMODE_DISABLE,
    COMMENT - write burst field is set with FSMC_WRITEBURST_DISABLE.
    COMMENT - readwrite timingstruct feild is set with reference of xram timing struct
    COMMENT - write timingstruct feild is set with reference of xram timing struct
    COMMENT Equivalence class None
    COMMENT 
    COMMENT [hducommfxram-XramInit-CB-LLR-003]
    COMMENT Function "XramInit" calls the function "FsmcNorSramInit" to initialize NOR SRAM bank in FSMC.
    COMMENT Equivalence class 3
    COMMENT
    COMMENT [hducommfxram-XramInit-CB-LLR-004]
    COMMENT Function "XramInit" calls the function "FsmcNorSramCmd" to enable second block of bank 1.
    COMMENT Equivalence class 4
    COMMENT </TD>
    
    ELEMENT

        COMMENT INPUT SECTION:
        
            -- None

        COMMENT INPUT/OUTPUT SECTION:
    
            -- None
        
        COMMENT OUTPUT SECTION:
    
            -- FSMC control register 'fsmc_bank' is updated to 'FSMC_BANK1_NORSRAM2' 
            VAR PTU_fsmc_norsraminit_struct.fsmc_bank,             init = DEC_SIX ,     ev = FSMC_BANK1_NORSRAM2

            -- FSMC control register 'fsmc_data_address_mux' is updated to 'FSMC_DATAADDRESSMUX_DISABLE' 
            VAR PTU_fsmc_norsraminit_struct.fsmc_data_address_mux,     init = DEC_SIX ,     ev = FSMC_DATAADDRESSMUX_DISABLE

            -- FSMC control register 'fsmc_memory_type' is updated to 'FSMC_MEMORYTYPE_PSRAM' 
            VAR PTU_fsmc_norsraminit_struct.fsmc_memory_type,          init = DEC_SIX ,     ev = FSMC_MEMORYTYPE_PSRAM

            -- FSMC control register 'fsmc_memory_datawidth' is updated to 'FSMC_MEMORYDATAWIDTH_16B' 
            VAR PTU_fsmc_norsraminit_struct.fsmc_memory_datawidth,     init = DEC_SIX ,     ev = FSMC_MEMORYDATAWIDTH_16B

            -- FSMC control register 'fsmc_burst_accessmode' is updated to 'FSMC_BURSTACCESSMODE_DISABLE' 
            VAR PTU_fsmc_norsraminit_struct.fsmc_burst_accessmode,     init = DEC_SIX ,     ev = FSMC_BURSTACCESSMODE_DISABLE

            -- FSMC control register 'fsmc_asynchronous_wait' is updated to 'FSMC_ASYNCHRONOUSWAIT_DISABLE' 
            VAR PTU_fsmc_norsraminit_struct.fsmc_asynchronous_wait,        init = DEC_SIX ,     ev = FSMC_ASYNCHRONOUSWAIT_DISABLE

            -- FSMC control register 'fsmc_waitsignal_polarity' is updated to 'FSMC_WAITSIGNALPOLARITY_LOW' 
            VAR PTU_fsmc_norsraminit_struct.fsmc_waitsignal_polarity,      init = DEC_SIX ,         ev = FSMC_WAITSIGNALPOLARITY_LOW

            -- FSMC control register 'fsmc_wrap_mode' is updated to 'FSMC_WRAPMODE_DISABLE' 
            VAR PTU_fsmc_norsraminit_struct.fsmc_wrap_mode,            init = DEC_SIX ,         ev = FSMC_WRAPMODE_DISABLE

            -- FSMC control register 'fsmc_waitsignal_active' is updated to 'FSMC_WAIT_SIG_ACTIVE_BEF_WAIT' 
            VAR PTU_fsmc_norsraminit_struct.fsmc_waitsignal_active,        init = DEC_SIX ,         ev = FSMC_WAIT_SIG_ACTIVE_BEF_WAIT

            -- FSMC control register 'fsmc_write_operation' is updated to 'FSMC_WRITEOPERATION_ENABLE' 
            VAR PTU_fsmc_norsraminit_struct.fsmc_write_operation,      init = DEC_SIX ,     ev = FSMC_WRITEOPERATION_ENABLE

            -- FSMC control register 'fsmc_waitsignal' is updated to 'FSMC_WAITSIGNAL_DISABLE' 
            VAR PTU_fsmc_norsraminit_struct.fsmc_waitsignal,           init = DEC_SIX ,         ev = FSMC_WAITSIGNAL_DISABLE

            -- FSMC control register 'fsmc_extended_mode' is updated to 'FSMC_EXTENDEDMODE_DISABLE' 
            VAR PTU_fsmc_norsraminit_struct.fsmc_extended_mode,        init = DEC_SIX ,     ev = FSMC_EXTENDEDMODE_DISABLE

            -- FSMC control register 'fsmc_write_burst' is updated to 'FSMC_WRITEBURST_DISABLE' 
            VAR PTU_fsmc_norsraminit_struct.fsmc_write_burst,          init = DEC_SIX ,         ev = FSMC_WRITEBURST_DISABLE

        -- FSMC Configuration for external NVRAM
        -- Timing Parameters for write and read access when the  ExtendedMode is not used   
            
            -- 'fsmc_address_setuptime' is updated with 'DEC_ZERO'          
            VAR PTU_fsmc_readwrite_timing_struct.fsmc_address_setuptime,    init = DEC_SIX ,        ev = DEC_ZERO

            -- 'fsmc_address_holdtime' is updated with 'DEC_ZERO'       
            VAR PTU_fsmc_readwrite_timing_struct.fsmc_address_holdtime,     init = DEC_SIX ,        ev = DEC_ZERO

            -- 'fsmc_data_setuptime' is updated with 'DEC_SIX'      
            VAR PTU_fsmc_readwrite_timing_struct.fsmc_data_setuptime,       init = DEC_TWO ,        ev = DEC_SIX

            -- 'fsmc_bus_turnaround_duration' is updated with 'DEC_TWO'             
            VAR PTU_fsmc_readwrite_timing_struct.fsmc_bus_turnaround_duration,  init = DEC_SIX ,        ev = DEC_TWO

            -- 'fsmc_clk_division' is updated with 'DEC_ZERO'       
            VAR PTU_fsmc_readwrite_timing_struct.fsmc_clk_division,         init = DEC_SIX ,        ev = DEC_ZERO

            -- 'fsmc_data_latency' is updated with 'DEC_ZERO'           
            VAR PTU_fsmc_readwrite_timing_struct.fsmc_data_latency,         init = DEC_SIX ,        ev = DEC_ZERO

            -- 'fsmc_access_mode' is updated with 'FSMC_ACCESSMODE_A'       
            VAR PTU_fsmc_readwrite_timing_struct.fsmc_access_mode,      init = DEC_SIX ,        ev = FSMC_ACCESSMODE_A
        
        -- FSMC Configuration for external NVRAM
        -- Timing Parameters for write access when the  ExtendedMode is used

            -- 'fsmc_address_setuptime' is updated with 'DEC_ZERO'      
            VAR PTU_fsmc_write_timing_struct.fsmc_address_setuptime,        init = DEC_TWO ,        ev = DEC_ZERO

            -- 'fsmc_address_holdtime' is updated with 'DEC_ZERO'           
            VAR PTU_fsmc_write_timing_struct.fsmc_address_holdtime,     init = DEC_TWO ,        ev = DEC_ZERO

            -- 'fsmc_data_setuptime' is updated with 'DEC_SIX'      
            VAR PTU_fsmc_write_timing_struct.fsmc_data_setuptime,       init = DEC_TWO ,        ev = DEC_SIX

            -- 'fsmc_bus_turnaround_duration' is updated with 'DEC_TWO'             
            VAR PTU_fsmc_write_timing_struct.fsmc_bus_turnaround_duration,  init = DEC_TWO ,        ev = DEC_TWO

            -- 'fsmc_clk_division' is updated with 'DEC_ZERO'           
            VAR PTU_fsmc_write_timing_struct.fsmc_clk_division,         init = DEC_TWO ,        ev = DEC_ZERO

            -- 'fsmc_data_latency' is updated with 'DEC_ZERO'           
            VAR PTU_fsmc_write_timing_struct.fsmc_data_latency,         init = DEC_TWO ,        ev = DEC_ZERO

            -- 'fsmc_access_mode' is updated with 'FSMC_ACCESSMODE_A'       
            VAR PTU_fsmc_write_timing_struct.fsmc_access_mode,          init = DEC_TWO ,        ev = FSMC_ACCESSMODE_A
         
        -- Stub Calls :
        SIMUL
        
            -- Initialize NORSRAM bank in FSMC
            STUB FsmcNorSramInit ()
        
            -- Enable second block of bank 1
            STUB FsmcNorSramCmd (FSMC_BANK1_NORSRAM2,ENABLE)

        END SIMUL
        
    -- Calling the Unit Under Test :
    #XramInit();
        
    END ELEMENT

END TEST -- TEST 1

END SERVICE -- XramInit


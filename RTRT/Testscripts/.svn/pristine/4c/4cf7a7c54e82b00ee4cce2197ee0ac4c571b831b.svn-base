HEADER hdulibmisc,Source Code Ver : 1.1 ,TestScript Ver : 1.2
--------------------------------------------------------------------------------
-- Author Name         : Manju Kiran M 
--
-- File Name           : hdulibmisc.ptu
--
-- Test Creation Date  : 30.10.2017
--
-- Tested Functions    : NvicPriorityGroupConfig,
--                       NvicInit, 
--                       NvicSetVectorTable
--
-- Version History     :
--
--  TEST-VERSION        TEST-DATE			TESTER NAME			MODIFICATIONS
--  ------------        ---------           -----------			-------------
--   1.1                30.10.2017          Manju Kiran M		Created Ptu file
--   1.2				10.11.2017			Manju Kiran M		Updated as per #PR100171
--
--------------------------------------------------------------------------------
--
-- TESTED FILE INCLUDE DIRECTIVES 
--
--------------------------------------------------------------------------------

#/*============================================================================*/
#/* Module specific includes                                                   */
#/*============================================================================*/

##include "hdulibbasicfunc.h"     
##include "hdulibmisc.h"          
##include "hdulibcorecm4.h"      
--------------------------------------------------------------------------------
--
-- TESTED FILE DECLARATIONS 
--
--------------------------------------------------------------------------------

-- Declarations of the global variables of the tested file
    --None 

-- Declarations of the temporary variable
    --None

--------------------------------------------------------------------------------

BEGIN

    COMMENT Author Name         : Manju Kiran M
    COMMENT  
    COMMENT File Name           : hdulibmisc.ptu
    COMMENT      
    COMMENT Tested Functions    : NvicPriorityGroupConfig,
    COMMENT                       NvicInit, 
    COMMENT                       NvicSetVectorTable
    COMMENT
    COMMENT Assumptions and Constraints
    COMMENT <AC>
    COMMENT Assumption(s):
    COMMENT None
    COMMENT  
    COMMENT Constraint(s):
    COMMENT 1.Header file "hdulibcorecm4.h" is modified for testing purpose. The following macro's are modified
    COMMENT   for stubbing hardware address.
    COMMENT /*Commented for testing purpose*/
    COMMENT /*#define SCB                 ((T_SCB_TYPE       *)     SCB_BASE      )*/
    COMMENT /*#define NVIC                ((T_NVIC_TYPE      *)     NVIC_BASE     )*/
    COMMENT 
    COMMENT /* Modified macro by stubbing hardware address for testing purpose*/ 
    COMMENT T_SCB_TYPE PTU_SCB;
    COMMENT #define SCB                 ((T_SCB_TYPE       *)     &PTU_SCB      )
    COMMENT T_NVIC_TYPE PTU_NVIC;
    COMMENT #define NVIC                ((T_NVIC_TYPE      *)     &PTU_NVIC     )
    COMMENT
    COMMENT </AC>
    COMMENT
    COMMENT Equivalence Class Description
    COMMENT <ECD>
    COMMENT   
    COMMENT Valid Class(es)
    COMMENT
    COMMENT Class 1
    COMMENT In function 'NvicPriorityGroupConfig', the priority group bits of the AIRCR register are set
    COMMENT based on "nvic_priority_group" value. 
	COMMENT
    COMMENT Class 2
    COMMENT In function 'NvicInit', NVIC IRQ channel command of NVIC IRQ channel is Enabled.
    COMMENT
    COMMENT Class 3
    COMMENT In function 'NvicInit', NVIC IRQ channel command of NVIC IRQ channel is Disabled.
    COMMENT
    COMMENT Class 4
    COMMENT In function 'NvicSetVectorTable', setting of vector table location and offset is done.
    COMMENT
    COMMENT Invalid Class(es)
	COMMENT
	COMMENT Class 5
	COMMENT In function "NvicInit" , Null is passed as input parameter
	COMMENT
    COMMENT </ECD>
	
--------------------------------------------------------------------------------
--
-- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
--
--------------------------------------------------------------------------------
SIMUL

	DEFINE STUB hdulibmisc_c

        -- No stubs

	END DEFINE

ELSE_SIMUL

    -- No action defined as of now if the module is not simulated

END SIMUL

--------------------------------------------------------------------------------
--
-- ENVIRONMENTS DECLARATIONS
--
--------------------------------------------------------------------------------

--IF HOST

--No special things that have to be done on the host to run the test.

--ELSE

--No action defined for the target execution as of now

--END IF

--------------------------------------------------------------------------------
-- TESTED FILE ENVIRONNEMENT
--------------------------------------------------------------------------------

--Environment of the file hdulibmisc.c

--ENVIRONMENT ENV_hdulibmisc_c

--      None
        
--END ENVIRONMENT ENV_hdulibmisc_c

--USE ENV_hdulibmisc_c

--------------------------------------------------------------------------------
--
-- SERVICES DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Declaration of the service NvicInit
--------------------------------------------------------------------------------
SERVICE NvicInit
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_NVIC_INIT nvic_init_struct;

    ENVIRONMENT ENV_NvicInit
	
		STRUCTURE nvic_init_struct,		init = { NVIC_IRQChannel => 0, NVIC_IRQChannelPreemptionPriority => 0, 
		&										 NVIC_IRQChannelSubPriority => 0, NVIC_IRQChannelCmd => DISABLE },		ev = init
    
	END ENVIRONMENT -- ENV_NvicInit
    
	USE ENV_NvicInit

TEST 1
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibmisc-NvicInit-CB-LLR-001] 
    COMMENT The function "NvicInit" computes the IRQ priority and sets the computed value to 
    COMMENT Interrupt Priority Register(IP) of NVIC when NVIC IRQ channel command is ENABLE. 
    COMMENT Equivalence class 2
    COMMENT
    COMMENT [hdulibmisc-NvicInit-CB-LLR-002]
    COMMENT The function "NvicInit" configures ISER of NVIC to enable the selected IRQ channel
    COMMENT when NVIC IRQ channel command is ENABLE.
    COMMENT Members of the structure 'nvic_init_struct' is tested by passing the values as follows:
    COMMENT NVIC_IRQChannel = WWDG_IRQN(min)
    COMMENT NVIC_IRQChannelPreemptionPriority=0(min)
    COMMENT NVIC_IRQChannelSubPriority=0(min)
    COMMENT NVIC_IRQChannelCmd = ENABLE.
    COMMENT Equivalence class 2
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

            --Holds the the configuration information for the specified NVIC peripheral
            STRUCTURE nvic_init_struct,		init = { NVIC_IRQChannel =>WWDG_IRQN,NVIC_IRQChannelPreemptionPriority =>0,
            &                                       NVIC_IRQChannelSubPriority =>0,NVIC_IRQChannelCmd=>ENABLE } ,
            &                                								ev = init

            --Holds the offset value of Application Interrupt and Reset Control Register
            VAR SCB->AIRCR,					init = 0x5FA0000 ,				ev = init

        COMMENT INPUT/OUTPUT SECTION:
        
            --None

        COMMENT OUTPUT SECTION:

            --Holds the caluclated NVIC structure ISER member value
            VAR NVIC->ISER[0],				init = 0,						ev = 1
            
			--Holds the caluclated NVIC structure IP member value
            VAR NVIC->IP[0],				init = 1,						ev = 0

        -- Stub Calls :
        SIMUL

            --No Stubs

        END SIMUL

        -- Calling the Unit Under Test :
        #NvicInit(&nvic_init_struct);

    END ELEMENT
    
END TEST  -- TEST 1

TEST 2
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibmisc-NvicInit-CB-LLR-001]
    COMMENT The function "NvicInit" does nothing when NVIC IRQ channel command is DISABLE. 
    COMMENT Equivalence class 3 
    COMMENT 
    COMMENT [hdulibmisc-NvicInit-CB-LLR-002]
    COMMENT The function "NvicInit" does nothing when NVIC IRQ channel command is DISABLE. 
    COMMENT Equivalence class 3 
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

            --Holds the the configuration information for the specified NVIC peripheral
            STRUCTURE nvic_init_struct,		init = { NVIC_IRQChannel =>EXTI15_10_IRQN,NVIC_IRQChannelPreemptionPriority =>7,
            &										NVIC_IRQChannelSubPriority =>6,NVIC_IRQChannelCmd=>DISABLE } ,
            &															ev = init

            --Holds the offset value of Application Interrupt and Reset Control Register
            VAR SCB->AIRCR,					init = 0x5FA0000 ,			ev = init

        COMMENT INPUT/OUTPUT SECTION:
        
            --None

        COMMENT OUTPUT SECTION:

            --None

        -- Stub Calls :
        SIMUL

            --No Stubs

        END SIMUL

        -- Calling the Unit Under Test :
        #NvicInit(&nvic_init_struct);

    END ELEMENT
    
END TEST  -- TEST 2

TEST 3
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibmisc-NvicInit-CB-LLR-001] 
    COMMENT The function "NvicInit" computes the IRQ priority and sets the computed value to 
    COMMENT Interrupt Priority Register(IP) of NVIC when NVIC IRQ channel command is ENABLE. 
    COMMENT Equivalence class 2
    COMMENT       
    COMMENT [hdulibmisc-NvicInit-CB-LLR-002]
    COMMENT The function "NvicInit" configures ISER of NVIC to enable the selected IRQ channel
    COMMENT when NVIC IRQ channel command is ENABLE.
    COMMENT Members of the structure 'nvic_init_struct' is tested by passing the values as follows:
    COMMENT NVIC_IRQChannel = RTC_Alarm_IRQN(Nominal)
    COMMENT NVIC_IRQChannelPreemptionPriority=8(Nominal)
    COMMENT NVIC_IRQChannelSubPriority=9(Nominal)
    COMMENT NVIC_IRQChannelCmd = ENABLE.      
    COMMENT Equivalence class 2
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

            --Holds the the configuration information for the specified NVIC peripheral    
            STRUCTURE nvic_init_struct,			init = { NVIC_IRQChannel =>RTC_ALARM_IRQN,NVIC_IRQChannelPreemptionPriority =>8,
            &											NVIC_IRQChannelSubPriority =>9,NVIC_IRQChannelCmd=>ENABLE } ,
            &															ev = init

            --Holds the offset value of Application Interrupt and Reset Control Register
            VAR SCB->AIRCR,						init = 0x5FA0000 ,		ev = init

        COMMENT INPUT/OUTPUT SECTION:
        
            --None   

        COMMENT OUTPUT SECTION: 

            --Holds the caluclated NVIC structure ISER member value
            VAR NVIC->ISER[1],					init = 0,				ev = 0x200
            
			--Holds the caluclated NVIC structure IP member value
            VAR NVIC->IP[41],					init = 1,				ev = 0

        -- Stub Calls :
        SIMUL

            --No Stubs

        END SIMUL

        -- Calling the Unit Under Test :
        #NvicInit(&nvic_init_struct);

    END ELEMENT
    
END TEST  -- TEST 3

TEST 4
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibmisc-NvicInit-CB-LLR-001] 
    COMMENT The function "NvicInit" computes the IRQ priority and sets the computed value to 
    COMMENT Interrupt Priority Register(IP) of NVIC when NVIC IRQ channel command is ENABLE. 
    COMMENT Equivalence class 2
    COMMENT    
    COMMENT [hdulibmisc-NvicInit-CB-LLR-002]
    COMMENT The function "NvicInit" disables the selected IRQ channels by setting icer for 
    COMMENT selected IRQ channel when NVIC IRQ channel command is ENABLE.
    COMMENT Members of the structure 'nvic_init_struct' is tested by passing the values as follows:
    COMMENT NVIC_IRQChannel = HASH_RNG_IRQN(max-1)
    COMMENT NVIC_IRQChannelPreemptionPriority=14(max-1)
    COMMENT NVIC_IRQChannelSubPriority=15(max)
    COMMENT NVIC_IRQChannelCmd = ENABLE.  
    COMMENT Equivalence class 3
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

            --Holds the the configuration information for the specified NVIC peripheral
            STRUCTURE nvic_init_struct,			init = { NVIC_IRQChannel =>HASH_RNG_IRQN,NVIC_IRQChannelPreemptionPriority =>14,
            &											NVIC_IRQChannelSubPriority =>15,NVIC_IRQChannelCmd=>ENABLE } ,
            &																ev = init

            --Holds the offset value of Application Interrupt and Reset Control Register
            VAR SCB->AIRCR,						init = 0x5FA0000 ,			ev = init

        COMMENT INPUT/OUTPUT SECTION:
        
            --None

        COMMENT OUTPUT SECTION:

            --Holds the caluclated NVIC structure ISER member value
            VAR NVIC->ISER[2],					init = 1,					ev = 0x10000
           
			--Holds the caluclated NVIC structure IP member value
            VAR NVIC->IP[80],					init = 1,					ev = 0

        -- Stub Calls :
        SIMUL

            --No Stubs

        END SIMUL

        -- Calling the Unit Under Test :
        #NvicInit(&nvic_init_struct);

    END ELEMENT
    
END TEST  -- TEST 4

TEST 5
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibmisc-NvicInit-CB-LLR-001] 
    COMMENT The function "NvicInit" computes the IRQ priority and sets the computed value to 
    COMMENT Interrupt Priority Register(IP) of NVIC when NVIC IRQ channel command is ENABLE. 
    COMMENT Equivalence class 2
    COMMENT
    COMMENT [hdulibmisc-NvicInit-CB-LLR-002]
    COMMENT The function "NvicInit" configures ISER of NVIC to enable the selected IRQ channel
    COMMENT when NVIC IRQ channel command is ENABLE.
    COMMENT Members of the structure 'nvic_init_struct' is tested by passing the values as follows:
    COMMENT NVIC_IRQChannel = FPU_IRQN(max)
    COMMENT NVIC_IRQChannelPreemptionPriority=15(Max)
    COMMENT NVIC_IRQChannelSubPriority=14(max-1)
    COMMENT NVIC_IRQChannelCmd = ENABLE.
    COMMENT Equivalence class 2
    COMMENT </TD> 

    ELEMENT
    
        COMMENT INPUT SECTION:

            --Holds the the configuration information for the specified NVIC peripheral
            STRUCTURE nvic_init_struct,			init = {NVIC_IRQChannel =>FPU_IRQN,NVIC_IRQChannelPreemptionPriority =>15,
            &											NVIC_IRQChannelSubPriority =>14,NVIC_IRQChannelCmd=>ENABLE } ,
            &																ev = init

            --Holds the offset value of Application Interrupt and Reset Control Register
            VAR SCB->AIRCR,						init = 0x5FA0000 ,			ev = init

        COMMENT INPUT/OUTPUT SECTION:
        
            --None

        COMMENT OUTPUT SECTION:

            --Holds the caluclated NVIC structure ISER member value
            VAR NVIC->ISER[2],					init = 0,					ev = 0x20000
            
			--Holds the caluclated NVIC structure IP member value
            VAR NVIC->IP[81],					init = 1,					ev = 0

        -- Stub Calls :
        SIMUL

            --No Stubs

        END SIMUL

        -- Calling the Unit Under Test :
        #NvicInit(&nvic_init_struct);

    END ELEMENT
    
END TEST  -- TEST 5

--TEST 6
--FAMILY robustness
--
--  COMMENT Test Description
--  COMMENT <TD>   
--  COMMENT [hdulibmisc-NvicInit-CB-LLR-001] 
--  COMMENT The function parameter 'nvic_init_struct' is tested for NULL
--  COMMENT Equivalence class 5
--  COMMENT </TD> 
--
--  ELEMENT
--
--      COMMENT INPUT SECTION:
--
          --None
--      
--      COMMENT INPUT/OUTPUT SECTION:
--
          --None
--   
--      COMMENT OUTPUT SECTION: 
--
          --None
--                    
      -- Stub Calls :
--      SIMUL
--
          --No Stubs
--
--      END SIMUL
--
      -- Calling the Unit Under Test :
--      #NvicInit(NULL);
--
END SERVICE -- NvicInit


--------------------------------------------------------------------------------
-- Declaration of the service NvicSetVectorTable
--------------------------------------------------------------------------------
SERVICE NvicSetVectorTable
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_UINT32 nvic_vector_tab;
    #T_UINT32 offset;

    ENVIRONMENT ENV_NvicSetVectorTable
    
		VAR nvic_vector_tab,		init = 0,		ev = init
		
		VAR offset,		init = 0,		ev = init
    
	END ENVIRONMENT -- ENV_NvicSetVectorTable
    
	USE ENV_NvicSetVectorTable

TEST 1
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibmisc-NvicSetVectorTable-CB-LLR-001]
    COMMENT The function "NvicSetVectorTable" configures VTOR of SCB with vector table location nvic_vect_tab and offset. 
    COMMENT The parameter'offset' is tested for minimum value.
    COMMENT Equivalence class 4
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

            --Specifies the vector table is in RAM or FLASH memory
			VAR nvic_vector_tab,			init = 0x20000000 ,				ev = init

            --Holds the Vector Table base offset field value
			VAR offset,						init = 0x200 ,					ev = init

        COMMENT INPUT/OUTPUT SECTION:
        
            --None

        COMMENT OUTPUT SECTION:

            --Holds the Vector Table Offset Register value
			VAR SCB->VTOR,					init = 0x0 ,					ev = 0x20000200 

        -- Stub Calls :
        SIMUL

            --No Stubs

        END SIMUL

        -- Calling the Unit Under Test :
        #NvicSetVectorTable(nvic_vector_tab,offset);

    END ELEMENT
    
END TEST  -- TEST 1

TEST 2
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibmisc-NvicSetVectorTable-CB-LLR-001]
    COMMENT The function "NvicSetVectorTable" configures VTOR of SCB with vector table location nvic_vect_tab and offset. 
    COMMENT The parameters 'nvic_vector_tab' and 'offset' are tested for nominal value.
    COMMENT Equivalence class 4
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

            --Specifies the vector table is in RAM or FLASH memory
			VAR nvic_vector_tab,				init = 0x20000000 ,				ev = init

            --Holds the Vector Table base offset field value
			VAR offset,							init = 0x800 ,					ev = init

        COMMENT INPUT/OUTPUT SECTION:
        
            --None

        COMMENT OUTPUT SECTION:

            --Holds the Vector Table Offset Register value
			VAR SCB->VTOR,						init = 0x0 ,					ev = 0x20000800

        -- Stub Calls :
        SIMUL

            --No Stubs

        END SIMUL

        -- Calling the Unit Under Test :
        #NvicSetVectorTable(nvic_vector_tab,offset);

    END ELEMENT
    
END TEST  -- TEST 2

TEST 3
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibmisc-NvicSetVectorTable-CB-LLR-001]
    COMMENT The function "NvicSetVectorTable" configures VTOR of SCB with vector table location nvic_vect_tab and offset. 
    COMMENT The parameters 'nvic_vector_tab' and 'offset' are tested for maximum value.
    COMMENT Equivalence class 4
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

            --Specifies the vector table is in RAM or FLASH memory
			VAR nvic_vector_tab,			init = (T_UINT32)0xFFFFFFFF,			ev = init

            --Holds the Vector Table base offset field value
			VAR offset,						init = 0x1FFFFE00,						ev = init

        COMMENT INPUT/OUTPUT SECTION:
        
            --None

        COMMENT OUTPUT SECTION:

            --Holds the Vector Table Offset Register value
			VAR SCB->VTOR,					init = 0x0,								ev = 0xFFFFFFFF

        -- Stub Calls :
        SIMUL

            --No Stubs

        END SIMUL

        -- Calling the Unit Under Test :
        #NvicSetVectorTable(nvic_vector_tab,offset);

    END ELEMENT
    
END TEST  -- TEST 3

END SERVICE -- NvicSetVectorTable

--------------------------------------------------------------------------------
-- Declaration of the service NvicPriorityGroupConfig
--------------------------------------------------------------------------------
SERVICE NvicPriorityGroupConfig
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_UINT32 nvic_priority_group;

    ENVIRONMENT ENV_NvicPriorityGroupConfig
		
		VAR nvic_priority_group,			init = 0,				ev = init
    
	END ENVIRONMENT -- ENV_NvicPriorityGroupConfig
    
	USE ENV_NvicPriorityGroupConfig

TEST 1
FAMILY nominal

    COMMENT Test Description
   COMMENT <TD> 
    COMMENT [hdulibmisc-NvicPriorityGroupConfig-CB-LLR-001]
    COMMENT The function "NvicPriorityGroupConfig" sets the priority group bits [10:8] in AIRCR of SCB 
    COMMENT to maximum value (0x700).
    COMMENT Equivalence class 1
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

            --Specifies the priority grouping bits length
			VAR nvic_priority_group,		init = 0x700 ,						ev = init

		COMMENT INPUT/OUTPUT SECTION:

            --Holds the the priority group bits value
			VAR SCB->AIRCR,					init = (T_VLT_UINT32)0xFA050000,	ev = (T_VLT_UINT32)0x5FA0700

        COMMENT OUTPUT SECTION:

            --None

        -- Stub Calls :
        SIMUL

            --No Stubs

        END SIMUL

        -- Calling the Unit Under Test :
        # NvicPriorityGroupConfig(nvic_priority_group);

    END ELEMENT
    
END TEST   TEST 1

TEST 2
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibmisc-NvicPriorityGroupConfig-CB-LLR-001]
    COMMENT The function "NvicPriorityGroupConfig" sets the priority group bits [10:8] in AIRCR of SCB 
    COMMENT to the nominal value (0x600).
    COMMENT Equivalence class 1
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

            --Specifies the priority grouping bits length
			VAR nvic_priority_group,	init = 0x600 ,							ev = init

		COMMENT INPUT/OUTPUT SECTION:

            --Holds the the priority group bits value
			VAR SCB->AIRCR,				init = (T_VLT_UINT32)0xFA050000,		ev = (T_VLT_UINT32)0x5FA0600   

        COMMENT OUTPUT SECTION:

            --None

        -- Stub Calls :
        SIMUL

            --No Stubs

        END SIMUL

        -- Calling the Unit Under Test :
        # NvicPriorityGroupConfig(nvic_priority_group);

    END ELEMENT
    
END TEST   TEST 2

TEST 3
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibmisc-NvicPriorityGroupConfig-CB-LLR-001]
    COMMENT The function "NvicPriorityGroupConfig" sets the priority group bits [10:8} in AIRCR of SCB 
    COMMENT to the nominal value (0x500).
    COMMENT Equivalence class 1
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

            --Specifies the priority grouping bits length
            VAR nvic_priority_group,		init = 0x500 ,						ev = init

		COMMENT INPUT/OUTPUT SECTION:

            --Holds the the priority group bits value
			VAR SCB->AIRCR,					init = (T_VLT_UINT32)0xFA050000,	ev = (T_VLT_UINT32)0x5FA0500

        COMMENT OUTPUT SECTION:

          --None

        -- Stub Calls :
        SIMUL

            --No Stubs

        END SIMUL

        -- Calling the Unit Under Test :
        # NvicPriorityGroupConfig(nvic_priority_group);

    END ELEMENT
    
END TEST   TEST 3

TEST 4
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibmisc-NvicPriorityGroupConfig-CB-LLR-001]
    COMMENT The function "NvicPriorityGroupConfig" sets the priority group bits [10:8] in AIRCR of SCB 
    COMMENT to the nominal value (0x400).
    COMMENT Equivalence class 1
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

            --Specifies the priority grouping bits length
			VAR nvic_priority_group,			init = 0x400 ,						ev = init

		COMMENT INPUT/OUTPUT SECTION:

            --Holds the the priority group bits value
			VAR SCB->AIRCR,						init = (T_VLT_UINT32)0xFA050000,	ev = (T_VLT_UINT32)0x5FA0400

        COMMENT OUTPUT SECTION:

            --None

        -- Stub Calls :
        SIMUL

            --No Stubs

        END SIMUL

        -- Calling the Unit Under Test :
        # NvicPriorityGroupConfig(nvic_priority_group);

    END ELEMENT
  
END TEST   TEST 4

TEST 5
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibmisc-NvicPriorityGroupConfig-CB-LLR-001]
    COMMENT The function "NvicPriorityGroupConfig" sets the priority group bits [10:8] in AIRCR of SCB 
    COMMENT to the value "NVIC_PRIORITYGROUP_4".
    COMMENT Equivalence class 1
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

            --Specifies the priority grouping bits length
			VAR nvic_priority_group,		init = NVIC_PRIORITYGROUP_4 ,			ev = init

		COMMENT INPUT/OUTPUT SECTION:

            --Holds the the priority group bits value
			VAR SCB->AIRCR,					init = (T_VLT_UINT32)0xFA050000,		ev = (T_VLT_UINT32)0x5FA0300   

        COMMENT OUTPUT SECTION:

            --None

        -- Stub Calls :
        SIMUL

            --No Stubs

        END SIMUL

        -- Calling the Unit Under Test :
        # NvicPriorityGroupConfig(nvic_priority_group);

    END ELEMENT
    
END TEST  -- TEST 5

TEST 6
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibmisc-NvicPriorityGroupConfig-CB-LLR-001]
    COMMENT The function "NvicPriorityGroupConfig" sets the priority group bits [10:8] in AIRCR
    COMMENT of SCB  to the nominal value (0x200).
    COMMENT Equivalence class 1
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

            --Specifies the priority grouping bits length
			VAR nvic_priority_group,			init = 0x200 ,						ev = init

		COMMENT INPUT/OUTPUT SECTION:

            --Holds the the priority group bits value
			VAR SCB->AIRCR,						init = (T_VLT_UINT32)0xFA050000,	ev = (T_VLT_UINT32)0x5FA0200

        COMMENT OUTPUT SECTION:

            --None

        -- Stub Calls :
        SIMUL

            --No Stubs

        END SIMUL

        -- Calling the Unit Under Test :
        # NvicPriorityGroupConfig(nvic_priority_group);

    END ELEMENT
  
END TEST   TEST 6

TEST 7
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibmisc-NvicPriorityGroupConfig-CB-LLR-001]
    COMMENT The function "NvicPriorityGroupConfig" sets the priority group bits [10:8] in AIRCR of SCB  to the 
    COMMENT nominal value (0x100).
    COMMENT Equivalence class 1
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

            --Specifies the priority grouping bits length
			VAR nvic_priority_group,			init = 0x100,						ev = init

		COMMENT INPUT/OUTPUT SECTION:

            --Holds the the priority group bits value
			VAR SCB->AIRCR,						init = (T_VLT_UINT32)0xFA050000,	ev = (T_VLT_UINT32)0x5FA0100   

        COMMENT OUTPUT SECTION:

            --None

        -- Stub Calls :
        SIMUL

            --No Stubs

        END SIMUL

        -- Calling the Unit Under Test :
        # NvicPriorityGroupConfig(nvic_priority_group);

    END ELEMENT
  
END TEST   TEST 7

TEST 8
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibmisc-NvicPriorityGroupConfig-CB-LLR-001]
    COMMENT The function "NvicPriorityGroupConfig" sets the priority group bits [10:8] in AIRCR of SCB  to the 
    COMMENT minimum value (0x000).
    COMMENT Equivalence class 1
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

            --Specifies the priority grouping bits length
			VAR nvic_priority_group,			init = 0x000 ,						ev = init

		COMMENT INPUT/OUTPUT SECTION:

            --Holds the the priority group bits value
			VAR SCB->AIRCR,						init = (T_VLT_UINT32)0xFA050000,	ev = (T_VLT_UINT32)0x5FA0000   

        COMMENT OUTPUT SECTION:

            --None

        -- Stub Calls :
        SIMUL

            --No Stubs

        END SIMUL

        -- Calling the Unit Under Test :
        # NvicPriorityGroupConfig(nvic_priority_group);

    END ELEMENT
  
END TEST   TEST 8

END SERVICE -- NvicPriorityGroupConfig


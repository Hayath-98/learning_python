HEADER hdudispfmdff,Source Code Ver : 1.5 ,TestScript Ver : 1.2  
--------------------------------------------------------------------------------
-- Author Name         : Vignesh Sunil
--
-- File Name           : hdudispfmdff.ptu
--
-- Test Creation Date  : 29.04.2021 
--
-- Tested Functions    :   AppFuelFlowDraw
--					       SetCMUFuelFlowEnable
--					       SetFuelFlowData
--
-- Version History     :
--
--  TEST-VERSION           TEST-DATE      TESTER NAME        MODIFICATIONS
--  ------------           ---------      -----------        -------------
--    1.1                  29.04.2021     Vignesh Sunil       Created the PTU file.
--    1.2         		   14.05.2020     Vignesh Sunil      Updated as per #PR100354
--
--------------------------------------------------------------------------------
--
-- TESTED FILE INCLUDE DIRECTIVES 
--
--------------------------------------------------------------------------------
##include "hdudispfmdff.h"      /*  Description contains Fuel flow functionalities */
##include "hdudispfgrapp.h"     /* routines for all graph */
##include "hdudispfmenu.h"      /* contains prototype for menu module*/
##include "hdudispfa429.h"      /* Routines for arinc 429 */
##include "hdudispftext.h"      /*  Routines which maintain text display and updates */
##include "hdudispfparams.h"    /* provides the tags for various parameters and parameter units.*/
##include "hdudispffonts.h"     /* contains prototype of Fonts */
##include "hdulibbasictypes.h"  /* Standard basic data type definitions */
--------------------------------------------------------------------------------
--
-- TESTED FILE DECLARATIONS 
--
--------------------------------------------------------------------------------

-- Declarations of the global variables of the tested file

--------------------------------------------------------------------------------

BEGIN

    COMMENT Author Names     : Vignesh Sunil
    COMMENT
    COMMENT File Name        : 
    COMMENT
    COMMENT Tested Functions : AppFuelFlowDraw
    COMMENT					   SetCMUFuelFlowEnable
    COMMENT					   SetFuelFlowData
    COMMENT						
    COMMENT Assumptions and Constraints
    COMMENT <AC>
    COMMENT Assumption(s):
    COMMENT None
    COMMENT 
    COMMENT Constraint(s):
    COMMENT None
    COMMENT 
    COMMENT </AC>
    
    COMMENT Equivalence Class Description
    COMMENT <ECD>
    COMMENT 
    COMMENT Valid Class(es)
    COMMENT Class 1
    COMMENT The function 'AppFuelFlowDraw', calls the function FloatToString.
    COMMENT
    COMMENT Class 2
    COMMENT The function 'AppFuelFlowDraw', calls the function MemCpy.
    COMMENT
    COMMENT Class 3
    COMMENT The function 'AppFuelFlowDraw', calls the function TextDispString.
    COMMENT
    COMMENT Class 4
    COMMENT The function 'AppFuelFlowDraw', stat of reading of Parameters with index 
    COMMENT Ff_a429_tag is equal to PARAM_OK
    COMMENT
    COMMENT Class 5
    COMMENT The function 'AppFuelFlowDraw', stat of reading of Parameters with index 
    COMMENT Ff_a429_tag is not equal to PARAM_OK
    COMMENT
    COMMENT Class 6
    COMMENT The function 'AppFuelFlowDraw', stat of reading of Parameters with index 
    COMMENT Ff_a429_tag is equal to NCD
    COMMENT
    COMMENT Class 7
    COMMENT The function 'AppFuelFlowDraw', stat of reading of Parameters with index 
    COMMENT Ff_a429_tag is not equal to NCD
    COMMENT
    COMMENT </ECD>

--------------------------------------------------------------------------------
--
-- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
--
--------------------------------------------------------------------------------

    #T_CHAR Ff_text[12];
    #T_PARAM_TABLE Parameters[256]; 
    #T_UINT8 Cmu_fuel_flow;
    #T_UINT8 Ff_a429_tag; 
    #T_FLOAT Fuel_flow_data; 
    #T_INT8 PTU_pc_string[10];	
    #T_CHAR PTU_p_src[20];	
    #T_CHAR PTU_p_str[20];	
    #T_CHAR PTU_p_dest[20];	
    #T_UINT32 index1;	
    #T_UINT32 index2;	
    #T_UINT32 index3;	
    #T_UINT32 index4=0;	
    #T_UINT32 flag1;	
    #T_UINT32 flag2;	

DEFINE STUB hdudispfmdff_c
    #void TextDispString(char  _no pc_string[200], T_UINT16  _in u16_x, T_UINT16  _in u16_y, 
	#T_ETXFONT  _in e_tx_font, T_EPENCOLOR  _in e_pen_color, T_ETXFLASH  _in e_tx_flash, T_ETXV  _in e_txv,
	#T_ETXALIGN  _in e_tx_align)
    #{
    #if(flag1==1)
    # {
    #  for(index2 = 0; index2<10;   index2++)
    #  {	
    #   PTU_pc_string[index2]=*(T_INT8 *)pc_string;
    #  }
    #   pc_string++;
    #   flag1++;
    # }	
    #if(flag1==2)
    # {
    #  for(index2 = 4; index2<10;   index2++)
    #  {	
    #   PTU_pc_string[index2]=*(T_INT8 *)pc_string;
    #  }
    #   pc_string++;
    # }		
    #}	
    #void MemCpy(void * _no p_dest,  const void * _no p_src, T_UINT16  _in count)
    #{
    #if(flag2==1)
    # {
    #  for(index1 = 0; index1<10;   index1++)
    #  {
	#   PTU_p_src[index1] = *(T_CHAR *)p_src;
    # 
    #   p_src++;
    #  }
    #   PTU_p_dest[index4++] = *(T_CHAR *)p_dest;
    #   flag2++;
    # }
    # else
    # {
    #  for(index1 = 3; index1<10;   index1++)
    #  {
	#   PTU_p_src[index1] = *(T_CHAR *)p_src;
    # 
    #   p_src++;
    #  }
    #   PTU_p_dest[index4++] = *(T_CHAR *)p_dest;
    # }	
    #}
    #void FloatToString(T_FLOAT  _in value, char  _no str[200], T_UINT8  _in bit_size)
    #{
    # for(index3 = 0; index3<10;   index3++)
    # {
	#  PTU_p_str[index3] = (T_CHAR)str[index3];
    # }
    #}	
END DEFINE

--------------------------------------------------------------------------------
--
-- ENVIRONMENTS DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- TESTED FILE ENVIRONNEMENT
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--
-- SERVICES DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Declaration of the service AppFuelFlowDraw
--------------------------------------------------------------------------------
SERVICE AppFuelFlowDraw
SERVICE_TYPE extern


    TEST 1
    FAMILY nominal
	
    COMMENT  Test Description
    COMMENT  <TD>   
    COMMENT  [hdudispfmdff-AppFuelFlowDraw-DB-LLR-001]
    COMMENT  The function perform the following when stat of reading of Parameters with index 
    COMMENT  Ff_a429_tag is equal to PARAM_OK
    COMMENT  1. call the function FloatToString with index Fuel flow data, string value and THREE
    COMMENT  2. call the function MemCpy with index reference to Ff_text with index three, 
    COMMENT  reference to string value and three
    COMMENT  3. call function TextDispString with index reference to Ff_text, 90, 346, 
    COMMENT  E_NORMAL_FONT, WHITE, TX_NO_FLASH, V_NORMAL and ALIGN_CENTER.
    COMMENT Equivalence Class 1,2,3,4
    COMMENT   
    COMMENT  
    COMMENT  </TD>		

        ELEMENT
		
        COMMENT INPUT SECTION:		
		
			VAR flag1,		init = 2,		ev = init
			
			VAR flag2,		init = 2,		ev = init
			
			VAR Ff_a429_tag,		init = 0,		ev = init
			
			VAR Fuel_flow_data,		init = 0.0,		ev = init
			
			VAR Ff_text[0],		init = 'A',		ev = init
			
			VAR Ff_text[1],		init = 'A',		ev = init
			
			VAR Ff_text[2],		init = 'A',		ev = init
			
			VAR Ff_text[3],		init = 'A',		ev = init
			
			VAR Parameters[0].reading.stat,		init = PARAM_OK,		ev = init		
			
			VAR PTU_pc_string[4],		init = '0',		ev = 'A'			
			VAR PTU_pc_string[5],		init = '0',		ev = 'A'			
			VAR PTU_pc_string[6],		init = '0',		ev = 'A'			
			VAR PTU_pc_string[7],		init = '0',		ev = 'A'
			
			VAR PTU_p_src[3],		init = '1',		ev = '0'				
			VAR PTU_p_src[4],		init = '1',		ev = '0'				
			VAR PTU_p_src[5],		init = '1',		ev = '0'	
			
			VAR PTU_p_dest[0],		init = '1',		ev = 'A'
			
			VAR PTU_p_str[0],		init = '1',		ev = '0'		
			VAR PTU_p_str[1],		init = '1',		ev = '0'		
			VAR PTU_p_str[2],		init = '1',		ev = '0'		

        COMMENT OUTPUT SECTION:		
		
        COMMENT INPUT/OUTPUT SECTION:
                                                            
			--None		
            
        -- Stub Calls:
                                                                
        SIMUL
            	
			STUB FloatToString(0.0,THREE)
			
			STUB MemCpy(3)
			
			STUB TextDispString(90,346,E_NORMAL_FONT,WHITE,TX_NO_FLASH,V_NORMAL,ALIGN_CENTER)
        
        END SIMUL		
		
        #AppFuelFlowDraw();
        END ELEMENT

    END TEST -- TEST 1
	
    TEST 2
    FAMILY nominal
	
    COMMENT  Test Description
    COMMENT  <TD>   
    COMMENT  
    COMMENT  [hdudispfmdff-AppFuelFlowDraw-DB-LLR-002]
    COMMENT  The function perform the following when stat of reading of 
    COMMENT  Parameters with index Ff_a429_tag is not equal to PARAM_OK and stat
    COMMENT   of reading of Parameters with index Ff_a429_tag is equal to NCD
    COMMENT  1. call the function MemCpy with index reference to ff_redx with 
    COMMENT  index zero, string NCD and FOUR.
    COMMENT  Equivalence Class 2,3,5,6 
    COMMENT  
    COMMENT  [hdudispfmdff-AppFuelFlowDraw-DB-LLR-003]
    COMMENT  The function perform the following when stat of reading of Parameters 
    COMMENT  with index Ff_a429_tag is not equal to PARAM_OK
    COMMENT  1. call the function MemCpy with index reference to Ff_text with index three, 
    COMMENT  null string and four
    COMMENT  2. call function TextDispString with index reference to Ff_text, 90, 346, 
    COMMENT  E_NORMAL_FONT, WHITE, TX_NO_FLASH, V_NORMAL and ALIGN_CENTER
    COMMENT  3. call function TextDispString with index reference to ff_redx, 75, 346, 
    COMMENT  E_NORMAL_FONT, RED, TX_NO_FLASH, V_NORMAL and ALIGN_CENTER
    COMMENT  Equivalence Class 2,3
    COMMENT  
    COMMENT  </TD>		

        ELEMENT
		
        COMMENT INPUT SECTION:	

			VAR flag1,		init = 1,		ev = 2
			
			VAR flag2,		init = 1,		ev = 2		
		
			VAR index4,		init = 0,		ev = 2
			
			VAR Ff_a429_tag,		init = 0,		ev = init
			
			VAR Fuel_flow_data,		init = 0.0,		ev = init
			
			VAR Ff_text[0],		init = 'A',		ev = init
			
			VAR Ff_text[1],		init = 'A',		ev = init
			
			VAR Ff_text[2],		init = 'A',		ev = init
			
			VAR Ff_text[3],		init = 'A',		ev = init
			
			VAR Parameters[0].reading.stat,		init = NCD,		ev = init		
			
			VAR PTU_pc_string[0],		init = '0',		ev = 'A'			
			VAR PTU_pc_string[1],		init = '0',		ev = 'A'			
			VAR PTU_pc_string[2],		init = '0',		ev = 'A'			
			VAR PTU_pc_string[3],		init = '0',		ev = 'A'
			
			VAR PTU_pc_string[4],		init = '0',		ev = 'X'			
			VAR PTU_pc_string[5],		init = '0',		ev = 'X'			
			VAR PTU_pc_string[6],		init = '0',		ev = 'X'			
			VAR PTU_pc_string[7],		init = '0',		ev = 'X'			
			
			VAR PTU_p_src[0],		init = '1',		ev = 'N'				
			VAR PTU_p_src[1],		init = '1',		ev = 'C'				
			VAR PTU_p_src[2],		init = '1',		ev = 'D'

			VAR PTU_p_src[3],		init = '1',		ev = ' '				
			VAR PTU_p_src[4],		init = '1',		ev = ' '				
			VAR PTU_p_src[5],		init = '1',		ev = ' '			
			
			VAR PTU_p_dest[0],		init = '1',		ev = 'X'
			VAR PTU_p_dest[1],		init = '1',		ev = 'A'
				

        COMMENT OUTPUT SECTION:		
		
        COMMENT INPUT/OUTPUT SECTION:
                                                            
			--None		
            
        -- Stub Calls:
                                                                
        SIMUL
            				
			STUB MemCpy(4)
			STUB MemCpy(4)
			
			STUB TextDispString(90,346,E_NORMAL_FONT,WHITE,TX_NO_FLASH,V_NORMAL,ALIGN_CENTER)
			STUB TextDispString(75,346,E_NORMAL_FONT,RED,TX_NO_FLASH,V_NORMAL,ALIGN_CENTER)
        
        END SIMUL		
		
        #AppFuelFlowDraw();
        END ELEMENT

    END TEST -- TEST 2
	
    TEST 3
    FAMILY nominal
	
    COMMENT  Test Description
    COMMENT  <TD>   
    COMMENT  [hdudispfmdff-AppFuelFlowDraw-DB-LLR-001]
    COMMENT  The function perform the following when stat of reading of 
    COMMENT  Parameters with index Ff_a429_tag is not equal to PARAM_OK and stat 
    COMMENT  of reading of Parameters with index Ff_a429_tag is equal to NCD
    COMMENT  1. call the function MemCpy with index reference to ff_redx with 
    COMMENT  index zero, string NCD and three.
    COMMENT  Equivalence Class 2,3,5,7 
    COMMENT  
    COMMENT  </TD>		

        ELEMENT
		
        COMMENT INPUT SECTION:	

			VAR flag1,		init = 1,		ev = 2
			
			VAR flag2,		init = 2,		ev = 2		
		
			VAR index4,		init = 0,		ev = 1
			
			VAR Ff_a429_tag,		init = 0,		ev = init
			
			VAR Fuel_flow_data,		init = 0.0,		ev = init
			
			VAR Ff_text[0],		init = 'A',		ev = init
			
			VAR Ff_text[1],		init = 'A',		ev = init
			
			VAR Ff_text[2],		init = 'A',		ev = init
			
			VAR Ff_text[3],		init = 'A',		ev = init
			
			VAR Parameters[0].reading.stat,		init = PARAM_WARNING,		ev = init		
			
			VAR PTU_pc_string[0],		init = '0',		ev = 'A'			
			VAR PTU_pc_string[1],		init = '0',		ev = 'A'			
			VAR PTU_pc_string[2],		init = '0',		ev = 'A'			
			VAR PTU_pc_string[3],		init = '0',		ev = 'A'
			
			VAR PTU_pc_string[4],		init = '0',		ev = 'X'			
			VAR PTU_pc_string[5],		init = '0',		ev = 'X'			
			VAR PTU_pc_string[6],		init = '0',		ev = 'X'			
			VAR PTU_pc_string[7],		init = '0',		ev = 'X'			

			VAR PTU_p_src[3],		init = '1',		ev = ' '				
			VAR PTU_p_src[4],		init = '1',		ev = ' '				
			VAR PTU_p_src[5],		init = '1',		ev = ' '			
			
			VAR PTU_p_dest[0],		init = '1',		ev = 'A'
				

        COMMENT OUTPUT SECTION:		
		
        COMMENT INPUT/OUTPUT SECTION:
                                                            
			--None		
            
        -- Stub Calls:
                                                                
        SIMUL
            				
			STUB MemCpy(4)
			
			STUB TextDispString(90,346,E_NORMAL_FONT,WHITE,TX_NO_FLASH,V_NORMAL,ALIGN_CENTER)
			STUB TextDispString(75,346,E_NORMAL_FONT,RED,TX_NO_FLASH,V_NORMAL,ALIGN_CENTER)
        
        END SIMUL		
		
        #AppFuelFlowDraw();
        END ELEMENT

    END TEST -- TEST 3	

END SERVICE -- AppFuelFlowDraw


--------------------------------------------------------------------------------
-- Declaration of the service SetFuelFlowData
--------------------------------------------------------------------------------
SERVICE SetFuelFlowData
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_UINT8 a429_tag;
    #T_FLOAT data;

    TEST 1
    FAMILY nominal
	
    COMMENT  Test Description
    COMMENT  <TD>   
    COMMENT  [hdudispfmdff-SetFuelFlowData-DB-LLR-001]
    COMMENT  The function set the Fuel flow data to parameter data and Ff_a429_tag to parameter a429_tag.
    COMMENT (Mininum value)
    COMMENT Equivalence Class none 
    COMMENT  
    COMMENT  </TD>		

        ELEMENT
		
        COMMENT INPUT SECTION:		
		
			VAR a429_tag,		init = 0,		ev = init
			
			VAR data,		    init = 0.0,		ev = init
		
        COMMENT OUTPUT SECTION:
                       
			VAR Fuel_flow_data,		init = 0.0,		ev = init		
			
			VAR Ff_a429_tag,		init = 0,		ev = init				   
                                                            
        COMMENT INPUT/OUTPUT SECTION:
                                                            
			--None		
            
        -- Stub Calls:
                                                                
        SIMUL
            	
			--None	
        
        END SIMUL			
		
        #SetFuelFlowData(a429_tag, data);
        END ELEMENT

    END TEST -- TEST 1
	
    TEST 2
    FAMILY nominal
	
    COMMENT  Test Description
    COMMENT  <TD>   
    COMMENT  
    COMMENT  [hdudispfmdff-SetFuelFlowData-DB-LLR-001]
    COMMENT  The function set the Fuel flow data to parameter data and Ff_a429_tag to parameter a429_tag.
    COMMENT (Nominal value) 
    COMMENT Equivalence Class none  
    COMMENT  </TD>		

        ELEMENT
		
        COMMENT INPUT SECTION:		
		
			VAR a429_tag,		init = 10,		ev = init
			
			VAR data,		    init = 10.0,		ev = init
		
        COMMENT OUTPUT SECTION:
                       
			VAR Fuel_flow_data,		init = 0.0,		ev = 10.0		
			
			VAR Ff_a429_tag,		init = 0,		ev = 10				   
                                                            
        COMMENT INPUT/OUTPUT SECTION:
                                                            
			--None		
            
        -- Stub Calls:
                                                                
        SIMUL
            	
			--None	
        
        END SIMUL			
		
        #SetFuelFlowData(a429_tag, data);
        END ELEMENT

    END TEST -- TEST 2	
	
    TEST 3
    FAMILY nominal
	
    COMMENT  Test Description
    COMMENT  <TD>   
    COMMENT  
    COMMENT  [hdudispfmdff-SetFuelFlowData-DB-LLR-001]
    COMMENT  The function set the Fuel flow data to parameter data and Ff_a429_tag to parameter a429_tag.
    COMMENT (Maxinum value)   
    COMMENT Equivalence Class none   
    COMMENT  </TD>		

        ELEMENT
		
        COMMENT INPUT SECTION:		
		
			VAR a429_tag,		init = (T_FLOAT)4294967296.0	,		ev = init
			
			VAR data,		    init = 10.0,		ev = init
		
        COMMENT OUTPUT SECTION:
                       
			VAR Fuel_flow_data,		init = 0.0,		ev = 10.0		
			
			VAR Ff_a429_tag,		init = 0,		ev = (T_FLOAT)4294967296.0					   
                                                            
        COMMENT INPUT/OUTPUT SECTION:
                                                            
			--None		
            
        -- Stub Calls:
                                                                
        SIMUL
            	
			--None	
        
        END SIMUL			
		
        #SetFuelFlowData(a429_tag, data);
        END ELEMENT

    END TEST -- TEST 3	

END SERVICE -- SetFuelFlowData


--------------------------------------------------------------------------------
-- Declaration of the service SetCMUFuelFlowEnable
--------------------------------------------------------------------------------
SERVICE SetCMUFuelFlowEnable
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_UINT8 ff_enable_flag;

    TEST 1
    FAMILY nominal
	
    COMMENT  Test Description
    COMMENT  <TD>   
    COMMENT  
    COMMENT [hdudispfmdff-SetCMUFuelFlowEnable-DB-LLR-001]
    COMMENT  The function set the Cmu_fuel_flow to parameter ff_enable_flag.
    COMMENT (Mininum value) 
    COMMENT Equivalence Class none  
    COMMENT  
    COMMENT  </TD>		

        ELEMENT
		
        COMMENT INPUT SECTION:		
		
        VAR ff_enable_flag,		init = 0,		ev = init
		
        COMMENT OUTPUT SECTION:
                       
        VAR Cmu_fuel_flow,		init = 0,		ev = init			   
                                                            
        COMMENT INPUT/OUTPUT SECTION:
                                                            
			--None		
            
        -- Stub Calls:
                                                                
        SIMUL
            	
			--None
        
        END SIMUL			
		
        #SetCMUFuelFlowEnable(ff_enable_flag);
        END ELEMENT

    END TEST -- TEST 1
	
    TEST 2
    FAMILY nominal
	
    COMMENT  Test Description
    COMMENT  <TD>   
    COMMENT [hdudispfmdff-SetCMUFuelFlowEnable-DB-LLR-001]
    COMMENT  The function set the Cmu_fuel_flow to parameter ff_enable_flag.
    COMMENT (Nominal value)  
    COMMENT Equivalence Class none  
    COMMENT  
    COMMENT  </TD>		

        ELEMENT
		
        COMMENT INPUT SECTION:		
		
        VAR ff_enable_flag,		init = 10,		ev = init
		
        COMMENT OUTPUT SECTION:
                       
        VAR Cmu_fuel_flow,		init = 0,		ev = 10			   
                                                            
        COMMENT INPUT/OUTPUT SECTION:
                                                            
			--None		
            
        -- Stub Calls:
                                                                
        SIMUL
            	
			--None
        
        END SIMUL			
		
        #SetCMUFuelFlowEnable(ff_enable_flag);
        END ELEMENT

    END TEST -- TEST 2	
	
    TEST 3
    FAMILY nominal
	
    COMMENT  Test Description
    COMMENT  <TD>   
    COMMENT [hdudispfmdff-SetCMUFuelFlowEnable-DB-LLR-001]
    COMMENT  The function set the Cmu_fuel_flow to parameter ff_enable_flag.
    COMMENT (Maximum value)   
    COMMENT Equivalence Class none   
    COMMENT  
    COMMENT  </TD>		

        ELEMENT
		
        COMMENT INPUT SECTION:		
		
        VAR ff_enable_flag,		init = 255,		ev = init
		
        COMMENT OUTPUT SECTION:
                       
        VAR Cmu_fuel_flow,		init = 0,		ev = 255			   
                                                            
        COMMENT INPUT/OUTPUT SECTION:
                                                            
			--None		
            
        -- Stub Calls:
                                                                
        SIMUL
            	
			--None
        
        END SIMUL			
		
        #SetCMUFuelFlowEnable(ff_enable_flag);
        END ELEMENT

    END TEST -- TEST 3	

END SERVICE -- SetCMUFuelFlowEnable



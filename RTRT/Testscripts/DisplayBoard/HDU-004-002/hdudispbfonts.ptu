HEADER hdudispbfonts, Source Code Ver : 1.4 , TestScript Ver :  1.4
--------------------------------------------------------------------------------
-- Author Name      	: Santosh Mithari
--
-- File Name        	: hdudispbfonts.ptu
--
-- Test Creation Date  	: 30.10.2017
--
-- Tested Functions 	: Pu8GetCharBitMap
--			 			  PsGetCharInfo
--			  			  FontsGetFont 
--			  			  FontsGetCharWidth
--			  			  FontsGetFontHeight
--				          
-- Version History      :
--
-- TEST-VERSION    TEST-DATE    TESTER NAME    		MODIFICATIONS
-- ------------    ---------    -----------    		-------------
--      1.1        30.10.2017   Santosh Mithari    Created the PTU file.
--      1.2        10.11.2017   Santosh Mithari    Updated as per #PR100171
--      1.3        14.11.2017   Santosh Mithari    Updated as per #PR100171
--		1.4		   29.07.2020	Harshitha R 	   Updated as per #PR100267
--------------------------------------------------------------------------------
--
-- TESTED FILE INCLUDE DIRECTIVES
--
--------------------------------------------------------------------------------

#/*============================================================================*/
#/* Module specific includes*/
#/*============================================================================*/

##include "hdudispbfonts.h"      
##include "hdulibbasictypes.h"   
##include "hdudispbbfcfont.h"    
##include "hdudispbappdata.h" 
--------------------------------------------------------------------------------
--
-- TESTED FILE DECLARATIONS 
--
--------------------------------------------------------------------------------

-- Declarations of the global variables of the tested file
	
	--Constant structures defined in hdudispbconsolas24haa4 file.
	
	# T_BFC_CHARINFO Font_consolas24_haa4_charinfo[96] = {
	#   {  12, 144, (T_UINT8 *)0  }, 
	#   {  12, 144, (T_UINT8 *)0  }, 
	#   {  12, 144, (T_UINT8 *)0  }, 
	#   {  12, 144, (T_UINT8 *)0  }, 
	#   {  12, 144, (T_UINT8 *)0  }, 
	#   {  12, 144, (T_UINT8 *)0  }, 
   	#   {  12, 144, (T_UINT8 *)0  }
   	#	};
	
	
	#const T_BFC_FONT_PROP Font_consolas24_haa4_prop1 = {
	#   0x0020,
	#   0x007f,
	#   &Font_consolas24_haa4_charinfo[0],  
	#   (const T_BFC_FONT_PROP *)0          
	#	};
	
	#const T_BFC_FONT Font_consolas24_haa4 = {
	#   0x01010140, 
	#   24, 
	#   19,  
	#   0, 
	#   {&Font_consolas24_haa4_prop1}
	#	};

-- Declarations of the temporary variable
	
	--None

--------------------------------------------------------------------------------

BEGIN

	COMMENT Author Name			: 	Santosh Mithari 
	COMMENT
	COMMENT File Name			: 	hdudispbfonts.ptu
	COMMENT 
	COMMENT Tested Functions	:	Pu8GetCharBitMap
	COMMENT		  		  			PsGetCharInfo
	COMMENT	          		 		FontsGetFont 
	COMMENT		               	 	FontsGetCharWidth
	COMMENT				 			FontsGetFontHeight
	COMMENT						  
	COMMENT Assumptions and Constraints
	COMMENT
	COMMENT <AC>
	COMMENT
	COMMENT Assumption(s): 
	COMMENT
	COMMENT None
	COMMENT
	COMMENT Constraint(s):
	COMMENT	
	COMMENT None
	COMMENT
	COMMENT </AC>
	
	COMMENT Equivalence Class Description 	
	COMMENT <ECD>
	COMMENT Valid Class(es)
	COMMENT
	COMMENT Class 1
	COMMENT	In function 'Pu8GetCharBitMap', FontType is equal to SUPPORTED_FONT_TYPE.
	COMMENT
	COMMENT Class 2
	COMMENT In function 'Pu8GetCharBitMap', FontType is not equal to SUPPORTED_FONT_TYPE.
	COMMENT
	COMMENT Class 3
	COMMENT In function 'Pu8GetCharBitMap',u8_char is greater than FirstChar of ps_group and u8_char
	COMMENT is less than LastChar of ps_group.
	COMMENT
	COMMENT Class 4
	COMMENT	In function 'Pu8GetCharBitMap',u8_char is equal to FirstChar of ps_group and u8_char is 
	COMMENT less than LastChar of ps_group.
	COMMENT
	COMMENT Class 5
	COMMENT	In function 'Pu8GetCharBitMap',u8_char is greater than FirstChar of ps_group and u8_char  
	COMMENT  is equal to LastChar of ps_group.
	COMMENT
	COMMENT	Class 6
	COMMENT	In function 'Pu8GetCharBitMap',u8_char is less than FirstChar of ps_group and u8_char is 
	COMMENT less than LastChar of ps_group.
	COMMENT
	COMMENT Class 7
	COMMENT	In function 'Pu8GetCharBitMap',u8_char is greater than FirstChar of ps_group and u8_char 
	COMMENT is greater than  LastChar of ps_group.
	COMMENT
	COMMENT	Class 8
	COMMENT	In function 'PsGetCharInfo',FontType is equal to SUPPORTED_FONT_TYPE.
	COMMENT
	COMMENT Class 9
	COMMENT	In function 'PsGetCharInfo', FontType is not equal to SUPPORTED_FONT_TYPE.
	COMMENT
	COMMENT Class 10
	COMMENT	In function 'PsGetCharInfo', u8_char is greater than FirstChar of ps_group and u8_char 
	COMMENT is less than LastChar of ps_group.
	COMMENT
	COMMENT Class 11
	COMMENT	In function 'PsGetCharInfo', u8_char is equal to FirstChar of ps_group and u8_char is 
	COMMENT less than LastChar of ps_group.
	COMMENT
	COMMENT Class 12
	COMMENT	In function 'PsGetCharInfo', u8_char is greater than FirstChar of ps_group and u8_char 
	COMMENT is equal to LastChar of ps_group.
	COMMENT
	COMMENT Class 13
	COMMENT	In function 'PsGetCharInfo', u8_char is less than FirstChar of ps_group and u8_char less 
	COMMENT than  LastChar of ps_group.
	COMMENT
	COMMENT Class 14
	COMMENT	In function 'PsGetCharInfo', u8_char is greater than FirstChar of ps_group and u8_char is 
	COMMENT greater than LastChar of ps_group.
	COMMENT
	COMMENT	Class 15
	COMMENT	In function 'FontsGetFont' ,e_tx_font is SYSFONT.
	COMMENT
	COMMENT Class 16
	COMMENT	In function 'FontsGetFont' ,e_tx_font is not SYSFONT.
	COMMENT
	COMMENT	Class 17
	COMMENT	In function 'FontsGetCharWidth',font pointer width is not equal to NULL.
	COMMENT
	COMMENT Class 18
	COMMENT	In function 'FontsGetCharWidth',font pointer width is equal to NULL.
	COMMENT
	COMMENT Class 19
	COMMENT	In function 'FontsGetCharWidth', character information is not equal to NULL.
	COMMENT
	COMMENT Class 20
	COMMENT	In function 'FontsGetCharWidth',character information is equal to NULL.
	COMMENT
	COMMENT Class 21
	COMMENT	In function 'FontsGetFontHeight',font pointer height is not equal to NULL.
	COMMENT
	COMMENT	Class 22
	COMMENT	In function 'FontsGetFontHeight',font pointer height is equal to NULL.
	COMMENT
	COMMENT	Class 23
	COMMENT	In function 'Pu8GetCharBitMap',ps_group is NULL.
	COMMENT
	COMMENT	Class 24
	COMMENT	In function 'Pu8GetCharBitMap',ps_group is not NULL.
	COMMENT
	COMMENT	Class 25
	COMMENT	In function 'PsGetCharInfo',ps_group is NULL.
	COMMENT
	COMMENT	Class 26
	COMMENT	In function 'PsGetCharInfo',ps_group is not NULL.
	COMMENT
	COMMENT	Class 27
	COMMENT	The function 'FontsGetCharWidth',calls FontsGetFont.
	COMMENT
	COMMENT	Class 28
	COMMENT	The function 'FontsGetCharWidth',calls PsGetCharInfo.
	COMMENT
	COMMENT	Class 29
	COMMENT	The function 'FontsGetFontHeight',calls FontsGetFont.
	COMMENT
	COMMENT Invalid class(es)
	COMMENT
	COMMENT	Class 30
	COMMENT	The function 'PsGetCharInfo',invalid reference is pssed to ps_font.
	COMMENT
	COMMENT	Class 31
	COMMENT	The function 'Pu8GetCharBitMap',invalid reference is pssed to ps_font.
	COMMENT 
	COMMENT </ECD>

--------------------------------------------------------------------------------
--
-- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
--
--------------------------------------------------------------------------------

SIMUL

	DEFINE STUB hdudispbfonts_c
		
		--None
	
	END DEFINE

ELSE_SIMUL

    -- No action defined as of now if the module is not simulated

END SIMUL

--------------------------------------------------------------------------------
--
-- ENVIRONMENTS DECLARATIONS
--
--------------------------------------------------------------------------------
--IF HOST

-- No special things that have to be done on the host to run the test.

--ELSE

-- No action defined for the target execution as of now

--END IF
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
-- TESTED FILE ENVIRONNEMENT
--------------------------------------------------------------------------------
---- Environment of the file hdudispbfonts.c
--ENVIRONMENT ENV_hdudispbfonts_c
--
--	--None
--
--END ENVIRONMENT -- ENV_hdudispbfonts_c
--
--USE ENV_hdudispbfonts_c

--------------------------------------------------------------------------------
--
-- SERVICES DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Declaration of the service PsGetCharInfo
--------------------------------------------------------------------------------
SERVICE PsGetCharInfo
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #   T_BFC_FONT ps_font;
    #T_UINT8 u8_char;
    -- By function returned type declaration
    #T_BFC_CHARINFO* ret_PsGetCharInfo;
    #T_BFC_FONT_PROP PTU_pProp;
    #T_BFC_FONT_PROP PTU_pNextProp = {0};
    #T_BFC_CHARINFO  PTU_pFirstCharInfo[100];
 

    ENVIRONMENT ENV_PsGetCharInfo
    STRUCTURE ps_font,			init = { FontType => 0, FontHeight => 0, Baseline => 0, 
    &							Reversed => 0, Font => { pData => &PTU_pProp } },		ev = init
    VAR u8_char,				init = 0,			ev = init
    VAR ret_PsGetCharInfo,		init = NULL,		ev = init
    END ENVIRONMENT -- ENV_PsGetCharInfo
    USE ENV_PsGetCharInfo


TEST 1
FAMILY nominal

	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-PsGetCharInfo-DB-LLR-001]
	COMMENT The function does the following when  FontType of psFont is equal to SUPPORTED_FONT_TYPE.
	COMMENT	1. Set ps_group to pProp of Font of psFont.
	COMMENT	2. Loops till ps_group is not equal to zero and does the following
	COMMENT	a. Set return value to sum of pFirstCharInfo of ps_group and difference of u8_char and 
	COMMENT FirstChar of ps_group and breaks from the function when 
	COMMENT		i. u8_char is greater than or equal to FirstChar of ps_group and u8_char is less than  LastChar of ps_group.
	COMMENT	Equivalence Class 8,10,26
	COMMENT
	COMMENT	[hdudispbfonts-PsGetCharInfo-DB-LLR-002]
	COMMENT The function returns the return value from the function.
	COMMENT Equivalence Class None
	COMMENT </TD>
          
	ELEMENT
	
		COMMENT INPUT SECTION:
    		
    		--Characher to be searched 
			VAR u8_char,								init = 0x61,									ev = init
			
			--font structure of character to be searched
			STRUCTURE ps_font,							init = { FontType => 0x01010140, FontHeight => 24, 
			&													 Baseline => 19, Reversed => 0, Font => { 
			&													 pData => &PTU_pProp } },		
			&																							ev = init
			
			--index of first character
			VAR ps_font.Font.pProp->FirstChar,   		init = 0x0020,									ev = init
			
			--index of last character
			VAR ps_font.Font.pProp->LastChar,			init = 0x007F,									ev = init
			
			--address of first character
			VAR ps_font.Font.pProp->pFirstCharInfo,	  	init = &PTU_pFirstCharInfo[0],					ev = init

		COMMENT OUTPUT SECTION:
			
			--Pointer to character info map
    		VAR ret_PsGetCharInfo,						init =NULL,										
    		&											ev = &PTU_pFirstCharInfo[65]
       			
		COMMENT INPUT/OUTPUT SECTION:
    			
			--None
    		
		-- Stub Calls:
		SIMUL
		
			--None
    	
		END SIMUL
    
    	-- Calling the Unit Under Test :
    	#ret_PsGetCharInfo = (T_BFC_CHARINFO*)PsGetCharInfo(&ps_font, u8_char);
            
	END ELEMENT
    
END TEST -- TEST 1

TEST 2
FAMILY nominal
    
	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-PsGetCharInfo-DB-LLR-001]
	COMMENT The function does the following when  FontType of psFont is equal to SUPPORTED_FONT_TYPE.
	COMMENT	1. Set ps_group to pProp of Font of psFont.
	COMMENT	2. Loops till ps_group is not equal to zero and does the following
	COMMENT	a. Set return value to sum of pFirstCharInfo of ps_group and difference of u8_char 
	COMMENT and FirstChar of ps_group and breaks from the function when 
	COMMENT		i. u8_char is greater than or equal to FirstChar of ps_group and u8_char is  equal to 
	COMMENT LastChar of ps_group.
	COMMENT	Equivalence Class 8,12,26
	COMMENT </TD>
          
	ELEMENT
	
		COMMENT INPUT SECTION:
			
			--Characher to be searched
			VAR u8_char,								init = 0x7F,								ev = init
			
			--font structure of character to be searched
			STRUCTURE ps_font,							init = { FontType => 0x01010140, FontHeight => 
			&											24, Baseline => 19, Reversed => 0, Font => { 
			&											pData => &PTU_pProp } },		            ev = init
			
			--index of first character
			VAR ps_font.Font.pProp->FirstChar,   		init = 0x0020,								ev = init
			
			--index of lastcharacter
			VAR ps_font.Font.pProp->LastChar,			init = 0x007F,								ev = init
			
			--address of first character
			VAR ps_font.Font.pProp->pFirstCharInfo,	  	init = &PTU_pFirstCharInfo[0],				ev = init

		COMMENT OUTPUT SECTION:

			--Pointer to character info map
			VAR ret_PsGetCharInfo,						init = NULL,			 					ev = &PTU_pFirstCharInfo[95]


		COMMENT INPUT/OUTPUT SECTION:

			--None

		-- Stub Calls:
		SIMUL
			--None

		END SIMUL

    	-- Calling the Unit Under Test :
    	#ret_PsGetCharInfo = (T_BFC_CHARINFO*)PsGetCharInfo(&ps_font, u8_char);
            
	END ELEMENT
    
END TEST -- TEST 2

TEST 3
FAMILY nominal
    
	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-PsGetCharInfo-DB-LLR-001]
	COMMENT The function does the following when  FontType of psFont is equal to SUPPORTED_FONT_TYPE.
	COMMENT	1. Set ps_group to pProp of Font of psFont.
	COMMENT	2. Loops till ps_group is not equal to zero and does the following
	COMMENT	a. Set return value to sum of pFirstCharInfo of ps_group and difference of u8_char and 
	COMMENT FirstChar of ps_group and breaks from the function when  
	COMMENT		i. u8_char is equal to FirstChar of ps_group and u8_char is  less than to LastChar of ps_group.
	COMMENT	Equivalence Class 8, 11,26
	COMMENT </TD>

	ELEMENT
		
		COMMENT INPUT SECTION:
    		--Characher to be searched  
			VAR u8_char,								init = 0x20,						ev = init
			
			--font structure of character to be searched
			STRUCTURE ps_font,							init = { FontType => 0x01010140, FontHeight => 24, 
			&											Baseline => 19, Reversed => 0, Font => { pData => 
			&											&PTU_pProp } },						ev = init	
			
			--index of first character
			VAR ps_font.Font.pProp->FirstChar,   		init = 0x0020,						ev = init
			
			--index of last character
			VAR ps_font.Font.pProp->LastChar,			init = 0x007f,						ev = init
			
			--address of first character
			VAR ps_font.Font.pProp->pFirstCharInfo,	  	init = &PTU_pFirstCharInfo[0],		ev = init

		COMMENT OUTPUT SECTION:
			
			--Pointer to character info map
			VAR ret_PsGetCharInfo,						init = NULL,						ev = &PTU_pFirstCharInfo[0]
    
		COMMENT INPUT/OUTPUT SECTION:
    			
			--None
    		
    	-- Stub Calls:
    	SIMUL
    		
    		--None

    	END SIMUL
    
    	-- Calling the Unit Under Test :
    	#ret_PsGetCharInfo = (T_BFC_CHARINFO*)PsGetCharInfo(&ps_font, u8_char);
            
	END ELEMENT
    
END TEST -- TEST 3

TEST 4
FAMILY nominal
    
	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-PsGetCharInfo-DB-LLR-001]
	COMMENT The function does the following when  FontType of psFont is equal to SUPPORTED_FONT_TYPE.
	COMMENT	1. Set ps_group to pProp of Font of psFont.
	COMMENT	2. Loops till ps_group is not equal to zero and does the following
	COMMENT	a. Set return value to sum of pFirstCharInfo of ps_group and difference of u8_char and
	COMMENT FirstChar of ps_group and breaks from the function when  
	COMMENT		i. u8_char is greater than FirstChar of ps_group and u8_char is  greater than to LastChar of ps_group.
	COMMENT	Equivalence Class 8, 14,26
	COMMENT </TD>
          
	ELEMENT
		
		COMMENT INPUT SECTION:
    		 
			--Characher to be searched 
			VAR u8_char,								init = 0x80,									ev = init
    		
    		--font structure of character to be searched
    		STRUCTURE ps_font,							init = { FontType => 0x01010140, FontHeight => 
    		&											24, Baseline => 19, Reversed => 0, Font => { 
    		&											pData => &PTU_pProp } },						ev = init
    		
    		--index of first character
    		VAR ps_font.Font.pProp->FirstChar,   		init = 0x0020,									ev = init
    		
    		--index of last character
    		VAR ps_font.Font.pProp->LastChar,			init = 0x007f,									ev = init
    		
    		--address of first character
    		VAR ps_font.Font.pProp->pFirstCharInfo,	  	init = &PTU_pFirstCharInfo[0],					ev = init
    		
    		--pointer to next BFC_FONT_PROP
    		VAR ps_font.Font.pProp->pNextProp,			init = NULL,									ev = init

		COMMENT OUTPUT SECTION:
			
			--Pointer to character info map
			VAR ret_PsGetCharInfo,						init = NULL,									ev = NULL

    			
		COMMENT INPUT/OUTPUT SECTION:
    			
			--None
    		
		-- Stub Calls:
		SIMUL
			
			--None
    	
    	END SIMUL
    
   		-- Calling the Unit Under Test :
   		#ret_PsGetCharInfo = (T_BFC_CHARINFO*)PsGetCharInfo(&ps_font, u8_char);
            
	END ELEMENT
    
END TEST -- TEST 4

TEST 5
FAMILY nominal
    
	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-PsGetCharInfo-DB-LLR-001]
	COMMENT The function does the following when  FontType of psFont is equal to SUPPORTED_FONT_TYPE.
	COMMENT	1. Set ps_group to pProp of Font of psFont.
	COMMENT	2. Loops till ps_group is not equal to zero and does the following
	COMMENT	a. Set return value to sum of pFirstCharInfo of ps_group and difference of u8_char and 
	COMMENT FirstChar of ps_group and breaks from the function when  
	COMMENT		i. u8_char is less than FirstChar of ps_group and u8_char is  less than to LastChar of ps_group.
	COMMENT	Equivalence Class 8,13,26
	COMMENT </TD>
          
	ELEMENT
    		
		COMMENT INPUT SECTION:
			--Characher to be searched 
			VAR u8_char,								init = 0x1F,									ev = init
			
			--font structure of character to be searched
			STRUCTURE ps_font,							init = { FontType => 0x01010140, FontHeight => 24, 
			&											Baseline => 19, Reversed => 0, Font => { pData => 
			&											&PTU_pProp } },									ev = init
			
			--index of first character
			VAR ps_font.Font.pProp->FirstChar,   		init = 0x0020,									ev = init
			
			--index of last character
			VAR ps_font.Font.pProp->LastChar,			init = 0x007f,									ev = init
			
			--address of first character
			VAR ps_font.Font.pProp->pFirstCharInfo,	  	init = &PTU_pFirstCharInfo[0],					ev = init
			
			--pointer to next BFC_FONT_PROP
			VAR ps_font.Font.pProp->pNextProp,			init = NULL,									ev = init

		COMMENT OUTPUT SECTION:
			
			--Pointer to character info map
			VAR ret_PsGetCharInfo,						init = NULL,									ev = NULL

		COMMENT INPUT/OUTPUT SECTION:

			--None

		-- Stub Calls:
		SIMUL
			--None

		END SIMUL

		-- Calling the Unit Under Test :
		#ret_PsGetCharInfo = (T_BFC_CHARINFO*)PsGetCharInfo(&ps_font, u8_char);

	END ELEMENT
    
END TEST -- TEST 5

TEST 6
FAMILY nominal
    
	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-PsGetCharInfo-DB-LLR-001]
	COMMENT The function does nothing when FontType of psFont is not equal to SUPPORTED_FONT_TYPE.
	COMMENT	Equivalence Class 9
	COMMENT </TD>
          
	ELEMENT
    		
		COMMENT INPUT SECTION:
			--Characher to be searched 
			VAR u8_char,								init = 0x61,									ev = init
			
			--font structure of character to be searched
			STRUCTURE ps_font,							init = { FontType => 0x01010141, FontHeight => 24,
			&											Baseline => 19, Reversed => 0, Font => { pData => 
			&											&PTU_pProp } },									ev = init
			
			--index of first character
			VAR ps_font.Font.pProp->FirstChar,   		init = 0x0020,									ev = init
			
			--index of last character
			VAR ps_font.Font.pProp->LastChar,			init = 0x007f,									ev = init
			
			--address of first character
			VAR ps_font.Font.pProp->pFirstCharInfo,	  	init = &PTU_pFirstCharInfo[0],					ev = init
	
		COMMENT OUTPUT SECTION:
    		
    		--Pointer to character info map
			VAR ret_PsGetCharInfo,						init =NULL,										ev = NULL
      			
		COMMENT INPUT/OUTPUT SECTION:
    			
			--None
    		
    	-- Stub Calls:
    	SIMUL
    		
    		--None
    
    	END SIMUL
    
    	-- Calling the Unit Under Test :
    	#ret_PsGetCharInfo = (T_BFC_CHARINFO*)PsGetCharInfo(&ps_font, u8_char);
            
	END ELEMENT
    
END TEST -- TEST 6

TEST 7
FAMILY nominal
    
	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-PsGetCharInfo-DB-LLR-001]
	COMMENT The function does the following when FontType of psFont is equal to SUPPORTED_FONT_TYPE.
	COMMENT	1. Set ps_group to pProp of Font of psFont.
	COMMENT	2. Loops 0 times since ps_group is set to zero.
	COMMENT	Equivalence Class 25
	COMMENT </TD>
          
	ELEMENT
		
		COMMENT INPUT SECTION:
			
			--Characher to be searched 
			VAR u8_char,				init = 0x1F,	ev = init
			
			--font structure of character to be searched
			STRUCTURE ps_font,			init = { FontType => 0x01010140, FontHeight => 24,
			&							Baseline => 19, Reversed => 0, Font => { pData => 
			&							NULL } },		ev = init

		COMMENT OUTPUT SECTION:

			--Pointer to character info map
			VAR ret_PsGetCharInfo,		init =NULL,		ev = NULL

		COMMENT INPUT/OUTPUT SECTION:

			--None
			
		-- Stub Calls:
		SIMUL
			
			--None

		END SIMUL

		-- Calling the Unit Under Test :
		#ret_PsGetCharInfo = (T_BFC_CHARINFO*)PsGetCharInfo(&ps_font, u8_char);

	END ELEMENT
    
END TEST -- TEST 7

--TEST 8
--FAMILY robustness
--    
--	COMMENT Test Description
--	COMMENT <TD> 
--	COMMENT [hdudispbfonts-PsGetCharInfo-DB-LLR-001]
--	COMMENT The function 'PsGetCharInfo' does nothing when invalid reference is passed to ps_font. 
--	COMMENT	Equivalence Class 30
--	COMMENT </TD>
--          
--	ELEMENT
--		
--		COMMENT INPUT SECTION:
--			
--			--Characher to be searched 
--			VAR u8_char,				init = 0x1F,	ev = init
--
--		COMMENT OUTPUT SECTION:
--
--			--Pointer to character info map
--			VAR ret_PsGetCharInfo,		init =NULL,		ev = NULL
--
--		COMMENT INPUT/OUTPUT SECTION:
--
--			--None
--			
--		-- Stub Calls:
--		SIMUL
--			
--			--None
--
--		END SIMUL
--
--		-- Calling the Unit Under Test :
--		#ret_PsGetCharInfo = (T_BFC_CHARINFO*)PsGetCharInfo(NULL, u8_char);
--
--	END ELEMENT
--    
--END TEST -- TEST 8

TEST 9
FAMILY nominal

	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-PsGetCharInfo-DB-LLR-001]
	COMMENT The function does the following when FontType of psFont is equal to SUPPORTED_FONT_TYPE.
	COMMENT	1. Set PS group to pProp of Font of psFont.
	COMMENT	2. Loops till PS group is not equal to zero and does the following
	COMMENT	a. Set return value to sum of pFirstCharInfo of ps_group and difference of u8Char and FirstChar of PS group 
	COMMENT and breaks from the function when 
	COMMENT		i. u8Char is less than FirstChar of PS group and u8Char is  less than to LastChar of PS group.
	COMMENT	Equivalence Class 8,13
	COMMENT
	COMMENT	[hdudispbfonts-PsGetCharInfo-DB-LLR-002]
	COMMENT The function returns the return value from the function.
	COMMENT Equivalence Class None
	COMMENT </TD>
          
	ELEMENT
	
		COMMENT INPUT SECTION:

			--Characher to be searched  
			VAR u8_char,									init = 0x1F,						ev = init

			--font structure of character to be searched
			STRUCTURE ps_font,								init = { FontType => 0x01010140, FontHeight => 24, 
			&												Baseline => 19, Reversed => 0, Font => 
			&												{ pData => &PTU_pProp } },		ev = init

			--index of first character
			VAR ps_font.Font.pProp->FirstChar,   			init = 0x0020,						ev = init

			--index of last character
			VAR ps_font.Font.pProp->LastChar,				init = 0x007f,						ev = init

			--address of first character
			VAR ps_font.Font.pProp->pFirstCharInfo,	  		init = &PTU_pFirstCharInfo[0],		ev = init
			
			--pointer to next BFC_FONT_PROP
			VAR ps_font.Font.pProp->pNextProp,				init = &PTU_pNextProp,				ev = init

		COMMENT OUTPUT SECTION:

			VAR ret_PsGetCharInfo,							init = NULL,						ev =NULL

		COMMENT INPUT/OUTPUT SECTION:

			--None

		-- Stub Calls:	
		SIMUL
			--None

		END SIMUL

    	-- Calling the Unit Under Test :
        #ret_PsGetCharInfo = (T_BFC_CHARINFO*)PsGetCharInfo(&ps_font, u8_char);
            
	END ELEMENT
    
END TEST -- TEST 9

END SERVICE -- PsGetCharInfo

--------------------------------------------------------------------------------
-- Declaration of the service FontsGetCharWidth
--------------------------------------------------------------------------------
SERVICE FontsGetCharWidth
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_ETXFONT e_tx_font;
    #T_UINT8 u8_char;
    -- By function returned type declaration
    #T_INT16 ret_FontsGetCharWidth;
    #T_BFC_FONT_PROP PTU_pProp;
    #T_BFC_CHARINFO  PTU_pFirstCharInfo[100];
	#T_BFC_FONT *PTU_Font_consolas24_haa4;
    ENVIRONMENT ENV_FontsGetCharWidth
    VAR e_tx_font,					init = FONT_NO_FONT,		ev = init
    VAR u8_char,					init = 0,					ev = init
    VAR ret_FontsGetCharWidth,		init = 0,					ev = init
    END ENVIRONMENT -- ENV_FontsGetCharWidth
    USE ENV_FontsGetCharWidth

TEST 1
FAMILY nominal
    
	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-FontsGetCharWidth-DB-LLR-001]
	COMMENT The function  set the font pointer width to return value of the function FontsGetFont with 
	COMMENT e_tx_font as its function parameter.
	COMMENT Equivalence Class 27
	COMMENT
	COMMENT	[hdudispbfonts-FontsGetCharWidth-DB-LLR-002]
	COMMENT The function does nothing when font pointer width is  equal to NULL  
	COMMENT Equivalence Class 18,20
	COMMENT
	COMMENT [hdudispbfonts-FontsGetCharWidth-DB-LLR-003]
	COMMENT The function return the return value from the function.
	COMMENT Equivalence Class None
	COMMENT </TD>
          
	ELEMENT
		
		COMMENT INPUT SECTION:
    		
    		--Specifies the font
			VAR e_tx_font,					init = FONT_NO_FONT,		ev = init
            
            --Specifies the character. 
			VAR u8_char,					init = 0x61,				ev = init
    		
		COMMENT OUTPUT SECTION:
    
    		--information about character
			VAR ret_FontsGetCharWidth,		init = 0,					ev = init
    
		COMMENT INPUT/OUTPUT SECTION:
    			
			--None
    		
		-- Stub Calls:
		SIMUL
    			
			--None
    	
		END SIMUL
    
		-- Calling the Unit Under Test :
		#ret_FontsGetCharWidth = FontsGetCharWidth(e_tx_font, u8_char);
            
	END ELEMENT
    
END TEST -- TEST 1
    
    
TEST 2
FAMILY nominal
    
	COMMENT Test Description
	COMMENT <TD> 
	COMMENT	[hdudispbfonts-FontsGetCharWidth-DB-LLR-002]
	COMMENT The function does the following when font pointer width is not equal to NULL.
	COMMENT		1. Set character information to return value of PsGetCharInfo with font pointer width and
	COMMENT u8_char as its function parameter.
	COMMENT		2. Set return value to Width of character information when character information is not 
	COMMENT 	   equal to NULL 
	COMMENT Equivalence Class 17,19,28
	COMMENT </TD>
	
	ELEMENT
		
		COMMENT INPUT SECTION:
    		 
    		--Specifies the font 
			VAR e_tx_font,					init = SYSFONT,		        ev = init      
			
			--Specifies the character.
			VAR u8_char,					init = 0x21,				ev = init
    			
		COMMENT OUTPUT SECTION:
    
    		--Information about character
			VAR ret_FontsGetCharWidth,		init = 0,					ev = 12
    
		COMMENT INPUT/OUTPUT SECTION:
    			
			--None
    		
		-- Stub Calls:
		SIMUL
    			
			--None
    	
		END SIMUL
    
		-- Calling the Unit Under Test :
		#ret_FontsGetCharWidth = FontsGetCharWidth(e_tx_font, u8_char);
            
	END ELEMENT
    
END TEST -- TEST 2

TEST 3
FAMILY nominal
    
	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-FontsGetCharWidth-DB-LLR-001]
	COMMENT The function set the font pointer width to return value of the function FontsGetFont with
	COMMENT e_tx_font as its function parameter.
	COMMENT Equivalence Class 27
	COMMENT
	COMMENT	[hdudispbfonts-FontsGetCharWidth-DB-LLR-002]
	COMMENT The function does the following when font pointer width is not equal to NULL.
	COMMENT		1. Set character information to return value of PsGetCharInfo with font pointer width and
	COMMENT 		u8_char as its function parameter.
	COMMENT		2. Does nothing when character information is equal to NULL.
	COMMENT Equivalence Class 17,20,28
	COMMENT </TD>
	
	ELEMENT
		
		COMMENT INPUT SECTION:
    		 
    		--Specifies the font 
			VAR e_tx_font,					init = SYSFONT,		        ev = init
             
            --Specifies the character. 
			VAR u8_char,					init = 0x1F,				ev = init
    			

		COMMENT OUTPUT SECTION:
    		
    		--Information about character
			VAR ret_FontsGetCharWidth,		init = 0,					ev = init
    
		COMMENT INPUT/OUTPUT SECTION:
    			
			--None
    		
		-- Stub Calls:
    		
		SIMUL
			
			--None
    	
		END SIMUL
    
		-- Calling the Unit Under Test :
		#ret_FontsGetCharWidth = FontsGetCharWidth(e_tx_font, u8_char);
            
	END ELEMENT
    
END TEST -- TEST 3

END SERVICE -- FontsGetCharWidth


--------------------------------------------------------------------------------
-- Declaration of the service Pu8GetCharBitMap
--------------------------------------------------------------------------------
SERVICE Pu8GetCharBitMap
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #   T_BFC_FONT ps_font;
    #T_UINT8 u8_char;
    -- By function returned type declaration
    #   T_UINT8* ret_Pu8GetCharBitMap;
    
        #T_BFC_FONT_PROP PTU_pProp;
	    #T_BFC_FONT_PROP PTU_pNextProp = {0};
    #T_BFC_CHARINFO  PTU_pFirstCharInfo[100];

    ENVIRONMENT ENV_Pu8GetCharBitMap
    STRUCTURE ps_font,				init = { FontType => 0, FontHeight => 0, Baseline => 0,
    &								Reversed => 0, Font => { pData => NIL } },		
    &												ev = init
    VAR u8_char,					init = 0,		ev = init
    VAR ret_Pu8GetCharBitMap,		init = NIL,		ev = init
    END ENVIRONMENT -- ENV_Pu8GetCharBitMap
    USE ENV_Pu8GetCharBitMap
    
    #T_UINT8  PTU_pData8; 

TEST 1
FAMILY nominal
    
	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-Pu8GetCharBitMap-DB-LLR-001]
	COMMENT The function does the following when FontType of psFont is equal to SUPPORTED_FONT_TYPE 
	COMMENT 1. Set ps_group to pProp of Font of psFont.
	COMMENT 2. Loop till ps_group is not equal to zero and does the following
	COMMENT   a. Set return value to member pData8 of CharInfo of structure of sum of pFirstCharInfo
	COMMENT 	 of ps_group and difference of u8_char and FirstChar of ps_group and breaks from the function when  
	COMMENT 	 i. u8_char is greater than FirstChar of ps_group and u8_char is less than LastChar of ps_group.
	COMMENT	Equivalence Class 1,3,24
	COMMENT
	COMMENT	[hdudispbfonts-Pu8GetCharBitMap-DB-LLR-002]
	COMMENT The function returns the return value from the function.
	COMMENT Equivalence Class None
	COMMENT </TD>
          
	ELEMENT
		
		COMMENT INPUT SECTION:
    		
    		--Character to be seacrched
			VAR u8_char,								init = 0x61,									ev = init

    		--font structure of character to be searched
    		STRUCTURE ps_font,							init = { FontType => 0x01010140, FontHeight => 24,
    		&											Baseline => 19, Reversed => 0, Font => { pData => 
    		&											&PTU_pProp } },									ev = init  			
			
			--index of first character
			VAR ps_font.Font.pProp->FirstChar,   		init = 0x0020,									ev = init		
			
			--index of last character
			VAR ps_font.Font.pProp->LastChar,			init = 0x007f,									ev = init				
			
			--address of first character
			VAR ps_font.Font.pProp->pFirstCharInfo,	  	init = &PTU_pFirstCharInfo[0],					ev = init
    		
    		--temporary variable to assign address to pData8
    		VAR PTU_pData8,								init = 0x1,										ev = init
    		
    		--pointer which points to pixel data in bytes
    		VAR PTU_pFirstCharInfo[65].CharInfo.pData,	init = &PTU_pData8,								ev = init
    		
		COMMENT OUTPUT SECTION:
    		
    		--Pointer to a character's bit map
			VAR ret_Pu8GetCharBitMap,					init = NIL,										ev = &PTU_pData8
    			
		COMMENT INPUT/OUTPUT SECTION:
    			
			--None
    		
		-- Stub Calls:	
		SIMUL
			
			--None
    	
		END SIMUL
    
		-- Calling the Unit Under Test :
		#ret_Pu8GetCharBitMap = (T_UINT8*)Pu8GetCharBitMap(&ps_font, u8_char);
            
	END ELEMENT
    
END TEST -- TEST 1


TEST 2
FAMILY nominal
    
	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-Pu8GetCharBitMap-DB-LLR-001]
	COMMENT The function does the following when FontType of psFont is equal to SUPPORTED_FONT_TYPE 
	COMMENT 1. Set ps_group to pProp of Font of psFont.
	COMMENT 2. Loop till ps_group is not equal to zero and does the following
	COMMENT   a. Set return value to member pData8 of CharInfo of structure of sum of pFirstCharInfo
	COMMENT      of ps_group and difference of u8_char and FirstChar of ps_group and breaks from the function when  
	COMMENT 	 i. u8_char is greater than FirstChar of ps_group and u8_char is equal to LastChar of ps_group.
	COMMENT	Equivalence Class 1,5,24
	COMMENT </TD>
          
	ELEMENT
		
		COMMENT INPUT SECTION:
    		
    		--Character to be seacrched 
			VAR u8_char,										init = 0x7F,								ev = init
    		
    		--font structure of character to be searched
    		STRUCTURE ps_font,									init = { FontType => 0x01010140, FontHeight => 24,
    		&													Baseline => 19, Reversed => 0, Font => { pData => 
    		&													&PTU_pProp } },								ev = init
    		
    		--index of first character
    		VAR ps_font.Font.pProp->FirstChar,   				init = 0x0020,								ev = init
			
			--index of last character
			VAR ps_font.Font.pProp->LastChar,					init = 0x007f,								ev = init
    		
    		--address of first character
    		VAR ps_font.Font.pProp->pFirstCharInfo,	  			init = &PTU_pFirstCharInfo[0],				ev = init
    		
    		--temporary variable to assign address to pData8
    		VAR PTU_pData8,										init = 0x1,									ev = init
			
			--pointer which points to pixel data in bytes
			VAR PTU_pFirstCharInfo[95].CharInfo.pData,	  		init = &PTU_pData8,							ev = init
    		
		COMMENT OUTPUT SECTION:
    		
    		--Pointer to a character's bit map
			VAR ret_Pu8GetCharBitMap,							init = NIL,									ev = &PTU_pData8
    			
		COMMENT INPUT/OUTPUT SECTION:
    			
			--None
    		
		-- Stub Calls:	
		SIMUL
			
			--None
    	
		END SIMUL
    
		-- Calling the Unit Under Test :
    	#ret_Pu8GetCharBitMap = (T_UINT8*)Pu8GetCharBitMap(&ps_font, u8_char);
            
	END ELEMENT
    
END TEST -- TEST 2

TEST 3
FAMILY nominal
    
	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-Pu8GetCharBitMap-DB-LLR-001]
	COMMENT The function does the following when FontType of psFont is equal to SUPPORTED_FONT_TYPE 
	COMMENT 1. Set ps_group to pProp of Font of psFont.
	COMMENT 2. Loop till ps_group is not equal to zero and does the following
	COMMENT   a. Set return value to member pData8 of CharInfo of structure of sum of pFirstCharInfo
	COMMENT 	 of ps_group and difference of u8_char and FirstChar of ps_group and breaks from the function when  
	COMMENT 	 i. u8_char is equal to FirstChar of ps_group and u8_char is less than LastChar of ps_group.
	COMMENT	Equivalence Class 1,4,24
	COMMENT </TD>
          
	ELEMENT
		
		COMMENT INPUT SECTION:
    		
    		--Character to be seacrched 
			VAR u8_char,								init = 0x20,										ev = init
    		
    		--font structure of character to be searched
    		STRUCTURE ps_font,							init = { FontType => 0x01010140, FontHeight => 24, 
    		&											Baseline => 19, Reversed => 0, Font => { pData => 
    		&											&PTU_pProp } },										ev = init
			
			--index of first character
			VAR ps_font.Font.pProp->FirstChar,   		init = 0x0020,										ev = init
    		
    		--index of last character
    		VAR ps_font.Font.pProp->LastChar,			init = 0x007f,										ev = init
    		
    		--address of first character
    		VAR ps_font.Font.pProp->pFirstCharInfo,	  	init = &PTU_pFirstCharInfo[0],						ev = init
    		
    		--temporary variable to assign address to pData8
    		VAR PTU_pData8,								init = 0x1,											ev = init 		
			
			--pointer which points to pixel data in bytes
			VAR PTU_pFirstCharInfo[0].CharInfo.pData,	init = &PTU_pData8,									ev = init
    		
		COMMENT OUTPUT SECTION:
    		
    		--Pointer to a character's bit map
			VAR ret_Pu8GetCharBitMap,					init = NIL,											ev = &PTU_pData8
    			
		COMMENT INPUT/OUTPUT SECTION:
    			
			--None
    		
		-- Stub Calls:
    		
		SIMUL
			
			--None
    	
		END SIMUL
    
		-- Calling the Unit Under Test :
    	#ret_Pu8GetCharBitMap = (T_UINT8*)Pu8GetCharBitMap(&ps_font, u8_char);
            
	END ELEMENT
    
END TEST -- TEST 3

TEST 4
FAMILY nominal
    
	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-Pu8GetCharBitMap-DB-LLR-001]
	COMMENT The function does the following when FontType of psFont is equal to SUPPORTED_FONT_TYPE 
	COMMENT 1. Set ps_group to pProp of Font of psFont.
	COMMENT 2. Loop till ps_group is not equal to zero and does the following
	COMMENT   a. Set return value to member pData8 of CharInfo of structure of sum of pFirstCharInfo 
	COMMENT       of ps_group and difference of u8_char and FirstChar of ps_group and breaks from the function when  
	COMMENT 	 i. u8_char is greater than FirstChar of ps_group and u8_char is greater than LastChar of ps_group.
	COMMENT	Equivalence Class 1,7,24
	COMMENT </TD>
          
	ELEMENT
		
		COMMENT INPUT SECTION:
    		
    		--Character to be seacrched 
			VAR u8_char,								init = 0x80,										ev = init
    		
    		--font structure of character to be searched
    		STRUCTURE ps_font,							init = { FontType => 0x01010140, FontHeight => 24, 
    		&											Baseline => 19, Reversed => 0, Font => { pData => 
    		&											&PTU_pProp } },										ev = init	
			
			--index of first character
			VAR ps_font.Font.pProp->FirstChar,   		init = 0x0020,										ev = init		
			
			--index of last character
			VAR ps_font.Font.pProp->LastChar,			init = 0x007f,										ev = init		
			
			--address of first character
			VAR ps_font.Font.pProp->pFirstCharInfo,	  	init = &PTU_pFirstCharInfo[0],						ev = init			
			
			--pointer to next BFC_FONT_PROP
			VAR ps_font.Font.pProp->pNextProp,			init = NULL,										ev = init	
      	 	
      	 	--temporary variable to assign address to pData8
      	 	VAR PTU_pData8,								init = 0x1,											ev = init						    		
		    
		    --pointer which points to pixel data in bytes
		    VAR PTU_pFirstCharInfo[0].CharInfo.pData,	init = &PTU_pData8,									ev = init
		    				   	
		COMMENT OUTPUT SECTION:
		    
		    --Pointer to a character's bit map
			VAR ret_Pu8GetCharBitMap,					init = NIL,											ev = NULL
    			
		COMMENT INPUT/OUTPUT SECTION:
    			
			--None
    		
		-- Stub Calls:	
		SIMUL
    			
			--None
    	
		END SIMUL
    
		-- Calling the Unit Under Test :
		#ret_Pu8GetCharBitMap = (T_UINT8*)Pu8GetCharBitMap(&ps_font, u8_char);
            
	END ELEMENT
    
END TEST -- TEST 4

TEST 5
FAMILY nominal
    
	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-Pu8GetCharBitMap-DB-LLR-001]
	COMMENT The function does the following when FontType of psFont is equal to SUPPORTED_FONT_TYPE 
	COMMENT 1. Set ps_group to pProp of Font of psFont.
	COMMENT 2. Loop till ps_group is not equal to zero and does the following
	COMMENT   a. Set return value to member pData8 of CharInfo of structure of sum of pFirstCharInfo
	COMMENT      of ps_group and difference of u8_char and FirstChar of ps_group and breaks from the function when  
	COMMENT 	 i. u8_char is less than FirstChar of ps_group and u8_char is less than LastChar of ps_group.
	COMMENT	Equivalence Class 1,6,24
	COMMENT </TD>
          
	ELEMENT
		
		COMMENT INPUT SECTION:
    		
    		--Character to be seacrched 
			VAR u8_char,									init = 0x1F,										ev = init
 			
 			--font structure of character to be searched
 			STRUCTURE ps_font,								init = { FontType => 0x01010140, FontHeight => 24,
 			&												Baseline => 19, Reversed => 0, Font => { pData => 
 			&												&PTU_pProp } },										ev = init
			
			--index of first character
			VAR ps_font.Font.pProp->FirstChar,   			init = 0x0020,										ev = init
    		
    		--index of last character
    		VAR ps_font.Font.pProp->LastChar,				init = 0x007f,										ev = init
   			
   			--address of first character
   			VAR ps_font.Font.pProp->pFirstCharInfo,	  		init = &PTU_pFirstCharInfo[0],						ev = init
    		
    		--pointer to next BFC_FONT_PROP
    		VAR ps_font.Font.pProp->pNextProp,				init = NULL,										ev = init
       		
       		--temporary variable to assign address to pData8
       		VAR PTU_pData8,									init = 0x1,											ev = init
			
			--pointer which points to pixel data in bytes
			VAR PTU_pFirstCharInfo[0].CharInfo.pData,	  	init = &PTU_pData8,									ev = init
    		
		COMMENT OUTPUT SECTION:
    		
    		--Pointer to a character's bit map
			VAR ret_Pu8GetCharBitMap,						init = NIL,											ev = NULL
    		
    	COMMENT INPUT/OUTPUT SECTION:
    			
			--None
    		
		-- Stub Calls:
    		
		SIMUL
			--None
    	
		END SIMUL
    
		-- Calling the Unit Under Test :
		#ret_Pu8GetCharBitMap = (T_UINT8*)Pu8GetCharBitMap(&ps_font, u8_char);
            
	END ELEMENT
    
END TEST -- TEST 5

TEST 6
FAMILY nominal
    
	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-Pu8GetCharBitMap-DB-LLR-001]
	COMMENT The function does nothing  when FontType of psFont is not equal to SUPPORTED_FONT_TYPE 
	COMMENT Equivalence Class 2
	COMMENT </TD>
          
	ELEMENT
		COMMENT INPUT SECTION:
    		
    		
    		--Character to be seacrched 
			VAR u8_char,								init = 0x61,										ev = init
   			
   			--font structure of character to be searched
   			STRUCTURE ps_font,							init = { FontType => 0x01010142, FontHeight => 24,
   			&											Baseline => 19, Reversed => 0, Font => { pData => 
   			&											&PTU_pProp } },										ev = init
    		
    		--index of first character
    		VAR ps_font.Font.pProp->FirstChar,   		init = 0x0020,										ev = init
    		
    		--index of last character
    		VAR ps_font.Font.pProp->LastChar,			init = 0x007f,										ev = init
    		
    		--address of first character
    		VAR ps_font.Font.pProp->pFirstCharInfo,	  	init = &PTU_pFirstCharInfo[0],						ev = init
    		
    		--temporary variable to assign address to pData8
    		VAR PTU_pData8,								init = 0x1,											ev = init
	  		
	  		--pointer which points to pixel data in bytes
	  		VAR PTU_pFirstCharInfo[65].CharInfo.pData,	init = &PTU_pData8,									ev = init
		
		COMMENT OUTPUT SECTION:
			
			--Pointer to a character's bit map
			VAR ret_Pu8GetCharBitMap,					init = NIL,											ev =NULL
    			
		COMMENT INPUT/OUTPUT SECTION:
    			
			--None
    		
		-- Stub Calls:	
		SIMUL
			
			--None
    	
		END SIMUL
    
		-- Calling the Unit Under Test :
    	#ret_Pu8GetCharBitMap = (T_UINT8*)Pu8GetCharBitMap(&ps_font, u8_char);
            
	END ELEMENT
    
END TEST -- TEST 6

TEST 7
FAMILY nominal
    
	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-Pu8GetCharBitMap-DB-LLR-001]
	COMMENT The function does the following when FontType of psFont is equal to SUPPORTED_FONT_TYPE.
	COMMENT	1. Set ps_group to pProp of Font of psFont.
	COMMENT	2. Loops 0 times since ps_group will be set to zero 
	COMMENT	Equivalence Class 23
	COMMENT </TD>
          
	ELEMENT
		
		COMMENT INPUT SECTION:
    		
    		--Character to be seacrched 
			VAR u8_char,				init = 0x80,	ev = init
    		
    		--font structure of character to be searched
    		STRUCTURE ps_font,			init = { FontType => 0x01010140, FontHeight => 24, 
    		&							Baseline => 19, Reversed => 0, Font => { pData => 
    		&							NULL } },		ev = init
    		
		COMMENT OUTPUT SECTION:
		    
		    --Pointer to a character's bit map		
			VAR ret_Pu8GetCharBitMap,	init = NIL,		ev = NULL
    			
		COMMENT INPUT/OUTPUT SECTION:
    			
			--None
    		
		-- Stub Calls:	
		SIMUL
			
			--None
    	
		END SIMUL
    
		-- Calling the Unit Under Test :
    	#ret_Pu8GetCharBitMap = (T_UINT8*)Pu8GetCharBitMap(&ps_font, u8_char);
            
	END ELEMENT
    
END TEST -- TEST 7

--TEST 8
--FAMILY robustness
--    
--	COMMENT Test Description
--	COMMENT <TD> 
--	COMMENT [hdudispbfonts-Pu8GetCharBitMap-DB-LLR-001]
--	COMMENT The function 'Pu8GetCharBitMap' does nothing when invalid reference is passed to ps_font. 
--	COMMENT	Equivalence Class 31
--	COMMENT </TD>
--          
--	ELEMENT
--		
--		COMMENT INPUT SECTION:
--
--    		--Character to be seacrched 
--			VAR u8_char,				init = 0x61,	ev = init
--    		
--		COMMENT OUTPUT SECTION:
--		    
--		    --Pointer to a character's bit map		
--			VAR ret_Pu8GetCharBitMap,	init = NIL,		ev = NULL
--    			
--		COMMENT INPUT/OUTPUT SECTION:
--    			
--			--None
--    		
--		-- Stub Calls:	
--		SIMUL
--			
--			--None
--    	
--		END SIMUL
--    
--		-- Calling the Unit Under Test :
--      #ret_Pu8GetCharBitMap = (T_UINT8*)Pu8GetCharBitMap(NULL, u8_char);
--            
--	END ELEMENT
--    
--END TEST -- TEST 8

TEST 9
FAMILY nominal
    
	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-Pu8GetCharBitMap-DB-LLR-001]
	COMMENT 
	COMMENT The function does the following when FontType of psFont is equal to SUPPORTED_FONT_TYPE 
	COMMENT 1. Set PS group to pProp of Font of psFont.
	COMMENT 2. Loop till PS group is not equal to zero and does the following
	COMMENT a.Set PS group to pNextProp of PS group when 
	COMMENT			i. u8Char is lesser than FirstChar of PS group or u8Char is greater than  LastChar of PS group.
	COMMENT	Equivalence Class 1,7
	COMMENT
	COMMENT	[hdudispbfonts-Pu8GetCharBitMap-DB-LLR-002]
	COMMENT The function returns the return value from the function.
	COMMENT Equivalence Class None
	COMMENT </TD>
	
	ELEMENT
		COMMENT INPUT SECTION:
    		
    		--Character to be seacrched 
			VAR u8_char,												init = 0x1F,						ev = init
    		
    		--font structure of character to be searched
    		STRUCTURE ps_font,		init = { FontType => 0x01010140, FontHeight => 24, Baseline => 19, Reversed => 0, 
    		&						Font => { pData => &PTU_pProp } },										ev = init
    		
    		--index of first character
			VAR ps_font.Font.pProp->FirstChar,   						init = 0x0020,						ev = init
    		
    		--index of last character
			VAR ps_font.Font.pProp->LastChar,							init = 0x007f,						ev = init
    		
    		--address of first character
			VAR ps_font.Font.pProp->pFirstCharInfo,	  					init = &PTU_pFirstCharInfo[0],		ev = init
    		
    		--pointer to next BFC_FONT_PROP
			VAR ps_font.Font.pProp->pNextProp,							init = &PTU_pNextProp,				ev = init  
    		
    		--temporary variable to assign address to pData8
    	    VAR PTU_pData8,												init = 0x1,							ev = init
						
			--pointer which points to pixel data in bytes
		    VAR PTU_pFirstCharInfo[0].CharInfo.pData,	  				init = &PTU_pData8,					ev = init
		    		
	  		COMMENT OUTPUT SECTION:
		    
		    --Pointer to a character's bit map
			VAR ret_Pu8GetCharBitMap,		init = NIL,		ev = NULL
    
    			
		COMMENT INPUT/OUTPUT SECTION:
    			
			--None
    		
		-- Stub Calls:
    		
		SIMUL
			--None
    	
		END SIMUL
    
		-- Calling the Unit Under Test :
    	#ret_Pu8GetCharBitMap = (T_UINT8*)Pu8GetCharBitMap(&ps_font, u8_char);
            
	END ELEMENT
    
END TEST -- TEST 9

END SERVICE -- Pu8GetCharBitMap

--------------------------------------------------------------------------------
-- Declaration of the service FontsGetFont
--------------------------------------------------------------------------------
SERVICE FontsGetFont
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_ETXFONT e_tx_font;
    -- By function returned type declaration
    #T_BFC_FONT* ret_FontsGetFont;

    ENVIRONMENT ENV_FontsGetFont
    VAR e_tx_font,				init = FONT_NO_FONT,		ev = init
    VAR ret_FontsGetFont,		init = NIL,					ev = init
    END ENVIRONMENT -- ENV_FontsGetFont
    USE ENV_FontsGetFont
    
TEST 1
FAMILY nominal

	COMMENT Test Description
	COMMENT <TD> 
	COMMENT	[hdudispbfonts-FontsGetFont-DB-LLR-002]
	COMMENT The function return ZERO when e_tx_font is not SYSFONT.
	COMMENT Equivalence Class 16
	COMMENT </TD>
	
	ELEMENT

		COMMENT INPUT SECTION:
				
			--Specifies the font
			VAR e_tx_font,						init = FONT_NO_FONT,		ev = init
				
		COMMENT OUTPUT SECTION:

			--reference of Font_consolas24_haa4
			VAR ret_FontsGetFont,				init = NIL,					ev = init

		COMMENT INPUT/OUTPUT SECTION:

			--None
		
		-- Stub Calls:
		SIMUL
			
			--None

		END SIMUL

		-- Calling the Unit Under Test :
		#ret_FontsGetFont = (T_BFC_FONT*)FontsGetFont(e_tx_font);  		
       
	END ELEMENT
	
END TEST -- TEST 1
	
TEST 2
FAMILY nominal
	
	COMMENT Test Description
	COMMENT <TD> 
	COMMENT	[hdudispbfonts-FontsGetFont-DB-LLR-001]
	COMMENT The function return reference of Font_consolas24_haa4 when e_tx_font is SYSFONT.
	COMMENT Equivalence Class 15
	COMMENT </TD>
	
	ELEMENT
	
		COMMENT INPUT SECTION:
			
			--Specifies the font
			VAR e_tx_font,							init = SYSFONT,			ev = init

		COMMENT OUTPUT SECTION:
			
			--reference of Font_consolas24_haa4
			VAR ret_FontsGetFont,					init = NIL,				ev =&Font_consolas24_haa4

		COMMENT INPUT/OUTPUT SECTION:

			--None

		-- Stub Calls:
		SIMUL

			--None

		END SIMUL

		-- Calling the Unit Under Test :
		#ret_FontsGetFont = (T_BFC_FONT*)FontsGetFont(e_tx_font);
	
	END ELEMENT

END TEST -- TEST 2

END SERVICE -- FontsGetFont

--------------------------------------------------------------------------------
-- Declaration of the service FontsGetFontHeight
--------------------------------------------------------------------------------
SERVICE FontsGetFontHeight
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_ETXFONT e_tx_font;
    -- By function returned type declaration
    #T_INT16 ret_FontsGetFontHeight;
    

    ENVIRONMENT ENV_FontsGetFontHeight
    VAR e_tx_font,					init = FONT_NO_FONT,		ev = init
    VAR ret_FontsGetFontHeight,		init = 0,					ev = init
    END ENVIRONMENT -- ENV_FontsGetFontHeight
    USE ENV_FontsGetFontHeight
      
TEST 1
FAMILY nominal

	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-FontsGetFontHeight-DB-LLR-001]
	COMMENT The function set the font pointer height to return value of FontsGetFont with the 
	COMMENT function parameter as e_tx_font.
	COMMENT Equivalence Class 29
	COMMENT
	COMMENT	[hdudispbfonts-FontsGetFontHeight-DB-LLR-002]
	COMMENT The function does nothing  when font pointer height is  equal to NULL.
	COMMENT Equivalence Class 22
	COMMENT
	COMMENT [hdudispbfonts-FontsGetFontHeight-DB-LLR-003]
	COMMENT The function return the return value from the function.
	COMMENT Equivalence Class None
	COMMENT </TD>
	
	
	ELEMENT
	
		COMMENT INPUT SECTION:

			--Specifies the font
			VAR e_tx_font,					init = FONT_NO_FONT,		ev = init

		COMMENT OUTPUT SECTION:
			--height of the font
			VAR ret_FontsGetFontHeight,		init = 0,					ev = init

		COMMENT INPUT/OUTPUT SECTION:
			
			--None
			
		-- Stub Calls:
		SIMUL

			--None

		END SIMUL

		-- Calling the Unit Under Test :
 		#ret_FontsGetFontHeight = FontsGetFontHeight(e_tx_font);

	END ELEMENT
	
END TEST -- TEST 1
		
TEST 2
FAMILY nominal

	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdudispbfonts-FontsGetFontHeight-DB-LLR-001]
	COMMENT The function set the font pointer height to return value of FontsGetFont with the function
	COMMENT parameter as e_tx_font.
	COMMENT Equivalence Class 29
	COMMENT
	COMMENT	[hdudispbfonts-FontsGetFontHeight-DB-LLR-002]
	COMMENT The function set the return value to FontHeight of font pointer height when font pointer is 
	COMMENT not equal to NULL 
	COMMENT Equivalence Class 21
	COMMENT </TD>

	ELEMENT
		
		COMMENT INPUT SECTION:
			
			--Specifies the font
			VAR e_tx_font,					init = SYSFONT,				ev = init

		COMMENT OUTPUT SECTION:

			--height of the font
			VAR ret_FontsGetFontHeight,		init = 0,					ev = 24

		COMMENT INPUT/OUTPUT SECTION:

			--None

		-- Stub Calls:
		SIMUL

			--None

		END SIMUL

		-- Calling the Unit Under Test :
		#ret_FontsGetFontHeight = FontsGetFontHeight(e_tx_font);

	END ELEMENT
	
END TEST -- TEST 2

END SERVICE -- FontsGetFontHeight



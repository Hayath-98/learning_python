HEADER hdulibstm32f7xxhalrcc,Source Code Ver : 1.3,TestScript Ver : 1.2
--------------------------------------------------------------------------------
-- Author Name         : BhanuPrakash E
--
-- File Name           : hdulibstm32f7xxhalrcc.ptu
--
-- Test Creation Date  : 31.10.2017
--
-- Tested Functions    : HalRccOscConfig
--                       HalRccClockConfig
--                       HalRccGetSysClockFreq
--
-- Version History     :
--
-- TEST-VERSION        TEST-DATE               TESTER NAME          MODIFICATIONS
-- ------------        ---------               -----------          -------------
--     1.1             31.10.2017              BhanuPrakash E       Created the ptu file. 
--	   1.2			   10.11.2017			   BhanuPrakash E		Updated as per #PR100171
--------------------------------------------------------------------------------
--
-- TESTED FILE INCLUDE DIRECTIVES 
--
--------------------------------------------------------------------------------


##include "hdulibstm32f7xxhalrcc.h"         
##include "hdulibstm32f7xxhal.h"            
##include "hdulibbasictypes.h"              
##include "hdulibstm32f7xxhalrccex.h"       
##include "hdulibstm32f7xxhalflash.h"       
##include "hdulibstm32f746xx.h"             
##include "hdulibstm32f7xxhalgpio.h"        
##include "hdulibstm32f7xxhaldef.h"         
##include "hdulibstm32f7xxhalrccex.h"       
##include "hdulibstm32f7xxhalflash.h"       
##include "hdulibstm32f7xxhalconf.h"        
##include "hdulibcmsisgcc.h"      

--------------------------------------------------------------------------------
--
-- TESTED FILE DECLARATIONS 
--
--------------------------------------------------------------------------------

-- Declarations of the global variables of the tested file
	
    #  const T_UINT8 Ahb_presc_table[16]; 
    
    # T_UINT32 System_core_clock;   
  
-- Declarations of the temporary variables of the tested file

	--temporary variables used in HalRccOscConfig function 
	# T_UINT32 PTU_register=0,PTU_HALGetTicCounter=0;
	
--------------------------------------------------------------------------------

BEGIN

	COMMENT Author Name      : 	BhanuPrakash E
	COMMENT
	COMMENT File Name        : 	hdulibstm32f7xxhalrcc.ptu
	COMMENT
	COMMENT Tested Functions : 	HalRccOscConfig
	COMMENT						HalRccClockConfig
	COMMENT						HalRccGetSysClockFreq
	COMMENT
	COMMENT Assumptions and Constraints
	COMMENT <AC>
	COMMENT
	COMMENT Assumption(s):
	COMMENT None
	COMMENT 
	COMMENT Constraint(s):
    COMMENT 1.Header file "hdulibstm32f746xx.h" is modified for testing purpose. The macro 'PWR' is modified for stubbing hardware address.
	COMMENT /*Commented for testing purpose*/
	COMMENT /*#define PWR     ((T_PWR *) PWR_BASE )*/
	COMMENT /* Modified macro by stubbing hardware address for testing purpose*/
	COMMENT T_SCB_TYPE PTU_PWR;
	COMMENT #define PWR    ((T_PWR *)& PTU_PWR)
	COMMENT
    COMMENT 2.Header file "hdulibstm32f746xx.h" is modified for testing purpose. The macro 'RCC' is modified for stubbing hardware address.
	COMMENT /*Commented for testing purpose*/
	COMMENT /*#define RCC     ((T_RCC *) RCC_BASE )*/
	COMMENT /* Modified macro by stubbing hardware address for testing purpose*/
	COMMENT T_RCC PTU_RCC;
	COMMENT #define RCC    ((T_RCC *)& PTU_RCC)
	COMMENT
    COMMENT 3.Header file "hdulibstm32f746xx.h" is modified for testing purpose. The macro 'FLASH' is modified for stubbing hardware address.
	COMMENT /*Commented for testing purpose*/
	COMMENT /*#define FLASH     ((T_FLASH *) FLASH_R_BASE )*/
	COMMENT /* Modified macro by stubbing hardware address for testing purpose*/
	COMMENT T_FLASH PTU_FLASH;
	COMMENT #define FLASH    ((T_FLASH *)& PTU_FLASH)
	COMMENT
    COMMENT 4'do..while' loop cannot be covered for 2 times or more since loop is controlled by magic number in macros ' __HAL_RCC_HSE_CONFIG',
    COMMENT '__HAL_RCC_PWR_CLK_ENABLE' '__HAL_RCC_LSE_CONFIG'of function'HalRccOscConfig'.
	COMMENT
    COMMENT 5. Following Test script related warnings are observed during Target Execution for volatile
    COMMENT keyword member/variable:
   	COMMENT warning #191-D: type qualifier is meaningless on cast type
	COMMENT </AC>

	COMMENT Equivalence Class Description
	COMMENT <ECD>
	COMMENT 
	COMMENT Valid Class(es)
    COMMENT Class 1
    COMMENT In function 'HalRccGetSysClockFreq',result of CFGR of RCC bitwise AND RCC_CFGR_SWS is RCC_SYSCLKSOURCE_STATUS_HSI
    COMMENT
    COMMENT Class 2 
    COMMENT In function 'HalRccGetSysClockFreq',result of CFGR of RCC bitwise AND RCC_CFGR_SWS is RCC_SYSCLKSOURCE_STATUS_HSE.
    COMMENT
    COMMENT Class 3 
    COMMENT In function 'HalRccGetSysClockFreq',result of CFGR of RCC bitwise AND RCC_CFGR_SWS is RCC_SYSCLKSOURCE_STATUS_PLLCLK.
    COMMENT
    COMMENT Class 4 
    COMMENT In function 'HalRccGetSysClockFreq',returns value of macro __HAL_RCC_GET_PLL_OSCSOURCE is not equal to RCC_PLLCFGR_PLLSRC_HSI
    COMMENT
    COMMENT Class 5 
    COMMENT In function 'HalRccGetSysClockFreq',returns value of macro __HAL_RCC_GET_PLL_OSCSOURCE is equal to RCC_PLLCFGR_PLLSRC_HSI
    COMMENT
    COMMENT Class 7 
    COMMENT In function 'HalRccGetSysClockFreq',result of CFGR of RCC bitwise AND RCC_CFGR_SWS
    COMMENT is other than RCC_SYSCLKSOURCE_STATUS_HSI, RCC_SYSCLKSOURCE_STATUS_HSE 
    COMMENT and RCC_SYSCLKSOURCE_STATUS_PLLCLK.
    COMMENT
    COMMENT Class 8
    COMMENT In function 'HalRccGetSysClockFreq',returns the value of system clock frequency.
    COMMENT
    COMMENT Class 9
    COMMENT In function 'HalRccClockConfig',f_latency is greater than the result of 
    COMMENT ACR of FLASH bitwise AND with FLASH_ACR_LATENCY 
    COMMENT
    COMMENT Class 10 
    COMMENT In function 'HalRccClockConfig',f_latency is lesser than the result of 
    COMMENT ACR of FLASH bitwise AND with FLASH_ACR_LATENCY 
    COMMENT
    COMMENT Class 11 
    COMMENT In function 'HalRccClockConfig', f_latency is equal to the result of 
    COMMENT ACR of FLASH bitwise AND with FLASH_ACR_LATENCY 
    COMMENT
    COMMENT Class 12 
    COMMENT In function 'HalRccClockConfig',f_latency is not equal to the result of 
    COMMENT ACR of FLASH bitwise AND with FLASH_ACR_LATENCY 
    COMMENT
    COMMENT Class 13 
    COMMENT In function 'HalRccClockConfig',calls the macro 'MODIFY_REG'
    COMMENT
    COMMENT Class 16
    COMMENT In function 'HalRccClockConfig',Result of ClockType of rcc_clk_init_struct bitwise AND
    COMMENT  RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK.
    COMMENT
    COMMENT Class 17
    COMMENT In function 'HalRccClockConfig',Result of ClockType of rcc_clk_init_struct bitwise AND
    COMMENT RCC_CLOCKTYPE_SYSCLK is not equal to RCC_CLOCKTYPE_SYSCLK.
    COMMENT
    COMMENT Class 18
    COMMENT In function 'HalRccClockConfig',SYSCLKSource of rcc_clk_init_struct is equal to RCC_SYSCLKSOURCE_HSE.
    COMMENT
    COMMENT Class 19
    COMMENT In function 'HalRccClockConfig',SYSCLKSource of rcc_clk_init_struct is not equal to RCC_SYSCLKSOURCE_HSE.
    COMMENT
    COMMENT Class 20
    COMMENT In function 'HalRccClockConfig',Return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSERDY is  equal to RESET
    COMMENT
    COMMENT Class 21
    COMMENT In function 'HalRccClockConfig',Return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSERDY is not equal to RESET
    COMMENT
    COMMENT Class 22
    COMMENT In function 'HalRccClockConfig',SYSCLKSource of rcc_clk_init_struct is equal to RCC_SYSCLKSOURCE_PLLCLK.
    COMMENT
    COMMENT Class 23
    COMMENT In function 'HalRccClockConfig',SYSCLKSource of rcc_clk_init_struct is not equal to RCC_SYSCLKSOURCE_PLLCLK.
    COMMENT
    COMMENT Class 31
    COMMENT In function 'HalRccClockConfig',calls the macro '__HAL_FLASH_SET_LATENCY'.
    COMMENT
    COMMENT Class 32
    COMMENT In function 'HalRccClockConfig',result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_PCLK1 is equal to RCC_CLOCKTYPE_PCLK1.
    COMMENT
    COMMENT Class 33
    COMMENT In function 'HalRccClockConfig',result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_PCLK1 is not equal to RCC_CLOCKTYPE_PCLK1.
    COMMENT
    COMMENT Class 34
    COMMENT In function 'HalRccClockConfig',result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_PCLK2 is equal to RCC_CLOCKTYPE_PCLK2.
    COMMENT
    COMMENT Class 35
    COMMENT In function 'HalRccClockConfig',result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_PCLK2 is not equal to RCC_CLOCKTYPE_PCLK2
    COMMENT
    COMMENT Class 36
    COMMENT In function 'HalRccClockConfig',calls the function 'System_core_clock'
    COMMENT
    COMMENT Class 37
    COMMENT In function 'HalRccClockConfig',calls the function 'HALInitTick'
    COMMENT
    COMMENT Class 38
    COMMENT In function 'HalRccClockConfig',returns 'HAL_ERROR'.
    COMMENT
    COMMENT Class 39
    COMMENT In function 'HalRccClockConfig',SYSCLKSource of rcc_clk_init_struct is other than RCC_SYSCLKSOURCE_HSE and RCC_SYSCLKSOURCE_PLLCLK
    COMMENT  
    COMMENT Class 40
    COMMENT In function 'HalRccClockConfig',Return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSIRDY is  equal to RESET
    COMMENT
    COMMENT Class 41
    COMMENT In function 'HalRccClockConfig',Return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSIRDY is not equal to RESET
    COMMENT
    COMMENT Class 42
    COMMENT In function 'HalRccClockConfig',returns 'HAL_OK'.
    COMMENT
    COMMENT Class 43
    COMMENT In function 'HalRccClockConfig',Result of ClockType of rcc_clk_init_struct bitwise AND
    COMMENT RCC_CLOCKTYPE_HCLK is equal to RCC_CLOCKTYPE_HCLK.
    COMMENT
    COMMENT Class 44
    COMMENT In function 'HalRccClockConfig',Result of ClockType of rcc_clk_init_struct bitwise AND
    COMMENT RCC_CLOCKTYPE_HCLK is not equal to RCC_CLOCKTYPE_HCLK.
    COMMENT
    COMMENT Class 45
    COMMENT In function 'HalRccClockConfig',calls the macro '__HAL_RCC_SYSCLK_CONFIG'.
    COMMENT
    COMMENT Class 46
    COMMENT In function 'HalRccClockConfig',calls the function 'HALGetTick'
    COMMENT
    COMMENT Class 47
    COMMENT In function 'HalRccClockConfig',macro '__HAL_RCC_GET_SYSCLK_SOURCE' returns RCC_SYSCLKSOURCE_STATUS_HSE
    COMMENT
    COMMENT Class 48
    COMMENT In function 'HalRccClockConfig',macro '__HAL_RCC_GET_SYSCLK_SOURCE' returns other than RCC_SYSCLKSOURCE_STATUS_HSE
    COMMENT
    COMMENT Class 49
    COMMENT In function 'HalRccClockConfig',returns 'HAL_TIMEOUT'.    
    COMMENT
    COMMENT Class 50
    COMMENT In function 'HalRccClockConfig',result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than CLOCKSWITCH_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 51
    COMMENT In function 'HalRccClockConfig',result of return value of HALGetTick subtracted with Tick Start is less than
    COMMENT than CLOCKSWITCH_TIMEOUT_VALUE    
    COMMENT
    COMMENT Class 52
    COMMENT In function 'HalRccClockConfig',result of return value of HALGetTick subtracted with Tick Start is equal to
    COMMENT than CLOCKSWITCH_TIMEOUT_VALUE    
    COMMENT  
    COMMENT Class 53
    COMMENT In function 'HalRccClockConfig',Return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_PLLRDY is  equal to RESET
    COMMENT
    COMMENT Class 54
    COMMENT In function 'HalRccClockConfig',Return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_PLLRDY is not equal to RESET 
    COMMENT
    COMMENT Class 55
    COMMENT In function 'HalRccClockConfig',macro '__HAL_RCC_GET_SYSCLK_SOURCE' returns RCC_SYSCLKSOURCE_STATUS_PLLCLK
    COMMENT
    COMMENT Class 56
    COMMENT In function 'HalRccClockConfig',macro '__HAL_RCC_GET_SYSCLK_SOURCE' returns other than RCC_SYSCLKSOURCE_STATUS_PLLCLK
    COMMENT
    COMMENT Class 57
    COMMENT In function 'HalRccClockConfig',macro '__HAL_RCC_GET_SYSCLK_SOURCE' returns RCC_SYSCLKSOURCE_STATUS_HSI
    COMMENT
    COMMENT Class 58
    COMMENT In function 'HalRccClockConfig',macro '__HAL_RCC_GET_SYSCLK_SOURCE' returns other than RCC_SYSCLKSOURCE_STATUS_HSI
    COMMENT
    COMMENT Class 59
    COMMENT In function 'HalRccOscConfig',Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE
    COMMENT is equal to RCC_OSCILLATORTYPE_HSE
    COMMENT
    COMMENT Class 60
    COMMENT In function 'HalRccOscConfig',Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE
    COMMENT is not equal to RCC_OSCILLATORTYPE_HSE
    COMMENT
    COMMENT Class 61
    COMMENT In function 'HalRccOscConfig',macro '__HAL_RCC_GET_SYSCLK_SOURCE' returns RCC_SYSCLKSOURCE_STATUS_HSE
    COMMENT
    COMMENT Class 62
    COMMENT In function 'HalRccOscConfig',macro '__HAL_RCC_GET_SYSCLK_SOURCE' returns other than RCC_SYSCLKSOURCE_STATUS_HSE
    COMMENT
    COMMENT Class 63
    COMMENT In function 'HalRccOscConfig',macro '__HAL_RCC_GET_SYSCLK_SOURCE' returns RCC_SYSCLKSOURCE_STATUS_PLLCLK
    COMMENT
    COMMENT Class 64
    COMMENT In function 'HalRccOscConfig',macro '__HAL_RCC_GET_SYSCLK_SOURCE' returns other than RCC_SYSCLKSOURCE_STATUS_PLLCLK
    COMMENT
    COMMENT Class 65
    COMMENT In function 'HalRccOscConfig',Result of bitwise AND of PLLCFGR of RCC and RCC_PLLCFGR_PLLSRC is equal to 
    COMMENT RCC_PLLCFGR_PLLSRC_HSE
    COMMENT
    COMMENT Class 66
    COMMENT In function 'HalRccOscConfig',Result of bitwise AND of PLLCFGR of RCC and RCC_PLLCFGR_PLLSRC is not equal to 
    COMMENT RCC_PLLCFGR_PLLSRC_HSE
    COMMENT
    COMMENT Class 67
    COMMENT In function 'HalRccOscConfig',macro'__HAL_RCC_GET_FLAG' with parameter RCC_FLAG_HSERDY returns RESET
    COMMENT
    COMMENT Class 68
    COMMENT In function 'HalRccOscConfig',macro '__HAL_RCC_GET_FLAG' with parameter RCC_FLAG_HSERDY returns other than RESET
    COMMENT
    COMMENT Class 69
    COMMENT In function 'HalRccOscConfig',HSEState of rcc_osc_init_struct is equal to RCC_HSE_OFF
    COMMENT
    COMMENT Class 70
    COMMENT In function 'HalRccOscConfig',HSEState of rcc_osc_init_struct is not equal to RCC_HSE_OFF
    COMMENT
    COMMENT Class 71
    COMMENT The function 'HalRccOscConfig',calls the macro '__HAL_RCC_HSE_CONFIG'.
    COMMENT
    COMMENT Class 72
    COMMENT The function 'HalRccOscConfig',returns 'HAL_OK'.    
    COMMENT
    COMMENT Class 73
    COMMENT The function 'HalRccOscConfig',calls the function 'HALGetTick'.    
    COMMENT
    COMMENT Class 74
    COMMENT The function 'HalRccOscConfig',returns 'HAL_TIMEOUT'.  
    COMMENT
    COMMENT Class 75
    COMMENT In function 'HalRccOscConfig',Result of return value of function HALGetTick is subtracted with 
    COMMENT Start Tick is greater than HSE_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 76
    COMMENT In function 'HalRccOscConfig',Result of return value of function HALGetTick is subtracted with 
    COMMENT Start Tick is equal to HSE_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 77
    COMMENT In function 'HalRccOscConfig',Result of return value of function HALGetTick is subtracted with 
    COMMENT Start Tick is lesser than HSE_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 78
    COMMENT In function 'HalRccOscConfig',Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI
    COMMENT is equal to RCC_OSCILLATORTYPE_HSI
    COMMENT
    COMMENT Class 79
    COMMENT In function 'HalRccOscConfig',Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI
    COMMENT is not equal to RCC_OSCILLATORTYPE_HSI
    COMMENT
    COMMENT Class 80
    COMMENT In function 'HalRccOscConfig',macro '__HAL_RCC_GET_SYSCLK_SOURCE' returns RCC_SYSCLKSOURCE_STATUS_HSI
    COMMENT
    COMMENT Class 81
    COMMENT In function 'HalRccOscConfig',macro '__HAL_RCC_GET_SYSCLK_SOURCE' returns other than RCC_SYSCLKSOURCE_STATUS_HSI
    COMMENT
    COMMENT Class 82
    COMMENT In function 'HalRccOscConfig',Result of bitwise AND of PLLCFGR of RCC and RCC_PLLCFGR_PLLSRC is equal to 
    COMMENT RCC_PLLCFGR_PLLSRC_HSI
    COMMENT
    COMMENT Class 83
    COMMENT In function 'HalRccOscConfig',Result of bitwise AND of PLLCFGR of RCC and RCC_PLLCFGR_PLLSRC is not equal to 
    COMMENT RCC_PLLCFGR_PLLSRC_HSI
    COMMENT
    COMMENT Class 84
    COMMENT In function 'HalRccOscConfig',HSIState of rcc_osc_init_struct is equal to RCC_HSI_ON
    COMMENT
    COMMENT Class 85
    COMMENT In function 'HalRccOscConfig',HSIState of rcc_osc_init_struct is not equal to RCC_HSI_ON
    COMMENT
    COMMENT Class 86
    COMMENT In function 'HalRccOscConfig',HSIState of rcc_osc_init_struct is equal to RCC_HSI_OFF
    COMMENT
    COMMENT Class 87
    COMMENT In function 'HalRccOscConfig',HSIState of rcc_osc_init_struct is not equal to RCC_HSI_OFF
    COMMENT
    COMMENT Class 88
    COMMENT The function 'HalRccOscConfig',calls the macro '__HAL_RCC_HSI_ENABLE'.
    COMMENT
    COMMENT Class 89
    COMMENT In function 'HalRccOscConfig',macro '__HAL_RCC_GET_FLAG' with parameter RCC_FLAG_HSIRDY returns RESET
    COMMENT
    COMMENT Class 90
    COMMENT In function 'HalRccOscConfig',macro '__HAL_RCC_GET_FLAG' with parameter RCC_FLAG_HSIRDY returns other than RESET
    COMMENT
    COMMENT Class 91
    COMMENT In function 'HalRccOscConfig',Result of return value of function HALGetTick is subtracted with 
    COMMENT Start Tick is greater than HSI_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 92
    COMMENT In function 'HalRccOscConfig',Result of return value of function HALGetTick is subtracted with 
    COMMENT Start Tick is equal to HSI_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 93
    COMMENT In function 'HalRccOscConfig',Result of return value of function HALGetTick is subtracted with 
    COMMENT Start Tick is lesser than HSI_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 94
    COMMENT The function 'HalRccOscConfig',calls the macro '__HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST'.
    COMMENT
    COMMENT Class 95
    COMMENT The function 'HalRccOscConfig',calls the macro '__HAL_RCC_HSI_DISABLE'.
    COMMENT
    COMMENT Class 96
    COMMENT In function 'HalRccOscConfig',Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSI
    COMMENT is equal to RCC_OSCILLATORTYPE_LSI
    COMMENT
    COMMENT Class 97
    COMMENT In function 'HalRccOscConfig',Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSI
    COMMENT is not equal to RCC_OSCILLATORTYPE_LSI
    COMMENT
    COMMENT Class 98
    COMMENT In function 'HalRccOscConfig',LSIState of rcc_osc_init_struct is equal to RCC_LSI_OFF
    COMMENT
    COMMENT Class 99
    COMMENT In function 'HalRccOscConfig',LSIState of rcc_osc_init_struct is not equal to RCC_LSI_OFF
    COMMENT
    COMMENT Class 100
    COMMENT The function 'HalRccOscConfig',calls the macro '__HAL_RCC_LSI_ENABLE'.
    COMMENT
    COMMENT Class 101
    COMMENT In function 'HalRccOscConfig',macro '__HAL_RCC_GET_FLAG' with parameter RCC_FLAG_LSIRDY returns RESET
    COMMENT
    COMMENT Class 102
    COMMENT In function 'HalRccOscConfig',macro '__HAL_RCC_GET_FLAG' with parameter RCC_FLAG_LSIRDY returns other than RESET
    COMMENT
    COMMENT Class 103
    COMMENT In function 'HalRccOscConfig',Result of return value of function HALGetTick is subtracted with 
    COMMENT Start Tick is greater than LSI_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 104
    COMMENT In function 'HalRccOscConfig',Result of return value of function HALGetTick is subtracted with 
    COMMENT Start Tick is equal to LSI_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 105
    COMMENT In function 'HalRccOscConfig',Result of return value of function HALGetTick is subtracted with 
    COMMENT Start Tick is lesser than LSI_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 106
    COMMENT The function 'HalRccOscConfig',calls the macro '__HAL_RCC_LSI_DISABLE'.     
    COMMENT
    COMMENT Class 107
    COMMENT In function 'HalRccOscConfig',Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE
    COMMENT is equal to RCC_OSCILLATORTYPE_LSE
    COMMENT
    COMMENT Class 108
    COMMENT In function 'HalRccOscConfig',Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE
    COMMENT is not equal to RCC_OSCILLATORTYPE_LSE
    COMMENT
    COMMENT Class 109
    COMMENT The function 'HalRccOscConfig',calls the macro '__HAL_RCC_PWR_CLK_ENABLE'.   
    COMMENT
    COMMENT Class 110
    COMMENT In function 'HalRccOscConfig', result of CR1 of PWR bitwise and PWR_CR1_DBP is equal to RESET
    COMMENT
    COMMENT Class 111
    COMMENT In function 'HalRccOscConfig',result of CR1 of PWR bitwise and PWR_CR1_DBP is not equal to RESET
    COMMENT
    COMMENT Class 112
    COMMENT In function 'HalRccOscConfig',Result of return value of function HALGetTick is subtracted with 
    COMMENT Start Tick is greater than RCC_DBP_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 113
    COMMENT In function 'HalRccOscConfig',Result of return value of function HALGetTick is subtracted with 
    COMMENT Start Tick is equal to RCC_DBP_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 114
    COMMENT In function 'HalRccOscConfig',Result of return value of function HALGetTick is subtracted with 
    COMMENT Start Tick is lesser than RCC_DBP_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 115
    COMMENT The function 'HalRccOscConfig',calls the macro '__HAL_RCC_LSE_CONFIG'. 
    COMMENT
    COMMENT Class 116
    COMMENT In function 'HalRccOscConfig',LSEState of rcc_osc_init_struct is equal to RCC_LSE_OFF
    COMMENT
    COMMENT Class 117
    COMMENT In function 'HalRccOscConfig',LSEState of rcc_osc_init_struct is not equal to RCC_LSE_OFF
    COMMENT
    COMMENT Class 118
    COMMENT In function 'HalRccOscConfig',macro '__HAL_RCC_GET_FLAG' with parameter RCC_FLAG_LSERDY returns RESET
    COMMENT
    COMMENT Class 119
    COMMENT In function 'HalRccOscConfig',macro '__HAL_RCC_GET_FLAG' with parameter RCC_FLAG_LSERDY returns other than RESET
    COMMENT
    COMMENT Class 120
    COMMENT In function 'HalRccOscConfig',Result of return value of function HALGetTick is subtracted with 
    COMMENT Start Tick is greater than RCC_LSE_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 121
    COMMENT In function 'HalRccOscConfig',Result of return value of function HALGetTick is subtracted with 
    COMMENT Start Tick is equal to RCC_LSE_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 122
    COMMENT In function 'HalRccOscConfig',Result of return value of function HALGetTick is subtracted with 
    COMMENT Start Tick is lesser than RCC_LSE_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 123
    COMMENT In function 'HalRccOscConfig',PLLState of PLL of rcc_osc_init_struct is equal to RCC_PLL_NONE
    COMMENT
    COMMENT Class 124
    COMMENT In function 'HalRccOscConfig',PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_NONE
    COMMENT
    COMMENT Class 125
    COMMENT In function 'HalRccOscConfig',PLLState of PLL of rcc_osc_init_struct is equal to RCC_PLL_ON
    COMMENT
    COMMENT Class 126
    COMMENT In function 'HalRccOscConfig',PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_ON
    COMMENT
    COMMENT Class 127
    COMMENT In function 'HalRccOscConfig',macro '__HAL_RCC_GET_FLAG' with parameter RCC_FLAG_PLLRDY returns RESET
    COMMENT
    COMMENT Class 128
    COMMENT In function 'HalRccOscConfig',macro '__HAL_RCC_GET_FLAG' with parameter RCC_FLAG_PLLRDY returns other than RESET
    COMMENT
    COMMENT Class 129
    COMMENT In function 'HalRccOscConfig',Result of return value of function HALGetTick is subtracted with 
    COMMENT Start Tick is greater than PLL_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 130
    COMMENT In function 'HalRccOscConfig',Result of return value of function HALGetTick is subtracted with 
    COMMENT Start Tick is equal to PLL_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 131
    COMMENT In function 'HalRccOscConfig',Result of return value of function HALGetTick is subtracted with 
    COMMENT Start Tick is lesser than PLL_TIMEOUT_VALUE
    COMMENT
    COMMENT Class 132
    COMMENT The function 'HalRccOscConfig',calls the macro '__HAL_RCC_PLL_CONFIG'.  
    COMMENT
    COMMENT Class 133
    COMMENT The function 'HalRccOscConfig',calls the macro '__HAL_RCC_PLL_ENABLE'. 
    COMMENT
    COMMENT Class 134
    COMMENT The function 'HalRccOscConfig',calls the macro '__HAL_RCC_PLL_DISABLE'. 
    COMMENT
    COMMENT Class 135
    COMMENT The function 'HalRccOscConfig',returns 'HAL_OK'.   
	COMMENT
	COMMENT Invalid Class(es)
	COMMENT Class 136
	COMMENT In function "HalRccOscConfig", Invalid Reference is passed to rcc_osc_init_struct parameter.
	COMMENT
	COMMENT Class 137
	COMMENT In function "HalRccClockConfig", Invalid Reference is passed to rcc_clk_init_struct parameter.
	COMMENT </ECD>
 
--------------------------------------------------------------------------------
--
-- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
--
--------------------------------------------------------------------------------
 
SIMUL

	DEFINE STUB hdulibstm32f7xxhalrcc_c

		#T_HAL_STATUS HALInitTick(T_UINT32  _in TickPriority);

		#T_UINT32 HALGetTick(void)
		#{    
			--to set result of CR1 of PWR bitwise and PWR_CR1_DBP to RESET
		#	if(PTU_register==1)
		#	{
		#	PWR->CR1 =0x00000000;
		#	}  	  	
			--to set return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_PLLRDY to RESET
		#	if(PTU_register==999)
		#{  	
		#		PTU_HALGetTicCounter++;    
		#		if(PTU_HALGetTicCounter==2)
		#		{
		#			RCC->CR=0x02000000;
		#		}
		#}  	
		#}

	END DEFINE

ELSE_SIMUL

    --No action defined as of now if the module is not simulated

END SIMUL

--------------------------------------------------------------------------------
--
-- ENVIRONMENTS DECLARATIONS
--
--------------------------------------------------------------------------------
--IF HOST

--No special things that have to be done on the host to run the test.

--ELSE

--No action defined for the target execution as of now

--END IF
--------------------------------------------------------------------------------
-- TESTED FILE ENVIRONMENT
--------------------------------------------------------------------------------
-- Environment of the file hdulibstm32f7xxhalrcc.c

--ENVIRONMENT ENV_hdulibstm32f7xxhalrcc_c

	--None

--END ENVIRONMENT -- ENV_hdulibstm32f7xxhalrcc_c

-- USE ENV_hdulibstm32f7xxhalrcc_c

--------------------------------------------------------------------------------
--
-- SERVICES DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Declaration of the service HalRccGetSysClockFreq
--------------------------------------------------------------------------------
SERVICE HalRccGetSysClockFreq
SERVICE_TYPE extern

-- By function returned type declaration
#T_UINT32 ret_HalRccGetSysClockFreq;

TEST 1
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccGetSysClockFreq-DB-LLR-001]
    COMMENT The function sets system clock frequency as HSI_VALUE 
    COMMENT when result of CFGR of RCC bitwise AND RCC_CFGR_SWS is RCC_SYSCLKSOURCE_STATUS_HSI.
    COMMENT Equivalence Class 1
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
        
        	--specifies the RCC clock configuration register
            VAR RCC->CFGR,						init = 0x00000000,		ev = init
        
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        COMMENT OUTPUT SECTION:

			--returns SYSCLK frequency        
            VAR ret_HalRccGetSysClockFreq,		init = 0x00000000,		ev = HSI_VALUE

        -- Stub calls:
        SIMUL
        
            --No Stubs

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccGetSysClockFreq = HalRccGetSysClockFreq();
        
    END ELEMENT

END TEST -- TEST 1
    
TEST 2
FAMILY nominal
    
    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccGetSysClockFreq-DB-LLR-002]
    COMMENT The function sets system clock frequency as HSE_VALUE
    COMMENT when result of CFGR of RCC bitwise AND RCC_CFGR_SWS is RCC_SYSCLKSOURCE_STATUS_HSE.
    COMMENT Equivalence Class 2
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

        	--specifies the RCC clock configuration register        
             VAR RCC->CFGR,					  init = 0x00000004,		ev = init
                
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        COMMENT OUTPUT SECTION:

			--returns SYSCLK frequency            
            VAR ret_HalRccGetSysClockFreq,    init = 0x00000000,		ev = HSE_VALUE
            
        
        -- Stub calls:
        SIMUL
        
            --No Stubs

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccGetSysClockFreq = HalRccGetSysClockFreq();
        
    END ELEMENT

END TEST -- TEST 2

TEST 3
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccGetSysClockFreq-DB-LLR-003]
    COMMENT The function sets PLLM to result of PLLCFGR of RCC bitwise AND RCC_PLLCFGR_PLLM 
    COMMENT when result of CFGR of RCC bitwise AND RCC_CFGR_SWS is RCC_SYSCLKSOURCE_STATUS_PLLCLK.
    COMMENT Equivalence Class 3
    COMMENT 
    COMMENT [hdulibstm32f7xxhalrcc-HalRccGetSysClockFreq-DB-LLR-005]
    COMMENT The function uses HSI as PLL clock source by setting PLLVCO to Result of (A multiplied B  )
    COMMENT right shift by return value of macro POSITION_VAL with parameter RCC_PLLCFGR_PLLN  
    COMMENT when 
    COMMENT i)result of CFGR of RCC bitwise and RCC_CFGR_SWS is RCC_SYSCLKSOURCE_STATUS_PLLCLK
    COMMENT ii)return value of macro __HAL_RCC_GET_PLL_OSCSOURCE is equal to RCC_PLLCFGR_PLLSRC_HSI
    COMMENT where
    COMMENT A)HSE_VALUE divide by PLLM 
    COMMENT B)PLLCFGR of RCC bitwise AND RCC_PLLCFGR_PLLN
    COMMENT Equivalence Class 3,5
    COMMENT 
    COMMENT [hdulibstm32f7xxhalrcc-HalRccGetSysClockFreq-DB-LLR-006]
    COMMENT The function sets PLLP to (((A right shift by B)   plus ONE ) multiplied by TWO) and 
    COMMENT system clock frequency to PLLVCO/PLLP  when 
    COMMENT i)result of CFGR of RCC bitwise AND RCC_CFGR_SWS is RCC_SYSCLKSOURCE_STATUS_PLLCLK
    COMMENT where 
    COMMENT A :PLLCFGR of RCC bitwise AND RCC_PLLCFGR_PLLP
    COMMENT B :return value of macro POSITION_VAL with parameter RCC_PLLCFGR_PLLP.
    COMMENT Equivalence Class 3
    COMMENT </TD>
    
    ELEMENT
        
        COMMENT INPUT SECTION:

        	--specifies the RCC clock configuration register        
            VAR RCC->CFGR,						init = 0x00000008,		ev = init

			--specifies RCC PLL configuration register
            VAR RCC->PLLCFGR,			        init = 0x00000001,     	ev = init
        
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        COMMENT OUTPUT SECTION:

			--returns SYSCLK frequency            
            VAR ret_HalRccGetSysClockFreq,		init = 0x00000001,		ev = 0x00000000
        
        -- Stub calls:
        SIMUL
        
            --No Stubs

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccGetSysClockFreq = HalRccGetSysClockFreq();
        
    END ELEMENT

END TEST -- TEST 3
    
TEST 4
FAMILY nominal
    
    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccGetSysClockFreq-DB-LLR-004]
    COMMENT The function uses HSE as PLL clock source by setting PLLVCO to Result of (A multiplied B) 
    COMMENT right shift by return value of macro POSITION_VAL with parameter RCC_PLLCFGR_PLLN when 
    COMMENT i)result of CFGR of RCC bitwise and RCC_CFGR_SWS is RCC_SYSCLKSOURCE_STATUS_PLLCLK
    COMMENT ii)return value of macro __HAL_RCC_GET_PLL_OSCSOURCE is not equal to RCC_PLLCFGR_PLLSRC_HSI
    COMMENT where
    COMMENT A :HSE_VALUE divide by PLLM 
    COMMENT B :PLLCFGR of RCC bitwise AND RCC_PLLCFGR_PLLN
    COMMENT Equivalence Class 3,4
    COMMENT </TD>
    
    ELEMENT
        
        COMMENT INPUT SECTION:

        	--specifies the RCC clock configuration register        
        	VAR RCC->CFGR,						init = 0x00000008,				ev = init

			--specifies RCC PLL configuration register
        	VAR RCC->PLLCFGR,					init = 0x00437FFF,             	ev = init
        
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        COMMENT OUTPUT SECTION:
        
			--returns SYSCLK frequency            
        	VAR ret_HalRccGetSysClockFreq,		init = 0x00000000,				ev = 0x0182C47C
  
        -- Stub calls:
        SIMUL
        
            --No Stubs

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccGetSysClockFreq = HalRccGetSysClockFreq();
        
    END ELEMENT

    END TEST -- TEST 4
    
TEST 5
FAMILY nominal
    
    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccGetSysClockFreq-DB-LLR-007]
    COMMENT The function sets system clock frequency to HSI_VALUE when result of CFGR of RCC 
    COMMENT bitwise AND RCC_CFGR_SWS is other than RCC_SYSCLKSOURCE_STATUS_HSI, RCC_SYSCLKSOURCE_STATUS_HSE 
    COMMENT and RCC_SYSCLKSOURCE_STATUS_PLLCLK.
    COMMENT Equivalence Class 7
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccGetSysClockFreq-DB-LLR-008]
    COMMENT The function returns the value of system clock frequency.
    COMMENT Equivalence Class 8
    COMMENT </TD>
    
    ELEMENT
        
        COMMENT INPUT SECTION:

        	--specifies the RCC clock configuration register
        	VAR RCC->CFGR,                       	init = 0x0000000C,          	ev = init
        
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        COMMENT OUTPUT SECTION:
        
			--returns SYSCLK frequency            
        	VAR ret_HalRccGetSysClockFreq,          init = 0x00000000,           	ev = HSI_VALUE
  
        -- Stub calls:
        SIMUL
        
            --No Stubs

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccGetSysClockFreq = HalRccGetSysClockFreq();
        
    END ELEMENT

    END TEST -- TEST 5

END SERVICE -- HalRccGetSysClockFreq

--------------------------------------------------------------------------------
-- Declaration of the service HalRccClockConfig
--------------------------------------------------------------------------------
SERVICE HalRccClockConfig
SERVICE_TYPE extern

-- Tested service parameters declarations
#T_RCC_CLK_INIT rcc_clk_init_struct;
#T_UINT32 f_latency;

-- By function returned type declaration
#T_HAL_STATUS ret_HalRccClockConfig;

--Default Variables 
ENVIRONMENT ENV_HalRccClockConfig

	--specifies the parameters in the structure 'rcc_clk_init_struct'.
	STRUCTURE rcc_clk_init_struct,		init = { ClockType => 0x00000000, SYSCLKSource => 0x00000000, AHBCLKDivider => 0x00000000,
	&                                                    APB1CLKDivider => 0x00000000, APB2CLKDivider => 0x00000000},		
	&                                                                   ev = init

	--specifies the FLASH Latency
	VAR f_latency,						init = 0x0000000F,						ev = init

	--specifies FLASH access control register
	VAR FLASH->ACR,						init = 0x0000000F,						ev = init

END ENVIRONMENT -- ENV_HalRccClockConfig

USE ENV_HalRccClockConfig

TEST 1
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-001]
    COMMENT The function does the following when f_latency is greater than the result of 
    COMMENT ACR of FLASH bitwise AND with FLASH_ACR_LATENCY .
    COMMENT i)calls the macro __HAL_FLASH_SET_LATENCY with parameter f_latency to Program 
    COMMENT the new number of wait states to the LATENCY bits in the FLASH_ACR register.
    COMMENT Equivalence Class 9,31
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-002]
    COMMENT The function returns HAL_ERROR when 
    COMMENT a)f_latency is greater than the result of ACR of FLASH bitwise AND with FLASH_ACR_LATENCY and.
    COMMENT b)Result of ACR of FLASH bitwise AND with FLASH_ACR_LATENCY is not equal to f_latency.
    COMMENT Equivalence Class 9,12,38 
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
			
			--specifies the FLASH Latency
            VAR f_latency,						init = 0x0000010F,						ev = init
                        
        COMMENT INPUT/OUTPUT SECTION:
            
			--specifies FLASH access control register
            VAR FLASH->ACR,						init = 0x0000000F,						ev = 0x0000010F

        COMMENT OUTPUT SECTION:

			--returns the status
	     	VAR ret_HalRccClockConfig,		    init = HAL_OK,							ev = HAL_ERROR
                
        -- Stub calls:
        SIMUL
        
            --None

        END SIMUL
        
        -- Calling the unit under test
	#ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

	END ELEMENT

END TEST -- TEST 1

TEST 2
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-002]
    COMMENT The function does nothing when 
    COMMENT a)f_latency is greater than the result of ACR of FLASH bitwise AND with FLASH_ACR_LATENCY and.
    COMMENT b)Result of ACR of FLASH bitwise AND with FLASH_ACR_LATENCY is equal to f_latency.
    COMMENT Equivalence Class 9,11 
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the FLASH Latency
            VAR f_latency,                              init = 0x00000009,             	ev = init

        COMMENT INPUT/OUTPUT SECTION:
            
			--specifies FLASH access control register
            VAR FLASH->ACR,                             init = 0x00000008,            	ev = 0x00000009

        COMMENT OUTPUT SECTION:

			 --returns the status
             VAR ret_HalRccClockConfig,                 init = HAL_ERROR,       		ev = HAL_OK
                
        -- Stub calls:
        SIMUL
        		
        	--Configures the source of time base 
            STUB HALInitTick (TICK_INT_PRIORITY) HAL_OK

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT

END TEST -- TEST 2

TEST 3
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-001]
    COMMENT The function does nothing when f_latency is less than the result of 
    COMMENT ACR of FLASH bitwise AND with FLASH_ACR_LATENCY.
    COMMENT Equivalence Class 10
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-011]
    COMMENT The function Programs the new number of wait states to the LATENCY bits in the FLASH_ACR register by
    COMMENT calling the macro __HAL_FLASH_SET_LATENCY with parameter f_latency 
    COMMENT when f_latency is lesser than the result of ACR of FLASH bitwise AND FLASH_ACR_LATENCY.
    COMMENT Equivalence Class 10,31
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-012]
    COMMENT The function does nothing when 
	COMMENT a)f_latency is lesser than the result of ACR of FLASH bitwise AND FLASH_ACR_LATENCY.
	COMMENT b)Result of ACR of FLASH bitwise AND FLASH_ACR_LATENCY is equal to f_latency.
    COMMENT Equivalence Class 10,11 
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the FLASH Latency
            VAR f_latency,                              init = 0x00000008,             	ev = init

        COMMENT INPUT/OUTPUT SECTION:
            
			--specifies FLASH access control register
            VAR FLASH->ACR,                             init = 0x0000000F,            	ev = 0x00000008

        COMMENT OUTPUT SECTION:

			 --returns the status
             VAR ret_HalRccClockConfig,                 init = HAL_ERROR,      			ev = HAL_OK
                
        -- Stub calls:
        SIMUL
        		
        	--Configures the source of time base 
            STUB HALInitTick (TICK_INT_PRIORITY) HAL_OK

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT

END TEST -- TEST 3

TEST 4
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-001]
    COMMENT The function does nothing when f_latency is equal to the result of 
    COMMENT ACR of FLASH bitwise AND with FLASH_ACR_LATENCY.
    COMMENT Equivalence Class 11
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-011]
    COMMENT The function does nothing when f_latency is equal to the result of ACR of 
    COMMENT FLASH bitwise AND FLASH_ACR_LATENCY.
    COMMENT Equivalence Class 11
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the FLASH Latency
            VAR f_latency,                              init = 0x0000000F,             	ev = init

			--specifies FLASH access control register
            VAR FLASH->ACR,                             init = 0x0000000F,            	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
            
			--None

        COMMENT OUTPUT SECTION:

			 --returns the status
             VAR ret_HalRccClockConfig,                 init = HAL_ERROR,      			ev = HAL_OK
                
        -- Stub calls:
        SIMUL
        		
        	--Configures the source of time base 
            STUB HALInitTick (TICK_INT_PRIORITY) HAL_OK

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT

END TEST -- TEST 4

TEST 5
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-003]
    COMMENT The function modifies the register by calling the macro MODIFY_REG with parameters
    COMMENT CFGR of RCC, RCC_CFGR_HPRE and AHBCLKDivider of rcc_clk_init_struct when
    COMMENT Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_HCLK is equal to RCC_CLOCKTYPE_HCLK.
    COMMENT Equivalence Class 13,43
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = RCC_CLOCKTYPE_HCLK,						ev = init
			
			VAR rcc_clk_init_struct.AHBCLKDivider,		init = 0x00000001,								ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
            			
        	--specifies the RCC clock configuration register                
            VAR RCC->CFGR,                              init = 0x00000002,             					ev = 0x00000003
			
        COMMENT OUTPUT SECTION:

			--returns the status
             VAR ret_HalRccClockConfig,                 init = HAL_ERROR,       						ev = HAL_OK
                
        -- Stub calls:
        SIMUL
        
        	--Configures the source of time base 
            STUB HALInitTick (TICK_INT_PRIORITY) HAL_OK
            
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT

END TEST -- TEST 5

TEST 6
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-003]
    COMMENT The function does nothing when Result of ClockType of rcc_clk_init_struct bitwise AND 
    COMMENT RCC_CLOCKTYPE_HCLK is not equal to RCC_CLOCKTYPE_HCLK.
    COMMENT Equivalence Class 44
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-013]
    COMMENT The function does nothing When result of ClockType of rcc_clk_init_struct bitwise AND 
    COMMENT RCC_CLOCKTYPE_PCLK1 is not equal to RCC_CLOCKTYPE_PCLK1.
    COMMENT Equivalence Class 33
    COMMENT 
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-014]
    COMMENT The function does nothing When result of ClockType of rcc_clk_init_struct bitwise AND 
    COMMENT RCC_CLOCKTYPE_PCLK2 is not equal to RCC_CLOCKTYPE_PCLK2.
    COMMENT Equivalence Class 35
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = 0x00000010,						ev = init			
            
        COMMENT INPUT/OUTPUT SECTION:
            			
			--None
			
        COMMENT OUTPUT SECTION:

			--returns the status
             VAR ret_HalRccClockConfig,                 init = HAL_ERROR,       				ev = HAL_OK
                
        -- Stub calls:
        SIMUL
        
        	--Configures the source of time base 
            STUB HALInitTick (TICK_INT_PRIORITY) HAL_OK
            
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT

END TEST -- TEST 6

TEST 8
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-013]
    COMMENT The function modify the register by calling the macro MODIFY_REG 
    COMMENT with parameter CFGR of RCC, RCC_CFGR_PPRE1 and APB1CLKDivider of rcc_clk_init_struct.
    COMMENT When result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_PCLK1 is equal to RCC_CLOCKTYPE_PCLK1.
    COMMENT Equivalence Class 32,13
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
        
			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = 0x00000004,						ev = init	

			VAR rcc_clk_init_struct.APB1CLKDivider,		init = 0x00000001,						ev = init
			
                        
        COMMENT INPUT/OUTPUT SECTION:
        
            --specifies the RCC clock configuration register                
            VAR RCC->CFGR,                              init = 0x00000002,             			ev = 0x00000003
            
        COMMENT OUTPUT SECTION:

			 --returns the status
             VAR ret_HalRccClockConfig,                 init = HAL_ERROR,        				ev = HAL_OK
                
        -- Stub calls:
        SIMUL
        
        	--Configures the source of time base 
            STUB HALInitTick (TICK_INT_PRIORITY) HAL_OK

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT

END TEST -- TEST 8

TEST 9
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-014]
    COMMENT The function modifies the register by calling the macro MODIFY_REG 
    COMMENT with parameter CFGR of RCC, RCC_CFGR_PPRE2 and APB1CLKDivider of rcc_clk_init_struct.
    COMMENT When result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_PCLK2 is equal to RCC_CLOCKTYPE_PCLK2.
    COMMENT Equivalence Class 34,13
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = 0x00000008,								ev = init	

			VAR rcc_clk_init_struct.APB2CLKDivider,		init = 0x00000004,								ev = init

           
        COMMENT INPUT/OUTPUT SECTION:
            
        	--specifies the RCC clock configuration register                
            VAR RCC->CFGR,                            	init = 0x00000002,             					ev = 0x00000022

        COMMENT OUTPUT SECTION:

			 --returns the status
             VAR ret_HalRccClockConfig,                 init = HAL_ERROR,          						ev = HAL_OK
                
        -- Stub calls:
        SIMUL
        
        	--Configures the source of time base 
            STUB HALInitTick (TICK_INT_PRIORITY) HAL_OK

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT

END TEST -- TEST 9

TEST 10
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-004]
    COMMENT The function does nothing when 
    COMMENT a)Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is not equal to RCC_CLOCKTYPE_SYSCLK.
    COMMENT Equivalence Class 17
   	COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-015]
    COMMENT The function Updates the System_core_clock with result of return value of HalRccGetSysClockFreq 
    COMMENT right shifted by Ahb_presc_table of index X
    COMMENT Note X is result of CFGR of RCC  bitwise AND RCC_CFGR_HPRE is right shifted by 
    COMMENT return value of macro POSITION_VAL with parameter RCC_CFGR_HPRE.
    COMMENT Equivalence Class 36
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-016]
    COMMENT The function Configures the source of time base considering new system clocks settings 
    COMMENT by calling HALInitTick with parameter TICK_INT_PRIORITY.
    COMMENT Equivalence Class 37
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-017]
    COMMENT The function returns HAL_OK.
    COMMENT Equivalence Class 42
    COMMENT </TD>
    
    ELEMENT
        
        COMMENT INPUT SECTION:
        	--specifies the RCC clock configuration register                
            VAR RCC->CFGR,                            	init = 0x0000000C,             				ev = init
                       
			--Holds SYSCLKSource of 'rcc_clk_init_struct' value
			VAR rcc_clk_init_struct.SYSCLKSource,		init = 0x00000000,							ev = init
			
        COMMENT INPUT/OUTPUT SECTION:
            
			--None

        COMMENT OUTPUT SECTION:
            
			--Holds System core clock value
			VAR System_core_clock,                      init = 0x1FFFFFFF,            	 			ev = 0x00F42400
			
			--return the status
			VAR ret_HalRccClockConfig,                 	init = HAL_ERROR,          					ev = HAL_OK
                
        -- Stub calls:
        SIMUL
        
        	--Configures the source of time base 
            STUB HALInitTick (TICK_INT_PRIORITY) HAL_OK

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT

END TEST -- TEST 10

TEST 11
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-004]
    COMMENT The function returns HAL_ERROR when 
    COMMENT a)Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK.
    COMMENT b)SYSCLKSource of rcc_clk_init_struct is equal to RCC_SYSCLKSOURCE_HSE.
    COMMENT c)Return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSERDY is equal to RESET
    COMMENT Equivalence Class 38,16,18,20
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = 0x00000001,								ev = init	

			VAR rcc_clk_init_struct.SYSCLKSource,		init = 0x00000001,								ev = init
			
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            	init = 0x00000000,             					ev = init
           
        COMMENT INPUT/OUTPUT SECTION:
            
			--None

        COMMENT OUTPUT SECTION:
			
			--returns the status
			VAR ret_HalRccClockConfig,                 init = HAL_OK,          							ev = HAL_ERROR
                
        -- Stub calls:
        SIMUL
		
			--No stubs

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT
    
END TEST -- TEST 11

TEST 12
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-004]
    COMMENT The function does nothing when 
    COMMENT a)Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK.
    COMMENT b)SYSCLKSource of rcc_clk_init_struct is equal to RCC_SYSCLKSOURCE_HSE.
    COMMENT c)Return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSERDY is not equal to RESET
    COMMENT Equivalence Class 16,18,21
  	COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-007]
    COMMENT The function modifies the register by calling the macro __HAL_RCC_SYSCLK_CONFIG
    COMMENT with parameter SYSCLKSource of rcc_clk_init_struct and gets Start Tick count by calling
    COMMENT HALGetTick when Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK
    COMMENT Equivalence Class 16,45,46
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-008]
    COMMENT The function does the following when
    COMMENT a) Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK
    COMMENT b) SYSCLKSource of rcc_clk_init_struct is equal to RCC_SYSCLKSOURCE_HSE
    COMMENT when the macro __HAL_RCC_GET_SYSCLK_SOURCE returns value RCC_SYSCLKSOURCE_STATUS_HSE (0 iterations)
   	COMMENT the function does nothing
    COMMENT Equivalence Class 16,18,47
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = 0x00000001,								ev = init	

			VAR rcc_clk_init_struct.SYSCLKSource,		init = 0x00000001,								ev = init
			
        	--specifies the RCC clock control register  
            VAR RCC->CR,                            	init = 0x00020000,             					ev = init
           
           
        COMMENT INPUT/OUTPUT SECTION:
            
        	--specifies the RCC clock configuration register                
            VAR RCC->CFGR,                            	init = 0x00000004,             					ev = 0x00000005

        COMMENT OUTPUT SECTION:
			
			--returns the status
			VAR ret_HalRccClockConfig,                 	init = HAL_ERROR,          						ev = HAL_OK
                
        -- Stub calls:
        SIMUL
	
			--gets Start Tick
			STUB HALGetTick()10
			
        	--Configures the source of time base 
            STUB HALInitTick (TICK_INT_PRIORITY) HAL_OK

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT
    
END TEST -- TEST 12

TEST 13
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-008]
    COMMENT The function does following when
    COMMENT a) Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK
    COMMENT b) SYSCLKSource of rcc_clk_init_struct is equal to RCC_SYSCLKSOURCE_HSE
    COMMENT loops till the macro __HAL_RCC_GET_SYSCLK_SOURCE return value is other than RCC_SYSCLKSOURCE_STATUS_HSE(1 iteration)
    COMMENT and returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than CLOCKSWITCH_TIMEOUT_VALUE
    COMMENT Equivalence Class 16,18,48,49,50
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = 0x00000001,								ev = init	

			VAR rcc_clk_init_struct.SYSCLKSource,		init = 0x00000001,								ev = init
			
        	--specifies the RCC clock control register  
            VAR RCC->CR,                            	init = 0x00020000,             					ev = init           
           
        COMMENT INPUT/OUTPUT SECTION:
            
        	--specifies the RCC clock configuration register                
            VAR RCC->CFGR,                            	init = 0x00000002,             					ev = 0x00000001

        COMMENT OUTPUT SECTION:
			
			--returns the status
			VAR ret_HalRccClockConfig,                 init = HAL_OK,          							ev = HAL_TIMEOUT
                
        -- Stub calls:
        SIMUL
	
			--gets Start Tick
			STUB HALGetTick 1=>() 4000

			STUB HALGetTick 2=>() 10000

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT
    
END TEST -- TEST 13

TEST 14
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-008]
    COMMENT The function does following when
    COMMENT a) Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK
    COMMENT b) SYSCLKSource of rcc_clk_init_struct is equal to RCC_SYSCLKSOURCE_HSE
    COMMENT loops till the macro __HAL_RCC_GET_SYSCLK_SOURCE return value is other than RCC_SYSCLKSOURCE_STATUS_HSE(2 iterations)
    COMMENT and
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is equal to
    COMMENT CLOCKSWITCH_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than CLOCKSWITCH_TIMEOUT_VALUE
    COMMENT Equivalence Class 16,18,48,49,50,52
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = 0x00000001,								ev = init	

			VAR rcc_clk_init_struct.SYSCLKSource,		init = 0x00000001,								ev = init
			
        	--specifies the RCC clock control register  
            VAR RCC->CR,                            	init = 0x00020000,             					ev = init           
           
        COMMENT INPUT/OUTPUT SECTION:
            
        	--specifies the RCC clock configuration register                
            VAR RCC->CFGR,                            	init = 0x00000002,             					ev = 0x00000001

        COMMENT OUTPUT SECTION:
			
			--returns the status
			VAR ret_HalRccClockConfig,                 init = HAL_OK,          							ev = HAL_TIMEOUT
                
        -- Stub calls:
        SIMUL
	
			--gets Start Tick
			STUB HALGetTick 1=>() 4000

			STUB HALGetTick 2=>() 9000
			
			STUB HALGetTick 3=>() 10000

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT
    
END TEST -- TEST 14

TEST 15
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-008]
    COMMENT The function does following when
    COMMENT a) Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK
    COMMENT b) SYSCLKSource of rcc_clk_init_struct is equal to RCC_SYSCLKSOURCE_HSE
    COMMENT loops till the macro __HAL_RCC_GET_SYSCLK_SOURCE return value is other than RCC_SYSCLKSOURCE_STATUS_HSE(2 iterations)
    COMMENT and
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is less
    COMMENT than CLOCKSWITCH_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than CLOCKSWITCH_TIMEOUT_VALUE
    COMMENT Equivalence Class 16,18,48,49,50,51
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = 0x00000001,								ev = init	

			VAR rcc_clk_init_struct.SYSCLKSource,		init = 0x00000001,								ev = init
			
        	--specifies the RCC clock control register  
            VAR RCC->CR,                            	init = 0x00020000,             					ev = init           
           
        COMMENT INPUT/OUTPUT SECTION:
            
        	--specifies the RCC clock configuration register                
            VAR RCC->CFGR,                            	init = 0x00000002,             					ev = 0x00000001

        COMMENT OUTPUT SECTION:
			
			--returns the status
			VAR ret_HalRccClockConfig,                 init = HAL_OK,          							ev = HAL_TIMEOUT
                
        -- Stub calls:
        SIMUL
	
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 10000
			
			STUB HALGetTick 3=>() 19000

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT
    
END TEST -- TEST 15

TEST 16
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-005]
    COMMENT The function returns HAL_ERROR when 
    COMMENT a)Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK.
    COMMENT b)SYSCLKSource of rcc_clk_init_struct is equal to RCC_SYSCLKSOURCE_PLLCLK.
    COMMENT c)Return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_PLLRDY is equal to RESET
    COMMENT Equivalence Class 38,16,22,53
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = 0x00000001,								ev = init	

			VAR rcc_clk_init_struct.SYSCLKSource,		init = 0x00000002,								ev = init
			
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            	init = 0x00000000,             					ev = init
           
        COMMENT INPUT/OUTPUT SECTION:
            
			--None

        COMMENT OUTPUT SECTION:
			
			--returns the status
			VAR ret_HalRccClockConfig,                 init = HAL_OK,          							ev = HAL_ERROR
                
        -- Stub calls:
        SIMUL
		
			--No stubs

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT
    
END TEST -- TEST 16

TEST 17
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-005]
    COMMENT The function returns HAL_ERROR when 
    COMMENT a)Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK.
    COMMENT b)SYSCLKSource of rcc_clk_init_struct is equal to RCC_SYSCLKSOURCE_PLLCLK.
    COMMENT c)Return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_PLLRDY is not equal to RESET
    COMMENT Equivalence Class 38,16,22,54
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-009]
    COMMENT The function does the following when
    COMMENT a) Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK
    COMMENT b) SYSCLKSource of rcc_clk_init_struct is equal to RCC_SYSCLKSOURCE_PLLCLK
    COMMENT The function does nothing when the macro __HAL_RCC_GET_SYSCLK_SOURCE returns value
    COMMENT  RCC_SYSCLKSOURCE_STATUS_PLLCLK (0 iterations)
    COMMENT Equivalence Class 16,22,55
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = 0x00000001,							ev = init	

			VAR rcc_clk_init_struct.SYSCLKSource,		init = 0x00000002,							ev = init
			
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            	init = 0x02000000,             				ev = init
           
			--specifies RCC PLL configuration register
            VAR RCC->PLLCFGR,			        		init = 0x00000001,     						ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
            
        	--specifies the RCC clock configuration register                
            VAR RCC->CFGR,                            	init = 0x00000008,             				ev = 0x0000000A

        COMMENT OUTPUT SECTION:
			
			--returns the status
			VAR ret_HalRccClockConfig,                 init = HAL_ERROR,          					ev = HAL_OK
                
        -- Stub calls:
        SIMUL
		
			--gets Start Tick
			STUB HALGetTick()10
			
        	--Configures the source of time base 
            STUB HALInitTick (TICK_INT_PRIORITY) HAL_OK

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT
    
END TEST -- TEST 17

TEST 18
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-009]
    COMMENT The function does the following when
    COMMENT a) Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK
    COMMENT b) SYSCLKSource of rcc_clk_init_struct is equal to RCC_SYSCLKSOURCE_PLLCLK
    COMMENT loops till the macro __HAL_RCC_GET_SYSCLK_SOURCE return value is other than RCC_SYSCLKSOURCE_STATUS_PLLCLK(1 iteration)
    COMMENT and returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater than 
    COMMENT CLOCKSWITCH_TIMEOUT_VALUE
    COMMENT Equivalence Class 16,22,56,49,50
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = 0x00000001,								ev = init	

			VAR rcc_clk_init_struct.SYSCLKSource,		init = 0x00000002,								ev = init
			
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            	init = 0x02000000,             					ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
            
        	--specifies the RCC clock configuration register                
            VAR RCC->CFGR,                            	init = 0x00000003,             					ev = 0x00000002

        COMMENT OUTPUT SECTION:
			
			--returns the status
			VAR ret_HalRccClockConfig,                  init = HAL_OK,          						ev = HAL_TIMEOUT
                
        -- Stub calls:
        SIMUL
		
			--gets Start Tick
			STUB HALGetTick 1=>() 4000

			STUB HALGetTick 2=>() 10000

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT
    
END TEST -- TEST 18

TEST 19
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-009]
    COMMENT The function does the following when
    COMMENT a) Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK
    COMMENT b) SYSCLKSource of rcc_clk_init_struct is equal to RCC_SYSCLKSOURCE_PLLCLK
    COMMENT loops till the macro __HAL_RCC_GET_SYSCLK_SOURCE return value is other than RCC_SYSCLKSOURCE_STATUS_PLLCLK(2 iterations)
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is equal to
    COMMENT CLOCKSWITCH_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than CLOCKSWITCH_TIMEOUT_VALUE    
    COMMENT Equivalence Class 16,22,56,49,50,52
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = 0x00000001,								ev = init	

			VAR rcc_clk_init_struct.SYSCLKSource,		init = 0x00000002,								ev = init
			
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            	init = 0x02000000,             					ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
            
        	--specifies the RCC clock configuration register                
            VAR RCC->CFGR,                            	init = 0x00000003,             					ev = 0x00000002

        COMMENT OUTPUT SECTION:
			
			--returns the status
			VAR ret_HalRccClockConfig,                 	init = HAL_OK,          						ev = HAL_TIMEOUT
                
        -- Stub calls:
        SIMUL
			
			--gets Start Tick
			STUB HALGetTick 1=>() 4000

			STUB HALGetTick 2=>() 9000
			
			STUB HALGetTick 3=>() 10000

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT
    
END TEST -- TEST 19

TEST 20
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-009]
    COMMENT The function does the following when
    COMMENT a) Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK
    COMMENT b) SYSCLKSource of rcc_clk_init_struct is equal to RCC_SYSCLKSOURCE_PLLCLK
    COMMENT loops till the macro __HAL_RCC_GET_SYSCLK_SOURCE return value is other than RCC_SYSCLKSOURCE_STATUS_PLLCLK(2 iterations)
    COMMENT and
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is less
    COMMENT than CLOCKSWITCH_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than CLOCKSWITCH_TIMEOUT_VALUE
    COMMENT Equivalence Class 16,22,56,49,50,51
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = 0x00000001,								ev = init	

			VAR rcc_clk_init_struct.SYSCLKSource,		init = 0x00000002,								ev = init
			
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            	init = 0x02000000,             					ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
            
        	--specifies the RCC clock configuration register                
            VAR RCC->CFGR,                            	init = 0x00000003,             					ev = 0x00000002

        COMMENT OUTPUT SECTION:
			
			--returns the status
			VAR ret_HalRccClockConfig,                  init = HAL_OK,          						ev = HAL_TIMEOUT
                
        -- Stub calls:
        SIMUL
			
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 10000
			
			STUB HALGetTick 3=>() 19000

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT
    
END TEST -- TEST 20

TEST 21
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-006]
    COMMENT The function returns HAL_ERROR when 
    COMMENT a)Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK.
    COMMENT b)SYSCLKSource of rcc_clk_init_struct is other than RCC_SYSCLKSOURCE_HSE and RCC_SYSCLKSOURCE_PLLCLK
    COMMENT c)Return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSIRDY is equal to RESET
    COMMENT Equivalence Class 38,16,19,23,40
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = 0x00000001,								ev = init	

			VAR rcc_clk_init_struct.SYSCLKSource,		init = 0x00000003,								ev = init
			
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            	init = 0x00000000,             					ev = init
           
        COMMENT INPUT/OUTPUT SECTION:
            
			--None

        COMMENT OUTPUT SECTION:
			
			--returns the status
			VAR ret_HalRccClockConfig,                 init = HAL_OK,          							ev = HAL_ERROR
                
        -- Stub calls:
        SIMUL
		
			--No stubs

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT
    
END TEST -- TEST 21

TEST 22
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-006]
    COMMENT The function returns HAL_ERROR when 
    COMMENT a)Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK.
    COMMENT b)SYSCLKSource of rcc_clk_init_struct is other than RCC_SYSCLKSOURCE_HSE and RCC_SYSCLKSOURCE_PLLCLK
    COMMENT c)Return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSIRDY is not equal to RESET
    COMMENT Equivalence Class 38,16,19,23,41
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-010]
    COMMENT The function does the following when
    COMMENT a) Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK
    COMMENT b) SYSCLKSource of rcc_clk_init_struct is other than RCC_SYSCLKSOURCE_HSE and RCC_SYSCLKSOURCE_PLLCLK 
    COMMENT The function does nothing when the macro __HAL_RCC_GET_SYSCLK_SOURCE returns value
    COMMENT  RCC_SYSCLKSOURCE_STATUS_HSI (0 iterations)
    COMMENT Equivalence Class 16,19,23,57
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = 0x00000001,								ev = init	

			VAR rcc_clk_init_struct.SYSCLKSource,		init = 0x00000003,								ev = init
			
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            	init = 0x00000002,             					ev = init
           
        COMMENT INPUT/OUTPUT SECTION:
            
        	--specifies the RCC clock configuration register                
            VAR RCC->CFGR,                            	init = 0x00000000,             					ev = 0x00000003

        COMMENT OUTPUT SECTION:
			
			--returns the status
			VAR ret_HalRccClockConfig,                 init = HAL_ERROR,          						ev = HAL_OK
                
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick()10
			
        	--Configures the source of time base 
            STUB HALInitTick (TICK_INT_PRIORITY) HAL_OK
            
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT
    
END TEST -- TEST 22

TEST 23
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-010]
    COMMENT The function does the following when
    COMMENT a) Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK
    COMMENT b) SYSCLKSource of rcc_clk_init_struct is other than RCC_SYSCLKSOURCE_HSE and RCC_SYSCLKSOURCE_PLLCLK 
    COMMENT loops till the macro __HAL_RCC_GET_SYSCLK_SOURCE return value is other than RCC_SYSCLKSOURCE_STATUS_HSI 
    COMMENT (1 iteration)and returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start 
    COMMENT is greater than CLOCKSWITCH_TIMEOUT_VALUE.
    COMMENT Equivalence Class 16,19,23,58,49,50
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = 0x00000001,								ev = init	

			VAR rcc_clk_init_struct.SYSCLKSource,		init = 0x00000003,								ev = init
			
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            	init = 0x00000002,             					ev = init
           
        COMMENT INPUT/OUTPUT SECTION:
            
        	--specifies the RCC clock configuration register                
            VAR RCC->CFGR,                            	init = 0x00000009,             					ev = 0x0000000B

        COMMENT OUTPUT SECTION:
			
			--returns the status
			VAR ret_HalRccClockConfig,                 init = HAL_OK,          							ev = HAL_TIMEOUT
                
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 4000

			STUB HALGetTick 2=>() 10000
            
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT
    
END TEST -- TEST 23

TEST 24
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-010]
    COMMENT The function does the following when
    COMMENT a) Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK
    COMMENT b) SYSCLKSource of rcc_clk_init_struct is other than RCC_SYSCLKSOURCE_HSE and RCC_SYSCLKSOURCE_PLLCLK 
    COMMENT loops till the macro __HAL_RCC_GET_SYSCLK_SOURCE return value is other than RCC_SYSCLKSOURCE_STATUS_HSI (2 iterations)and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is equal to
    COMMENT CLOCKSWITCH_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than CLOCKSWITCH_TIMEOUT_VALUE       
    COMMENT Equivalence Class 16,19,23,58,49,50,52
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = 0x00000001,								ev = init	

			VAR rcc_clk_init_struct.SYSCLKSource,		init = 0x00000003,								ev = init
			
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            	init = 0x00000002,             					ev = init
           
        COMMENT INPUT/OUTPUT SECTION:
            
        	--specifies the RCC clock configuration register                
            VAR RCC->CFGR,                            	init = 0x00000009,             					ev = 0x0000000B

        COMMENT OUTPUT SECTION:
			
			--returns the status
			VAR ret_HalRccClockConfig,                 	init = HAL_OK,          						ev = HAL_TIMEOUT
                
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 4000

			STUB HALGetTick 2=>() 9000
			
			STUB HALGetTick 3=>() 10000
            
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT
    
END TEST -- TEST 24

TEST 25
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-010]
    COMMENT The function does the following when
    COMMENT a) Result of ClockType of rcc_clk_init_struct bitwise AND RCC_CLOCKTYPE_SYSCLK is equal to RCC_CLOCKTYPE_SYSCLK
    COMMENT b) SYSCLKSource of rcc_clk_init_struct is other than RCC_SYSCLKSOURCE_HSE and RCC_SYSCLKSOURCE_PLLCLK 
    COMMENT loops till the macro __HAL_RCC_GET_SYSCLK_SOURCE return value is other than RCC_SYSCLKSOURCE_STATUS_HSI (2 iterations)and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is less
    COMMENT than CLOCKSWITCH_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than CLOCKSWITCH_TIMEOUT_VALUE      
    COMMENT Equivalence Class 16,19,23,58,49,50,51
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_clk_init_struct'.
			VAR rcc_clk_init_struct.ClockType,			init = 0x00000001,								ev = init	

			VAR rcc_clk_init_struct.SYSCLKSource,		init = 0x00000003,								ev = init
			
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            	init = 0x00000002,             					ev = init
           
        COMMENT INPUT/OUTPUT SECTION:
            
        	--specifies the RCC clock configuration register                
            VAR RCC->CFGR,                            	init = 0x00000009,             					ev = 0x0000000B

        COMMENT OUTPUT SECTION:
			
			--returns the status
			VAR ret_HalRccClockConfig,                 	init = HAL_OK,          						ev = HAL_TIMEOUT
                
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 10000
			
			STUB HALGetTick 3=>() 19000
            
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccClockConfig = HalRccClockConfig(&rcc_clk_init_struct, f_latency);

    END ELEMENT
    
END TEST -- TEST 25

--TEST 26
--FAMILY robustness
--
--    COMMENT Test Description 
--    COMMENT <TD>
--    COMMENT [hdulibstm32f7xxhalrcc-HalRccClockConfig-DB-LLR-001]
--    COMMENT This test case is evaluated by passing Invalid Reference to rcc_clk_init_struct parameter
--    COMMENT Equivalence Class 137
--    COMMENT </TD>
--
--    ELEMENT
--        
--        COMMENT INPUT SECTION:
--
--			--None
--           
--        COMMENT INPUT/OUTPUT SECTION:
--            
--			--None
--			
--        COMMENT OUTPUT SECTION:
--			
--			--returns the status
--			VAR ret_HalRccClockConfig,                 init = HAL_OK,          					ev = HAL_TIMEOUT
--                
--        -- Stub calls:
--        SIMUL
--        
--			--No stubs	
--            
--        END SIMUL
--        
--        -- Calling the unit under test
--        #ret_HalRccClockConfig = HalRccClockConfig(NULL, f_latency);
--
--    END ELEMENT
--    
--END TEST -- TEST 26

END SERVICE -- HalRccClockConfig
--------------------------------------------------------------------------------
-- Declaration of the service HalRccOscConfig
--------------------------------------------------------------------------------
SERVICE HalRccOscConfig
SERVICE_TYPE extern

-- Tested service parameters declarations
#T_RCC_OSC_INIT rcc_osc_init_struct;

-- By function returned type declaration
#T_HAL_STATUS ret_HalRccOscConfig;

--Default Variables 
ENVIRONMENT ENV_HalRccOscConfig

	--specifies the parameters in the structure 'rcc_osc_init_struct'.
	STRUCTURE rcc_osc_init_struct,		init = { OscillatorType => 0x00000000, HSEState => 0x00000000, LSEState => 0x00000000,HSIState => 0x00000000,
	&HSICalibrationValue=>0x00000000,LSIState => 0x00000000,PLL=>{PLLState=>0x00000000,PLLSource=>0x00000000,PLLM=>0x00000000,
	&PLLN=>0x00000000,PLLP=>0x00000000,PLLQ=>0x00000000}},		
	&                                                                   ev = init

	VAR PTU_register,					init = 0x00000000,				ev = init
	
END ENVIRONMENT -- ENV_HalRccOscConfig

USE ENV_HalRccOscConfig

TEST 1
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-001]
	COMMENT The function 'HalRccOscConfig' returns HAL_ERROR when,
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns RCC_SYSCLKSOURCE_STATUS_HSE(MCDC TXX)      
	COMMENT c) __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSERDY returns other than RESET and 
	COMMENT HSEState of rcc_osc_init_struct is equal to RCC_HSE_OFF(MCDC TT).    
    COMMENT Equivalence Class 59,61,68,69
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000001,		ev = init	
			
			VAR rcc_osc_init_struct.HSEState,					init = RCC_HSE_OFF,		ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x00000004,		ev = init	
            
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00020000,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_OK,        	ev = HAL_ERROR
			
        -- Stub calls:
        SIMUL
        
            --No Stubs

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 1

TEST 2
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-001]
	COMMENT The function 'HalRccOscConfig' does nothing when,
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSE and __HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT RCC_SYSCLKSOURCE_STATUS_PLLCLK and Result of bitwise AND of PLLCFGR of RCC and RCC_PLLCFGR_PLLSRC is equal to 
	COMMENT RCC_PLLCFGR_PLLSRC_HSE(MCDC FTT)      
	COMMENT c) __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSERDY returns RESET(MCDC FX).    
    COMMENT Equivalence Class 59,62,63,65,67
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000001,		ev = init	
						
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x00000008,		ev = init	
            
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00000000,     	ev = init
            
        	--specifies RCC PLL configuration register            
            VAR RCC->PLLCFGR,                            		init = 0x00400000,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        	ev = HAL_OK

        -- Stub calls:
        SIMUL
        
            --No Stubs

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 2

TEST 3
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-001]
	COMMENT The function 'HalRccOscConfig' does nothing when,
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSE and __HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT RCC_SYSCLKSOURCE_STATUS_PLLCLK and Result of bitwise AND of PLLCFGR of RCC and RCC_PLLCFGR_PLLSRC is equal to 
	COMMENT RCC_PLLCFGR_PLLSRC_HSE(MCDC FTT)      
	COMMENT c) __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSERDY returns other than RESET and 
	COMMENT HSEState of rcc_osc_init_struct is not equal to RCC_HSE_OFF(MCDC TF) 
    COMMENT Equivalence Class 59,62,63,65,68,70
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000001,		ev = init	
						
			VAR rcc_osc_init_struct.HSEState,					init = RCC_HSE_ON,		ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x00000008,		ev = init	
            
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00020000,     	ev = init
            
        	--specifies RCC PLL configuration register
            VAR RCC->PLLCFGR,                            		init = 0x00400000,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,       ev = HAL_OK

        -- Stub calls:
        SIMUL
        
            --No Stubs

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 3

TEST 4
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-001]
	COMMENT The function 'HalRccOscConfig' does nothing when,
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSE and __HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT RCC_SYSCLKSOURCE_STATUS_PLLCLK and Result of bitwise AND of PLLCFGR of RCC and RCC_PLLCFGR_PLLSRC is not equal to 
	COMMENT RCC_PLLCFGR_PLLSRC_HSE(MCDC FTF)       
    COMMENT Equivalence Class 59,62,63,66
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-002]
    COMMENT The function sets the new HSE configuration by calling the macro __HAL_RCC_HSE_CONFIG with parameter
    COMMENT HSEState of rcc_osc_init_struct(RCC_HSE_ON) when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b) __HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSE and 
 	COMMENT __HAL_RCC_GET_SYSCLK_SOURCE returns RCC_SYSCLKSOURCE_STATUS_PLLCLK and      
	COMMENT Result of bitwise AND of PLLCFGR of RCC and RCC_PLLCFGR_PLLSRC is not equal to RCC_PLLCFGR_PLLSRC_HSE (MCDC FTF)  
    COMMENT Equivalence Class 59,62,63,66,71
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-003]
    COMMENT The function gets Start Tick by calling the function HALGetTick when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b) __HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSE and 
 	COMMENT __HAL_RCC_GET_SYSCLK_SOURCE returns RCC_SYSCLKSOURCE_STATUS_PLLCLK and      
	COMMENT Result of bitwise AND of PLLCFGR of RCC and RCC_PLLCFGR_PLLSRC is not equal to RCC_PLLCFGR_PLLSRC_HSE (MCDC FTF)  
	COMMENT c) HSEState of rcc_osc_init_struct is not equal to RCC_HSE_OFF.
    COMMENT Equivalence Class 59,62,63,66,70,73
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-004]
    COMMENT The function does the following when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b) __HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSE and 
 	COMMENT __HAL_RCC_GET_SYSCLK_SOURCE returns RCC_SYSCLKSOURCE_STATUS_PLLCLK and      
	COMMENT Result of bitwise AND of PLLCFGR of RCC and RCC_PLLCFGR_PLLSRC is not equal to RCC_PLLCFGR_PLLSRC_HSE (MCDC FTF)  
	COMMENT c) HSEState of rcc_osc_init_struct is not equal to RCC_HSE_OFF.
	COMMENT the function does nothing when return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSERDY 
	COMMENT is not equal to RESET(0 iteration)
    COMMENT Equivalence Class 59,62,63,66,70,68
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000001,		ev = init	
						
			VAR rcc_osc_init_struct.HSEState,					init = RCC_HSE_ON,		ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x00000008,		ev = init	
                       
        	--specifies RCC PLL configuration register            
            VAR RCC->PLLCFGR,                            		init = 0x00100000,     	ev = init
                        
        COMMENT INPUT/OUTPUT SECTION:
        
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00020000,     	ev = 0x00030000

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev =  HAL_OK

        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 4

TEST 5
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-001]
	COMMENT The function 'HalRccOscConfig' does nothing when,
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSE and __HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK(MCDC FTX)       
    COMMENT Equivalence Class 59,62,64
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-002]
    COMMENT The function sets the new HSE configuration by calling the macro __HAL_RCC_HSE_CONFIG with parameter
    COMMENT HSEState of rcc_osc_init_struct(RCC_HSE_BYPASS) when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSE and __HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK(MCDC FTX)  
    COMMENT Equivalence Class 59,62,64,71
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-004]
    COMMENT The function does the following when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSE and __HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK(MCDC FTX)  
	COMMENT c) HSEState of rcc_osc_init_struct is not equal to RCC_HSE_OFF.
	COMMENT loops till HSE is ready i.e.. loops till  return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSERDY 
	COMMENT is equal to RESET(1 iteration)and returns HAL_TIMEOUT when Result of return value of function HALGetTick
	COMMENT is subtracted with Start Tick is greater than HSE_TIMEOUT_VALUE.
    COMMENT Equivalence Class 59,62,64,70,67,75
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000001,		ev = init	
						
			VAR rcc_osc_init_struct.HSEState,					init = RCC_HSE_BYPASS,	ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x00000001,		ev = init	
                                               
        COMMENT INPUT/OUTPUT SECTION:
        
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00000000,     	ev = 0x00050000

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_OK,        ev = HAL_TIMEOUT

        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 10000

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 5

TEST 6
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-002]
    COMMENT The function sets the new HSE configuration by calling the macro __HAL_RCC_HSE_CONFIG with parameter
    COMMENT HSEState of rcc_osc_init_struct(other than RCC_HSE_BYPASS,RCC_HSE_ON,RCC_HSE_OFF) when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSE and __HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK(MCDC FTX)  
    COMMENT Equivalence Class 59,62,64,71
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-004]
    COMMENT The function does the following when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSE and __HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK(MCDC FTX)  
	COMMENT c) HSEState of rcc_osc_init_struct is not equal to RCC_HSE_OFF.
	COMMENT loops till HSE is ready i.e.. loops till  return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSERDY 
	COMMENT is equal to RESET(2 iterations) 
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is equal to
    COMMENT HSE_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than HSE_TIMEOUT_VALUE 	
    COMMENT Equivalence Class 59,62,64,70,67,76,75
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000001,		ev = init	
						
			VAR rcc_osc_init_struct.HSEState,					init = 0x00070000,		ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x00000001,		ev = init	
                                               
            
        COMMENT INPUT/OUTPUT SECTION:
        
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00010000,     	ev = 0x00000000

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_OK,        	ev = HAL_TIMEOUT

        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 4000

			STUB HALGetTick 2=>() 4100
			
			STUB HALGetTick 3=>() 10000

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 6

TEST 7
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-004]
    COMMENT The function does the following when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSE and __HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK(MCDC FTX) 
	COMMENT c) HSEState of rcc_osc_init_struct is not equal to RCC_HSE_OFF.
	COMMENT loops till HSE is ready i.e.. loops till  return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSERDY 
	COMMENT is equal to RESET(2 iterations) 
    COMMENT and
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is less
    COMMENT than CLOCKSWITCH_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than CLOCKSWITCH_TIMEOUT_VALUE
    COMMENT Equivalence Class 59,62,64,70,67,77,75
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000001,		ev = init	
						
			VAR rcc_osc_init_struct.HSEState,					init = RCC_HSE_ON,		ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x00000001,		ev = init	
                                                           
        COMMENT INPUT/OUTPUT SECTION:
        
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00000000,     	ev = 0x00010000

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_OK,        	ev = HAL_TIMEOUT

        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 3950

			STUB HALGetTick 2=>() 4000
			
			STUB HALGetTick 3=>() 10000

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 7

TEST 8
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-002]
    COMMENT The function sets the new HSE configuration by calling the macro __HAL_RCC_HSE_CONFIG with parameter
    COMMENT HSEState of rcc_osc_init_struct(RCC_HSE_OFF) when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSE and __HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK(MCDC FTX)  
    COMMENT Equivalence Class 59,62,64,71
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-005]
    COMMENT The function gets Start Tick by calling the function HALGetTick when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSE and __HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK(MCDC FTX)  
	COMMENT c) HSEState of rcc_osc_init_struct is equal to RCC_HSE_OFF.
    COMMENT Equivalence Class 59,62,64,69,73
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-006]
    COMMENT The function does the following when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSE and __HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK(MCDC FTX)  
	COMMENT c) HSEState of rcc_osc_init_struct is equal to RCC_HSE_OFF.
	COMMENT the function does nothing when return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSERDY 
	COMMENT is equal to RESET(0 iteration)
    COMMENT Equivalence Class 59,62,64,69,67
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000001,		ev = init	
						
			VAR rcc_osc_init_struct.HSEState,					init = RCC_HSE_OFF,		ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x00000001,		ev = init	

        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00000000,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
			--None

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev =  HAL_OK

        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 8

TEST 9
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-006]
    COMMENT The function does the following when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSE and __HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK(MCDC FTX)  
	COMMENT c) HSEState of rcc_osc_init_struct is equal to RCC_HSE_OFF.
	COMMENT loops till HSE is ready i.e.. loops till  return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSERDY 
	COMMENT is not equal to RESET(1 iteration)and returns HAL_TIMEOUT when Result of return value of function HALGetTick
	COMMENT is subtracted with Start Tick is greater than HSE_TIMEOUT_VALUE.
    COMMENT Equivalence Class 59,62,64,69,67,75
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000001,		ev = init	
						
			VAR rcc_osc_init_struct.HSEState,					init = RCC_HSE_OFF,		ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x00000001,		ev = init	

        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00020000,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
			--None

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev =  HAL_TIMEOUT

        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 10000

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 9


TEST 10
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-006]
    COMMENT The function does the following when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSE and __HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK(MCDC FTX)  
	COMMENT c) HSEState of rcc_osc_init_struct is equal to RCC_HSE_OFF.
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is equal to
    COMMENT HSE_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than HSE_TIMEOUT_VALUE 	
    COMMENT Equivalence Class 59,62,64,69,67,76,75
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000001,		ev = init	
						
			VAR rcc_osc_init_struct.HSEState,					init = RCC_HSE_OFF,		ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x00000001,		ev = init	

        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00020000,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
			--None

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev =   HAL_TIMEOUT

        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 4000

			STUB HALGetTick 2=>() 4100
			
			STUB HALGetTick 3=>() 10000

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 10

TEST 11
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-006]
    COMMENT The function does the following when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is equal to RCC_OSCILLATORTYPE_HSE
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSE and __HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK(MCDC FTX)  
	COMMENT c) HSEState of rcc_osc_init_struct is equal to RCC_HSE_OFF.
    COMMENT and
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is less
    COMMENT than CLOCKSWITCH_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than CLOCKSWITCH_TIMEOUT_VALUE	
    COMMENT Equivalence Class 59,62,64,69,67,77,75
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000001,		ev = init	
						
			VAR rcc_osc_init_struct.HSEState,					init = RCC_HSE_OFF,		ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x00000001,		ev = init	

        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00020000,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
			--None

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev =   HAL_TIMEOUT

        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 3950

			STUB HALGetTick 2=>() 4000
			
			STUB HALGetTick 3=>() 10000

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 11

TEST 12
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-007]
	COMMENT The function 'HalRccOscConfig' returns HAL_ERROR when,
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI is equal to RCC_OSCILLATORTYPE_HSI
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns RCC_SYSCLKSOURCE_STATUS_HSI(MCDC TXX)      
	COMMENT c) __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSIRDY returns other than RESET and 
	COMMENT HSIState of rcc_osc_init_struct is other than RCC_HSI_ON(MCDC TT).    
    COMMENT Equivalence Class 78,80,90,85,72
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-001]
	COMMENT The function 'HalRccOscConfig' does nothing when,
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSE is not equal to RCC_OSCILLATORTYPE_HSE   
    COMMENT Equivalence Class 60
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000002,		ev = init	
			
			VAR rcc_osc_init_struct.HSIState,					init = RCC_HSI_OFF,		ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x00000000,		ev = init	
            
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00000002,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_OK,        	ev = HAL_ERROR
			
        -- Stub calls:
        SIMUL
        
            --No Stubs

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 12

TEST 13
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-007]
	COMMENT The function 'HalRccOscConfig' does nothing when,
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI is equal to RCC_OSCILLATORTYPE_HSI
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSI and__HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT RCC_SYSCLKSOURCE_STATUS_PLLCLK and Result of bitwise AND of PLLCFGR of RCC and RCC_PLLCFGR_PLLSRC is equal to 
	COMMENT RCC_PLLCFGR_PLLSRC_HSI(MCDC FTT)          
	COMMENT c) __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSIRDY returns RESET (MCDC FX).    
    COMMENT Equivalence Class 78,81,63,82,89
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000002,		ev = init	
			
			VAR rcc_osc_init_struct.HSICalibrationValue,		init = 0x00000001,		ev = init
						
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x00000008,		ev = init	
            
        	--specifies RCC PLL configuration register            
            VAR RCC->PLLCFGR,                            		init = 0x00000000,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
                    
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00000000,     	ev = 0x00000008

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,       ev = HAL_OK

        -- Stub calls:
        SIMUL
        
			--No stubs

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 13

TEST 14
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-007]
	COMMENT The function 'HalRccOscConfig' does nothing when,
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI is equal to RCC_OSCILLATORTYPE_HSI
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSI and__HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT RCC_SYSCLKSOURCE_STATUS_PLLCLK and Result of bitwise AND of PLLCFGR of RCC and RCC_PLLCFGR_PLLSRC is equal to 
	COMMENT RCC_PLLCFGR_PLLSRC_HSI(MCDC FTT)          
	COMMENT c) __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSIRDY returns other than RESET  and 
	COMMENT HSIState of rcc_osc_init_struct is RCC_HSI_ON(MCDC TF).    
    COMMENT Equivalence Class 78,81,63,82,90,84
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000002,		ev = init	
			
			VAR rcc_osc_init_struct.HSIState,					init = RCC_HSI_ON,		ev = init
			
			VAR rcc_osc_init_struct.HSICalibrationValue,		init = 0x00000001,		ev = init
						
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x00000008,		ev = init	
            
        	--specifies RCC PLL configuration register            
            VAR RCC->PLLCFGR,                            		init = 0x00000000,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
                    
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00000002,     	ev = 0x0000000A

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,       ev = HAL_OK

        -- Stub calls:
        SIMUL
        
			--No stubs

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 14

TEST 15
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-007]
	COMMENT The function 'HalRccOscConfig' does nothing when,
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI is equal to RCC_OSCILLATORTYPE_HSI
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSI and__HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT RCC_SYSCLKSOURCE_STATUS_PLLCLK and Result of bitwise AND of PLLCFGR of RCC and RCC_PLLCFGR_PLLSRC is not equal to 
	COMMENT RCC_PLLCFGR_PLLSRC_HSI(MCDC FTF)             
    COMMENT Equivalence Class 78,81,63,83
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-008]
	COMMENT The function Enables the Internal High Speed oscillator by calling the macro __HAL_RCC_HSI_ENABLE and 
	COMMENT Get Start Tick count by calling the function HALGetTick when 
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI is equal to RCC_OSCILLATORTYPE_HSI
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSI and__HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT RCC_SYSCLKSOURCE_STATUS_PLLCLK and Result of bitwise AND of PLLCFGR of RCC and RCC_PLLCFGR_PLLSRC is not equal to 
	COMMENT RCC_PLLCFGR_PLLSRC_HSI(MCDC FTF)
	COMMENT c) HSIState of rcc_osc_init_struct is not equal to RCC_HSI_OFF.
    COMMENT Equivalence Class 78,81,63,83,87,88,73
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-009]
	COMMENT The function does the following when 
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI is equal to RCC_OSCILLATORTYPE_HSI
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSI and__HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT RCC_SYSCLKSOURCE_STATUS_PLLCLK and Result of bitwise AND of PLLCFGR of RCC and RCC_PLLCFGR_PLLSRC is not equal to 
	COMMENT RCC_PLLCFGR_PLLSRC_HSI(MCDC FTF)
	COMMENT c) HSIState of rcc_osc_init_struct is not equal to RCC_HSI_OFF.
	COMMENT the function does nothing when return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSIRDY is 
	COMMENT not equal to RESET(0 iteration)
    COMMENT Equivalence Class 78,81,63,83,87,90
   	COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-010]
	COMMENT The function Adjusts the Internal High Speed oscillator (HSI) calibration value by calling the macro 
	COMMENT __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST with parameter HSICalibrationValue of rcc_osc_init_struct when
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI is equal to RCC_OSCILLATORTYPE_HSI
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSI and__HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT RCC_SYSCLKSOURCE_STATUS_PLLCLK and Result of bitwise AND of PLLCFGR of RCC and RCC_PLLCFGR_PLLSRC is not equal to 
	COMMENT RCC_PLLCFGR_PLLSRC_HSI(MCDC FTF)
	COMMENT c) HSIState of rcc_osc_init_struct is not equal to RCC_HSI_OFF.
    COMMENT Equivalence Class 78,81,63,83,87,94
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000002,		ev = init	
			
			VAR rcc_osc_init_struct.HSIState,					init = RCC_HSI_ON,		ev = init		

			VAR rcc_osc_init_struct.HSICalibrationValue,		init = 0x00000001,		ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x00000008,		ev = init	
            
        	--specifies RCC PLL configuration register            
            VAR RCC->PLLCFGR,                            		init = 0x00400000,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
                    
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00000002,     	ev = 0x0000000B

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,       ev = HAL_OK

        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 15

TEST 16
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-007]
	COMMENT The function 'HalRccOscConfig' does nothing when,
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI is equal to RCC_OSCILLATORTYPE_HSI
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSI and__HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK (MCDC FFX)             
    COMMENT Equivalence Class 78,81,64
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-009]
	COMMENT The function does the following when 
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI is equal to RCC_OSCILLATORTYPE_HSI
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSI and__HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK (MCDC FFX)
	COMMENT c) HSIState of rcc_osc_init_struct is not equal to RCC_HSI_OFF.
	COMMENT loops till HSI is ready i.e.. loops till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSIRDY is equal
	COMMENT to RESET and returns HAL_TIMEOUT when Result of return value of function HALGetTick is subtracted with Start
	COMMENT Tick is greater than HSI_TIMEOUT_VALUE(1 iteration)
    COMMENT Equivalence Class 78,81,63,83,87,89,74,91
   	COMMENT
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000002,		ev = init	
			
			VAR rcc_osc_init_struct.HSIState,					init = RCC_HSI_ON,		ev = init		

			VAR rcc_osc_init_struct.HSICalibrationValue,		init = 0x00000001,		ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x0000000C,		ev = init	           
            
        COMMENT INPUT/OUTPUT SECTION:
                    
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00000000,     	ev = 0x00000001

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,       ev = HAL_TIMEOUT

        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			--gets Start Tick
			STUB HALGetTick 2=>() 9003
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 16

TEST 17
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-009]
	COMMENT The function does the following when 
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI is equal to RCC_OSCILLATORTYPE_HSI
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSI and__HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK (MCDC FFX)
	COMMENT c) HSIState of rcc_osc_init_struct is not equal to RCC_HSI_OFF.
	COMMENT loops till HSI is ready i.e.. loops till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSIRDY is equal
	COMMENT to RESET (2 iterations) 
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is equal to
    COMMENT HSI_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than HSI_TIMEOUT_VALUE 		
    COMMENT Equivalence Class 78,81,63,83,87,89,74,92,91
   	COMMENT
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000002,		ev = init	
			
			VAR rcc_osc_init_struct.HSIState,					init = RCC_HSI_ON,		ev = init		

			VAR rcc_osc_init_struct.HSICalibrationValue,		init = 0x00000001,		ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x0000000C,		ev = init	           
            
        COMMENT INPUT/OUTPUT SECTION:
                    
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00000000,     	ev = 0x00000001

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,       ev = HAL_TIMEOUT

        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 9002
			
			STUB HALGetTick 3=>() 9003
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 17

TEST 18
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-009]
	COMMENT The function does the following when 
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI is equal to RCC_OSCILLATORTYPE_HSI
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSI and__HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK (MCDC FFX)
	COMMENT c) HSIState of rcc_osc_init_struct is not equal to RCC_HSI_OFF.
	COMMENT loops till HSI is ready i.e.. loops till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSIRDY is equal
	COMMENT to RESET (2 iterations) 
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is lesser than
    COMMENT HSI_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than HSI_TIMEOUT_VALUE 		
    COMMENT Equivalence Class 78,81,63,83,87,89,74,93,91
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000002,		ev = init	
			
			VAR rcc_osc_init_struct.HSIState,					init = RCC_HSI_ON,		ev = init		

			VAR rcc_osc_init_struct.HSICalibrationValue,		init = 0x00000001,		ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x0000000C,		ev = init	           
            
        COMMENT INPUT/OUTPUT SECTION:
                    
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00000000,     	ev = 0x00000001

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,       ev = HAL_TIMEOUT

        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 9001
			
			STUB HALGetTick 3=>() 9010
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 18

TEST 19
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-011]
	COMMENT The function Disables the Internal High Speed oscillator by calling the macro __HAL_RCC_HSI_DISABLE and
	COMMENT gets Start Tick count by calling HALGetTick when 
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI is equal to RCC_OSCILLATORTYPE_HSI
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSI and__HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK (MCDC FFX)
	COMMENT c) HSIState of rcc_osc_init_struct is equal to RCC_HSI_OFF.
    COMMENT Equivalence Class 78,81,63,83,86,95,73
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-012]
	COMMENT The function does the following when 
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI is equal to RCC_OSCILLATORTYPE_HSI
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSI and__HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK (MCDC FFX)
	COMMENT c) HSIState of rcc_osc_init_struct is equal to RCC_HSI_OFF.
	COMMENT the function does nothing when return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSIRDY is equal
	COMMENT to RESET(0 iteration)	
    COMMENT Equivalence Class 78,81,63,83,86,89
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000002,		ev = init	
			
			VAR rcc_osc_init_struct.HSIState,					init = RCC_HSI_OFF,		ev = init		

			VAR rcc_osc_init_struct.HSICalibrationValue,		init = 0x00000001,		ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x0000000C,		ev = init	           
            
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00000000,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
                    
			--None

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,       ev = HAL_OK

        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 19

TEST 20
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-012]
	COMMENT The function does the following when 
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI is equal to RCC_OSCILLATORTYPE_HSI
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSI and__HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK (MCDC FFX)
	COMMENT c) HSIState of rcc_osc_init_struct is equal to RCC_HSI_OFF.
	COMMENT loops till HSI is disabled i.e.. loops till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSIRDY is not 
	COMMENT equal to RESET(1 iteration) and returns HAL_TIMEOUT when Result of return value of function HALGetTick is subtracted with 
	COMMENT Start Tick is greater than HSI_TIMEOUT_VALUE
    COMMENT Equivalence Class 78,81,63,83,86,90,74,91
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000002,		ev = init	
			
			VAR rcc_osc_init_struct.HSIState,					init = RCC_HSI_OFF,		ev = init		

			VAR rcc_osc_init_struct.HSICalibrationValue,		init = 0x00000001,		ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x0000000C,		ev = init	           
            
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00000002,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
                    
			--None

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,       ev = HAL_TIMEOUT

        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000
			
			STUB HALGetTick 2=>() 9010
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 20

TEST 21
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-012]
	COMMENT The function does the following when 
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI is equal to RCC_OSCILLATORTYPE_HSI
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSI and__HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK (MCDC FFX)
	COMMENT c) HSIState of rcc_osc_init_struct is equal to RCC_HSI_OFF.
	COMMENT loops till HSI is disabled i.e.. loops till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSIRDY is not 
	COMMENT equal to RESET(2 iteration) 
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is equal to
    COMMENT HSI_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than HSI_TIMEOUT_VALUE 		
    COMMENT Equivalence Class 78,81,63,83,86,90,74,92,91
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000002,		ev = init	
			
			VAR rcc_osc_init_struct.HSIState,					init = RCC_HSI_OFF,		ev = init		

			VAR rcc_osc_init_struct.HSICalibrationValue,		init = 0x00000001,		ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x0000000C,		ev = init	           
            
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00000002,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
                    
			--None

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,       ev = HAL_TIMEOUT

        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000
			
			STUB HALGetTick 2=>() 9000

			STUB HALGetTick 3=>() 9010
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 21

TEST 22
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-012]
	COMMENT The function does the following when 
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI is equal to RCC_OSCILLATORTYPE_HSI
	COMMENT b)__HAL_RCC_GET_SYSCLK_SOURCE returns other than RCC_SYSCLKSOURCE_STATUS_HSI and__HAL_RCC_GET_SYSCLK_SOURCE returns 
	COMMENT other than RCC_SYSCLKSOURCE_STATUS_PLLCLK (MCDC FFX)
	COMMENT c) HSIState of rcc_osc_init_struct is equal to RCC_HSI_OFF.
	COMMENT loops till HSI is disabled i.e.. loops till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_HSIRDY is not 
	COMMENT equal to RESET(2 iteration) 
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is lesser than
    COMMENT HSI_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than HSI_TIMEOUT_VALUE 		
    COMMENT Equivalence Class 78,81,63,83,86,90,74,92,91
    COMMENT </TD>

    ELEMENT        
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000002,		ev = init	
			
			VAR rcc_osc_init_struct.HSIState,					init = RCC_HSI_OFF,		ev = init		

			VAR rcc_osc_init_struct.HSICalibrationValue,		init = 0x00000001,		ev = init
			
        	--specifies the RCC clock configuration register 
			VAR RCC->CFGR,										init = 0x0000000C,		ev = init	           
            
        	--specifies the RCC clock control register                
            VAR RCC->CR,                            			init = 0x00000002,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
                    
			--None

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,       ev = HAL_TIMEOUT

        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000
			
			STUB HALGetTick 2=>() 9001

			STUB HALGetTick 3=>() 9010
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 22

TEST 23
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-007]
	COMMENT The function 'HalRccOscConfig' does nothing when,
	COMMENT a)Result of 'OscillatorType' of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_HSI is not equal to RCC_OSCILLATORTYPE_HSI
    COMMENT Equivalence Class 79
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-013]
   	COMMENT The function Enables the Internal Low Speed oscillator (LSI) by calling the macro __HAL_RCC_LSI_ENABLE  
   	COMMENT and get Start Tick count by calling the function HALGetTick when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSI is equal to RCC_OSCILLATORTYPE_LSI
	COMMENT b)LSIState of rcc_osc_init_struct is not equal to RCC_LSI_OFF.
    COMMENT Equivalence Class 96,99,100,73
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-014]
   	COMMENT The function does the following when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSI is equal to RCC_OSCILLATORTYPE_LSI
	COMMENT b)LSIState of rcc_osc_init_struct is not equal to RCC_LSI_OFF.
	COMMENT the function does nothing when return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSIRDY is not equal to RESET(0 iteration)
    COMMENT Equivalence Class 96,99,102
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000008,		ev = init	
			
			VAR rcc_osc_init_struct.LSIState,					init = RCC_LSI_ON,		ev = init
                        
        COMMENT INPUT/OUTPUT SECTION:
        
        	--specifies the RCC clock control & status register                
            VAR RCC->CSR,                            			init = 0x00000002,     	ev = 0x00000003

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        	ev = HAL_OK
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 23

TEST 24
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-014]
   	COMMENT The function does the following when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSI is equal to RCC_OSCILLATORTYPE_LSI
	COMMENT b)LSIState of rcc_osc_init_struct is not equal to RCC_LSI_OFF.
	COMMENT loops till LSI is ready i.e.. till the return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSIRDY is 
	COMMENT equal to RESET and returns HAL_TIMEOUT when Result of return value of HALGetTick subtracted with Tick Start 
	COMMENT is greater than LSI_TIMEOUT_VALUE.(1 iteration)
    COMMENT Equivalence Class 96,99,101,74,103
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000008,		ev = init	
			
			VAR rcc_osc_init_struct.LSIState,					init = RCC_LSI_ON,		ev = init           
            
        COMMENT INPUT/OUTPUT SECTION:
        
        	--specifies the RCC clock control & status register                
            VAR RCC->CSR,                            			init = 0x00000000,     	ev = 0x00000001

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_OK,        	ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000
			
			STUB HALGetTick 2=>() 9003
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 24

TEST 25
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-014]
   	COMMENT The function does the following when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSI is equal to RCC_OSCILLATORTYPE_LSI
	COMMENT b)LSIState of rcc_osc_init_struct is not equal to RCC_LSI_OFF.
	COMMENT loops till LSI is ready i.e.. till the return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSIRDY is 
	COMMENT equal to RESET (2 iterations) 
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is equal to
    COMMENT LSI_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than LSI_TIMEOUT_VALUE 	
    COMMENT Equivalence Class 96,99,101,74,103,104
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000008,		ev = init	
			
			VAR rcc_osc_init_struct.LSIState,					init = RCC_LSI_ON,		ev = init          
            
        COMMENT INPUT/OUTPUT SECTION:
        
        	--specifies the RCC clock control & status register                
            VAR RCC->CSR,                            			init = 0x00000000,     	ev = 0x00000001

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_OK,        	ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000
			
			STUB HALGetTick 2=>() 9002

			STUB HALGetTick 3=>() 9003		
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 25

TEST 26
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-014]
   	COMMENT The function does the following when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSI is equal to RCC_OSCILLATORTYPE_LSI
	COMMENT b)LSIState of rcc_osc_init_struct is not equal to RCC_LSI_OFF.
	COMMENT loops till LSI is ready i.e.. till the return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSIRDY is 
	COMMENT equal to RESET (2 iterations) 
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is lesser than
    COMMENT LSI_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than LSI_TIMEOUT_VALUE 	
    COMMENT Equivalence Class 96,99,101,74,105,103
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000008,		ev = init	
			
			VAR rcc_osc_init_struct.LSIState,					init = RCC_LSI_ON,		ev = init
                       
        COMMENT INPUT/OUTPUT SECTION:
        
        	--specifies the RCC clock control & status register                
            VAR RCC->CSR,                            			init = 0x00000000,     	ev = 0x00000001

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_OK,        	ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000
			
			STUB HALGetTick 2=>() 9001

			STUB HALGetTick 3=>() 9003		
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 26

TEST 27
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-015]
   	COMMENT The function Disables the Internal Low Speed oscillator (LSI) by calling the macro __HAL_RCC_LSI_DISABLE  
   	COMMENT and get Start Tick count by calling the function HALGetTick when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSI is equal to RCC_OSCILLATORTYPE_LSI
	COMMENT b)LSIState of rcc_osc_init_struct is equal to RCC_LSI_OFF.
    COMMENT Equivalence Class 96,98,106,73
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-016]
   	COMMENT The function does the following when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSI is equal to RCC_OSCILLATORTYPE_LSI
	COMMENT b)LSIState of rcc_osc_init_struct is equal to RCC_LSI_OFF.
	COMMENT the function does nothing when return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSIRDY is equal to RESET(0 iteration)
    COMMENT Equivalence Class 96,98,101
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000008,		ev = init	
			
			VAR rcc_osc_init_struct.LSIState,					init = RCC_LSI_OFF,		ev = init
                        
        	--specifies the RCC clock control & status register                
            VAR RCC->CSR,                            			init = 0x00000000,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
			--None

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_OK
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 27

TEST 28
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-016]
   	COMMENT The function does the following when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSI is equal to RCC_OSCILLATORTYPE_LSI
	COMMENT b)LSIState of rcc_osc_init_struct is equal to RCC_LSI_OFF.
	COMMENT loops till LSI is ready i.e.. till the return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSIRDY is 
	COMMENT not equal to RESET and returns HAL_TIMEOUT when Result of return value of HALGetTick subtracted with Tick Start 
	COMMENT is greater than LSI_TIMEOUT_VALUE.(1 iteration)
    COMMENT Equivalence Class 96,98,102,74,103
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000008,		ev = init	
			
			VAR rcc_osc_init_struct.LSIState,					init = RCC_LSI_OFF,		ev = init
            
        	--specifies the RCC clock control & status register                
            VAR RCC->CSR,                            			init = 0x00000002,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_OK,        	ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000
			
			STUB HALGetTick 2=>() 9003
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 28

TEST 29
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-016]
   	COMMENT The function does the following when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSI is equal to RCC_OSCILLATORTYPE_LSI
	COMMENT b)LSIState of rcc_osc_init_struct is equal to RCC_LSI_OFF.
	COMMENT loops till LSI is ready i.e.. till the return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSIRDY is 
	COMMENT equal to RESET (2 iterations) 
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is equal to
    COMMENT LSI_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than LSI_TIMEOUT_VALUE 	
    COMMENT Equivalence Class 96,98,101,74,103,104
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000008,		ev = init	
			
			VAR rcc_osc_init_struct.LSIState,					init = RCC_LSI_OFF,		ev = init
            
        	--specifies the RCC clock control & status register                
            VAR RCC->CSR,                            			init = 0x00000002,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_OK,        	ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000
			
			STUB HALGetTick 2=>() 9002

			STUB HALGetTick 3=>() 9003		
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 29

TEST 30
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-016]
   	COMMENT The function does the following when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSI is equal to RCC_OSCILLATORTYPE_LSI
	COMMENT b)LSIState of rcc_osc_init_struct is equal to RCC_LSI_OFF.
	COMMENT loops till LSI is ready i.e.. till the return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSIRDY is 
	COMMENT equal to RESET (2 iterations) 
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is lesser than
    COMMENT LSI_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than LSI_TIMEOUT_VALUE 	
    COMMENT Equivalence Class 96,98,102,74,105,103
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000008,		ev = init	
			
			VAR rcc_osc_init_struct.LSIState,					init = RCC_LSI_OFF,		ev = init
            
        	--specifies the RCC clock control & status register                
            VAR RCC->CSR,                            			init = 0x00000002,     	ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
            
        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_OK,        	ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000
			
			STUB HALGetTick 2=>() 9001

			STUB HALGetTick 3=>() 9003		
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 30

TEST 31
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-013]
	COMMENT The function 'HalRccOscConfig' does nothing when
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSI is not equal to RCC_OSCILLATORTYPE_LSI
    COMMENT Equivalence Class 97
    COMMENT 
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-017]
    COMMENT The function does the following 
	COMMENT i)Enables Power Clock by calling __HAL_RCC_PWR_CLK_ENABLE 
	COMMENT ii) Sets CR1 of PWR to PWR_CR1_DBP to enable write access to Backup domain
	COMMENT iii) Gets Start Tick count by calling HALGetTick
	COMMENT when Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE is equal to RCC_OSCILLATORTYPE_LSE.
    COMMENT Equivalence Class 109,73,107
    COMMENT 
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-018]
    COMMENT The function does the following when 
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE is equal to RCC_OSCILLATORTYPE_LSE
	COMMENT the function does nothing when result of CR1 of PWR bitwise and PWR_CR1_DBP is not equal to RESET(0 iteration)
    COMMENT Equivalence Class 107,111
    COMMENT 
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-019]
    COMMENT The function Sets the new LSE configuration by calling the macro __HAL_RCC_LSE_CONFIG with parameter LSEState of
    COMMENT rcc_osc_init_struct(RCC_LSE_ON) when Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE
    COMMENT is equal to RCC_OSCILLATORTYPE_LSE.
    COMMENT Equivalence Class 107,115
    COMMENT 
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-020]
    COMMENT The function gets the Get Start Tick by calling HALGetTick when
    COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE
    COMMENT is equal to RCC_OSCILLATORTYPE_LSE.
    COMMENT b)LSEState of rcc_osc_init_struct is not equal to RCC_LSE_OFF.
    COMMENT Equivalence Class 107,117,73
    COMMENT 
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-021]
    COMMENT The function does the following when
    COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE
    COMMENT is equal to RCC_OSCILLATORTYPE_LSE.
    COMMENT b)LSEState of rcc_osc_init_struct is not equal to RCC_LSE_OFF.
    COMMENT the function does nothing when return value of macro __HAL_RCC_GET_FLAG with parameter 
    COMMENT RCC_FLAG_LSERDY is not equal to RESET(0 iteration)
    COMMENT Equivalence Class 107,117,119
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000004,		ev = init	
			
			VAR rcc_osc_init_struct.LSEState,					init = RCC_LSE_ON,		ev = init
						                                    
        COMMENT INPUT/OUTPUT SECTION:
        
            --specifies the PWR power control register
            VAR PWR->CR1,                            			init = 0x00000000,     	ev = 0x00000100
            
            --specifies the RCC APB1 peripheral clock enable register
            VAR RCC->APB1ENR,									init = 0x00000000,		ev = 0x10000000
            
            --specifies the RCC backup domain control register
            VAR RCC->BDCR,										init = 0x00000002,		ev = 0x00000003

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_OK
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			--gets Start Tick
			STUB HALGetTick 2=>() 9000
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 31

TEST 32
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-019]
    COMMENT The function Sets the new LSE configuration by calling the macro __HAL_RCC_LSE_CONFIG with parameter LSEState of
    COMMENT rcc_osc_init_struct(RCC_LSE_BYPASS) when Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE
    COMMENT is equal to RCC_OSCILLATORTYPE_LSE.
    COMMENT Equivalence Class 107,115
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-021]
    COMMENT The function does the following when
    COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE
    COMMENT is equal to RCC_OSCILLATORTYPE_LSE.
    COMMENT b)LSEState of rcc_osc_init_struct is not equal to RCC_LSE_OFF.
    COMMENT loops till LSE is ready  i.e., till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSERDY
    COMMENT is equal to RESET and returns HAL_TIMEOUT when return value of HALGetTick subtraction with Tick Start is 
    COMMENT greater than RCC_LSE_TIMEOUT_VALUE(1 iteration)
    COMMENT Equivalence Class 107,117,118,74,120
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000004,			ev = init	
			
			VAR rcc_osc_init_struct.LSEState,					init = RCC_LSE_BYPASS,		ev = init
						                                    
        COMMENT INPUT/OUTPUT SECTION:
        
            --specifies the PWR power control register
            VAR PWR->CR1,                            			init = 0x00000000,     	ev = 0x00000100
                        
            --specifies the RCC backup domain control register
            VAR RCC->BDCR,										init = 0x00000000,		ev = 0x00000005

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,       ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 9000

			STUB HALGetTick 3=>() 15000
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 32

TEST 33
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-019]
    COMMENT The function Sets the new LSE configuration by calling the macro __HAL_RCC_LSE_CONFIG with parameter LSEState of
    COMMENT rcc_osc_init_struct(other than RCC_LSE_BYPASS,RCC_LSE_OFF,RCC_LSE_ON) when Result of OscillatorType of 
    COMMENT rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE is equal to RCC_OSCILLATORTYPE_LSE.
    COMMENT Equivalence Class 107,115
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-021]
    COMMENT The function does the following when
    COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE
    COMMENT is equal to RCC_OSCILLATORTYPE_LSE.
    COMMENT b)LSEState of rcc_osc_init_struct is not equal to RCC_LSE_OFF.
    COMMENT loops till LSE is ready  i.e., till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSERDY
    COMMENT is equal to RESET(2 iterations) and
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is equal to
    COMMENT RCC_LSE_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than RCC_LSE_TIMEOUT_VALUE 	    
    COMMENT Equivalence Class 107,117,118,74,121,120
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000004,		ev = init	
			
			VAR rcc_osc_init_struct.LSEState,					init = 0x0000000C,		ev = init
						                                    
        COMMENT INPUT/OUTPUT SECTION:
        
            --specifies the PWR power control register
            VAR PWR->CR1,                            			init = 0x00000000,     	ev = 0x00000100
                        
            --specifies the RCC backup domain control register
            VAR RCC->BDCR,										init = 0x0000000C,		ev = 0x00000008

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,       ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 9000

			STUB HALGetTick 3=>() 14000

			STUB HALGetTick 4=>() 15000			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 33

TEST 34
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-019]
    COMMENT The function Sets the new LSE configuration by calling the macro __HAL_RCC_LSE_CONFIG with parameter LSEState of
    COMMENT rcc_osc_init_struct(other than RCC_LSE_BYPASS,RCC_LSE_OFF,RCC_LSE_ON) when Result of OscillatorType of 
    COMMENT rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE is equal to RCC_OSCILLATORTYPE_LSE.
    COMMENT Equivalence Class 107,115
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-021]
    COMMENT The function does the following when
    COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE
    COMMENT is equal to RCC_OSCILLATORTYPE_LSE.
    COMMENT b)LSEState of rcc_osc_init_struct is not equal to RCC_LSE_OFF.
    COMMENT loops till LSE is ready  i.e., till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSERDY
    COMMENT is equal to RESET(2 iterations) and
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is lesser than
    COMMENT RCC_LSE_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than RCC_LSE_TIMEOUT_VALUE 	    
    COMMENT Equivalence Class 107,117,118,74,122,120
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000004,		ev = init	
			
			VAR rcc_osc_init_struct.LSEState,					init = 0x0000000C,		ev = init
						                                    
        COMMENT INPUT/OUTPUT SECTION:
        
            --specifies the PWR power control register
            VAR PWR->CR1,                            			init = 0x00000000,     	ev = 0x00000100
                        
            --specifies the RCC backup domain control register
            VAR RCC->BDCR,										init = 0x0000000C,		ev = 0x00000008

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,       ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 9000

			STUB HALGetTick 3=>() 13500

			STUB HALGetTick 4=>() 15000			
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 34

TEST 35
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-019]
    COMMENT The function Sets the new LSE configuration by calling the macro __HAL_RCC_LSE_CONFIG with parameter LSEState of
    COMMENT rcc_osc_init_struct(RCC_LSE_OFF) when Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE
    COMMENT is equal to RCC_OSCILLATORTYPE_LSE.
    COMMENT Equivalence Class 107,115
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-022]
    COMMENT The function gets the Get Start Tick by calling HALGetTick when
    COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE
    COMMENT is equal to RCC_OSCILLATORTYPE_LSE.
    COMMENT b)LSEState of rcc_osc_init_struct is equal to RCC_LSE_OFF.
    COMMENT Equivalence Class 107,116,73
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-023]
    COMMENT The function does the following when
    COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE
    COMMENT is equal to RCC_OSCILLATORTYPE_LSE.
    COMMENT b)LSEState of rcc_osc_init_struct is equal to RCC_LSE_OFF.
    COMMENT the function does nothing when return value of macro __HAL_RCC_GET_FLAG with parameter 
    COMMENT RCC_FLAG_LSERDY is equal to RESET(0 iteration)
    COMMENT Equivalence Class 107,116,118
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000004,		ev = init	
			
			VAR rcc_osc_init_struct.LSEState,					init = RCC_LSE_OFF,		ev = init
						                                    
        COMMENT INPUT/OUTPUT SECTION:
        
            --specifies the PWR power control register
            VAR PWR->CR1,                            			init = 0x00000000,     	ev = 0x00000100
            
            --specifies the RCC backup domain control register
            VAR RCC->BDCR,										init = 0x00000005,		ev = 0x00000000

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_OK
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			--gets Start Tick
			STUB HALGetTick 2=>() 9000
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 35

TEST 36
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-023]
    COMMENT The function does the following when
    COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE
    COMMENT is equal to RCC_OSCILLATORTYPE_LSE.
    COMMENT b)LSEState of rcc_osc_init_struct is equal to RCC_LSE_OFF.
    COMMENT loops till LSE is ready  i.e., till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSERDY
    COMMENT is equal to not RESET and returns HAL_TIMEOUT when return value of HALGetTick subtraction with Tick Start is 
    COMMENT greater than RCC_LSE_TIMEOUT_VALUE(1 iteration)
    COMMENT Equivalence Class 107,116,119,74,120
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000004,		ev = init	
			
			VAR rcc_osc_init_struct.LSEState,					init = RCC_LSE_OFF,		ev = init
						                                    
        COMMENT INPUT/OUTPUT SECTION:
        
            --specifies the PWR power control register
            VAR PWR->CR1,                            			init = 0x00000000,     	ev = 0x00000100
            
            --specifies the RCC backup domain control register
            VAR RCC->BDCR,										init = 0x00000007,		ev = 0x00000002

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 9000

			STUB HALGetTick 3=>() 15000
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 36


TEST 37
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-023]
    COMMENT The function does the following when
    COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE
    COMMENT is equal to RCC_OSCILLATORTYPE_LSE.
    COMMENT b)LSEState of rcc_osc_init_struct is equal to RCC_LSE_OFF.
    COMMENT loops till LSE is ready  i.e., till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSERDY
    COMMENT is equal to not RESET(2 iterations) and 
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is equal to
    COMMENT RCC_LSE_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than RCC_LSE_TIMEOUT_VALUE 	    
    COMMENT Equivalence Class 107,116,119,74,121,120
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000004,		ev = init	
			
			VAR rcc_osc_init_struct.LSEState,					init = RCC_LSE_OFF,		ev = init
						                                    
        COMMENT INPUT/OUTPUT SECTION:
        
            --specifies the PWR power control register
            VAR PWR->CR1,                            			init = 0x00000000,     	ev = 0x00000100
            
            --specifies the RCC backup domain control register
            VAR RCC->BDCR,										init = 0x00000007,		ev = 0x00000002

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 9000

			STUB HALGetTick 3=>() 14000

			STUB HALGetTick 4=>() 15000	
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 37

TEST 38
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-023]
    COMMENT The function does the following when
    COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE
    COMMENT is equal to RCC_OSCILLATORTYPE_LSE.
    COMMENT b)LSEState of rcc_osc_init_struct is equal to RCC_LSE_OFF.
    COMMENT loops till LSE is ready  i.e., till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSERDY
    COMMENT is equal to not RESET(2 iterations) and 
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is lesser than
    COMMENT RCC_LSE_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than RCC_LSE_TIMEOUT_VALUE 	    
    COMMENT Equivalence Class 107,116,119,74,122,120
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000004,		ev = init	
			
			VAR rcc_osc_init_struct.LSEState,					init = RCC_LSE_OFF,		ev = init
						                                    
        COMMENT INPUT/OUTPUT SECTION:
        
            --specifies the PWR power control register
            VAR PWR->CR1,                            			init = 0x00000000,     	ev = 0x00000100
            
            --specifies the RCC backup domain control register
            VAR RCC->BDCR,										init = 0x00000007,		ev = 0x00000002

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 9000

			STUB HALGetTick 3=>() 13500

			STUB HALGetTick 4=>() 15000			
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 38

TEST 39
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-018]
    COMMENT The function does the following when 
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE is equal to RCC_OSCILLATORTYPE_LSE
	COMMENT loops till Backup domain Write protection disable i.e., till the result of CR1 of PWR bitwise and PWR_CR1_DBP is equal to RESET 
	COMMENT and returns HAL_TIMEOUT(1 iteration) when return value of HALGetTick subtraction with Tick Start is greater than RCC_DBP_TIMEOUT_VALUE.
    COMMENT Equivalence Class 107,110,74,112
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000004,		ev = init	
			
			VAR rcc_osc_init_struct.LSEState,					init = RCC_LSE_ON,		ev = init
						                                    
			--to make result of CR1 of PWR bitwise and PWR_CR1_DBP is equal to RESET
			VAR PTU_register,									init = 1,				ev = init
	
        COMMENT INPUT/OUTPUT SECTION:
        
            --specifies the PWR power control register
            VAR PWR->CR1,                            			init = 0x000001FF,     	ev = 0x00000000

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000
			
			STUB HALGetTick 2=>() 9200
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 39

TEST 40
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-018]
    COMMENT The function does the following when 
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE is equal to RCC_OSCILLATORTYPE_LSE
	COMMENT loops till Backup domain Write protection disable i.e., till the result of CR1 of PWR bitwise and PWR_CR1_DBP is equal to RESET 
	COMMENT (2 iterations) 
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is equal to
    COMMENT RCC_DBP_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than RCC_DBP_TIMEOUT_VALUE 	    
    COMMENT Equivalence Class 107,110,74,113,112
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000004,		ev = init	
			
			VAR rcc_osc_init_struct.LSEState,					init = RCC_LSE_ON,		ev = init
						                                    
			--to make result of CR1 of PWR bitwise and PWR_CR1_DBP is equal to RESET
			VAR PTU_register,									init = 1,				ev = init
	
        COMMENT INPUT/OUTPUT SECTION:
        
            --specifies the PWR power control register
            VAR PWR->CR1,                            			init = 0x000001FF,     	ev = 0x00000000

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000
			
			STUB HALGetTick 2=>() 9100

			STUB HALGetTick 3=>() 9200
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 40

TEST 41
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-018]
    COMMENT The function does the following when 
	COMMENT a)Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE is equal to RCC_OSCILLATORTYPE_LSE
	COMMENT loops till Backup domain Write protection disable i.e., till the result of CR1 of PWR bitwise and PWR_CR1_DBP is equal to RESET 
	COMMENT (2 iterations) 
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is lesser than
    COMMENT RCC_DBP_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than RCC_DBP_TIMEOUT_VALUE 	    
    COMMENT Equivalence Class 107,110,74,114,112
    COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000004,		ev = init	
			
			VAR rcc_osc_init_struct.LSEState,					init = RCC_LSE_ON,		ev = init
						                                    
			--to make result of CR1 of PWR bitwise and PWR_CR1_DBP is equal to RESET
			VAR PTU_register,									init = 1,				ev = init
	
        COMMENT INPUT/OUTPUT SECTION:
        
            --specifies the PWR power control register
            VAR PWR->CR1,                            			init = 0x000001FF,     	ev = 0x00000000

        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 8950
			
			STUB HALGetTick 2=>() 9000

			STUB HALGetTick 3=>() 9200
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 41

TEST 42
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-017]
    COMMENT The function does nothing
	COMMENT when Result of OscillatorType of rcc_osc_init_struct bitwise AND with RCC_OSCILLATORTYPE_LSE is not equal to RCC_OSCILLATORTYPE_LSE.
    COMMENT Equivalence Class 108
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-024]
    COMMENT The function Disables the main PLL by calling the macro __HAL_RCC_PLL_DISABLE and get the Get Start Tick by calling HALGetTick when 
	COMMENT a)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_NONE
	COMMENT b)Return value of macro __HAL_RCC_GET_SYSCLK_SOURCE is not equal to RCC_SYSCLKSOURCE_STATUS_PLLCLK
	COMMENT c)PLLState of PLL of rcc_osc_init_struct is equal to RCC_PLL_ON.
    COMMENT Equivalence Class 124,64,125,134,73
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-025]
    COMMENT The function does the following when 
	COMMENT a)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_NONE
	COMMENT b)Return value of macro __HAL_RCC_GET_SYSCLK_SOURCE is not equal to RCC_SYSCLKSOURCE_STATUS_PLLCLK
	COMMENT c)PLLState of PLL of rcc_osc_init_struct is equal to RCC_PLL_ON.
	COMMENT loops till PLL is ready i.e., till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_PLLRDY
	COMMENT is not equal to RESET(1 iteration) and returns HAL_TIMEOUT when return value of HALGetTick subtraction with Tick Start
	COMMENT is greater than PLL_TIMEOUT_VALUE.
    COMMENT Equivalence Class 124,64,125,128,74,129
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.			
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000000,		ev = init	
			
			VAR rcc_osc_init_struct.PLL.PLLState,				init = RCC_PLL_ON,		ev = init
						                                    
 			--specifies the RCC clock configuration register
 			VAR RCC->CFGR,										init = 0x0000000C,		ev = init
            			
        COMMENT INPUT/OUTPUT SECTION:

 			--specifies the RCC clock control register        
            VAR RCC->CR,										init = 0x03000000,		ev = 0x02000000
            
        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 9003
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 42

TEST 43
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-025]
    COMMENT The function does the following when 
	COMMENT a)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_NONE
	COMMENT b)Return value of macro __HAL_RCC_GET_SYSCLK_SOURCE is not equal to RCC_SYSCLKSOURCE_STATUS_PLLCLK
	COMMENT c)PLLState of PLL of rcc_osc_init_struct is equal to RCC_PLL_ON.
	COMMENT loops till PLL is ready i.e., till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_PLLRDY
	COMMENT is not equal to RESET(2 iterations)
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is equal to
    COMMENT PLL_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than PLL_TIMEOUT_VALUE 	  	
    COMMENT Equivalence Class 124,64,125,128,74,130,129
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.			
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000000,		ev = init	
			
			VAR rcc_osc_init_struct.PLL.PLLState,				init = RCC_PLL_ON,		ev = init
						                                    
 			--specifies the RCC clock configuration register
            VAR RCC->CFGR,										init = 0x0000000C,		ev = init
            			
        COMMENT INPUT/OUTPUT SECTION:
        
 			--specifies the RCC clock control register 
            VAR RCC->CR,										init = 0x03000000,		ev = 0x02000000
            
        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 9002
			
			STUB HALGetTick 3=>() 9010
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 43

TEST 44
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-025]
    COMMENT The function does the following when 
	COMMENT a)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_NONE
	COMMENT b)Return value of macro __HAL_RCC_GET_SYSCLK_SOURCE is not equal to RCC_SYSCLKSOURCE_STATUS_PLLCLK
	COMMENT c)PLLState of PLL of rcc_osc_init_struct is equal to RCC_PLL_ON.
	COMMENT loops till PLL is ready i.e., till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_PLLRDY
	COMMENT is not equal to RESET(2 iterations)
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is lesser than
    COMMENT PLL_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than PLL_TIMEOUT_VALUE 	  	
    COMMENT Equivalence Class 124,64,125,128,74,131,129
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.			
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000000,		ev = init	
			
			VAR rcc_osc_init_struct.PLL.PLLState,				init = RCC_PLL_ON,		ev = init
						                                    
 			--specifies the RCC clock configuration register
            VAR RCC->CFGR,										init = 0x0000000C,		ev = init
            			
        COMMENT INPUT/OUTPUT SECTION:
        
 			--specifies the RCC clock control register 
            VAR RCC->CR,										init = 0x03000000,		ev = 0x02000000
            
        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 9001
			
			STUB HALGetTick 3=>() 9010
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 44

TEST 45
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-026]
    COMMENT The function Configures the main PLL clock source, multiplication and division factors by calling
    COMMENT the function __HAL_RCC_PLL_CONFIG with parameters PLLSource, PLLM, PLLN, PLLP and PLLQ of PLL of 
    COMMENT rcc_osc_init_struct when 
	COMMENT a)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_NONE
	COMMENT b)Return value of macro __HAL_RCC_GET_SYSCLK_SOURCE is not equal to RCC_SYSCLKSOURCE_STATUS_PLLCLK
	COMMENT c)PLLState of PLL of rcc_osc_init_struct is equal to RCC_PLL_ON.
    COMMENT Equivalence Class 124,64,125,132
    COMMENT   
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-027]
    COMMENT The function Enables the main PLL by calling the function __HAL_RCC_PLL_ENABLE and gets
    COMMENT Start Tick count by calling HALGetTick when 
	COMMENT a)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_NONE
	COMMENT b)Return value of macro __HAL_RCC_GET_SYSCLK_SOURCE is not equal to RCC_SYSCLKSOURCE_STATUS_PLLCLK
	COMMENT c)PLLState of PLL of rcc_osc_init_struct is equal to RCC_PLL_ON.
    COMMENT Equivalence Class 124,64,125,133,73
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-028]
    COMMENT The function does the following when 
	COMMENT a)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_NONE
	COMMENT b)Return value of macro __HAL_RCC_GET_SYSCLK_SOURCE is not equal to RCC_SYSCLKSOURCE_STATUS_PLLCLK
	COMMENT c)PLLState of PLL of rcc_osc_init_struct is equal to RCC_PLL_ON.
	COMMENT loops till PLL is ready i.e., till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_PLLRDY
	COMMENT is equal to RESET(1 iteration) and returns HAL_TIMEOUT when return value of HALGetTick subtraction with Tick Start is 
	COMMENT greater than PLL_TIMEOUT_VALUE.
    COMMENT Equivalence Class 124,64,125,127,74,129
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.			
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000000,		ev = init	
			
			VAR rcc_osc_init_struct.PLL.PLLState,				init = RCC_PLL_ON,		ev = init
			
			VAR rcc_osc_init_struct.PLL.PLLSource,				init = 0x000000FF,		ev = init	

			VAR rcc_osc_init_struct.PLL.PLLM,					init = 0x000000FF,		ev = init

			VAR rcc_osc_init_struct.PLL.PLLN,					init = 0x000000FF,		ev = init

			VAR rcc_osc_init_struct.PLL.PLLP,					init = 0x00000FFF,		ev = init

			VAR rcc_osc_init_struct.PLL.PLLQ,					init = 0x00001FFF,		ev = init
			
 			--specifies the RCC clock configuration register
            VAR RCC->CFGR,										init = 0x0000000C,		ev = init
            
 			--specifies the RCC clock control register 
            VAR RCC->CR,										init = 0x01000000,		ev = init
            			
        COMMENT INPUT/OUTPUT SECTION:

 			--specifies the RCC PLL configuration register        
            VAR RCC->PLLCFGR,									init = 0x00000000,		ev = (T_UINT32)0xFFFE3FFF
            
        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 9000
			
			STUB HALGetTick 3=>() 9003
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 45

TEST 46
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-028]
    COMMENT The function does the following when 
	COMMENT a)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_NONE
	COMMENT b)Return value of macro __HAL_RCC_GET_SYSCLK_SOURCE is not equal to RCC_SYSCLKSOURCE_STATUS_PLLCLK
	COMMENT c)PLLState of PLL of rcc_osc_init_struct is equal to RCC_PLL_ON.
	COMMENT loops till PLL is ready i.e., till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_PLLRDY
	COMMENT is equal to RESET(2 iterations) 
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is equal to
    COMMENT PLL_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than PLL_TIMEOUT_VALUE 	  		
    COMMENT Equivalence Class 124,64,125,127,74,130,129
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.			
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000000,		ev = init	
			
			VAR rcc_osc_init_struct.PLL.PLLState,				init = RCC_PLL_ON,		ev = init
						
 			--specifies the RCC clock configuration register
            VAR RCC->CFGR,										init = 0x0000000C,		ev = init
            
 			--specifies the RCC clock control register 
            VAR RCC->CR,										init = 0x01000000,		ev = init
            			
        COMMENT INPUT/OUTPUT SECTION:
			
			--None
            
        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 9000
			
			STUB HALGetTick 3=>() 9002

			STUB HALGetTick 4=>() 9003
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 46

TEST 47
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-028]
    COMMENT The function does the following when 
	COMMENT a)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_NONE
	COMMENT b)Return value of macro __HAL_RCC_GET_SYSCLK_SOURCE is not equal to RCC_SYSCLKSOURCE_STATUS_PLLCLK
	COMMENT c)PLLState of PLL of rcc_osc_init_struct is equal to RCC_PLL_ON.
	COMMENT loops till PLL is ready i.e., till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_PLLRDY
	COMMENT is equal to RESET(2 iterations) 
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is lesser than
    COMMENT PLL_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than PLL_TIMEOUT_VALUE 	  		
    COMMENT Equivalence Class 124,64,125,127,74,131,129
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.			
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000000,		ev = init	
			
			VAR rcc_osc_init_struct.PLL.PLLState,				init = RCC_PLL_ON,		ev = init
						
 			--specifies the RCC clock configuration register
            VAR RCC->CFGR,										init = 0x0000000C,		ev = init
            
 			--specifies the RCC clock control register 
            VAR RCC->CR,										init = 0x01000000,		ev = init
            			
        COMMENT INPUT/OUTPUT SECTION:
			
			--None
            
        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 9000
			
			STUB HALGetTick 3=>() 9001

			STUB HALGetTick 4=>() 9003
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 47

TEST 48
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-028]
    COMMENT The function does the following when 
	COMMENT a)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_NONE
	COMMENT b)Return value of macro __HAL_RCC_GET_SYSCLK_SOURCE is not equal to RCC_SYSCLKSOURCE_STATUS_PLLCLK
	COMMENT c)PLLState of PLL of rcc_osc_init_struct is equal to RCC_PLL_ON.
	COMMENT the function does nothing when return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_PLLRDY
	COMMENT is not equal to RESET(0 iterations) 		
    COMMENT Equivalence Class 124,64,125,128
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.			
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000000,		ev = init	
			
			VAR rcc_osc_init_struct.PLL.PLLState,				init = RCC_PLL_ON,		ev = init
						
 			--specifies the RCC clock configuration register
            VAR RCC->CFGR,										init = 0x0000000C,		ev = init
            
            --temporary variable to set return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_PLLRDY to RESET
            VAR PTU_register,									init = 999,				ev = init
                        			
        COMMENT INPUT/OUTPUT SECTION:
			
 			--specifies the RCC clock control register 
            VAR RCC->CR,										init = 0x01000000,		ev = 0x02000000
            
        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_OK
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 9000
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 48

TEST 49
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-029]
    COMMENT The function does Disables the main PLL by calling the function __HAL_RCC_PLL_DISABLE and get Start Tick count 
    COMMENT by calling HALGetTick when 
	COMMENT a)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_NONE
	COMMENT b)Return value of macro __HAL_RCC_GET_SYSCLK_SOURCE is not equal to RCC_SYSCLKSOURCE_STATUS_PLLCLK
	COMMENT c)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_ON.	
    COMMENT Equivalence Class 124,64,126,134,73
    COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-030]
    COMMENT The function does the following when 
	COMMENT a)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_NONE
	COMMENT b)Return value of macro __HAL_RCC_GET_SYSCLK_SOURCE is not equal to RCC_SYSCLKSOURCE_STATUS_PLLCLK
	COMMENT c)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_ON.	
	COMMENT the function does nothing when return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_PLLRDY is
	COMMENT equal to RESET(0 iterations)
    COMMENT Equivalence Class 124,64,126,127
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.			
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000000,		ev = init	
			
			VAR rcc_osc_init_struct.PLL.PLLState,				init = RCC_PLL_OFF,		ev = init
						
 			--specifies the RCC clock configuration register
            VAR RCC->CFGR,										init = 0x0000000C,		ev = init            
                        			
        COMMENT INPUT/OUTPUT SECTION:
			
 			--specifies the RCC clock control register 
            VAR RCC->CR,										init = 0x01000000,		ev = 0x00000000
            
        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_OK
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 49

TEST 50
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-030]
    COMMENT The function does the following when 
	COMMENT a)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_NONE
	COMMENT b)Return value of macro __HAL_RCC_GET_SYSCLK_SOURCE is not equal to RCC_SYSCLKSOURCE_STATUS_PLLCLK
	COMMENT c)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_ON.	
	COMMENT loops till PLL is ready i.e., till return value of macro __HAL_RCC_GET_FLAG with parameter 
	COMMENT RCC_FLAG_PLLRDY is not equal to RESET(1 iteration) and returns HAL_TIMEOUT when return value of HALGetTick 
	COMMENT subtraction with Tick Start is greater than PLL_TIMEOUT_VALUE.
    COMMENT Equivalence Class 124,64,126,128,74,129
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.			
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000000,		ev = init	
			
			VAR rcc_osc_init_struct.PLL.PLLState,				init = RCC_PLL_OFF,		ev = init
						
 			--specifies the RCC clock configuration register
            VAR RCC->CFGR,										init = 0x0000000C,		ev = init            
                        			
        COMMENT INPUT/OUTPUT SECTION:
			
 			--specifies the RCC clock control register 
            VAR RCC->CR,										init = 0x03000000,		ev = 0x02000000
            
        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 9004
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 50

TEST 51
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-030]
    COMMENT The function does the following when 
	COMMENT a)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_NONE
	COMMENT b)Return value of macro __HAL_RCC_GET_SYSCLK_SOURCE is not equal to RCC_SYSCLKSOURCE_STATUS_PLLCLK
	COMMENT c)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_ON.	
	COMMENT loops till PLL is ready i.e., till return value of macro __HAL_RCC_GET_FLAG with parameter 
	COMMENT RCC_FLAG_PLLRDY is not equal to RESET(2 iterations) 
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is equal to
    COMMENT PLL_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than PLL_TIMEOUT_VALUE 	  			
    COMMENT Equivalence Class 124,64,126,128,74,130,129
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.			
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000000,		ev = init	
			
			VAR rcc_osc_init_struct.PLL.PLLState,				init = RCC_PLL_OFF,		ev = init
						
 			--specifies the RCC clock configuration register
            VAR RCC->CFGR,										init = 0x0000000C,		ev = init            
                        			
        COMMENT INPUT/OUTPUT SECTION:
			
 			--specifies the RCC clock control register 
            VAR RCC->CR,										init = 0x03000000,		ev = 0x02000000
            
        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 9002

			STUB HALGetTick 3=>() 9004			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 51

TEST 52
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-030]
    COMMENT The function does the following when 
	COMMENT a)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_NONE
	COMMENT b)Return value of macro __HAL_RCC_GET_SYSCLK_SOURCE is not equal to RCC_SYSCLKSOURCE_STATUS_PLLCLK
	COMMENT c)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_ON.	
	COMMENT loops till PLL is ready i.e., till return value of macro __HAL_RCC_GET_FLAG with parameter 
	COMMENT RCC_FLAG_PLLRDY is not equal to RESET(2 iterations) 
    COMMENT and 
    COMMENT In 1st iteration:
    COMMENT The function does nothing when result of return value of HALGetTick subtracted with Tick Start is lesser than
    COMMENT PLL_TIMEOUT_VALUE
    COMMENT 
    COMMENT In 2nd iteration:
    COMMENT The function returns HAL_TIMEOUT when result of return value of HALGetTick subtracted with Tick Start is greater
    COMMENT than PLL_TIMEOUT_VALUE 	  			
    COMMENT Equivalence Class 124,64,126,128,74,131,129
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.			
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000000,		ev = init	
			
			VAR rcc_osc_init_struct.PLL.PLLState,				init = RCC_PLL_OFF,		ev = init
						
 			--specifies the RCC clock configuration register
            VAR RCC->CFGR,										init = 0x0000000C,		ev = init            
                        			
        COMMENT INPUT/OUTPUT SECTION:
			
 			--specifies the RCC clock control register 
            VAR RCC->CR,										init = 0x03000000,		ev = 0x02000000
            
        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init = HAL_ERROR,        ev = HAL_TIMEOUT
			
        -- Stub calls:
        SIMUL
        
			--gets Start Tick
			STUB HALGetTick 1=>() 9000

			STUB HALGetTick 2=>() 9001

			STUB HALGetTick 3=>() 9004			
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 52

TEST 53
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-031]
    COMMENT The function returns HAL_ERROR when 
	COMMENT a)PLLState of PLL of rcc_osc_init_struct is not equal to RCC_PLL_NONE
	COMMENT b)Return value of macro __HAL_RCC_GET_SYSCLK_SOURCE is equal to RCC_SYSCLKSOURCE_STATUS_PLLCLK
    COMMENT Equivalence Class 124,63
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.			
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000000,		ev = init	
			
			VAR rcc_osc_init_struct.PLL.PLLState,				init = RCC_PLL_OFF,		ev = init
						
 			--specifies the RCC clock configuration register
            VAR RCC->CFGR,										init = 0x00000008,		ev = init            
                        			
        COMMENT INPUT/OUTPUT SECTION:
			
			--None
			
        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init =HAL_TIMEOUT ,    	ev = HAL_ERROR
			
        -- Stub calls:
        SIMUL
        
			--No stubs
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 53

TEST 54
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-024]
    COMMENT The function does nothing when 
	COMMENT a)PLLState of PLL of rcc_osc_init_struct is equal to RCC_PLL_NONE
    COMMENT Equivalence Class 123
 	COMMENT
    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-032]
    COMMENT The function returns HAL_OK from thr function.
    COMMENT Equivalence Class 72
    COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:

			--specifies the parameters in the structure 'rcc_osc_init_struct'.			
			VAR rcc_osc_init_struct.OscillatorType,				init = 0x00000000,		ev = init	
			
			VAR rcc_osc_init_struct.PLL.PLLState,				init = RCC_PLL_NONE,	ev = init
     
                        			
        COMMENT INPUT/OUTPUT SECTION:
			
			--None
			
        COMMENT OUTPUT SECTION:
        
			--returns the status
			VAR ret_HalRccOscConfig,                 			init =HAL_TIMEOUT ,    	ev = HAL_OK
			
        -- Stub calls:
        SIMUL
        
			--No stubs
			
        END SIMUL
        
        -- Calling the unit under test
        #ret_HalRccOscConfig = HalRccOscConfig(&rcc_osc_init_struct);

    END ELEMENT

END TEST -- TEST 54

--TEST 55
--FAMILY robustness
--
--    COMMENT Test Description 
--    COMMENT <TD>
--    COMMENT [hdulibstm32f7xxhalrcc-HalRccOscConfig-DB-LLR-001]
--    COMMENT This test case is evaluated by passing Invalid Reference to rcc_osc_init_struct parameter
--    COMMENT Equivalence Class 136
--    COMMENT </TD>
--
--
--    ELEMENT
--        
--        COMMENT INPUT SECTION:
--        
--			--None
--                             			
--        COMMENT INPUT/OUTPUT SECTION:
--			
--			--None
--			
--        COMMENT OUTPUT SECTION:
--        
--			--returns the status
--			VAR ret_HalRccOscConfig,                 			init =HAL_TIMEOUT ,    	ev = HAL_OK
--			
--        -- Stub calls:
--        SIMUL
--        
--			--No stubs
--			
--        END SIMUL
--        
--        -- Calling the unit under test
--        #ret_HalRccOscConfig = HalRccOscConfig(NULL);
--
--    END ELEMENT
--
--END TEST -- TEST 55

END SERVICE -- HalRccOscConfig





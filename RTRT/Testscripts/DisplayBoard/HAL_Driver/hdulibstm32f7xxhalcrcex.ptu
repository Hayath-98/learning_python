HEADER hdulibstm32f7xxhalcrcex, Source Code Ver : 1.2, TestScript Ver : 1.3
--------------------------------------------------------------------------------
-- Author Name         : Priyanka N
--
-- File Name           : hdulibstm32f7xxhalcrcex.ptu
--
-- Test Creation Date  : 27.10.2017
--
-- Tested Functions    : HalCrcExPolynomialSet
--
-- Version History     :
--
--  TEST-VERSION        TEST-DATE        TESTER NAME        MODIFICATIONS
--  ------------        ---------        -----------        -------------
--  1.1                 27.10.2017       Priyanka N         Created the PTU file.
--  1.2                 11.11.2017       Priyanka N         Updated as per #PR100171
--  1.3                 11.11.2017       Priyanka N         Updated as per #PR100171
--------------------------------------------------------------------------------
--
-- TESTED FILE INCLUDE DIRECTIVES 
--
--------------------------------------------------------------------------------

#/*============================================================================*/
#/* Module specific includes                                                   */
#/*============================================================================*/

##include "hdulibstm32f7xxhal.h"
##include "hdulibstm32f7xxhalcrcex.h"
##include "hdulibstm32f7xxhalcrc.h"
##include "hdulibbasictypes.h"
##include "hdulibstm32f7xxhaldef.h"
##include "hdulibstm32f7xx.h"
##include "hdulibstm32f746xx.h"

--------------------------------------------------------------------------------
--
-- TESTED FILE DECLARATIONS 
--
--------------------------------------------------------------------------------

-- Declarations of the global variables of the tested file

   -- None
    
-- Declarations of the temporary variable
    
   -- None
    
--------------------------------------------------------------------------------

BEGIN

    COMMENT Author Name      : Priyanka N 
    COMMENT
    COMMENT File Name        : hdulibstm32f7xxhalcrcex.ptu
    COMMENT
    COMMENT Tested Functions : HalCrcExPolynomialSet
    COMMENT
    COMMENT Assumptions and Constraints
    COMMENT <AC>
    COMMENT Assumption(s):
    COMMENT None
    COMMENT 
    COMMENT Constraint(s):
    COMMENT 1. Below Test script related warnings are observed during Target Execution for volatile keyword member/variable:
    COMMENT warning #191-D: type qualifier is meaningless on cast type
    COMMENT </AC>
    
    COMMENT Equivalence Class Description
    COMMENT <ECD>
    COMMENT 
    COMMENT Valid Class(es)
    COMMENT
    COMMENT Class 1
    COMMENT In function "HalCrcExPolynomialSet", parameter 'pol' bitwise AND with ONE left shifted by Most Significant Bits is equal to zero.
    COMMENT
    COMMENT Class 2
    COMMENT In function "HalCrcExPolynomialSet", parameter 'pol' bitwise AND with ONE left shifted by Most Significant Bits is not equal to zero.
    COMMENT
    COMMENT Class 3
    COMMENT In function "HalCrcExPolynomialSet", most Significant Bits is greater than HAL_CRC_LENGTH_7B
    COMMENT
    COMMENT Class 4
    COMMENT In function "HalCrcExPolynomialSet", most Significant Bits is lesser than HAL_CRC_LENGTH_7B
    COMMENT 
    COMMENT Class 5
    COMMENT In function "HalCrcExPolynomialSet", most Significant Bits is greater than CRC_POLYLENGTH_8B
    COMMENT 
    COMMENT Class 6
    COMMENT In function "HalCrcExPolynomialSet", most Significant Bits lesser than CRC_POLYLENGTH_8B
    COMMENT
    COMMENT Class 7
    COMMENT In function "HalCrcExPolynomialSet", most Significant Bits is greater than CRC_POLYLENGTH_16B
    COMMENT
    COMMENT Class 8
    COMMENT In function "HalCrcExPolynomialSet", most Significant Bits is lesser than CRC_POLYLENGTH_16B
    COMMENT
    COMMENT Class 9
    COMMENT In function "HalCrcExPolynomialSet", poly_length is equal to CRC_POLYLENGTH_32B
    COMMENT 
    COMMENT Class 10
    COMMENT In function "HalCrcExPolynomialSet", poly_length is other than CRC_POLYLENGTH_7B, CRC_POLYLENGTH_8B, CRC_POLYLENGTH_16B 
    COMMENT  and CRC_POLYLENGTH_32B
    COMMENT
    COMMENT Class 12
    COMMENT In function "HalCrcExPolynomialSet", most Significant Bits is equal to HAL_CRC_LENGTH_7B
    COMMENT 
    COMMENT Class 13
    COMMENT In function "HalCrcExPolynomialSet", most Significant Bits is equal to CRC_POLYLENGTH_8B
    COMMENT
    COMMENT Class 14
    COMMENT In function "HalCrcExPolynomialSet", most Significant Bits is equal to CRC_POLYLENGTH_16B
    COMMENT
    COMMENT Class 15
    COMMENT In function "HalCrcExPolynomialSet", poly_length is equal to CRC_POLYLENGTH_7B
    COMMENT
    COMMENT Class 16
    COMMENT In function "HalCrcExPolynomialSet", poly_length is equal to CRC_POLYLENGTH_8B
    COMMENT
    COMMENT Class 17
    COMMENT In function "HalCrcExPolynomialSet", poly_length is equal to CRC_POLYLENGTH_16B
    COMMENT
    COMMENT Class 18    
    COMMENT In function "HalCrcExPolynomialSet", Most Significant Bits is greater than ZERO.
    COMMENT
    COMMENT Class 19 
    COMMENT In function "HalCrcExPolynomialSet", Most Significant Bits is lesser than or equal to ZERO.
    COMMENT
    COMMENT Invalid class(es)
    COMMENT Class 11
    COMMENT In function "HalCrcExPolynomialSet", parameter value of 'h_crc' is given as  NULL
    COMMENT
    COMMENT </ECD>

--------------------------------------------------------------------------------
--
-- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
--
--------------------------------------------------------------------------------

SIMUL

    DEFINE STUB hdulibstm32f7xxhalcrcex_c

      -- No stubs
               
    END DEFINE

ELSE_SIMUL

      -- No action defined as of now if the module is not simulated

END SIMUL

--------------------------------------------------------------------------------
--
-- ENVIRONMENTS DECLARATIONS
--
--------------------------------------------------------------------------------
--IF HOST

-- No special things that have to be done on the host to run the test.

--ELSE

-- No action defined for the target execution as of now

--END IF

--------------------------------------------------------------------------------
-- TESTED FILE ENVIRONNEMENT
--------------------------------------------------------------------------------

-- Environment of the file hdulibstm32f7xxhalcrcex.c

-- ENVIRONMENT ENV_hdulibstm32f7xxhalcrcex_c

    -- None

-- END ENVIRONMENT -- ENV_hdulibstm32f7xxhalcrcex_c

-- USE ENV_hdulibstm32f7xxhalcrcex_c

--------------------------------------------------------------------------------
--
-- SERVICES DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Declaration of the service HalCrcExPolynomialSet
--------------------------------------------------------------------------------
SERVICE HalCrcExPolynomialSet
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_CRC_HANDLE h_crc;
    #T_UINT32 pol;
    #T_UINT32 poly_length;

    -- Holds retrun value of function
    #T_HAL_STATUS ret_HalCrcExPolynomialSet;

    -- Temporary variable created to handle structure
    #T_CRC PTU_instance[32];

    ENVIRONMENT ENV_HalCrcExPolynomialSet

      -- Variable 'pol' is initialized before usage
      VAR pol,      init = 0,       ev = init
      
      -- Variable 'poly_length' is initialized before usage
      VAR poly_length,      init = 0,       ev = init
      
      -- Holds retrun value of function
      VAR ret_HalCrcExPolynomialSet,        init = HAL_ERROR,       ev = HAL_OK

    END ENVIRONMENT -- ENV_HalCrcExPolynomialSet
    
    USE ENV_HalCrcExPolynomialSet

TEST 1
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-001]
    COMMENT Function sets the Most Significant Bits to THIRTY_ONE.
    COMMENT Equivalence Class None
    COMMENT
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-002]
    COMMENT The function loops(for one time) and decrement Most Significant Bits by ONE  till result of AND operation 
    COMMENT of COND1 and COND2 is not equal to ZERO ,
    COMMENT where
    COMMENT COND1 : Parameter 'pol' bitwise AND with (ONE left shifted by Most Significant Bits) is equal to ZERO
    COMMENT COND2 :Most Significant Bits is greater than ZERO
    COMMENT Equivalence Class 1, 18
    COMMENT
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-003]
    COMMENT Function does the following when poly_length is equal to CRC_POLYLENGTH_7B.
    COMMENT 1.Return HAL_ERROR when Most Significant Bits(value is 30) is greater than HAL_CRC_LENGTH_7B.
    COMMENT Equivalence Class 15, 3
    COMMENT </TD>

    ELEMENT

        COMMENT INPUT SECTION:
    
            -- Holds the value of 'pol'
            VAR pol,                    	init = (T_UINT32)0x7FFFFFFF,            ev = init
        
            -- 'poly_length' holds the value of macro 'CRC_POLYLENGTH_7B'
            VAR poly_length,                	init = CRC_POLYLENGTH_7B,               ev = init
        
        COMMENT INPUT/OUTPUT SECTION:
    
            -- None
        
        COMMENT INPUT SECTION:
    
            -- Holds return value of function "HalCrcExPolynomialSet"
            VAR ret_HalCrcExPolynomialSet,      init = HAL_OK,                  ev = HAL_ERROR

        -- Stub calls :
        SIMUL
        
            -- None
    
        END SIMUL

    -- Calling the Unit Under Test :
    #ret_HalCrcExPolynomialSet = HalCrcExPolynomialSet(&h_crc, pol, poly_length);
        
    END ELEMENT

END TEST -- TEST 1

TEST 2
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-002]
    COMMENT Function loops(for 2 or more times) and decrement Most Significant Bits by ONE till result of AND operation 
    COMMENT of COND1 and COND2 is not equal to ZERO
    COMMENT where
    COMMENT COND1 : Parameter 'pol' bitwise AND with (ONE left shifted by Most Significant Bits) is equal to ZERO
    COMMENT COND2 :Most Significant Bits is greater than ZERO.
    COMMENT Equivalence Class 1, 18
    COMMENT
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-003]
    COMMENT Function does nothing when poly_length is equal to CRC_POLYLENGTH_7B and 
    COMMENT most Significant Bits(value is 6) is lesser than HAL_CRC_LENGTH_7B.
    COMMENT Equivalence Class 15, 4
    COMMENT 
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-008]
    COMMENT Function calls the macro WRITE_REG with POL of Instance of h_crc and pol as its parameters.
    COMMENT Equivalence Class None
    COMMENT 
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-009]
    COMMENT Function calls the macro MODIFY_REG with CR of Instance of h_crc , CRC_CR_POLYSIZE, poly_length as its parameters.
    COMMENT Equivalence Class None
    COMMENT
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-010]
    COMMENT Function returns HAL_OK.
    COMMENT Equivalence Class None
    COMMENT </TD>

    ELEMENT

        COMMENT INPUT SECTION:
       
            -- Holds the value of 'pol'
            VAR pol,                    	init = 0x7F,                    	ev = init
        
            -- 'poly_length' holds the value of macro 'CRC_POLYLENGTH_7B'
            VAR poly_length,                	init = CRC_POLYLENGTH_7B,           	ev = init
        
            -- Structure member 'Instance' initialized before the usage
            VAR h_crc.Instance,         	init = (T_CRC*)&PTU_instance[0],        ev = init
    
        COMMENT INPUT/OUTPUT SECTION:
    
            -- None
        
        COMMENT OUTPUT SECTION:
    
            -- Holds return value of function "HalCrcExPolynomialSet"
            VAR ret_HalCrcExPolynomialSet,      init = HAL_ERROR,               	ev = HAL_OK
            
            -- Value of 'pol' is set to 'PTU_instance[0].POL'
            VAR PTU_instance[0].POL,        	init =0x12,                 		ev = 0x7F
 
            -- Computed value of macro "MODIFY_REG" is set to 'PTU_instance[0].CR'
            VAR PTU_instance[0].CR,        	init =0x64,                 		ev =0x7C


        -- Stub calls :
        SIMUL
    
            -- None
        
        END SIMUL

    -- Calling the Unit Under Test :
    #ret_HalCrcExPolynomialSet = HalCrcExPolynomialSet(&h_crc, pol, poly_length);
        
    END ELEMENT

END TEST -- TEST 2

TEST 3
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-002]
    COMMENT Function loops for 0 times  since result of AND operation of COND1 and COND2 is equal to ZERO
    COMMENT where
    COMMENT COND1 : Parameter 'pol' bitwise AND with (ONE left shifted by Most Significant Bits) is not equal to zero
    COMMENT COND2 :Most Significant Bits is greater than ZERO.
    COMMENT Equivalence Class 2
    COMMENT
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-004]
    COMMENT Function does the following when poly_length is equal to CRC_POLYLENGTH_8B.
    COMMENT 1.Return HAL_ERROR when Most Significant Bits(value is 31) is greater than CRC_POLYLENGTH_8B.
    COMMENT Equivalence Class 16, 5
    COMMENT </TD>

    ELEMENT

        COMMENT INPUT SECTION:
    
            -- Holds the value of 'pol'
            VAR pol,                    	init = (T_UINT32)0x80000000,                	ev = init
        
            -- 'poly_length' holds the value of macro 'CRC_POLYLENGTH_8B'
            VAR poly_length,                	init = CRC_POLYLENGTH_8B,               	ev = init
    
        COMMENT INPUT/OUTPUT SECTION:
    
            -- None
        
        COMMENT OUTPUT SECTION:
    
            -- Holds return value of function "HalCrcExPolynomialSet"
            VAR ret_HalCrcExPolynomialSet,      init = HAL_OK,                      		ev = HAL_ERROR

        -- Stub calls :
        SIMUL
    
            -- None
    
        END SIMUL

    -- Calling the Unit Under Test :
    #ret_HalCrcExPolynomialSet = HalCrcExPolynomialSet(&h_crc, pol, poly_length);
        
    END ELEMENT

END TEST -- TEST 3

TEST 4
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-004]
    COMMENT Function does nothing when poly_length is equal to CRC_POLYLENGTH_8B and 
    COMMENT most Significant Bits(value is 7) is lesser than CRC_POLYLENGTH_8B.
    COMMENT Equivalence Class 16, 6
    COMMENT
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-010]
    COMMENT Function returns HAL_OK.
    COMMENT Equivalence Class None
    COMMENT </TD>

    ELEMENT

        COMMENT INPUT SECTION:
    
            -- Holds the value of 'pol'
            VAR pol,                    		init = 0xFF,                    	ev = init
        
            -- 'poly_length' holds the value of macro 'CRC_POLYLENGTH_8B'
            VAR poly_length,                		init = CRC_POLYLENGTH_8B,           	ev = init
        
            -- Structure member 'Instance' initialized before the usage
            VAR h_crc.Instance,         		init = (T_CRC*)&PTU_instance[0],        ev = init

        COMMENT INPUT/OUTPUT SECTION:
    
            -- None
    
        COMMENT OUTPUT SECTION:
    
            -- Holds return value of function "HalCrcExPolynomialSet"
            VAR ret_HalCrcExPolynomialSet,      	init = HAL_ERROR,               	ev = HAL_OK

            -- Value of 'pol' is set to 'PTU_instance[0].POL'
            VAR PTU_instance[0].POL,        		init =0x12,                 		ev = 0xFF
        
            -- Computed value of macro "MODIFY_REG" is set to 'PTU_instance[0].CR'
            VAR PTU_instance[0].CR,         		init =0x64,                 		ev =0x74

        -- Stub calls :
        SIMUL
    
            -- None
        
        END SIMUL

    -- Calling the Unit Under Test :
    #ret_HalCrcExPolynomialSet = HalCrcExPolynomialSet(&h_crc, pol, poly_length);
        
    END ELEMENT

END TEST -- TEST 4

TEST 5
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-005]
    COMMENT Function does the following when poly_length is equal to CRC_POLYLENGTH_16B.
    COMMENT 1.Return HAL_ERROR when Most Significant Bits(value is 30) is greater than CRC_POLYLENGTH_16B.
    COMMENT Equivalence Class 17, 7
    COMMENT </TD>

    ELEMENT

        COMMENT INPUT SECTION:
    
            -- Holds the value of 'pol'
            VAR pol,                    	init = (T_UINT32)0x7FFFFFFF,            	ev = init
        
            -- 'poly_length' holds the value of macro 'CRC_POLYLENGTH_16B'
            VAR poly_length,                	init = CRC_POLYLENGTH_16B,          		ev = init
        
        COMMENT INPUT/OUTPUT SECTION:
    
            -- None
  
        COMMENT OUTPUT SECTION:
  
            -- Holds return value of function "HalCrcExPolynomialSet"
            VAR ret_HalCrcExPolynomialSet,      init = HAL_OK,                 			ev = HAL_ERROR
        
        -- Stub calls :
        SIMUL
    
            -- None
        
    END SIMUL

    -- Calling the Unit Under Test :
    #ret_HalCrcExPolynomialSet = HalCrcExPolynomialSet(&h_crc, pol, poly_length);
        
    END ELEMENT

END TEST -- TEST 5

TEST 6
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-005]
    COMMENT Function does nothing when poly_length is equal to CRC_POLYLENGTH_16B and 
    COMMENT most Significant Bits(value is 15) is lesser than CRC_POLYLENGTH_16B.
    COMMENT Equivalence Class 17, 8
    COMMENT 
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-010]
    COMMENT Function returns HAL_OK.
    COMMENT Equivalence Class None
    COMMENT </TD>

    ELEMENT

        COMMENT INPUT SECTION:
    
            -- Holds the value of 'pol'
            VAR pol,                    		init = 0xFFFF,                  	ev = init
        
            -- 'poly_length' holds the value of macro 'CRC_POLYLENGTH_16B'
            VAR poly_length,                		init = CRC_POLYLENGTH_16B,          	ev = init
        
            -- Structure member 'Instance' initialized before the usage
            VAR h_crc.Instance,         		init = (T_CRC*)&PTU_instance[0],        ev = init
        
        COMMENT INPUT/OUTPUT SECTION:
    
            -- None
        
        COMMENT OUTPUT SECTION:
    
            -- Holds return value of function "HalCrcExPolynomialSet"
            VAR ret_HalCrcExPolynomialSet,      	init = HAL_ERROR,               	ev = HAL_OK
        
            -- Value of 'pol' is set to 'PTU_instance[0].POL'
            VAR PTU_instance[0].POL,        		init =0x12,                 		ev = 0xFFFF
        
            -- Computed value of macro "MODIFY_REG" is set to 'PTU_instance[0].CR'
            VAR PTU_instance[0].CR,         		init =0x64,                 		ev =0x6C

        -- Stub calls :
        SIMUL
    
            -- None
        
        END SIMUL

    -- Calling the Unit Under Test :
    #ret_HalCrcExPolynomialSet = HalCrcExPolynomialSet(&h_crc, pol, poly_length);
        
    END ELEMENT

END TEST -- TEST 6

TEST 7
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-006]
    COMMENT Function does nothing when poly_length is equal to CRC_POLYLENGTH_32B and 
    COMMENT Equivalence Class 9
    COMMENT
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-010]
    COMMENT Function returns HAL_OK.
    COMMENT Equivalence Class None
    COMMENT </TD>

    ELEMENT

        COMMENT INPUT SECTION:
    
            -- Holds the value of 'pol'
            VAR pol,                        	init = 0xFFFF,                  		ev = init
        
            -- 'poly_length' holds the value of macro 'CRC_POLYLENGTH_32B'
            VAR poly_length,                    init = CRC_POLYLENGTH_32B,          		ev = init
        
            -- Structure member 'Instance' initialized before the usage
            VAR h_crc.Instance,             	init = (T_CRC*)&PTU_instance[0],        	ev = init

        COMMENT INPUT/OUTPUT SECTION:
        
            -- None
        
        COMMENT OUTPUT SECTION:
    
            -- Holds return value of function "HalCrcExPolynomialSet"
            VAR ret_HalCrcExPolynomialSet,      init = HAL_ERROR,               		ev = HAL_OK
        
            -- Value of 'pol' is set to 'PTU_instance[0].POL'
            VAR PTU_instance[0].POL,            init =0x12,                 			ev = 0xFFFF
        
            -- Computed value of macro "MODIFY_REG" is set to 'PTU_instance[0].CR'
            VAR PTU_instance[0].CR,             init =0xFF,                 			ev =0xE7

    -- Stub calls :
        SIMUL
    
            -- None
        
        END SIMUL

    -- Calling the Unit Under Test :
    #ret_HalCrcExPolynomialSet = HalCrcExPolynomialSet(&h_crc, pol, poly_length);
        
    END ELEMENT

END TEST -- TEST 7

TEST 8
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-007]
    COMMENT Function does nothing when poly_length is other than CRC_POLYLENGTH_7B, CRC_POLYLENGTH_8B, CRC_POLYLENGTH_16B
    COMMENT and CRC_POLYLENGTH_32B
    COMMENT Equivalence Class 10
    COMMENT
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-010]
    COMMENT Function returns HAL_OK.
    COMMENT Equivalence Class None
    COMMENT </TD>

    ELEMENT

        COMMENT INPUT SECTION:
    
            -- Holds the value of 'pol'
            VAR pol,                    		init = 0xFFFF,                  	ev = init

            -- 'poly_length' holds the invalid value
            VAR poly_length,                		init = 10,                  		ev = init

            -- Structure member 'Instance' initialized before the usage
            VAR h_crc.Instance,         		init = (T_CRC*)&PTU_instance[0],        ev = init
        
        COMMENT INPUT/OUTPUT SECTION:
    
            -- None
        
        COMMENT OUTPUT SECTION:
    
            -- Holds return value of function "HalCrcExPolynomialSet"
            VAR ret_HalCrcExPolynomialSet,      	init = HAL_ERROR,               	ev = HAL_OK

            -- Value of 'pol' is set to 'PTU_instance[0].POL'
            VAR PTU_instance[0].POL,        		init =0x12,                 		ev = 0xFFFF

            -- Computed value of macro "MODIFY_REG" is set to 'PTU_instance[0].CR'
            VAR PTU_instance[0].CR,         		init =0xFF,                 		ev =0xEF

        -- Stub calls :
        SIMUL
    
            -- None
        
        END SIMUL

    -- Calling the Unit Under Test :
    #ret_HalCrcExPolynomialSet = HalCrcExPolynomialSet(&h_crc, pol, poly_length);
        
    END ELEMENT

END TEST -- TEST 8 

TEST 9
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-002]
    COMMENT The function loops and decrement Most Significant Bits by ONE  till result of AND operation of COND1 and COND2 is not equal to ZERO,
    COMMENT where
    COMMENT COND1 : Parameter 'pol' bitwise AND with (ONE left shifted by Most Significant Bits) is equal to ZERO
    COMMENT COND2 :Most Significant Bits is lesser than or equal to ZERO.
    COMMENT Equivalence Class 1, 19
    COMMENT </TD>

    ELEMENT

        COMMENT INPUT SECTION:
    
            -- Holds the value of 'pol'
            VAR pol,                        		init = 0x0,             	ev = init

            -- 'poly_length' holds the value of macro 'CRC_POLYLENGTH_7B'
            VAR poly_length,                    	init = CRC_POLYLENGTH_7B,       ev = init
        
    
        COMMENT INPUT/OUTPUT SECTION:
    
            -- None
    
        COMMENT OUTPUT SECTION:
    
            -- Holds return value of function "HalCrcExPolynomialSet"
            VAR ret_HalCrcExPolynomialSet,          	init = HAL_OK,              	ev = HAL_ERROR

        -- Stub calls :
        SIMUL
    
            -- None
        
        END SIMUL

    -- Calling the Unit Under Test :
    #ret_HalCrcExPolynomialSet = HalCrcExPolynomialSet(&h_crc, pol, poly_length);
        
    END ELEMENT

END TEST -- TEST 9

TEST 10
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-003]
    COMMENT Function does the following when poly_length is equal to HAL_CRC_LENGTH_7B.
    COMMENT 1.Return HAL_ERROR when Most Significant Bits(value is 7) is equal to HAL_CRC_LENGTH_7B.
    COMMENT Equivalence Class 12
    COMMENT </TD>

    ELEMENT

        COMMENT INPUT SECTION:
    
            -- Holds the value of 'pol'
            VAR pol,                    		init = 0xFF,            	ev = init

            -- 'poly_length' holds the value of macro 'CRC_POLYLENGTH_7B'
            VAR poly_length,                		init = CRC_POLYLENGTH_7B,       ev = init
        
    
        COMMENT INPUT/OUTPUT SECTION:
    
            -- None
    
        COMMENT OUTPUT SECTION:
    
            -- Holds return value of function "HalCrcExPolynomialSet"
            VAR ret_HalCrcExPolynomialSet,      	init = HAL_OK,              	ev = HAL_ERROR

        -- Stub calls :
        SIMUL
    
            -- None
        
        END SIMUL

    -- Calling the Unit Under Test :
    #ret_HalCrcExPolynomialSet = HalCrcExPolynomialSet(&h_crc, pol, poly_length);
        
    END ELEMENT

END TEST -- TEST 10

TEST 11
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-004]
    COMMENT Function does the following when poly_length is equal to CRC_POLYLENGTH_8B and 
    COMMENT most Significant Bits(value is 8) is equal to CRC_POLYLENGTH_8B.
    COMMENT Equivalence Class 13
    COMMENT </TD>

    ELEMENT

        COMMENT INPUT SECTION:
    
            -- Holds the value of 'pol'
            VAR pol,                    		init = 0x1FF,           	ev = init

            -- 'poly_length' holds the value of macro 'CRC_POLYLENGTH_7B'
            VAR poly_length,                		init = CRC_POLYLENGTH_8B,       ev = init
        
    
        COMMENT INPUT/OUTPUT SECTION:
    
            -- None
    
        COMMENT OUTPUT SECTION:
    
            -- Holds return value of function "HalCrcExPolynomialSet"
            VAR ret_HalCrcExPolynomialSet,      	init = HAL_OK,              	ev = HAL_ERROR

        -- Stub calls :
        SIMUL
    
            -- None
        
        END SIMUL

    -- Calling the Unit Under Test :
    #ret_HalCrcExPolynomialSet = HalCrcExPolynomialSet(&h_crc, pol, poly_length);
        
    END ELEMENT

END TEST -- TEST 11

TEST 12
FAMILY nominal

    COMMENT Test Description 
    COMMENT <TD>
    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-005]
    COMMENT Function does the following when poly_length is equal to CRC_POLYLENGTH_16B and 
    COMMENT most Significant Bits(value is 16) is equal to CRC_POLYLENGTH_16B.
    COMMENT Equivalence Class 14
    COMMENT </TD>

    ELEMENT

        COMMENT INPUT SECTION:
    
            -- Holds the value of 'pol'
            VAR pol,                    		init = 0x1FFFF,             	ev = init

            -- 'poly_length' holds the value of macro 'CRC_POLYLENGTH_7B'
            VAR poly_length,                		init = HAL_CRC_LENGTH_16B,      ev = init
        
    
        COMMENT INPUT/OUTPUT SECTION:
    
            -- None
    
        COMMENT OUTPUT SECTION:
    
            -- Holds return value of function "HalCrcExPolynomialSet"
            VAR ret_HalCrcExPolynomialSet,      	init = HAL_OK,              	ev = HAL_ERROR

        -- Stub calls :
        SIMUL
    
            -- None
        
        END SIMUL

    -- Calling the Unit Under Test :
    #ret_HalCrcExPolynomialSet = HalCrcExPolynomialSet(&h_crc, pol, poly_length);
        
    END ELEMENT

END TEST -- TEST 12

--TEST 13
--FAMILY robustness
--
--    COMMENT Test Description 
--    COMMENT <TD>
--    COMMENT [hdulibstm32f7xxhalcrcex-HalCrcExPolynomialSet-DB-LLR-010]
--    COMMENT Function does nothing, since NULL pointer to 'h_crc' is passed as parameter to function. 
--    COMMENT Equivalence Class 11
--    COMMENT </TD>
--
--    ELEMENT
--
--        COMMENT INPUT SECTION:
--       
--            -- Holds the value of 'pol'
--            VAR pol,                    		init = 0x7F,                    	ev = init
--        
--            -- 'poly_length' holds the value of macro 'CRC_POLYLENGTH_7B'
--            VAR poly_length,                		init = CRC_POLYLENGTH_7B,           	ev = init
--  
--        COMMENT INPUT/OUTPUT SECTION:
--    
--            -- None
--        
--        COMMENT OUTPUT SECTION:
--    
--            -- None
--
--
--        -- Stub calls :
--        SIMUL
--    
--            -- None
--        
--        END SIMUL
--
--    -- Calling the Unit Under Test :
--    #ret_HalCrcExPolynomialSet = HalCrcExPolynomialSet(NULL, pol, poly_length);
--        
--    END ELEMENT
--
--END TEST -- TEST 13

END SERVICE -- HalCrcExPolynomialSet


HEADER hdulibstm32f7xxhalmsp,Source Code Ver : 1.2, TestScript Ver : 1.3
--------------------------------------------------------------------------------
-- Author Name         : Santosh Mithari
--
-- File Name           : hdulibstm32f7xxhalmsp.ptu
--
-- Test Creation Date  : 31.10.2017
--
-- Tested Functions    : HalCRCMspInit
--                       HalLtdcMspInit
--                     
--
-- Version History     :
--
-- TEST-VERSION         TEST-DATE         TESTER NAME           MODIFICATIONS
-- ------------        -----------        -----------           -------------
--    1.1               31.10.2017        Santosh Mithari       Created the PTU file.
--    1.2               10.11.2017        Santosh Mithari       Updated as per #PR100171
--    1.3               14.11.2017        Santosh Mithari       Updated as per #PR100171
--------------------------------------------------------------------------------
--
-- TESTED FILE INCLUDE DIRECTIVES
--
--------------------------------------------------------------------------------

#/*============================================================================*/
#/* Module specific includes*/
#/*============================================================================*/

##include "hdulibstm32f7xxhalmsp.h"    
##include "hdulibstm32f7xxhalcrc.h"     
##include "hdulibstm32f7xxhalltdc.h"    
##include "hdulibstm32f7xxhal.h"        
##include "hdulibbasictypes.h"          
##include "hdulibstm32f7xxhalgpio.h"    
##include "hdulibstm32f7xxhalrcc.h"     
##include "hdulibstm32f7xxhalrccex.h"   
##include "hdulibstm32f7xxhalgpioex.h"  
##include "hdulibstm32hallegacy.h"  
--------------------------------------------------------------------------------
--
-- TESTED FILE DECLARATIONS 
--
--------------------------------------------------------------------------------

-- Declarations of the global variables of the tested file

	--None

-- Declarations of the temporary varaiable

	--temporary variables used for the function 'HalLtdcMspInit'
	#T_UINT8 PTU_index;

	--temporary variables used for the Structure 'gpio_init_structure'
	#T_GPIO_INIT PTU_GPIO_Init[10];

	
--------------------------------------------------------------------------------

BEGIN

	COMMENT Author Name         : Santosh Mithari 
    COMMENT
    COMMENT File Name           : hdulibstm32f7xxhalmsp.ptu
    COMMENT 
    COMMENT Tested Functions    : HalCRCMspInit
    COMMENT                       HalLtdcMspInit
    COMMENT
    COMMENT 
    COMMENT Assumptions and Constraints
    COMMENT <AC>
    COMMENT
    COMMENT Assumption(s): 
    COMMENT None
    COMMENT
    COMMENT Constraint(s):
    COMMENT 
    COMMENT 1.Header file 'hdulibstm32f746xx.h' is modified for testing purpose.
    COMMENT 
    COMMENT	/*Commented for testing*/
    COMMENT	/* #define RCC                 ((T_RCC *) RCC_BASE)*/
    COMMENT
    COMMENT	/*stubbing hardware address for the purpose of testing */
    COMMENT	
    COMMENT	T_RCC  PTU_RCC_BASE;
    COMMENT
    COMMENT	#define RCC                 ((T_RCC *) &PTU_RCC_BASE)
    COMMENT 
    COMMENT 2.In function 'HalLtdcMspInit',do-while loop present in the following  macros cannot be 
    COMMENT tested for 0 and 2 or more times and TRUE condition cannot be achieved.
    COMMENT		1. __HAL_RCC_LTDC_CLK_ENABLE 	
    COMMENT		2. __HAL_RCC_GPIOI_CLK_ENABLE
    COMMENT 	3. __HAL_RCC_GPIOJ_CLK_ENABLE
    COMMENT 	4. __HAL_RCC_GPIOK_CLK_ENABLE
    COMMENT 	5. __HAL_RCC_GPIOA_CLK_ENABLE 
    COMMENT 	6. __HAL_RCC_GPIOB_CLK_ENABLE
    COMMENT 
    COMMENT 3.In function 'HalCRCMspInit',do-while loop present in the following  macro cannot be 
    COMMENT tested for 0 and 2 or more times and TRUE condition cannot be achieved.
    COMMENT 	
    COMMENT  	1.__HAL_RCC_CRC_CLK_ENABLE
    COMMENT
    COMMENT 4 Following Test script related warnings are observed during Target Execution for volatile keyword member/variable:
	COMMENT warning #191-D: type qualifier is meaningless on cast type
	COMMENT
    COMMENT </AC>
    
    COMMENT Equivalence Class Description
    COMMENT <ECD>
    COMMENT Valid Class(es)
    COMMENT
    COMMENT Equivalence Class 1
    COMMENT The function 'HalCRCMspInit' calls the macro __HAL_RCC_CRC_CLK_ENABLE.
    COMMENT
    COMMENT Equivalence Class 2
    COMMENT The function 'HalLtdcMspInit' calls the macro __HAL_RCC_LTDC_CLK_ENABLE.
    COMMENT
    COMMENT Equivalence Class 3
    COMMENT The function 'HalLtdcMspInit'calls the following macros.
    COMMENT __HAL_RCC_GPIOI_CLK_ENABLE , __HAL_RCC_GPIOJ_CLK_ENABLE, __HAL_RCC_GPIOK_CLK_ENABLE.
    COMMENT __HAL_RCC_GPIOA_CLK_ENABLE , __HAL_RCC_GPIOB_CLK_ENABLE. 
    COMMENT
    COMMENT Equivalence Class 4
    COMMENT The function 'HalLtdcMspInit' calls the stub 'HalGpioInit'
    COMMENT
    COMMENT Invalid Class(es)
    COMMENT None
    COMMENT
    COMMENT </ECD>

--------------------------------------------------------------------------------
--
-- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
--
--------------------------------------------------------------------------------

SIMUL

	DEFINE STUB hdulibstm32f7xxhalmsp_c
    
		--The parameter GPIO_Init is made _no since the address of local variable is passed.
		#void HalGpioInit(T_GPIO _in *GPIOx, T_GPIO_INIT _no *GPIO_Init)
		#{
		#	PTU_GPIO_Init[PTU_index++] = *GPIO_Init;
		#}
	
	END DEFINE

ELSE_SIMUL

    --No action defined as of now if the module is not simulated

END SIMUL

--------------------------------------------------------------------------------
--
-- ENVIRONMENTS DECLARATIONS
--
--------------------------------------------------------------------------------
--IF HOST

--No special things that have to be done on the host to run the test.

--ELSE

--No action defined for the target execution as of now

--END IF
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- TESTED FILE ENVIRONNEMENT
--------------------------------------------------------------------------------
--Environment of the file hdulibstm32f7xxhalmsp.c
--ENVIRONMENT ENV_hdulibstm32f7xxhalmsp_c

--	--None

--END ENVIRONMENT -- ENV_hdulibstm32f7xxhalmsp_c

--USE ENV_hdulibstm32f7xxhalmsp_c
--------------------------------------------------------------------------------
--
-- SERVICES DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Declaration of the service HalCRCMspInit
--------------------------------------------------------------------------------
SERVICE HalCRCMspInit
SERVICE_TYPE extern

        
TEST 1
FAMILY nominal

	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdulibstm32f7xxhalmsp-HalCRCMspInit-DB-LLR-001]
	COMMENT The function enable CRC Peripheral clock by calling the macro '__HAL_RCC_CRC_CLK_ENABLE'.
	COMMENT (Nominal value is given to AHB1ENR register of RCC)
	COMMENT Equivalence Class 1.
    COMMENT </TD>

	ELEMENT
        
		COMMENT INPUT SECTION:
        		
        	--RCC AHB1 peripheral clock register	
			VAR RCC->AHB1ENR,	init = (T_UINT32)0x1000,			ev = init

        	
		COMMENT OUTPUT SECTION:
            	
			--None
        	
		COMMENT INPUT/OUTPUT SECTION:
        	
			--None
        		
		-- Stub Calls:
		SIMUL
		
			--No stubs
							
		END SIMUL
		            
	--Calling the Unit Under Test:
	#HalCRCMspInit();			    	
        
	END ELEMENT      
        
END TEST -- TEST 1

TEST 2
FAMILY nominal

	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdulibstm32f7xxhalmsp-HalCRCMspInit-DB-LLR-001]
	COMMENT The function enable CRC Peripheral clock by calling the macro '__HAL_RCC_CRC_CLK_ENABLE'.
	COMMENT (maximum value is given to AHB1ENR register of RCC)
	COMMENT Equivalence Class 1.
    COMMENT </TD>

	ELEMENT
        
		COMMENT INPUT SECTION:
        		
        	--RCC AHB1 peripheral clock register	
			VAR RCC->AHB1ENR,	init = (T_UINT32)0x7EF417FF,			ev = init

        	
		COMMENT OUTPUT SECTION:
            	
			--None
        	
		COMMENT INPUT/OUTPUT SECTION:
        	
			--None
        		
		-- Stub Calls:
		SIMUL
		
			--No stubs
							
		END SIMUL
		            
	--Calling the Unit Under Test:
	#HalCRCMspInit();			    	
        
	END ELEMENT      
        
END TEST -- TEST 2

TEST 3
FAMILY nominal

	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdulibstm32f7xxhalmsp-HalCRCMspInit-DB-LLR-001]
	COMMENT The function enable CRC Peripheral clock by calling the macro '__HAL_RCC_CRC_CLK_ENABLE'.
	COMMENT (Minimum value is given to AHB1ENR register of RCC)
	COMMENT Equivalence Class 1.
    COMMENT </TD>

	ELEMENT
        
		COMMENT INPUT SECTION:
        		
        	--RCC AHB1 peripheral clock register	
			VAR RCC->AHB1ENR,	init = (T_UINT32)0x00000000,			ev = (T_UINT32)0x1000

        	
		COMMENT OUTPUT SECTION:
            	
			--None
        	
		COMMENT INPUT/OUTPUT SECTION:
        	
			--None
        		
		-- Stub Calls:
		SIMUL
		
			--No stubs
							
		END SIMUL
		            
	--Calling the Unit Under Test:
	#HalCRCMspInit();			    	
        
	END ELEMENT      
        
END TEST -- TEST 3

TEST 4
FAMILY nominal

	COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdulibstm32f7xxhalmsp-HalCRCMspInit-DB-LLR-001]
	COMMENT The function enable CRC Peripheral clock by calling the macro '__HAL_RCC_CRC_CLK_ENABLE'.
	COMMENT (Reset value is given to AHB1ENR register of RCC)
	COMMENT Equivalence Class 1.
    COMMENT </TD>

	ELEMENT
        
		COMMENT INPUT SECTION:
        		
        	--RCC AHB1 peripheral clock register	
			VAR RCC->AHB1ENR,	init =(T_UINT32) 0x00100000,			ev = (T_UINT32)0x101000

        	
		COMMENT OUTPUT SECTION:
            	
			--None
        	
		COMMENT INPUT/OUTPUT SECTION:
        	
			--None
        		
		-- Stub Calls:
		SIMUL
		
			--No stubs
							
		END SIMUL
		            
	--Calling the Unit Under Test:
	#HalCRCMspInit();			    	
        
	END ELEMENT      
        
END TEST -- TEST 4

END SERVICE -- HalCRCMspInit

--------------------------------------------------------------------------------
-- Declaration of the service HalLtdcMspInit
--------------------------------------------------------------------------------
SERVICE HalLtdcMspInit
SERVICE_TYPE extern

TEST 1
FAMILY nominal
    
    COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdulibstm32f7xxhalmsp-HalLtdcMspInit-DB-LLR-001]
	COMMENT The function enable LTDC Clock by calling the macro '__HAL_RCC_LTDC_CLK_ENABLE'.
	COMMENT Equivalence Class 2.
	COMMENT
	COMMENT [hdulibstm32f7xxhalmsp-HalLtdcMspInit-DB-LLR-002]
	COMMENT The function enable GPIO Clock by calling the following macros 
	COMMENT 1. __HAL_RCC_GPIOI_CLK_ENABLE
	COMMENT 2. __HAL_RCC_GPIOJ_CLK_ENABLE
	COMMENT 3. __HAL_RCC_GPIOK_CLK_ENABLE
	COMMENT 4. __HAL_RCC_GPIOA_CLK_ENABLE 
	COMMENT 5. __HAL_RCC_GPIOB_CLK_ENABLE
	COMMENT Equivalence Class 3.
	COMMENT
	COMMENT [hdulibstm32f7xxhalmsp-HalLtdcMspInit-DB-LLR-003]
	COMMENT The function does the following to configure GPIOI.
	COMMENT 1. Set Pin of GPIO init structure to GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15.
	COMMENT 2. Set Pull of GPIO init structure to GPIO_NOPULL.
	COMMENT 3. Set Speed of GPIO init structure to GPIO_SPEED_FAST.
	COMMENT 4. Set Mode of GPIO init structure to GPIO_MODE_AF_PP.
	COMMENT 5. Set Alternate of GPIO init structure to GPIO_AF14_LTDC.
	COMMENT 6. Call the function HalGpioInit with parameter GPIOI and reference to GPIO init structure.
	COMMENT Equivalence Class 4.
	COMMENT
	COMMENT [hdulibstm32f7xxhalmsp-HalLtdcMspInit-DB-LLR-004]
	COMMENT The function does the following to configure GPIOJ.
	COMMENT	1. Set Pin of GPIO init structure to GPIO_PIN_All.
	COMMENT	2. Set Pull of GPIO init structure to GPIO_NOPULL.
	COMMENT	3. Set Speed of GPIO init structure to GPIO_SPEED_FAST.
	COMMENT	4. Set Mode of GPIO init structure to GPIO_MODE_AF_PP.
	COMMENT	5. Set Alternate of GPIO init structure to GPIO_AF14_LTDC.
	COMMENT	6. Call the function HalGpioInit with parameter GPIOJ and reference to GPIO init structure.
	COMMENT Equivalence Class 4.
	COMMENT 
	COMMENT [hdulibstm32f7xxhalmsp-HalLtdcMspInit-DB-LLR-005]
	COMMENT The function do the following to configure GPIOK.
	COMMENT 1. Set Pin of GPIO init structure to GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 
	COMMENT	|GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7.
	COMMENT 2. Set Pull of GPIO init structure to GPIO_NOPULL.
	COMMENT 3. Set Speed of GPIO init structure to GPIO_SPEED_FAST.
	COMMENT 4. Set Mode of GPIO init structure to GPIO_MODE_AF_PP.
	COMMENT 5. Set Alternate of GPIO init structure to GPIO_AF14_LTDC.
	COMMENT 6. Call the function HalGpioInit with parameter GPIOK and reference to GPIO init structure.
	COMMENT Equivalence Class 4.
    COMMENT </TD>

	ELEMENT
        
		COMMENT INPUT SECTION:

			--None

		COMMENT OUTPUT SECTION:
			
			-- temporary veriable for array index.
			VAR PTU_index,                            	init = 0,      	  			ev = 3
			
			--peripheral clock enable register
			VAR RCC->APB2ENR,							init =(T_UINT32) 0x1000,  	ev =(T_UINT32) 0x4001000
			
			--RCC AHB1 peripheral clock register
			VAR RCC->AHB1ENR,							init = (T_UINT32)0x1000,	ev =(T_UINT32) 0x1703

			-- GPIOI LTDC alternate configuration 
			VAR  PTU_GPIO_Init[0].Pin,      			init = 0,    				ev = GPIO_PIN_12 | GPIO_PIN_13 |
			&																 	 		 GPIO_PIN_14 | GPIO_PIN_15
				
			VAR  PTU_GPIO_Init[0].Pull,     			init = 0,    				ev = GPIO_NOPULL
			VAR  PTU_GPIO_Init[0].Speed,    			init = 0,    				ev = GPIO_SPEED_FAST 
			VAR  PTU_GPIO_Init[0].Mode,     			init = 0,    				ev = GPIO_MODE_AF_PP
			VAR  PTU_GPIO_Init[0].Alternate,		 	init = 0,    				ev = GPIO_AF14_LTDC

			--GPIOJ configuration
			VAR  PTU_GPIO_Init[1].Pin,       			init = 0,    				ev = GPIO_PIN_ALL
			VAR  PTU_GPIO_Init[1].Pull,      			init = 0,    				ev = GPIO_NOPULL
			VAR  PTU_GPIO_Init[1].Speed,     			init = 0,    				ev = GPIO_SPEED_FAST
			VAR  PTU_GPIO_Init[1].Mode,    				init = 0,    				ev = GPIO_MODE_AF_PP
			VAR  PTU_GPIO_Init[1].Alternate, 			init = 0,    				ev = GPIO_AF14_LTDC

			-- GPIOK configuration
			VAR  PTU_GPIO_Init[2].Pin, 					init = 0, 					ev = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 |
			&											 								 GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | 
			&																			 GPIO_PIN_6 | GPIO_PIN_7

			VAR  PTU_GPIO_Init[2].Pull, 				init = 0,  					ev = GPIO_NOPULL
			VAR  PTU_GPIO_Init[2].Speed, 				init = 0,  					ev = GPIO_SPEED_FAST
			VAR  PTU_GPIO_Init[2].Mode, 				init = 0,  					ev = GPIO_MODE_AF_PP
			VAR  PTU_GPIO_Init[2].Alternate, 			init = 0,  					ev = GPIO_AF14_LTDC

		COMMENT INPUT/OUTPUT SECTION:

			--None

		-- Stub Calls:
		SIMUL

			--Configures GPIOI LTDC alternate 
			STUB HalGpioInit(GPIOI)

			--Configures GPIOJ 
			STUB HalGpioInit(GPIOJ)

			--Configures GPIOK 
			STUB HalGpioInit(GPIOK)			  

		END SIMUL
		
	--Calling the Unit Under Test:
	#HalLtdcMspInit();

	END ELEMENT

END TEST -- TEST 1

TEST 2
FAMILY nominal
    
    COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdulibstm32f7xxhalmsp-HalLtdcMspInit-DB-LLR-001]
	COMMENT The function enable LTDC Clock by calling the macro '__HAL_RCC_LTDC_CLK_ENABLE'.
	COMMENT (Reset value is given to APB2ENR register of RCC)
	COMMENT Equivalence Class 2.
	COMMENT
	COMMENT [hdulibstm32f7xxhalmsp-HalLtdcMspInit-DB-LLR-002]
	COMMENT The function enable GPIO Clock by calling the following macros 
	COMMENT 1. __HAL_RCC_GPIOI_CLK_ENABLE
	COMMENT 2. __HAL_RCC_GPIOJ_CLK_ENABLE
	COMMENT 3. __HAL_RCC_GPIOK_CLK_ENABLE
	COMMENT 4. __HAL_RCC_GPIOA_CLK_ENABLE 
	COMMENT 5. __HAL_RCC_GPIOB_CLK_ENABLE
	COMMENT (Reset value is given to AHB1ENR register of RCC)
	COMMENT Equivalence Class 3.
    COMMENT </TD>

	ELEMENT
        
		COMMENT INPUT SECTION:

			--None

		COMMENT OUTPUT SECTION:
			
			-- temporary veriable for array index.
			VAR PTU_index,                            	init = 0,      	  				ev = 3
			
			--peripheral clock enable register
			VAR RCC->APB2ENR,							init = (T_UINT32)0x00000000,  	ev = (T_UINT32)0x04000000
			
			--RCC AHB1 peripheral clock register
			VAR RCC->AHB1ENR,							init = (T_UINT32)0x00100000,	ev = (T_UINT32)0x100703

			-- GPIOI LTDC alternate configuration 
			VAR  PTU_GPIO_Init[0].Pin,      			init = 0,    					ev = GPIO_PIN_12 | GPIO_PIN_13 |
			&																 				 GPIO_PIN_14 | GPIO_PIN_15
			
			VAR  PTU_GPIO_Init[0].Pull,     			init = 0,    					ev = GPIO_NOPULL
			VAR  PTU_GPIO_Init[0].Speed,    			init = 0,    					ev = GPIO_SPEED_FAST 
			VAR  PTU_GPIO_Init[0].Mode,     			init = 0,    					ev = GPIO_MODE_AF_PP
			VAR  PTU_GPIO_Init[0].Alternate,		 	init = 0,    					ev = GPIO_AF14_LTDC

			--GPIOJ configuration
			VAR  PTU_GPIO_Init[1].Pin,       			init = 0,    					ev = GPIO_PIN_ALL
			VAR  PTU_GPIO_Init[1].Pull,      			init = 0,    					ev = GPIO_NOPULL
			VAR  PTU_GPIO_Init[1].Speed,     			init = 0,    					ev = GPIO_SPEED_FAST
			VAR  PTU_GPIO_Init[1].Mode,    				init = 0,    					ev = GPIO_MODE_AF_PP
			VAR  PTU_GPIO_Init[1].Alternate, 			init = 0,    					ev = GPIO_AF14_LTDC

			-- GPIOK configuration
			VAR  PTU_GPIO_Init[2].Pin, 					init = 0, 						ev = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 |
			&											 									 GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | 
			&																				 GPIO_PIN_6 | GPIO_PIN_7

			VAR  PTU_GPIO_Init[2].Pull, 				init = 0,  						ev = GPIO_NOPULL
			VAR  PTU_GPIO_Init[2].Speed, 				init = 0,  						ev = GPIO_SPEED_FAST
			VAR  PTU_GPIO_Init[2].Mode, 				init = 0,  						ev = GPIO_MODE_AF_PP
			VAR  PTU_GPIO_Init[2].Alternate, 			init = 0,  						ev = GPIO_AF14_LTDC

		COMMENT INPUT/OUTPUT SECTION:

			--None

		-- Stub Calls:
		SIMUL

			--Configures GPIOI LTDC alternate 
			STUB HalGpioInit(GPIOI)

			--Configures GPIOJ 
			STUB HalGpioInit(GPIOJ)

			--Configures GPIOK 
			STUB HalGpioInit(GPIOK)			  

		END SIMUL
		
	--Calling the Unit Under Test:
	#HalLtdcMspInit();

	END ELEMENT

END TEST -- TEST 2

TEST 3
FAMILY nominal
    
    COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdulibstm32f7xxhalmsp-HalLtdcMspInit-DB-LLR-001]
	COMMENT The function enable LTDC Clock by calling the macro '__HAL_RCC_LTDC_CLK_ENABLE'.
	COMMENT (Maximum value is given to APB2ENR register of RCC)
	COMMENT Equivalence Class 2.
	COMMENT
	COMMENT [hdulibstm32f7xxhalmsp-HalLtdcMspInit-DB-LLR-002]
	COMMENT The function enable GPIO Clock by calling the following macros 
	COMMENT 1. __HAL_RCC_GPIOI_CLK_ENABLE
	COMMENT 2. __HAL_RCC_GPIOJ_CLK_ENABLE
	COMMENT 3. __HAL_RCC_GPIOK_CLK_ENABLE
	COMMENT 4. __HAL_RCC_GPIOA_CLK_ENABLE 
	COMMENT 5. __HAL_RCC_GPIOB_CLK_ENABLE
	COMMENT (Maximum value is given to AHB1ENR register of RCC)
	COMMENT Equivalence Class 3.
    COMMENT </TD>

	ELEMENT
        
		COMMENT INPUT SECTION:

			--None

		COMMENT OUTPUT SECTION:
			
			-- temporary veriable for array index.
			VAR PTU_index,                            	init = 0,      	  				ev = 3
			
			--peripheral clock enable register
			VAR RCC->APB2ENR,							init =(T_UINT32) 0x6CF77FB3, 	ev = init
			
			--RCC AHB1 peripheral clock register
			VAR RCC->AHB1ENR,							init = (T_UINT32)0x7EF417FF,	ev = (T_UINT32)0x7EF417FF

			-- GPIOI LTDC alternate configuration 
			VAR  PTU_GPIO_Init[0].Pin,      			init = 0,    					ev = GPIO_PIN_12 | GPIO_PIN_13 |
			&																			 	 GPIO_PIN_14 | GPIO_PIN_15

			VAR  PTU_GPIO_Init[0].Pull,     			init = 0,    					ev = GPIO_NOPULL
			VAR  PTU_GPIO_Init[0].Speed,    			init = 0,    					ev = GPIO_SPEED_FAST 
			VAR  PTU_GPIO_Init[0].Mode,     			init = 0,    					ev = GPIO_MODE_AF_PP
			VAR  PTU_GPIO_Init[0].Alternate,		 	init = 0,    					ev = GPIO_AF14_LTDC

			--GPIOJ configuration
			VAR  PTU_GPIO_Init[1].Pin,       			init = 0,    					ev = GPIO_PIN_ALL
			VAR  PTU_GPIO_Init[1].Pull,      			init = 0,    					ev = GPIO_NOPULL
			VAR  PTU_GPIO_Init[1].Speed,     			init = 0,    					ev = GPIO_SPEED_FAST
			VAR  PTU_GPIO_Init[1].Mode,    				init = 0,    					ev = GPIO_MODE_AF_PP
			VAR  PTU_GPIO_Init[1].Alternate, 			init = 0,    					ev = GPIO_AF14_LTDC

			-- GPIOK configuration
			VAR  PTU_GPIO_Init[2].Pin, 					init = 0, 						ev = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 |
			&											 									 GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | 
			&																				 GPIO_PIN_6 | GPIO_PIN_7

			VAR  PTU_GPIO_Init[2].Pull, 				init = 0,  						ev = GPIO_NOPULL
			VAR  PTU_GPIO_Init[2].Speed, 				init = 0,  						ev = GPIO_SPEED_FAST
			VAR  PTU_GPIO_Init[2].Mode, 				init = 0,  						ev = GPIO_MODE_AF_PP
			VAR  PTU_GPIO_Init[2].Alternate, 			init = 0,  						ev = GPIO_AF14_LTDC

		COMMENT INPUT/OUTPUT SECTION:

			--None

		-- Stub Calls:
		SIMUL

			--Configures GPIOI LTDC alternate 
			STUB HalGpioInit(GPIOI)

			--Configures GPIOJ 
			STUB HalGpioInit(GPIOJ)

			--Configures GPIOK 
			STUB HalGpioInit(GPIOK)			  

		END SIMUL
		
	--Calling the Unit Under Test:
	#HalLtdcMspInit();

	END ELEMENT

END TEST -- TEST 3

TEST 4
FAMILY nominal
    
    COMMENT Test Description
	COMMENT <TD> 
	COMMENT [hdulibstm32f7xxhalmsp-HalLtdcMspInit-DB-LLR-001]
	COMMENT The function enable LTDC Clock by calling the macro '__HAL_RCC_LTDC_CLK_ENABLE'. 
	COMMENT Equivalence Class 2.
	COMMENT
	COMMENT [hdulibstm32f7xxhalmsp-HalLtdcMspInit-DB-LLR-002]
	COMMENT The function enable GPIO Clock by calling the following macros 
	COMMENT 1. __HAL_RCC_GPIOI_CLK_ENABLE
	COMMENT 2. __HAL_RCC_GPIOJ_CLK_ENABLE
	COMMENT 3. __HAL_RCC_GPIOK_CLK_ENABLE
	COMMENT 4. __HAL_RCC_GPIOA_CLK_ENABLE 
	COMMENT 5. __HAL_RCC_GPIOB_CLK_ENABLE
	COMMENT (Minimum value is given to AHB1ENR register of RCC)
	COMMENT Equivalence Class 3.
    COMMENT </TD>

	ELEMENT
        
		COMMENT INPUT SECTION:

			--None

		COMMENT OUTPUT SECTION:
			
			-- temporary veriable for array index.
			VAR PTU_index,                            	init = 0,      	  				ev = 3
			
			--peripheral clock enable register
			VAR RCC->APB2ENR,							init =(T_UINT32) 0x00000000,  	ev = (T_UINT32)0x04000000
			
			--RCC AHB1 peripheral clock register
			VAR RCC->AHB1ENR,							init =(T_UINT32) 0x00000000,	ev = (T_UINT32)0x703

			-- GPIOI LTDC alternate configuration 
			VAR  PTU_GPIO_Init[0].Pin,      			init = 0,    					ev = GPIO_PIN_12 | GPIO_PIN_13 |
			&																 	             GPIO_PIN_14 | GPIO_PIN_15
			
			VAR  PTU_GPIO_Init[0].Pull,     			init = 0,    					ev = GPIO_NOPULL
			VAR  PTU_GPIO_Init[0].Speed,    			init = 0,    					ev = GPIO_SPEED_FAST 
			VAR  PTU_GPIO_Init[0].Mode,     			init = 0,    					ev = GPIO_MODE_AF_PP
			VAR  PTU_GPIO_Init[0].Alternate,		 	init = 0,    					ev = GPIO_AF14_LTDC

			--GPIOJ configuration
			VAR  PTU_GPIO_Init[1].Pin,       			init = 0,    					ev = GPIO_PIN_ALL
			VAR  PTU_GPIO_Init[1].Pull,      			init = 0,    					ev = GPIO_NOPULL
			VAR  PTU_GPIO_Init[1].Speed,     			init = 0,    					ev = GPIO_SPEED_FAST
			VAR  PTU_GPIO_Init[1].Mode,    				init = 0,    					ev = GPIO_MODE_AF_PP
			VAR  PTU_GPIO_Init[1].Alternate, 			init = 0,    					ev = GPIO_AF14_LTDC

			-- GPIOK configuration
			VAR  PTU_GPIO_Init[2].Pin, 					init = 0, 						ev = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 |
			&											 									 GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | 
			&																				 GPIO_PIN_6 | GPIO_PIN_7

			VAR  PTU_GPIO_Init[2].Pull, 				init = 0,  						ev = GPIO_NOPULL
			VAR  PTU_GPIO_Init[2].Speed, 				init = 0,  						ev = GPIO_SPEED_FAST
			VAR  PTU_GPIO_Init[2].Mode, 				init = 0,  						ev = GPIO_MODE_AF_PP
			VAR  PTU_GPIO_Init[2].Alternate, 			init = 0,  						ev = GPIO_AF14_LTDC

		COMMENT INPUT/OUTPUT SECTION:

			--None

		-- Stub Calls:
		SIMUL

			--Configures GPIOI LTDC alternate 
			STUB HalGpioInit(GPIOI)

			--Configures GPIOJ 
			STUB HalGpioInit(GPIOJ)

			--Configures GPIOK 
			STUB HalGpioInit(GPIOK)			  

		END SIMUL
		
	--Calling the Unit Under Test:
	#HalLtdcMspInit();

	END ELEMENT

END TEST -- TEST 4

END SERVICE -- HalLtdcMspInit


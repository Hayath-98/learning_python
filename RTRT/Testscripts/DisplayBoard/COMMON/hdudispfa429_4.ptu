HEADER hdudispfa429, Source Code Ver : 1.22 , TestScript Ver :1.10
--------------------------------------------------------------------------------
-- Author Name         : Samhitha Prasad L C 
--                       Santosh Mithari
--
-- File Name           : hdudispfa429_4.ptu
--
-- Test Creation Date  : 30.10.2017
--
-- Tested Functions    :ProcessSysInfoWords
--                      SetSysAirFrameWords
--
-- Version History     :
--
-- TEST-VERSION         TEST-DATE         TESTER NAME           MODIFICATIONS
-- ------------        -----------        -----------           -------------
--    1.1              30.10.2017         Samhitha Prasad L C   Created the PTU file.
--                                        Santosh Mithari      
--    1.2              10.11.2017         Samhitha Prasad L C   Updated as per #PR100171
--                                        Santosh Mithari   
--    1.3              14.11.2017         Samhitha Prasad L C   Updated as per #PR100171
--                                        Santosh Mithari 
--    1.4              10.04.2018         AKshay R k            Updates as per #PR100201
--
--    1.5              13.08.2020         Harshitha R           Updated as per #PR100270
--
--    1.6              04.10.2020         Harshitha R           Updated as per #PR100281
--    1.7              27-04-2021         Vignesh Sunil         Updated as per #PR100338
--    1.8              14-05-2021         Vignesh Sunil         Updated as per #PR100354
--    1.9              22.04.2022         P AFREEN              Updated as per #PR1000371
--    1.10             25.04.2022         P AFREEN              Addressed QA comments as per #PR1000371

--------------------------------------------------------------------------------
--
-- TESTED FILE INCLUDE DIRECTIVES
--
--------------------------------------------------------------------------------

#/*============================================================================*/
#/* Module specific includes*/
#/*============================================================================*/
##include "hdudispflmsscu.h"  
##include "hdudispfa429.h"  
##include "hdudispfcas.h"   
##include "hdudispfdauprofile.h"  
##include "hdudispfglobalsettings.h"  
##include "hdudispfrtd.h"   
##include "hdulibbasictypes.h" 
##include "hdudispfpara.h"      
##include "hdudispfarinc825.h"  
##include "hdudispftext.h"      

--Updated as per PR 100083 
##include "hdudispfrevno.h"  
##include "hdudispfpdidata.h"
##include "hdudispfgrapp.h"
##include "hdudispfpbit.h" 
##include "hdulibcorecm7.h"
##include "hdudispfmenu.h" 
##include "hdudispfmdff.h" 


##define EXTRACT_1ST_BYTE 0x00000FF
##define HEX_F0           0xF0
##define HEX_0F           0x0F
##define HEX_CC           0xCC
##define HEX_33           0x33
##define HEX_AA           0xAA
##define HEX_55           0x55
##define EXTRACT_2BYTE    0x0000FFFF

##define HEX_7F           0x7F
##define LABEL_0273    0273
##define LABEL_0244    0244
##define LABEL_0346    0346

##define LABEL_0247    0247

##define LABEL_0272    0272

##define LABEL_0360    0360
##define LABEL_0370    0370
##define SEVENTEEN                17U
##define TWENTY_FOUR              24U
##define REVNO_DISP_FLIGHT_CRC    0x80FFFFC
##define REVNO_DISP_BOOT_PN       0x800FFEC
##define REVNO_DISP_BOOT_CRC      0x800FFFC
##define REVNO_DISP_MAINT_PN      0x0807FFEC
##define REVNO_DISP_MAINT_CRC     0x0807FFFC
##define REVNO_BMP_PN             0x6281FFEC
##define REVNO_BMP_CRC            0x6281FFFC
##define REVNO_PDI_CRC            0x63FFFFFC
##define REVNO_LEN                16U
##define CRC_LEN                  4U
##define SYSINFO_LABEL_WORDS      81
##define TO_HEX(i)               (i <= 9 ? '0' + i : 'A' - 10 + i)
##define BIT_SHIFT_BY_512         512
##define BIT_SHIFT_BY_1024        1024
##define BIT_SHIFT_BY_256         256
##define BIT_SHIFT_BY_2048        2048
##define BIT_SHIFT_BY_4096        4096
##define BIT_SHIFT_BY_128         128
##define BIT_SHIFT_BY_4           4
##define SHIFT_BY_28              28
##define SHIFT_BY_24              24
##define SHIFT_BY_20              20
##define SHIFT_BY_16              16
##define SHIFT_BY_12              12
##define SHIFT_BY_8               8
##define SHIFT_BY_4               4
##define EXT_BIT_28_31            0xF0000000
##define EXT_BIT_24_27            0x0F000000
##define EXT_BIT_20_23            0x00F00000
##define EXT_BIT_16_19            0x000F0000
##define EXT_BIT_12_15            0x0000F000
##define EXT_BIT_8_11             0x00000F00
##define EXT_BIT_4_7              0x000000F0
##define EXT_BIT_0_3              0x0000000F
##define MAX_64_BIT               0xFFFFFFFF
##define BUF_LEN_22               22
##define BUF_LEN_6                6
##define BUF_LEN_16               16
##define CHAR_H                   'H'
##define CHAR_LEN_6               6

##define CHAR_LEN_17              17
##define MAX_32           0xFFFFFFFF


##define CAU_WARN_MAX_ID 6
##define DDW_SIG_BIT     19
##define BIT_16_SET      32768
##define AIRFRAME_LABEL_WORDS      36
##define ARCFT_MDL_BYTE   7
##define ENGINE_TYPE_BYTE 15
##define ENGINE_SER_BYTE  23
##define AICFT_SER_BYTE   31
##define AICFT_REGS_BYTE  35
##define CHAR_LEN_24      24


##define LABEL_051    051
##define LABEL_052    052
##define CALILABELCOUNT 2
--------------------------------------------------------------------------------
--
-- TESTED FILE DECLARATIONS 
--
--------------------------------------------------------------------------------

-- Declarations of the global variables of the tested file

    #T_INT32 S32_data_exceed[4];
    #T_EXCEED_STRUCT Exceed_data[66];
    #T_UINT16 Pbit_test_result; 
    #T_EIU Active_eiu; 
    #T_UINT16 U16_sys_info_words[ 2 ]; 
    #T_CONFIG_STRUCT Config_data; 
    #T_UINT8 Revno_id[  16U ]; 
    #T_UINT16 U16_message_words[ 3 ]; 
    #T_PARAM_TABLE Parameters_numbox[256];
    #T_PARAM_TABLE Parameters[256];
    #T_A429_PARAMS A429_cfg_data[256]; 
    #T_UINT16 A429_settings_cnt; 
    #T_UINT16 U16_cas_words[    (  64    /8) ]; 
    #T_ACDT_STRUCT Auto_cool_down_tmr; 
    #T_CAS_MSG_DEF Cas_msg[  64    ]; 
    #T_UINT8 Cas_cnt;     
    #T_UINT8 Eiufli_part[31];
    #T_UINT8 Eiucfg_part[31];
    #T_UINT8 Eiucmub_part[31];
    #T_UINT8 Eiucmuf_part[31];
    #T_UINT8 Eiucmum_part[31];
    #T_UINT32 Offset_value_cal[NUMBEROFENGINES];
    #T_UINT32 Gain_value_cal[NUMBEROFENGINES];
    
    #T_PARAM_TABLE Scu_parameters[3]; 
    #T_UINT16 Timer_a429_tag[16]; 
    #T_TIMER_PARAM_STRUCT Exceed_timer_params[16];
    #T_PAGE Page_settings; 
    #T_UINT8 Timer_cnt; 
    #T_BOOL Md_engine_flag; 
    #T_UINT8 Cmu_fuel_flow;
    #T_UINT8 Scu_label_flag;    
    #T_FLOAT N1_value;
    
-- Declarations of the temporary variable
    
    --variables used to handle MemCpy
    #T_UINT8 PTU_dst[10],PTU_src[10];
    --variables used to handle MemSet
    #T_UINT8 PTU_memSet[10];
    #T_UINT8 PTU_address1,PTU_address2;
    
    #T_UINT8 PTU_REVNO_DISP_FLIGHT_CRC[500];
    
    #T_UINT8 PTU_REVNO_DISP_BOOT_PN[500];
    
    #T_UINT8 PTU_REVNO_DISP_BOOT_CRC[500];
    
    #T_UINT8 PTU_REVNO_DISP_MAINT_PN[500];
    
    #T_UINT8 PTU_REVNO_DISP_MAINT_CRC[500];
    
    #T_UINT8 PTU_REVNO_BMP_PN[500];
    
    #T_UINT8 PTU_REVNO_BMP_CRC[500];
    
    #T_UINT8 PTU_REVNO_PDI_CRC[500];
--------------------------------------------------------------------------------

BEGIN

    COMMENT Author Name         :   Samhitha Prasad L C
    COMMENT                         Santosh Mithari 
    COMMENT
    COMMENT File Name           :   hdudispfa429_4.ptu
    COMMENT 
    COMMENT Tested Functions    :   ProcessSysInfoWords
    COMMENT                         SetSysAirFrameWords
    COMMENT
    COMMENT Assumptions and Constraints
    COMMENT <AC>
    COMMENT 
    COMMENT Assumption(s): 
    COMMENT None
    COMMENT
    COMMENT Constraint(s):
    COMMENT 
    COMMENT 1. In source file 'hdudispfa429.c' following macro's are modified for testing purpose
    COMMENT /* modified macro for testing purpose */
    COMMENT //#define REVNO_DISP_FLIGHT_CRC    0x80FFFFC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_DISP_FLIGHT_CRC[500];
    COMMENT #define REVNO_DISP_FLIGHT_CRC    ((T_UINT8 *) &PTU_REVNO_DISP_FLIGHT_CRC[0])
    COMMENT
    COMMENT /* modified macro for testing purpose */
    COMMENT //#define REVNO_DISP_BOOT_PN       0x800FFEC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_DISP_BOOT_PN[500];
    COMMENT #define REVNO_DISP_BOOT_PN       ((T_UINT8 *)&PTU_REVNO_DISP_BOOT_PN[0])
    COMMENT
    COMMENT /*modified macro for testing purpose */
    COMMENT //#define REVNO_DISP_BOOT_CRC      0x800FFFC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_DISP_BOOT_CRC[500];
    COMMENT #define REVNO_DISP_BOOT_CRC      ((T_UINT8 *) &PTU_REVNO_DISP_BOOT_CRC[0])
    COMMENT
    COMMENT /*modified macro for testing purpose */
    COMMENT //#define REVNO_DISP_MAINT_PN      0x0807FFEC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_DISP_MAINT_PN[500];
    COMMENT #define REVNO_DISP_MAINT_PN      ((T_UINT8 *) &PTU_REVNO_DISP_MAINT_PN[0])
    COMMENT
    COMMENT /* modified macro for testing purpose */
    COMMENT //#define REVNO_DISP_MAINT_CRC     0x0807FFFC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_DISP_MAINT_CRC[500];
    COMMENT #define REVNO_DISP_MAINT_CRC     ((T_UINT8 *)&PTU_REVNO_DISP_MAINT_CRC[0])
    COMMENT
    COMMENT /* modified macro for testing purpose */
    COMMENT //#define REVNO_BMP_PN             0x6281FFEC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_BMP_PN[500];
    COMMENT #define REVNO_BMP_PN        ((T_UINT8 *)&PTU_REVNO_BMP_PN[0])
    COMMENT
    COMMENT /* modified macro for testing purpose */
    COMMENT //#define REVNO_BMP_CRC            0x6281FFFC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_BMP_CRC[500];
    COMMENT #define REVNO_BMP_CRC       ((T_UINT8 *)&PTU_REVNO_BMP_CRC[0])
    COMMENT
    COMMENT /* modified macro for testing purpose */
    COMMENT //#define REVNO_PDI_CRC            0x62B5FFFC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_PDI_CRC[500];
    COMMENT #define REVNO_PDI_CRC       ((T_UINT8 *)&PTU_REVNO_PDI_CRC[0])
    COMMENT
    COMMENT /*#define REVNO_DISP_MAINT_CFG_PN  0x08010000*/
    COMMENT T_UINT8 PTU_REVNO_DISP_MAINT_CFG_PN[500];
    COMMENT
    COMMENT #define REVNO_DISP_MAINT_CFG_PN     ((T_UINT8 *)&PTU_REVNO_DISP_MAINT_CFG_PN[0])
    COMMENT /*#define REVNO_DISP_MAINT_CFG_CRC 0x08017FFC*/
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_DISP_MAINT_CFG_CRC[500];
    COMMENT #define REVNO_DISP_MAINT_CFG_CRC     ((T_UINT8 *)&PTU_REVNO_DISP_MAINT_CFG_CRC[0])
    COMMENT
    COMMENT /*#define REVNO_DISP_SL_PN         0x0803FFEC*/
    COMMENT T_UINT8 PTU_REVNO_DISP_SL_PN[500];
    COMMENT
    COMMENT #define REVNO_DISP_SL_PN     ((T_UINT8 *)&PTU_REVNO_DISP_SL_PN[0])
    COMMENT /*#define REVNO_DISP_SL_CRC        0x0803FFFC*/
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_DISP_SL_CRC[500];
    COMMENT #define REVNO_DISP_SL_CRC     ((T_UINT8 *)&PTU_REVNO_DISP_SL_CRC[0])
    COMMENT
    COMMENT /* modified macro for testing purpose */
    COMMENT //#define REVNO_BMP_PN             0x6281FFEC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_BMP_PN[500];
    COMMENT #define REVNO_BMP_PN        ((T_UINT8 *)&PTU_REVNO_BMP_PN[0])
    COMMENT
    COMMENT /* modified macro for testing purpose */
    COMMENT //#define REVNO_BMP_CRC            0x6281FFFC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_BMP_CRC[500];
    COMMENT #define REVNO_BMP_CRC       ((T_UINT8 *)&PTU_REVNO_BMP_CRC[0])
    COMMENT
    COMMENT
    COMMENT 
    COMMENT 2.In function 'A429Init' for loops cannot be covered for 0 and 1 since it is controlled 
    COMMENT   by macro 'CAU_WARN_MAX_ID '
    COMMENT 
    COMMENT 3. PTU's has been split into 9 due to dependency.
    COMMENT 
    COMMENT 4.In 'ProcessSysInfoWords' for loop cannot be covered for 0 and 1 since it is controlled 
    COMMENT   by macro 'SYSINFO_LABEL_WORDS'
    COMMENT
    COMMENT 5.In 'A429ProcessA825'for loop cannot be covered for 0 and 1 since it is controlled 
    COMMENT   by macro 'FOUR'
    COMMENT
    COMMENT 6. Equivalence Class 110 cannot be mapped since maximum value of input parameter 
    COMMENT never be greater than MACRO 'MAX_64_BIT'.
    COMMENT
    COMMENT 7.Warning "enumerated type mixed with another type" is obtained when   
    COMMENT  '(enum T_EIU) type' is exercised with value "EIU2+1" 
    COMMENT  warning #188-D: enumerated type mixed with another type  
    COMMENT
    COMMENT 8.In 'ProcessAirframeInfoWords'for loop cannot be covered for 0 and 1 since it is controlled 
    COMMENT   by macro 'AIRFRAME_LABEL_WORDS'
    COMMENT
    COMMENT </AC>

    COMMENT Equivalence Class Description
    COMMENT <ECD>
    COMMENT
    COMMENT Valid Class(es)
    COMMENT Class 1
    COMMENT In function 'ProcessF4CbitErr',u8PayLoad with zero index of A825 messages right shifted
    COMMENT by zero times and logical AND with one is equal to ONE
    COMMENT
    COMMENT Class 2
    COMMENT In function 'ProcessF4CbitErr',u8PayLoad with zero index of A825 messages right shifted 
    COMMENT by zero times and logical AND with one is equal to zero
    COMMENT 
    COMMENT Class 3
    COMMENT The function 'MemCpy' copies data from source buffer to destination buffer
    COMMENT
    COMMENT Class 4
    COMMENT The function 'MemSet' copies value to destination buffer.
    COMMENT
    COMMENT Class 5
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMAPP_REVNO1
    COMMENT
    COMMENT Class 6
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMAPP_REVNO1
    COMMENT
    COMMENT Class 7
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMAPP_REVNO2
    COMMENT
    COMMENT Class 8
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMAPP_REVNO2
    COMMENT
    COMMENT Class 9
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMBOOT_REVNO1
    COMMENT
    COMMENT Class 10
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMBOOT_REVNO1
    COMMENT
    COMMENT Class 11
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMBOOT_REVNO2
    COMMENT
    COMMENT Class 12
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMBOOT_REVNO2
    COMMENT
    COMMENT Class 13
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMMAINT_REVNO1
    COMMENT
    COMMENT Class 14
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMMAINT_REVNO1
    COMMENT
    COMMENT Class 15
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMMAINT_REVNO2
    COMMENT
    COMMENT Class 16
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMMAINT_REVNO2
    COMMENT 
    COMMENT Class 17
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMAPP_CRC
    COMMENT 
    COMMENT Class 18
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMAPP_CRC
    COMMENT
    COMMENT Class 19
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMBOOT_CRC
    COMMENT
    COMMENT Class 20
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMBOOT_CRC
    COMMENT
    COMMENT Class 21
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMMAINT_CRC
    COMMENT
    COMMENT Class 22
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMMAINT_CRC
    COMMENT
    COMMENT Class 23
    COMMENT The function 'ProcessSWPartNum', calls 'MemCpy'.
    COMMENT
    COMMENT Class 24
    COMMENT The function 'ProcessSWPartNum', calls 'BinAsciiCRC'.
    COMMENT
    COMMENT Class 25
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by zero times and bitwise AND with one is not equal to zero
    COMMENT
    COMMENT Class 26
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by zero times and bitwise AND with one is  equal to zero
    COMMENT
    COMMENT Class 27
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by one time and bitwise AND with one is not equal to zero
    COMMENT.
    COMMENT Class 28
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by one time and bitwise AND with one is equal to zero.
    COMMENT
    COMMENT Class 29
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by two times and bitwise AND with one is not equal to zero.
    COMMENT
    COMMENT Class 30
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by two times and bitwise AND with one is  equal to zero.
    COMMENT
    COMMENT Class 31
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by three times and bitwise AND with one is not equal to zero.
    COMMENT
    COMMENT Class 32
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by three times and bitwise AND with one is equal to zero.
    COMMENT
    COMMENT Class 33
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by four times and bitwise AND with one is not equal to zero.
    COMMENT
    COMMENT Class 34
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by four times and bitwise AND with one is  equal to zero.
    COMMENT
    COMMENT Class 35
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by five times and bitwise AND with one is not equal to zero.
    COMMENT
    COMMENT Class 36
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by five times and bitwise AND with one is equal to zero.
    COMMENT
    COMMENT Class 37
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by six times and bitwise AND with one is not equal to zero.
    COMMENT
    COMMENT Class 38
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by six times and bitwise AND with one is  equal to zero.
    COMMENT
    COMMENT Class 39
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is equal to A429_CHAN_1
    COMMENT
    COMMENT Class 40
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is not equal to A429_CHAN_1
    COMMENT
    COMMENT Class 41
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is equal to A429_CHAN_2
    COMMENT
    COMMENT Class 42
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is not equal to A429_CHAN_2
    COMMENT
    COMMENT Class 43
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is equal to DIS_COMAPP_REVNO1
    COMMENT
    COMMENT Class 44
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is not equal to DIS_COMAPP_REVNO1
    COMMENT
    COMMENT Class 45
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is equal to DIS_COMAPP_REVNO2
    COMMENT
    COMMENT Class 46
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is not equal to DIS_COMAPP_REVNO2
    COMMENT
    COMMENT Class 47
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  equal to DIS_COMBOOT_REVNO1
    COMMENT
    COMMENT Class 48
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  not equal to DIS_COMBOOT_REVNO1
    COMMENT
    COMMENT Class 49
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  equal to DIS_COMBOOT_REVNO2
    COMMENT
    COMMENT Class 50
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  not equal to DIS_COMBOOT_REVNO2
    COMMENT
    COMMENT Class 51
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  equal to DIS_COMMAINT_REVNO1
    COMMENT
    COMMENT Class 52
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  not equal to DIS_COMMAINT_REVNO1
    COMMENT
    COMMENT Class 53
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  equal to DIS_COMMAINT_REVNO2
    COMMENT
    COMMENT Class 54
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  not equal to DIS_COMMAINT_REVNO2
    COMMENT
    COMMENT Class 55
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  equal to DIS_COMBOOT_CRC
    COMMENT
    COMMENT Class 56
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  not equal to DIS_COMBOOT_CRC
    COMMENT
    COMMENT Class 57
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  equal to DIS_COMMAINT_CRC
    COMMENT
    COMMENT Class 58
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  not equal to DIS_COMMAINT_CRC
    COMMENT
    COMMENT Class 59
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  equal to DIS_COMAPP_CRC
    COMMENT
    COMMENT Class 60
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  not equal to DIS_COMAPP_CRC
    COMMENT
    COMMENT Class 61
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  equal to F4_PBIT_ERR
    COMMENT
    COMMENT Class 62
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  not equal to F4_PBIT_ERR
    COMMENT
    COMMENT Class 63
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  equal to F4_CBIT_ERR
    COMMENT
    COMMENT Class 64
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  not equal to F4_CBIT_ERR
    COMMENT
    COMMENT Class 65
    COMMENT In function 'A429ProcessA825', 9 and 10th bit of A429 word is greater than zero
    COMMENT
    COMMENT Class 66
    COMMENT In function 'A429ProcessA825', 9 and 10th bit of A429 word is less than or equal to zero.
    COMMENT
    COMMENT Class 67
    COMMENT The function 'A429ProcessA825', calls 'Process429Words'.
    COMMENT
    COMMENT Class 68
    COMMENT In function 'A429ProcessA825', u8PaySize of A825 messages is equal to EIGHT 
    COMMENT
    COMMENT Class 69
    COMMENT In function 'A429ProcessA825', u8PaySize of A825 messages is not equal to EIGHT
    COMMENT
    COMMENT Class 70
    COMMENT In function 'Process429Words',  SDI bits  is other than ZERO
    COMMENT
    COMMENT Class 71
    COMMENT In function 'Process429Words',  SDI bits  is euqal to ZERO
    COMMENT
    COMMENT Class 72
    COMMENT In function 'Process429Words' ,channel is ZERO 
    COMMENT
    COMMENT Class 73
    COMMENT In function 'Process429Words' ,channel is not  ZERO 
    COMMENT
    COMMENT Class 74
    COMMENT In function 'Process429Words' label of A429_data with indices channel and
    COMMENT loop index count is equal to received label  
    COMMENT
    COMMENT Class 75
    COMMENT In function 'Process429Words' when label of A429_data with indices channel and
    COMMENT loop index count is not equal to received label  
    COMMENT
    COMMENT Class 76
    COMMENT In function 'Process429Words', Active_eiu is equal to EIU1
    COMMENT
    COMMENT Class 77
    COMMENT In function 'Process429Words', Active_eiu is equal to EIU2
    COMMENT
    COMMENT Class 78
    COMMENT In function 'Process429Words', Active_eiu is other than EIU1 and EIU2
    COMMENT
    COMMENT Class 79
    COMMENT In function 'Process429Words', SDI value is equal to ONE
    COMMENT
    COMMENT Class 80
    COMMENT In function 'Process429Words', SDI value  is equal to TWO
    COMMENT
    COMMENT Class 81
    COMMENT In function 'Process429Words', SDI value  is other than ONE and TWO
    COMMENT
    COMMENT Class 82
    COMMENT In function 'Process429Words', label found flag is TRUE 
    COMMENT
    COMMENT Class 83
    COMMENT In function 'Process429Words', label found flag is FALSE 
    COMMENT
    COMMENT Class 84
    COMMENT In function 'Process429Words', Pbit_test_result is equal to ZERO
    COMMENT
    COMMENT Class 85
    COMMENT In function 'Process429Words',Pbit_test_result is not equal to ZERO
    COMMENT
    COMMENT Class 86
    COMMENT In function 'Process429Words', Type of A429_data is BNR 
    COMMENT
    COMMENT Class 87
    COMMENT In function 'Process429Words',  Type of A429_data is DDW 
    COMMENT
    COMMENT Class 88
    COMMENT In function 'Process429Words',  Type of A429_data is other than BNR and DDW
    COMMENT
    COMMENT Class 89
    COMMENT In function 'Process429Words', Display characteristic identifier is ZERO
    COMMENT
    COMMENT Class 90
    COMMENT In function 'Process429Words', Display characteristic identifier is not  ZERO
    COMMENT
    COMMENT Class 91
    COMMENT In function 'Process429Words', Sign bit is other than ZERO
    COMMENT
    COMMENT Class 92
    COMMENT In function 'Process429Words', Sign bit is equal to ZERO
    COMMENT
    COMMENT Class 93
    COMMENT In function 'Process429Words', result of addition of sig_bits of A429_data with indices
    COMMENT channel and index value where label is found and (start_bit of A429_data with indices 
    COMMENT channel and index value where label is found minus one) is DATA_28_BIT
    COMMENT
    COMMENT Class 94
    COMMENT In function 'Process429Words', result of addition of sig_bits of A429_data with indices
    COMMENT channel and index value where label is found and (start_bit of A429_data with indices 
    COMMENT channel and index value where label is found minus one) is not euqal to DATA_28_BIT
    COMMENT
    COMMENT Class 95
    COMMENT The function 'Process429Words',calls RTDSetParam
    COMMENT
    COMMENT Class 96
    COMMENT In function 'Process429Words',label of A429_data with indices channel and index value
    COMMENT where label is found is other than LABEL_0360
    COMMENT 
    COMMENT Class 97
    COMMENT In function 'Process429Words',label of A429_data with indices channel and index value
    COMMENT where label is found is LABEL_0360
    COMMENT
    COMMENT Class 98
    COMMENT In function 'Process429Words', Cas_cnt is other than zero 
    COMMENT
    COMMENT Class 99
    COMMENT In function 'Process429Words', Cas_cnt is equal to zero 
    COMMENT
    COMMENT Class 100
    COMMENT In function 'Process429Words',label of Cas_msg with index zero is equal to label value
    COMMENT
    COMMENT Class 101
    COMMENT In function 'Process429Words',label of Cas_msg with index zero is not equal to label value
    COMMENT
    COMMENT Class 102
    COMMENT In function 'Process429Words' ID value is FOUR
    COMMENT
    COMMENT Class 103
    COMMENT In function 'Process429Words' ID value is not FOUR
    COMMENT
    COMMENT Class 104
    COMMENT The function 'Process429Words' calls CasSetCasWord
    COMMENT
    COMMENT Class 105
    COMMENT In function 'Process429Words' wog_label of Auto_cool_down_tmr is equal to label
    COMMENT
    COMMENT Class 106
    COMMENT In function 'Process429Words' wog_label of Auto_cool_down_tmr is not equal to label
    COMMENT
    COMMENT Class 107
    COMMENT The function 'Process429Words' calls SetSysInfoWords
    COMMENT
    COMMENT Class 108
    COMMENT In function 'BinAsciiCRC', value is less than MAX_64_BIT
    COMMENT
    COMMENT Class 109
    COMMENT In function 'BinAsciiCRC', value is equal to MAX_64_BIT
    COMMENT
    COMMENT Class 110
    COMMENT In function 'BinAsciiCRC', value is greater than MAX_64_BIT 
    COMMENT
    COMMENT Class 111
    COMMENT The function 'A429Init' calls 'CasExtract'
    COMMENT
    COMMENT Class 112
    COMMENT The function 'A429Init' calls 'A429Extract' 
    COMMENT 
    COMMENT Class 113
    COMMENT In function 'A429Init', A429 port of A429 configuration data with loop counter as index is equal to ONE
    COMMENT 
    COMMENT Class 114
    COMMENT In function 'A429Init', A429 port of A429 configuration data with loop counter as index is equal to two 
    COMMENT 
    COMMENT Class 115
    COMMENT In function 'A429Init', A429 port of A429 configuration data with loop counter as index is not equal to ONE or TWO
    COMMENT 
    COMMENT Class 116
    COMMENT In function 'A429Init', A429 type of A429 configuration data with loop counter as index is equal to BNR
    COMMENT 
    COMMENT Class 117
    COMMENT In function 'A429Init', A429 type of A429 configuration data with loop counter as index is equal to DDW 
    COMMENT 
    COMMENT Class 118
    COMMENT In function 'A429Init', A429 type of A429 configuration data with loop counter as index is not equal to DDW or BNR
    COMMENT
    COMMENT Class 119
    COMMENT In function 'A429Init', Cas_cnt is equal to zero.
    COMMENT
    COMMENT Class 120
    COMMENT In function 'A429Init', Cas_cnt is not equal to zero.   
    COMMENT 
    COMMENT Class 121
    COMMENT In function 'A429Init', A429 label of A429 configuration data with loop counter as index is equal to  label of Cas_msg 
    COMMENT with index zero 
    COMMENT 
    COMMENT Class 122
    COMMENT In function 'A429Init', A429 type of A429 configuration data with loop counter as index is not equal to label of Cas_msg 
    COMMENT with index zero 
    COMMENT
    COMMENT Class 123
    COMMENT In function 'A429Init', Port1_label_count is equal to Port2_label_count
    COMMENT
    COMMENT Class 124
    COMMENT In function 'A429Init', Port1_label_count is not equal to Port2_label_count 
    COMMENT
    COMMENT Class 125
    COMMENT The function 'ProcessSysInfoWords' calls 'MemCpy'.
    COMMENT
    COMMENT Class 126
    COMMENT The function 'ProcessSysInfoWords' calls 'BinAsciiCRC'.
    COMMENT
    COMMENT Class 127
    COMMENT The function 'ProcessSysInfoWords' calls 'MemSet'.  
    COMMENT
    COMMENT Class 128
    COMMENT In function 'ProcessSysInfoWords', Bitmap_revno with index zero is not equal to CHAR_H 
    COMMENT
    COMMENT Class 129
    COMMENT In function 'ProcessSysInfoWords', Bitmap_revno with index zero is equal to CHAR_H  
    COMMENT
    COMMENT Class 130
    COMMENT In function 'ProcessSysInfoWords',  config_version with index zero of Config_data is not equal to CHAR_H        
    COMMENT
    COMMENT Class 131
    COMMENT In function 'ProcessSysInfoWords',  config_version with index zero of Config_data is equal to CHAR_H        
    COMMENT
    COMMENT Class 132
    COMMENT In function 'ProcessSysInfoWords', App_revno with index BUF_LEN_6 is not equal to CHAR_H    
    COMMENT
    COMMENT Class 133
    COMMENT In function 'ProcessSysInfoWords', App_revno with index BUF_LEN_6 is equal to CHAR_H        
    COMMENT
    COMMENT Class 134
    COMMENT In function 'ProcessSysInfoWords', Boot_revno with index BUF_LEN_6 is not equal to CHAR_H   
    COMMENT
    COMMENT Class 135
    COMMENT In function 'ProcessSysInfoWords', Boot_revno with index BUF_LEN_6 is equal to CHAR_H 
    COMMENT
    COMMENT Class 136
    COMMENT In function 'ProcessSysInfoWords', Maint_revno with index BUF_LEN_6 is not equal to CHAR_H 
    COMMENT
    COMMENT Class 137
    COMMENT In function 'ProcessSysInfoWords', Maint_revno with index BUF_LEN_6 is equal to CHAR_H  
    COMMENT
    COMMENT Class 140
    COMMENT In function 'ProcessSysInfoWords', Commf_part with index BUF_LEN_6 is not equal to CHAR_H   
    COMMENT
    COMMENT Class 141
    COMMENT In function 'ProcessSysInfoWords', Commf_part with index BUF_LEN_6 is equal to CHAR_H 
    COMMENT
    COMMENT Class 142
    COMMENT In function 'ProcessSysInfoWords', Commb_part with index BUF_LEN_6 is not equal to CHAR_H   
    COMMENT
    COMMENT Class 143
    COMMENT In function 'ProcessSysInfoWords', Commb_part with index BUF_LEN_6 is equal to CHAR_H 
    COMMENT
    COMMENT Class 144
    COMMENT In function 'ProcessSysInfoWords', Maint_part with index BUF_LEN_6 is not equal to CHAR_H 
    COMMENT
    COMMENT Class 145
    COMMENT In function 'ProcessSysInfoWords', Maint_part with index BUF_LEN_6 is equal to CHAR_H   
    COMMENT
    COMMENT Class 146
    COMMENT In function 'ProcessSysInfoWords', A429_data_recieved is TRUE
    COMMENT
    COMMENT Class 147
    COMMENT In function 'ProcessSysInfoWords', A429_data_recieved is not TRUE   
    COMMENT
    COMMENT Class 148
    COMMENT In function 'ProcessSysInfoWords', data1 of system info word with index as loop counter is equal to horizantal tab.
    COMMENT
    COMMENT Class 149
    COMMENT In function 'ProcessSysInfoWords', data1 of system info word with index as loop counter is equal to carriage return
    COMMENT
    COMMENT Class 150
    COMMENT In function 'ProcessSysInfoWords', data1 of system info word with index as loop counter is not equal to horizantal tab 
    COMMENT or carriage return  
    COMMENT
    COMMENT Class 151
    COMMENT In function 'ProcessSysInfoWords', data2 of system info word with index as loop counter is equal to carriage return
    COMMENT
    COMMENT Class 152
    COMMENT In function 'ProcessSysInfoWords', data2 of system info word with index as loop counter is equal to horizantal tab
    COMMENT
    COMMENT Class 153
    COMMENT In function 'ProcessSysInfoWords', data2 of system info word with index as loop counter is not equal to horizantal tab 
    COMMENT or carriage return  
    COMMENT
    COMMENT Class 154
    COMMENT In function 'ProcessSysInfoWords', first flag is equal to one
    COMMENT
    COMMENT Class 156
    COMMENT In function 'ProcessSysInfoWords', first flag is not equal to one
    COMMENT
    COMMENT Class 157
    COMMENT In function 'ProcessSysInfoWords', second  flag is equal to one
    COMMENT
    COMMENT Class 158
    COMMENT In function 'ProcessSysInfoWords', second  flag is not equal to one
    COMMENT
    COMMENT Class 159
    COMMENT In function 'ProcessSysInfoWords', third  flag is equal to one
    COMMENT
    COMMENT Class 160
    COMMENT In function 'ProcessSysInfoWords', third  flag is not equal to one  
    COMMENT
    COMMENT Class 161
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is less than SIXTEEN
    COMMENT
    COMMENT Class 162
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is greater than SIXTEEN
    COMMENT
    COMMENT Class 163
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is equal to SIXTEEN  
    COMMENT
    COMMENT Class 164
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is less than THIRTY_TWO
    COMMENT
    COMMENT Class 165
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is greater than THIRTY_TWO
    COMMENT
    COMMENT Class 166
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is equal to THIRTY_TWO
    COMMENT
    COMMENT Class 167
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is less than SYS_INFO_WORDS_48
    COMMENT
    COMMENT Class 168
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is greater than SYS_INFO_WORDS_48
    COMMENT
    COMMENT Class 169
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is  equal to SYS_INFO_WORDS_48
    COMMENT
    COMMENT Class 170
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is less than SYS_INFO_WORDS_64
    COMMENT
    COMMENT Class 171
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is greater than SYS_INFO_WORDS_64
    COMMENT
    COMMENT Class 172
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is equal to SYS_INFO_WORDS_64
    COMMENT
    COMMENT Class 173
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is less than SYS_INFO_WORDS_80
    COMMENT
    COMMENT Class 174
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is greater than SYS_INFO_WORDS_80
    COMMENT
    COMMENT Class 175
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is equal to SYS_INFO_WORDS_80    
    COMMENT
    COMMENT Class 176
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is not equal to ZERO 
    COMMENT
    COMMENT Class 177
    COMMENT In function 'ProcessSysInfoWords',sequence of system info word with index as loop counter is equal to ZERO      
    COMMENT
    COMMENT Class 178
    COMMENT In function 'ProcessSysInfoWords', Eiufli_part with index 0 is not equal to zero
    COMMENT
    COMMENT Class 179
    COMMENT In function 'ProcessSysInfoWords', Eiufli_part with index 0 is equal to zero
    COMMENT
    COMMENT Class 180
    COMMENT In function 'ProcessSysInfoWords', Eiucfg_part with index 0 is not equal to zero
    COMMENT
    COMMENT Class 181
    COMMENT In function 'ProcessSysInfoWords', Eiucfg_part with index 0 is equal to zero
    COMMENT
    COMMENT Class 182
    COMMENT In function 'ProcessSysInfoWords', Eiucmub_part with index 0 is not equal to zero.
    COMMENT
    COMMENT Class 183
    COMMENT In function 'ProcessSysInfoWords', Eiucmub_part with index 0 is equal to zero.
    COMMENT
    COMMENT Class 184
    COMMENT In function 'ProcessSysInfoWords', Eiucmuf_part  with index 0 is not equal to zero
    COMMENT
    COMMENT Class 185
    COMMENT In function 'ProcessSysInfoWords', Eiucmuf_part  with index 0 is equal to zero
    COMMENT
    COMMENT Class 186
    COMMENT In function 'ProcessSysInfoWords', Eiucmum_part with index 0 is not equal to zero.
    COMMENT
    COMMENT Class 187
    COMMENT In function 'ProcessSysInfoWords', Eiucmum_part with index 0 is equal to zero.  
    COMMENT
    COMMENT Class 188
    COMMENT The function 'A429ProcessA825' calls ProcessSWPartNum.
    COMMENT 
    COMMENT Class 192
    COMMENT The function 'SetSysInfoWords' stores all the system information words read from label 360.
    COMMENT
    COMMENT Class 201
    COMMENT The function 'A429ProcessA825' calls ProcessF4CbitErr.
    COMMENT
    COMMENT Class 202
    COMMENT The function 'A429ProcessA825' calls ProcessF4PbitErr.
    COMMENT
    COMMENT Class 206
    COMMENT The function 'A429ProcessA825' ssm is equal to zero.
    COMMENT
    COMMENT Class 207
    COMMENT The function 'A429ProcessA825' ssm is not equal to zero.    
    COMMENT 
    COMMENT class 208
    COMMENT In function 'StringCompare', Length of first string is equal to length of second string
    COMMENT 
    COMMENT class 209
    COMMENT In function 'StringCompare', Length of first string is not equal to length of second string
    COMMENT 
    COMMENT class 210
    COMMENT In function 'StringCompare', char1 with loop index  is equal to char2 with loop index 
    COMMENT 
    COMMENT class 211
    COMMENT In function 'StringCompare', char1 with loop index  is not equal to char2 with loop index 
    COMMENT 
    COMMENT class 212
    COMMENT The function 'StringCompare' calls 'StrLen'
    COMMENT 
    COMMENT class 213
    COMMENT The function 'SetSysAirFrameWords' stores all the system information words read from label 370
    COMMENT 
    COMMENT class 214
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
    COMMENT greater than ARCFT_MDL_BYTE
    COMMENT 
    COMMENT class 215
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
    COMMENT less than ARCFT_MDL_BYTE
    COMMENT 
    COMMENT class 216
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
    COMMENT equal to ARCFT_MDL_BYTE
    COMMENT 
    COMMENT class 217
    COMMENT In function 'ProcessAirframeInfoWords', index is greater than ARCFT_MDL_BYTE
    COMMENT 
    COMMENT class 218
    COMMENT In function 'ProcessAirframeInfoWords', index is less than ARCFT_MDL_BYTE
    COMMENT 
    COMMENT class 219
    COMMENT In function 'ProcessAirframeInfoWords', index is equal to ARCFT_MDL_BYTE
    COMMENT 
    COMMENT class 220
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
    COMMENT greater than ENGINE_TYPE_BYTE
    COMMENT 
    COMMENT class 221
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
    COMMENT less than ENGINE_TYPE_BYTE
    COMMENT 
    COMMENT class 222
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
    COMMENT equal to ENGINE_TYPE_BYTE
    COMMENT 
    COMMENT class 223
    COMMENT In function 'ProcessAirframeInfoWords', index is greater than ENGINE_TYPE_BYTE
    COMMENT 
    COMMENT class 224
    COMMENT In function 'ProcessAirframeInfoWords', index is less than ENGINE_TYPE_BYTE
    COMMENT 
    COMMENT class 225
    COMMENT In function 'ProcessAirframeInfoWords', index is equal to ENGINE_TYPE_BYTE
    COMMENT 
    COMMENT class 226
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
    COMMENT greater than ENGINE_SER_BYTE
    COMMENT 
    COMMENT class 227
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
    COMMENT less than ENGINE_SER_BYTE
    COMMENT 
    COMMENT class 228
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
    COMMENT equal to ENGINE_SER_BYTE
    COMMENT 
    COMMENT class 229
    COMMENT In function 'ProcessAirframeInfoWords', index is greater than ENGINE_SER_BYTE
    COMMENT 
    COMMENT class 230
    COMMENT In function 'ProcessAirframeInfoWords', index is less than ENGINE_SER_BYTE
    COMMENT 
    COMMENT class 231
    COMMENT In function 'ProcessAirframeInfoWords', index is equal to ENGINE_SER_BYTE
    COMMENT 
    COMMENT class 232
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
    COMMENT greater than AICFT_SER_BYTE
    COMMENT 
    COMMENT class 233
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
    COMMENT less than AICFT_SER_BYTE
    COMMENT 
    COMMENT class 234
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
    COMMENT equal to AICFT_SER_BYTE
    COMMENT 
    COMMENT class 235
    COMMENT In function 'ProcessAirframeInfoWords', index is greater than AICFT_SER_BYTE
    COMMENT 
    COMMENT class 236
    COMMENT In function 'ProcessAirframeInfoWords', index is less than AICFT_SER_BYTE
    COMMENT 
    COMMENT class 237
    COMMENT In function 'ProcessAirframeInfoWords', index is equal to AICFT_SER_BYTE
    COMMENT 
    COMMENT class 238
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
    COMMENT greater than AICFT_REGS_BYTE
    COMMENT 
    COMMENT class 239
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
    COMMENT less than AICFT_REGS_BYTE
    COMMENT 
    COMMENT class 240
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
    COMMENT equal to AICFT_REGS_BYTE
    COMMENT 
    COMMENT class 241
    COMMENT In function 'ProcessAirframeInfoWords', index is greater than AICFT_REGS_BYTE
    COMMENT 
    COMMENT class 242
    COMMENT In function 'ProcessAirframeInfoWords', index is less than AICFT_REGS_BYTE
    COMMENT 
    COMMENT class 243
    COMMENT In function 'ProcessAirframeInfoWords', index is equal to AICFT_REGS_BYTE
    COMMENT 
    COMMENT class 244
    COMMENT The function 'ProcessAirframeInfoWords', calls the function 'MemCpy'
    COMMENT 
    COMMENT class 245
    COMMENT The function 'ProcessAirframeInfoWords', calls the function 'StrLen'
    COMMENT 
    COMMENT class 246
    COMMENT In function 'ProcessAirframeInfoWords', Dau_config_id_disp with loop index is equall to space
    COMMENT 
    COMMENT class 247
    COMMENT In function 'ProcessAirframeInfoWords', Dau_config_id_disp with loop index is not equall to space
    COMMENT 
    COMMENT class 248
    COMMENT The function 'ProcessAirframeInfoWords', calls the function 'StringCompare'
    COMMENT 
    COMMENT class 249
    COMMENT In function 'ProcessAirframeInfoWords', return value of StringCompare with spilt word1
    COMMENT and aircraft model as parameters  is TRUE
    COMMENT 
    COMMENT class 250
    COMMENT In function 'ProcessAirframeInfoWords', return value of StringCompare with spilt word1
    COMMENT and aircraft model as parameters  is FALSE
    COMMENT 
    COMMENT class 251
    COMMENT In function 'ProcessAirframeInfoWords', return value of StringCompare with spilt word2
    COMMENT and engine type as parameters  is TRUE
    COMMENT 
    COMMENT class 252
    COMMENT In function 'ProcessAirframeInfoWords', return value of StringCompare with spilt word2
    COMMENT and engine type as parameters  is FALSE
    COMMENT 
    COMMENT class 253
    COMMENT The function 'ProcessSysInfoWords', calls the function 'ProcessAirframeInfoWords'
    COMMENT 
    COMMENT Class 255
    COMMENT In function 'Process429Words',label of A429_data with indices channel and index value
    COMMENT where label is found is other than LABEL_0370
    COMMENT 
    COMMENT Class 256
    COMMENT In function 'Process429Words',label of A429_data with indices channel and index value
    COMMENT where label is found is LABEL_0370
    COMMENT
    COMMENT Class 257
    COMMENT In function 'Process429Words',label is equal to label of Exceed_data with index 0
    COMMENT 
    COMMENT Class 258
    COMMENT In function 'Process429Words',label is not equal to label of Exceed_data with index 0
    COMMENT
    COMMENT Class 259
    COMMENT The function 'A429ProcessA825' ssm is equal to RTD_STAT_FAIL.
    COMMENT
    COMMENT Class 260
    COMMENT The function 'A429ProcessA825' ssm is not equal to not equal RTD_STAT_FAIL. 
    COMMENT
    COMMENT Class 261
    COMMENT The function 'Process429Words' Config_data.eng_sdi is equal to 1
    COMMENT
    COMMENT Class 262
    COMMENT The function 'Process429Words' Config_data.eng_sdi is other than 1
    COMMENT
    COMMENT Class 263
    COMMENT The function 'Process429Words' Config_data.channels.u16_x is equal to chann
    COMMENT
    COMMENT Class 264
    COMMENT The function 'Process429Words' Config_data.channels.u16_x is not equal to channel value
    COMMENT
    COMMENT Class 265
    COMMENT The function 'Process429Words' Config_data.channels.u16_y is equal to channel value
    COMMENT
    COMMENT Class 266
    COMMENT The function 'Process429Words' Config_data.channels.u16_y is not equal to channel value
    COMMENT
    COMMENT Class 267
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is equal to DIS_COMSL_REVNO2
    COMMENT
    COMMENT Class 268
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is not equal to DIS_COMSL_REVNO2
    COMMENT
    COMMENT Class 269
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is equal to DIS_COMSL_REVNO1
    COMMENT
    COMMENT Class 270
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is not equal to DIS_COMSL_REVNO1
    COMMENT
    COMMENT Class 271
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is equal to DIS_COMSL_CRC
    COMMENT
    COMMENT Class 272
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is not equal to DIS_COMSL_CRC
    COMMENT
    COMMENT Class 273
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMMAINT_REVNO2
    COMMENT
    COMMENT Class 274
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMMAINT_REVNO2
    COMMENT
    COMMENT Class 275
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMSL_REVNO2
    COMMENT
    COMMENT Class 276
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMSL_REVNO2
    COMMENT
    COMMENT Class 277
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMSL_CRC
    COMMENT
    COMMENT Class 278
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMSL_CRC
    COMMENT
    COMMENT Class 279
    COMMENT In function 'ProcessSysInfoWords', Maint_config_revno with index BUF_LEN_6 is not equal to CHAR_H 
    COMMENT
    COMMENT Class 280
    COMMENT In function 'ProcessSysInfoWords', Maint_config_revno with index BUF_LEN_6 is equal to CHAR_H  
    COMMENT
    COMMENT Class 281
    COMMENT In function 'ProcessSysInfoWords',  Soft_loader_revno with index BUF_LEN_6 is not equal to CHAR_H        
    COMMENT
    COMMENT Class 282
    COMMENT In function 'ProcessSysInfoWords',  Soft_loader_revno with index BUF_LEN_6 is equal to CHAR_H  
    COMMENT
    COMMENT Class 283
    COMMENT In function 'ProcessSysInfoWords',  Commsl_part with index BUF_LEN_6 is not equal to CHAR_H        
    COMMENT
    COMMENT Class 284
    COMMENT In function 'ProcessSysInfoWords',  Commsl_part with index BUF_LEN_6 is equal to CHAR_H
    COMMENT Invalid Class(es)
    COMMENT 
    COMMENT Class 193
    COMMENT In function 'BinAsciiCRC',invalid reference is passed to parameter 'out_buf'
    COMMENT
    COMMENT Class 189
    COMMENT In function 'MemCpy', invalid reference is passed to p_src.
    COMMENT
    COMMENT Class 190
    COMMENT In function 'MemCpy', invalid reference is passed to p_dst.
    COMMENT
    COMMENT Class 191
    COMMENT In function 'MemSet', invalid reference is passed to p_dst. 
    COMMENT
    COMMENT Class 203
    COMMENT In function 'A429ProcessA825', invalid reference is passed to s_mess. 
    COMMENT 
    COMMENT Class 204
    COMMENT In function 'ProcessF4PbitErr', invalid refernce is passed to s_mess
    COMMENT 
    COMMENT Class 205
    COMMENT In function 'ProcessF4CbitErr', invalid refernce is passed to s_mess    
    COMMENT
    COMMENT Class 285
    COMMENT In function 'Process429Words', scu_enable of Configuration data is not ONE
    COMMENT
    COMMENT Class 286
    COMMENT In function 'Process429Words', Cmu_fuel_flow is ONE
    COMMENT
    COMMENT Class 287
    COMMENT In function 'Process429Words', Md_engine_flag is TRUE
    COMMENT
    COMMENT Class 288
    COMMENT In function 'Process429Words', scu_enable of Configuration data is ONE
    COMMENT
    COMMENT Class 289
    COMMENT In function 'Process429Words', Cmu_fuel_flow is not ONE
    COMMENT
    COMMENT Class 290
    COMMENT In function 'Process429Words', Md_engine_flag is FALSE  
    COMMENT
    COMMENT Class 291
    COMMENT In function 'Process429Words', received label is LABEL_0244
    COMMENT
    COMMENT Class 292
    COMMENT In function 'Process429Words', received label is not LABEL_0244 
    COMMENT
    COMMENT Class 293
    COMMENT In function 'Process429Words', label of Cas_msg with index zero not equal to received label 
    COMMENT
    COMMENT Class 294
    COMMENT In function 'Process429Words', label of Cas_msg with index zero equal to received label 
    COMMENT
    COMMENT Class 295
    COMMENT In function 'Process429Words', label of Exceed_data with index zero not equal to received label 
    COMMENT
    COMMENT Class 296
    COMMENT In function 'Process429Words', label of Exceed_data with index zero equal to received label 
    COMMENT
    COMMENT Class 297
    COMMENT In function 'Process429Words', wog_label of Auto_cool_down_tmr not equal to received label  
    COMMENT
    COMMENT Class 298
    COMMENT In function 'Process429Words', wog_label of Auto_cool_down_tmr equal to received label      
    COMMENT
    COMMENT Class 299
    COMMENT In function 'Process429Words', timer id is ONE.     
    COMMENT
    COMMENT Class 300
    COMMENT In function 'Process429Words', timer id is not ONE.     
    COMMENT
    COMMENT Class 301
    COMMENT In function 'Process429Words',timer_label of Timer_settings with index timer of Page_settings is equal  
    COMMENT to label of A429_data indices of channel and loop index count
    COMMENT
    COMMENT Class 302
    COMMENT In function 'Process429Words',timer_label of Timer_settings with index timer of Page_settings is not equal  
    COMMENT to label of A429_data indices of channel and loop index count   
    COMMENT
    COMMENT Class 303
    COMMENT In function 'Process429Words',timer_sdi   
    COMMENT of Timer_settings with index timer of Page_settings is equal to sdi of  
    COMMENT A429_data indices of channel and loop index count   
    COMMENT
    COMMENT Class 304
    COMMENT In function 'Process429Words',timer_sdi   
    COMMENT of Timer_settings with index timer of Page_settings is not equal to sdi of  
    COMMENT A429_data indices of channel and loop index count   
    COMMENT
    COMMENT Class 305
    COMMENT In function 'Process429Words', timer id is TWO.     
    COMMENT
    COMMENT Class 306
    COMMENT In function 'Process429Words', timer id is not TWO.     
    COMMENT
    COMMENT Class 307
    COMMENT In function 'Process429Words', timer id is ZERO.        
    COMMENT
    COMMENT Class 308
    COMMENT In function 'Process429Words', timer id is not ZERO.    
    COMMENT
    COMMENT Class 309
    COMMENT In function 'Process429Words', label value is LABEL_0273    
    COMMENT
    COMMENT Class 310
    COMMENT In function 'Process429Words', label value is not LABEL_0273    
    COMMENT
    COMMENT Class 311
    COMMENT In function 'Process429Words', Md engine flag is TRUE   
    COMMENT
    COMMENT Class 312
    COMMENT In function 'Process429Words', Md engine flag is FALSE      
    COMMENT
    COMMENT Class 313
    COMMENT In function 'Process429Words', ff once flag is False    
    COMMENT
    COMMENT Class 314
    COMMENT In function 'Process429Words', ff once flag is TRUE 
    COMMENT
    COMMENT Class 315
    COMMENT In function 'Process429Words', id value is THREE    
    COMMENT
    COMMENT Class 316
    COMMENT In function 'Process429Words', id value is not THREE    
    COMMENT
    COMMENT Class 317
    COMMENT In function 'Process429Words', ssm is equal to ZERO 
    COMMENT
    COMMENT Class 318
    COMMENT In function 'Process429Words', ssm is not equal to ZERO 
    COMMENT
    COMMENT Class 319
    COMMENT In function 'Process429Words', Fault_log_adv  is TRUE   
    COMMENT
    COMMENT Class 320
    COMMENT In function 'Process429Words', Fault_log_adv is FALSE   
    COMMENT
    COMMENT Class 321
    COMMENT In function 'Process429Words', Pbit_test_result  is ZERO    
    COMMENT
    COMMENT Class 322
    COMMENT In function 'Process429Words', Pbit_test_result is not ZERO 
    COMMENT
    COMMENT Class 323
    COMMENT In function 'Process429Words', received label is equal 
    COMMENT  to LABEL_0247 or LABEL_055 or LABEL_057    
    COMMENT
    COMMENT Class 324
    COMMENT In function 'Process429Words', received label is not equal 
    COMMENT  to LABEL_0247 or LABEL_055 or LABEL_057    
    COMMENT
    COMMENT Class 325
    COMMENT In function 'Process429Words', Sign bit is other than ZERO
    COMMENT
    COMMENT Class 326
    COMMENT In function 'Process429Words', Sign bit is ZERO 
    COMMENT
    COMMENT Class 327
    COMMENT In function 'Process429Words', DATA_28_BIT is equal to A429_data of 
    COMMENT  indices of channel and loop index count of sig_bits plus A429_data of 
    COMMENT  indices channel and loop index count of start_bit minus ONE.
    COMMENT
    COMMENT Class 328
    COMMENT In function 'Process429Words', DATA_28_BIT is not equal to A429_data of 
    COMMENT  indices of channel and loop index count of sig_bits plus A429_data of 
    COMMENT  indices channel and loop index count of start_bit minus ONE.   
    COMMENT
    COMMENT Class 329
    COMMENT In function 'Process429Words', label of A429_data with index as  channel and loop index count 
    COMMENT is equal to LABEL_0247
    COMMENT
    COMMENT Class 330
    COMMENT In function 'Process429Words', label of A429_data with index as  channel and loop index count 
    COMMENT is not equal to LABEL_0247  
    COMMENT
    COMMENT Class 331
    COMMENT In function 'Process429Words', Du_position is TWO   
    COMMENT
    COMMENT Class 332
    COMMENT In function 'Process429Words', Du_position is ONE   
    COMMENT
    COMMENT Class 333
    COMMENT In function 'Process429Words', Du_position is otherthan ONE ,TWO    
    COMMENT
    COMMENT Class 334
    COMMENT In function 'Process429Words', ssm is THREE 
    COMMENT
    COMMENT Class 335
    COMMENT In function 'Process429Words', ssm is not THREE     
    COMMENT
    COMMENT Class 336
    COMMENT In function 'Process429Words', data is within range of (data >= 40 and data <=50)   
    COMMENT
    COMMENT Class 337
    COMMENT In function 'Process429Words', data is not within range of (data >= 40 and data <=50)   
    COMMENT
    COMMENT Class 338
    COMMENT In function 'Process429Words', data is within range of (data >= 151 and data <=425) 
    COMMENT
    COMMENT Class 339
    COMMENT In function 'Process429Words', data is not within range of (data >= 151 and data <=425) 
    COMMENT
    COMMENT Class 340
    COMMENT In function 'Process429Words', loop index count is equal to LABEL_0272  
    COMMENT
    COMMENT Class 341
    COMMENT In function 'Process429Words', loop index count is not equal to LABEL_0272      
    COMMENT
    COMMENT Class 342
    COMMENT In function 'Process429Words', sdi value is ZERO    
    COMMENT
    COMMENT Class 343
    COMMENT In function 'Process429Words', sdi value is not ZERO    
    COMMENT
    COMMENT Class 344
    COMMENT In function 'Process429Words', loop index count is equal to LABEL_0250  
    COMMENT
    COMMENT Class 345
    COMMENT In function 'Process429Words', loop index count is not equal to LABEL_0250      
    COMMENT
    COMMENT Class 346
    COMMENT In function 'Process429Words', scu label flag is equal to SEVEN     
    COMMENT
    COMMENT Class 347
    COMMENT In function 'Process429Words', scu label flag is not equal to SEVEN         
    COMMENT
    COMMENT Class 348
    COMMENT In function 'Process429Words', scu timer of index ZERO or scu timer of index ONE or scu 
    COMMENT  timer of index TWO is greater than RTD_MAX_INTERVAL    
    COMMENT
    COMMENT Class 349
    COMMENT In function 'Process429Words', scu timer of index ZERO or scu timer of index ONE or scu 
    COMMENT  timer of index TWO is equal to RTD_MAX_INTERVAL    
    COMMENT
    COMMENT Class 350
    COMMENT In function 'Process429Words', scu timer of index ZERO or scu timer of index ONE or scu 
    COMMENT  timer of index TWO is less than RTD_MAX_INTERVAL
    COMMENT
    COMMENT Class 351
    COMMENT In function 'A429Init', scu_enable of configuration data is equal to TRUE   
    COMMENT
    COMMENT Class 352
    COMMENT In function 'A429Init', scu_enable of configuration data is equal to FALSE  
    COMMENT
    COMMENT Class 353
    COMMENT In function 'A429Init', label of A429_data with index zero and loop counter value is equal to LABEL_0247
    COMMENT
    COMMENT Class 354
    COMMENT In function 'A429Init', label of A429_data with index zero and loop counter value is not equal to LABEL_0247
    COMMENT
    COMMENT Class 355
    COMMENT In function 'A429Init', label of A429_data with index zero and loop counter value is equal to LABEL_0272
    COMMENT
    COMMENT Class 356
    COMMENT In function 'A429Init', label of A429_data with index zero and loop counter value is not equal to LABEL_0272
    COMMENT
    COMMENT Class 357
    COMMENT In function 'A429Init', sdi of A429_data with index zero and loop counter value is equal to ZERO    
    COMMENT
    COMMENT Class 358
    COMMENT In function 'A429Init', sdi of A429_data with index zero and loop counter value is not equal to ZERO    
    COMMENT
    COMMENT Class 359
    COMMENT In function 'A429Init', label of A429_data with index zero and loop counter value is equal to LABEL_0250
    COMMENT
    COMMENT Class 360
    COMMENT In function 'A429Init', label of A429_data with index zero and loop counter value is not equal to LABEL_0250    
    COMMENT
    COMMENT Class 361
    COMMENT In function 'Process429Words', Du_identified  is FALSE
    COMMENT
    COMMENT Class 362
    COMMENT In function 'Process429Words', Du_identified  is TRUE   
    COMMENT
    COMMENT Class 363
    COMMENT In function 'Process429Words' label of A429_data with indices channel and
    COMMENT loop index count is equal to LABEL_0346  
    COMMENT
    COMMENT Class 364
    COMMENT In function 'Process429Words' when label of A429_data with indices channel and
    COMMENT loop index count is not equal to LABEL_0346   
    COMMENT
    COMMENT Class 365
    COMMENT The function 'Process429Words' ssm is equal to three.
    COMMENT
    COMMENT Class 366
    COMMENT The function 'Process429Words' ssm is not equal to three.
    COMMENT  
    COMMENT </ECD>

--------------------------------------------------------------------------------
--
-- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
--
--------------------------------------------------------------------------------

SIMUL


    DEFINE STUB hdudispfa429_c

        #void A429Extract(T_UINT8 _in *address); 
            
        #void CasExtract(T_UINT8 _in *address);
 
        #void CasSetCasWord(T_UINT8 _in u8_index, T_UINT16 _in u16_cas_word); 
        
        #void RTDSetParam(T_UINT8 _in channel, T_UINT16 _in a429_tag, T_FLOAT _in s32_data, T_RTD_STATUS _in ertd_stat); 

        --variable str is made as _no because local variable address cannot be expected and 
        --the variable is verified in hdudispfa429_6.ptu.
        #T_UINT16 StrLen( T_CHAR _no *str);
        
        #void OffsetInttoIntArray(T_UINT8 sdi);

        #void GainInttoIntArray(T_UINT8 sdi);

    #void SetCMUFuelFlowEnable(T_UINT8  _in ff_enable_flag); 
    #void SetFuelFlowData(T_UINT8  _in a429_tag, T_FLOAT  _in data); 
    #void ProcessLmsScuProbeErr(T_UINT32  _in data, T_UINT8  _in status);
    #void ProcessLmsScuSysStatusErr(T_UINT32  _in data, T_UINT8  _in status); 
    #void ProcessingArinc01Fault(void); 
    #void ScuRTDSetParam(T_UINT8  _in channel, T_UINT16  _in a429_tag, T_UINT8  _in rtd_tag, T_FLOAT  _in s32_data, T_RTD_STATUS  _in ertd_stat); 

        
    END DEFINE

ELSE_SIMUL

    --No action defined as of now if the module is not simulated

END SIMUL

--------------------------------------------------------------------------------
--
-- ENVIRONMENTS DECLARATIONS
--
--------------------------------------------------------------------------------
--IF HOST

--No special things that have to be done on the host to run the test.

--ELSE

--No action defined for the target execution as of now

--END IF
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
-- TESTED FILE ENVIRONNEMENT
--------------------------------------------------------------------------------

-- Environment of the file hdudispfa429.c
--ENVIRONMENT ENV_hdudispfa429_c

--None

--END ENVIRONMENT -- ENV_hdudispfa429_c
--USE ENV_hdudispfa429_c

--------------------------------------------------------------------------------
--
-- SERVICES DECLARATIONS
--
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
-- Declaration of the service ProcessSysInfoWords
--------------------------------------------------------------------------------
SERVICE ProcessSysInfoWords
SERVICE_TYPE extern

#T_UINT8 Commf_part[31]; 
#T_UINT8 Boot_revno[31];
#T_UINT8 Maint_revno[31];
#T_UINT8 Commb_part[31];
#T_UINT8 App_revno[31];
#T_UINT8 Config_id[55];
#T_UINT8 Maint_part[31];
#T_UINT8 Bitmap_revno[25];
#T_UINT8 Dau_config_id_disp[55];
#T_UINT8 COnfig_data[50];
#T_UINT8 Eiu_heading[18];
#T_UINT8 Dau_config_id_dau[55];


TEST 23
FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfa429-ProcessSysInfoWords-DB-LLR-021]
    COMMENT The function loops for one to SYSINFO_LABEL_WORDS times and does the following
    COMMENT a) set Eiucmuf_part of index (increment index one by four) to data1 of system info word with index as loop counter 
    COMMENT and set second flag to zero when first flag is other than one  and second flag is one.
    COMMENT When all of the below conditions are satisified, 
    COMMENT 1) sequence of system info word with index as loop counter is not less than or equal to SIXTEEN or 
    COMMENT sequence of system info word with index as loop counter is equal to ZERO
    COMMENT 2) sequence of system info word with index as loop counter is not less than or equal to THIRTY_TWO or 
    COMMENT sequence of system info word with index as loop counter is equal to ZERO
    COMMENT 3) sequence of system info word with index as loop counter is not less than or equal to 48 or sequence of
    COMMENT system info word with index as loop counter is equal to ZERO
    COMMENT 4) sequence of system info word with index as loop counter is less than or equal to SYS_INFO_WORDS_64.
    COMMENT 5) sequence of system info word with index as loop counter is not equal to ZERO.
    COMMENT Equivalence Class 150,157,162,165,168,170,176
    COMMENT </TD>

    
    ELEMENT
    
        COMMENT INPUT SECTION:
        
            -- None
        
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        COMMENT OUTPUT SECTION:
         
            -- EIU Configuration Management Unit flight part number
            VAR Eiucmuf_part[0],                    init=10,        ev=6
            
        -- Stub Calls
        SIMUL   
    
            STUB StrLen 1..7=>()1
    
        END SIMUL
        
        --Called to initialize data1, data2 of system info word    
        #SetSysInfoWords(63, 6, 13);  
        
        -- Calling the Unit Under Test :
        #ProcessSysInfoWords();
        
    END ELEMENT

END TEST -- TEST 23

TEST 24
FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfa429-ProcessSysInfoWords-DB-LLR-021]
    COMMENT The function loops for one to SYSINFO_LABEL_WORDS times and does the following
    COMMENT a) set Eiucmuf_part of index (increment index one by four) to data1 of system info word with index as 
    COMMENT loop counter , set Eiucmuf_part of index (increment index one by four) to ' ' and set third flag to zero when 
    COMMENT first flag is other than one, second flag is other than one  and third flag is one.
    COMMENT When all of the below conditions are satisified, 
    COMMENT 1) sequence of system info word with index as loop counter is not less than or equal to SIXTEEN or 
    COMMENT sequence of system info word with index as loop counter is equal to ZERO
    COMMENT 2) sequence of system info word with index as loop counter is not less than or equal to THIRTY_TWO or 
    COMMENT sequence of system info word with index as loop counter is equal to ZERO
    COMMENT 3) sequence of system info word with index as loop counter is not less than or equal to 48 or sequence of
    COMMENT system info word with index as loop counter is equal to ZERO
    COMMENT 4) sequence of system info word with index as loop counter is less than or equal to SYS_INFO_WORDS_64.
    COMMENT 5) sequence of system info word with index as loop counter is not equal to ZERO.
    COMMENT Equivalence Class 151,159,162,165,168,170,176
    COMMENT </TD>
    
    ELEMENT
    
        COMMENT INPUT SECTION:
        
            -- None
        
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        COMMENT OUTPUT SECTION:
        
            -- EIU Configuration Management Unit flight part number
            VAR Eiucmuf_part[0],                    init=66,        ev=11
            
            -- EIU Configuration Management Unit flight part number
            VAR Eiucmuf_part[1],                    init=66,        ev=32
            
        -- Stub Calls
        SIMUL   
    
            STUB StrLen 1..7=>()1
    
        END SIMUL
        
        --Called to initialize data1, data2 of system info word    
        #SetSysInfoWords(63, 11, 9); 
        
        -- Calling the Unit Under Test :
        #ProcessSysInfoWords();
        
     END ELEMENT

END TEST -- TEST 24


TEST 25
FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfa429-ProcessSysInfoWords-DB-LLR-022]
    COMMENT The function loops for one to SYSINFO_LABEL_WORDS times and does the following
    COMMENT a)  set Eiucmum_part of index (increment index one by five) to data2 of system info word with index as loop counter and
    COMMENT set first flag to zero when first flag is one.
    COMMENT When all of the below conditions are satisified,
    COMMENT 1)  sequence of system info word with index as loop counter is not less than or equal to SIXTEEN or
    COMMENT sequence of system info word with index as loop counter is equal to ZERO
    COMMENT 2)  sequence of system info word with index as loop counter is not less than or equal to THIRTY_TWO or 
    COMMENT sequence of system info word with index as loop counter is equal to ZERO
    COMMENT 3)  sequence of system info word with index as loop counter is not less than or equal to SYS_INFO_WORDS_48 or
    COMMENT sequence of system info word with index as loop counter is equal to ZERO
    COMMENT 4)  sequence of system info word with index as loop counter is not less than or equal to SYS_INFO_WORDS_64 or 
    COMMENT sequence of system info word with index as loop counter is equal to ZERO
    COMMENT 5)  sequence of system info word with index as loop counter is less than or equal to SYS_INFO_WORDS_80.
    COMMENT 6)  sequence of system info word with index as loop counter is not equal to ZERO.
    COMMENT Equivalence Class 149,154,162,165,168,171,173,176
    COMMENT </TD>
    
    ELEMENT
    
        COMMENT INPUT SECTION:
        
            -- None
        
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        COMMENT OUTPUT SECTION:
                    
            --EIU Configuration Management Unit maintenance part number
            VAR Eiucmum_part[0],                    init=55,        ev=4            
            
        -- Stub Calls
        SIMUL   
    
            STUB StrLen 1..7=>()1
    
        END SIMUL
   
        --Called to initialize data1, data2 of system info word    
        #SetSysInfoWords(77, 9, 4);

        -- Calling the Unit Under Test :
        #ProcessSysInfoWords();

    END ELEMENT

END TEST -- TEST 25

TEST 26
FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfa429-ProcessSysInfoWords-DB-LLR-022]
    COMMENT The function loops for one to SYSINFO_LABEL_WORDS times and does the following
    COMMENT a) set Eiucmum_part of index (increment index one by five) to data1 of system info word with index as 
    COMMENT loop counter and set second flag to zero when first flag is other than one  and second flag is one
    COMMENT When all of the below conditions are satisified,
    COMMENT 1)  sequence of system info word with index as loop counter is not less than or equal to SIXTEEN or
    COMMENT sequence of system info word with index as loop counter is equal to ZERO
    COMMENT 2)  sequence of system info word with index as loop counter is not less than or equal to THIRTY_TWO or 
    COMMENT sequence of system info word with index as loop counter is equal to ZERO
    COMMENT 3)  sequence of system info word with index as loop counter is not less than or equal to SYS_INFO_WORDS_48 or
    COMMENT sequence of system info word with index as loop counter is equal to ZERO
    COMMENT 4)  sequence of system info word with index as loop counter is not less than or equal to SYS_INFO_WORDS_64 or 
    COMMENT sequence of system info word with index as loop counter is equal to ZERO
    COMMENT 5)  sequence of system info word with index as loop counter is less than or equal to SYS_INFO_WORDS_80.
    COMMENT 6)  sequence of system info word with index as loop counter is not equal to ZERO.
    COMMENT Equivalence Class 151,157,162,165,168,171,173,176
    COMMENT </TD>
    
    ELEMENT
    
        COMMENT INPUT SECTION:
        
            -- None
        
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        COMMENT OUTPUT SECTION:
            
            --EIU Configuration Management Unit maintenance part number
            VAR Eiucmum_part[0],                    init=55,        ev=66           
            
        -- Stub Calls
        SIMUL   
    
            STUB StrLen 1..7=>()1
    
        END SIMUL
        
        --Called to initialize data1, data2 of system info word    
        #SetSysInfoWords(77, 66, 13);

        -- Calling the Unit Under Test :
        #ProcessSysInfoWords();
        
    END ELEMENT

END TEST -- TEST 26

END SERVICE -- ProcessSysInfoWords


--------------------------------------------------------------------------------
-- Declaration of the service SetSysAirFrameWords
--------------------------------------------------------------------------------
SERVICE SetSysAirFrameWords
SERVICE_TYPE extern

-- Tested service parameters declarations
#T_UINT8 u8_index;
#T_UINT8 data1;
#T_UINT8 data2;

ENVIRONMENT ENV_SetSysAirFrameWords

VAR u8_index,                       init = 0,                   ev = init

VAR data1,                          init = 0,                   ev = init

VAR data2,                          init = 0,                   ev = init

END ENVIRONMENT -- ENV_SetSysAirFrameWords

USE ENV_SetSysAirFrameWords

TEST 1
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfa429-SetSysAirFrameWords-DB-LLR-001]
    COMMENT The function shall do the following,
    COMMENT a)Set data1 to data1 of system airframe words with reminder of u8_index modulo
    COMMENT AIRFRAME_LABEL_WORDS as index.
    COMMENT b)Set data2 to data2 of system airframe words with reminder of u8_index modulo
    COMMENT AIRFRAME_LABEL_WORDS as index.
    COMMENT c)Set u8_index to sequence of system airframe words with reminder of u8_index
    COMMENT modulo AIRFRAME_LABEL_WORDS as index.
    COMMENT parameters checked for nominal values 
    COMMENT Equivalence class 213
    COMMENT </TD>
    
    ELEMENT

        COMMENT INPUT SECTION:
        
            --Parameters of the function 'SetSysAirFrameWords'
            VAR u8_index,                       init = 1,                   ev = init

            VAR data1,                          init = 2,                   ev = init

            VAR data2,                          init = 3,                   ev = init
        
        COMMENT INPUT/OUTPUT SECTION:
        
            --None  
    
         COMMENT OUTPUT SECTION:
         
            --None

            -- Calling the Unit Under Test :
            #SetSysAirFrameWords(u8_index, data1, data2);
    
    END ELEMENT

END TEST -- TEST 1

TEST 2
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfa429-SetSysAirFrameWords-DB-LLR-001]
    COMMENT The function shall do the following,
    COMMENT a)Set data1 to data1 of system airframe words with reminder of u8_index modulo
    COMMENT AIRFRAME_LABEL_WORDS as index.
    COMMENT b)Set data2 to data2 of system airframe words with reminder of u8_index modulo
    COMMENT AIRFRAME_LABEL_WORDS as index.
    COMMENT c)Set u8_index to sequence of system airframe words with reminder of u8_index
    COMMENT modulo AIRFRAME_LABEL_WORDS as index.
    COMMENT parameters checked for minimum values 
    COMMENT Equivalence class 213
    COMMENT
    COMMENT </TD>
    
    ELEMENT

        COMMENT INPUT SECTION:
        
            --Parameters of the function 'SetSysAirFrameWords'
            VAR u8_index,                       init = 0x00,                    ev = init

            VAR data1,                          init = 0x00,                    ev = init

            VAR data2,                          init = 0x00,                    ev = init
        
        COMMENT INPUT/OUTPUT SECTION:
        
            --None  
    
         COMMENT OUTPUT SECTION:
         
            --None

            -- Calling the Unit Under Test :
            #SetSysAirFrameWords(u8_index, data1, data2);
    
    END ELEMENT

END TEST -- TEST 2

TEST 3
FAMILY nominal


    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfa429-SetSysAirFrameWords-DB-LLR-001]
    COMMENT The function shall do the following,
    COMMENT a)Set data1 to data1 of system airframe words with reminder of u8_index modulo
    COMMENT AIRFRAME_LABEL_WORDS as index.
    COMMENT b)Set data2 to data2 of system airframe words with reminder of u8_index modulo
    COMMENT AIRFRAME_LABEL_WORDS as index.
    COMMENT c)Set u8_index to sequence of system airframe words with reminder of u8_index
    COMMENT modulo AIRFRAME_LABEL_WORDS as index.
    COMMENT parameters checked for maximum values 
    COMMENT Equivalence class 213
    COMMENT
    COMMENT </TD>
    
    ELEMENT

        COMMENT INPUT SECTION:
        
            --Parameters of the function 'SetSysAirFrameWords'
            VAR u8_index,                       init = 0xFF,                    ev = init

            VAR data1,                          init = 0xFF,                    ev = init

            VAR data2,                          init = 0xFF,                    ev = init
        
        COMMENT INPUT/OUTPUT SECTION:
        
            --None  
    
         COMMENT OUTPUT SECTION:
         
            --None          

            -- Calling the Unit Under Test :
            #SetSysAirFrameWords(u8_index, data1, data2);
    
    END ELEMENT

END TEST -- TEST 3

END SERVICE -- SetSysAirFrameWords


--------------------------------------------------------------------------------
-- Declaration of the service ProcessAirframeInfoWords
--------------------------------------------------------------------------------
SERVICE ProcessAirframeInfoWords
SERVICE_TYPE extern


TEST 1
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfa429-ProcessAirframeInfoWords-DB-LLR-001]
    COMMENT for 0th iteration 
    COMMENT The function loops for AIRFRAME_LABEL_WORDS times and does nothing 
    COMMENT when sequence of system airframe words with loop index
    COMMENT is greater than ARCFT_MDL_BYTE (MCDC : FX)
    COMMENT 
    COMMENT for 1st to 7th iteration
    COMMENT The function loops for AIRFRAME_LABEL_WORDS times and does the following,
    COMMENT 1) when sequence of system airframe words with loop index as index is less than 
    COMMENT    ARCFT_MDL_BYTE and index is less than ARCFT_MDL_BYTE.
    COMMENT  a)Set aircraft model with incremented airframe id1 as index to data1 of system airframe
    COMMENT    words with loop index as index
    COMMENT  b)Set aircraft model with incremented airframe id1 as index to data2 of system airframe
    COMMENT    words with loop index as index. (MCDC : TT)
    COMMENT  
    COMMENT for 8th and above iterations 
    COMMENT The function loops for AIRFRAME_LABEL_WORDS times and does nothing 
    COMMENT when index is greater than ARCFT_MDL_BYTE (MCDC : TX)
    COMMENT Equivalence Class 214,215,217,218,219,216
    COMMENT 
    COMMENT 
    COMMENT [hdudispfa429-ProcessAirframeInfoWords-DB-LLR-002]
    COMMENT for 0th iteration 
    COMMENT The function loops for AIRFRAME_LABEL_WORDS times and does nothing 
    COMMENT when sequence of system airframe words with loop index
    COMMENT is greater than ENGINE_TYPE_BYTE (MCDC : FX)
    COMMENT 
    COMMENT for 8th to 15th iteration
    COMMENT The function loops for AIRFRAME_LABEL_WORDS times and does the following,
    COMMENT 1) when sequence of system airframe words with loop index as index is greater than 
    COMMENT    ARCFT_MDL_BYTE and index is greater than ARCFT_MDL_BYTE.
    COMMENT 2) when sequence of system airframe words with loop index as index is less than 
    COMMENT    ENGINE_TYPE_BYTE and index is less than ENGINE_TYPE_BYTE.
    COMMENT  a)Set aircraft model with incremented airframe id1 as index to data1 of system airframe
    COMMENT    words with loop index as index
    COMMENT  b)Set aircraft model with incremented airframe id1 as index to data2 of system airframe
    COMMENT    words with loop index as index. (MCDC : TT)
    COMMENT  
    COMMENT for 16th and above iterations 
    COMMENT The function loops for AIRFRAME_LABEL_WORDS times and does nothing 
    COMMENT when index is greater than ENGINE_TYPE_BYTE (MCDC : TX)
    COMMENT Equivalence Class 220,221,223,224,214,217,225,222
    COMMENT
    COMMENT [hdudispfa429-ProcessAirframeInfoWords-DB-LLR-003]
    COMMENT for 0th iteration 
    COMMENT The function loops for AIRFRAME_LABEL_WORDS times and does nothing 
    COMMENT when sequence of system airframe words with loop index
    COMMENT is greater than ENGINE_SER_BYTE (MCDC : FX)
    COMMENT 
    COMMENT for 16th to 23rd iteration
    COMMENT The function loops for AIRFRAME_LABEL_WORDS times and does the following,
    COMMENT 1) when sequence of system airframe words with loop index as index is greater than 
    COMMENT    ARCFT_MDL_BYTE and index is greater than ARCFT_MDL_BYTE.
    COMMENT 2) when sequence of system airframe words with loop index as index is greater than 
    COMMENT    ENGINE_TYPE_BYTE and index is greater than ENGINE_TYPE_BYTE.
    COMMENT 3) when sequence of system airframe words with loop index as index is less than 
    COMMENT    ENGINE_SER_BYTE and index is less than ENGINE_SER_BYTE.
    COMMENT  a)Set aircraft model with incremented airframe id1 as index to data1 of system airframe
    COMMENT    words with loop index as index
    COMMENT  b)Set aircraft model with incremented airframe id1 as index to data2 of system airframe
    COMMENT    words with loop index as index. (MCDC : TT)
    COMMENT  
    COMMENT for 24th and above iterations 
    COMMENT The function loops for AIRFRAME_LABEL_WORDS times and does nothing 
    COMMENT when index is greater than ENGINE_SER_BYTE (MCDC : TX)
    COMMENT Equivalence Class 226,227,229,230,214,217,220,223,231,228
    COMMENT
    COMMENT [hdudispfa429-ProcessAirframeInfoWords-DB-LLR-004]
    COMMENT for 0th iteration 
    COMMENT The function loops for AIRFRAME_LABEL_WORDS times and does nothing 
    COMMENT when sequence of system airframe words with loop index
    COMMENT is greater than AICFT_SER_BYTE (MCDC : FX)
    COMMENT 
    COMMENT for 25th to 31st iteration
    COMMENT The function loops for AIRFRAME_LABEL_WORDS times and does the following,
    COMMENT 1) when sequence of system airframe words with loop index as index is greater than 
    COMMENT    ARCFT_MDL_BYTE and index is greater than ARCFT_MDL_BYTE.
    COMMENT 2) when sequence of system airframe words with loop index as index is greater than 
    COMMENT    ENGINE_TYPE_BYTE and index is greater than ENGINE_TYPE_BYTE.
    COMMENT 3) when sequence of system airframe words with loop index as index is greater than 
    COMMENT    ENGINE_SER_BYTE and index is greater than ENGINE_SER_BYTE.
    COMMENT 4) when sequence of system airframe words with loop index as index is less than 
    COMMENT    AICFT_SER_BYTE and index is less than AICFT_SER_BYTE.
    COMMENT  a)Set aircraft model with incremented airframe id1 as index to data1 of system airframe
    COMMENT    words with loop index as index
    COMMENT  b)Set aircraft model with incremented airframe id1 as index to data2 of system airframe
    COMMENT    words with loop index as index. (MCDC : TT)
    COMMENT  
    COMMENT for 32nd and above iterations 
    COMMENT The function loops for AIRFRAME_LABEL_WORDS times and does nothing 
    COMMENT when index is greater than AICFT_SER_BYTE (MCDC : TX)
    COMMENT Equivalence Class 232,233,235,236,214,217,220,223,226,229,237,234
    COMMENT
    COMMENT [hdudispfa429-ProcessAirframeInfoWords-DB-LLR-005]
    COMMENT for 0th iteration 
    COMMENT The function loops for AIRFRAME_LABEL_WORDS times and does nothing 
    COMMENT when sequence of system airframe words with loop index
    COMMENT is greater than AICFT_REGS_BYTE 
    COMMENT 
    COMMENT for 1st and above iteration
    COMMENT The function loops for AIRFRAME_LABEL_WORDS times and does the following,
    COMMENT 1) when sequence of system airframe words with loop index as index is greater than 
    COMMENT    ARCFT_MDL_BYTE and index is greater than ARCFT_MDL_BYTE.
    COMMENT 2) when sequence of system airframe words with loop index as index is greater than 
    COMMENT    ENGINE_TYPE_BYTE and index is greater than ENGINE_TYPE_BYTE.
    COMMENT 3) when sequence of system airframe words with loop index as index is greater than 
    COMMENT    ENGINE_SER_BYTE and index is greater than ENGINE_SER_BYTE.
    COMMENT 4) when sequence of system airframe words with loop index as index is greater than 
    COMMENT    AICFT_SER_BYTE and index is greater than AICFT_SER_BYTE.
    COMMENT 5) when sequence of system airframe words with loop index as index is less than 
    COMMENT    AICFT_REGS_BYTE and index is less than AICFT_REGS_BYTE.
    COMMENT  a)Set aircraft model with incremented airframe id1 as index to data1 of system airframe
    COMMENT    words with loop index as index
    COMMENT  b)Set aircraft model with incremented airframe id1 as index to data2 of system airframe
    COMMENT    words with loop index as index. (MCDC : TRUE)
    COMMENT Equivalence Class 238,239,241,242,214,217,220,223,226,229,232,235,243,240
    COMMENT
    COMMENT [hdudispfa429-ProcessAirframeInfoWords-DB-LLR-009]
    COMMENT 0th iteration of for loop
    COMMENT The function does the following,
    COMMENT a)  Call the function MemCpy with parameters as Dau_config_id_disp,config_engine
    COMMENT of Config_data and ENG_CONFIG_LEN.
    COMMENT b)  Gets the engine configuration length by call function StrLen function with 
    COMMENT Dau_config_id_disp as parameters.
    COMMENT variable len_config_engine is verified in 0th iteration of for loop. 
    COMMENT Equivalence Class 244,245
    COMMENT 
    COMMENT [hdudispfa429-ProcessAirframeInfoWords-DB-LLR-010]
    COMMENT The function does the following,
    COMMENT a)  Call function MemCpy with spilt word1, Dau_config_id_disp and loop index as parameters.
    COMMENT b)  Call function MemCpy with spilt word2, reference of Dau_config_id_disp with loop index
    COMMENT plus 1 as index and engine configuration length minus loop index as parameters.
    COMMENT Equivalence Class 244
    COMMENT 
    COMMENT [hdudispfa429-ProcessAirframeInfoWords-DB-LLR-011]
    COMMENT The function does the following when return value of StringCompare with 
    COMMENT spilt word1 and aircraft model as parameters is equal to TRUE AND return 
    COMMENT value of StringCompare with spilt word2 and engine type as parameters is equal to TRUE.
    COMMENT a)   Reset 7th  bit of U16_message_words of index 1 (MCDC : TT)
    COMMENT Equivalence Class 249,251,248
    COMMENT 
    COMMENT </TD>

    COMMENT 
    
    ELEMENT
    
        COMMENT INPUT SECTION:
        
            VAR Config_data.config_engine[0],   init = '\0',                ev = init
    
        COMMENT INPUT/OUTPUT SECTION:
        
            VAR Dau_config_id_disp[0],          init ='a',                   ev = '\0'
    
         COMMENT OUTPUT SECTION:
         
            VAR U16_message_words[1],           init = 0x40,                 ev = 0x00  

            VAR Engine_serial[15..30],          init = 'a',                  ev = '\0'
            
            VAR Aircraft_serial[15..30],        init = 'b',                  ev = '\0'
            
            VAR Aircraft_regstrn[15..22],       init = 'c',                  ev = '\0'
            
                -- Stub Calls
        SIMUL   

            STUB StrLen 1..7=>()0

        END SIMUL
        
        --Called to initialize sequence, data1, data2 of system airframe word
        #SetSysAirFrameWords(36,'b',25);
        
        -- Calling the Unit Under Test :
        #ProcessAirframeInfoWords();
        
    END ELEMENT

END TEST -- TEST 1

TEST 2
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfa429-ProcessAirframeInfoWords-DB-LLR-009]
    COMMENT 1 iteration of for loop
    COMMENT The function does the following,
    COMMENT a)  Call the function MemCpy with parameters as Dau_config_id_disp,config_engine
    COMMENT of Config_data and ENG_CONFIG_LEN.
    COMMENT b)  Gets the engine configuration length by call function StrLen function with 
    COMMENT Dau_config_id_disp as parameters.
    COMMENT c) Loops from 0 to engine configuration length minus 1 and does nothing when
    COMMENT Dau_config_id_disp with loop index is not equal to space.
    COMMENT Equivalence Class 244,245,247
    COMMENT 
    COMMENT [hdudispfa429-ProcessAirframeInfoWords-DB-LLR-012]
    COMMENT The function does the following when return value of StringCompare with 
    COMMENT spilt word1 and aircraft model as parameters is equal to FALSE 
    COMMENT a)   Set 7th  bit of U16_message_words of index 1 (MCDC : FX)
    COMMENT Equivalence Class 250,248
    COMMENT 
    COMMENT </TD>

    COMMENT 
    
    ELEMENT
    
        COMMENT INPUT SECTION:
        
            VAR Config_data.config_engine[0],   init = 'b',         ev = init
    
        COMMENT INPUT/OUTPUT SECTION:
        
            VAR Dau_config_id_disp[0],          init ='a',          ev = 'b'
    
         COMMENT OUTPUT SECTION:
         
            VAR  U16_message_words[1],          init = 0,           ev = ARCFT_ENGN_TYP_ERR
         
            VAR  U16_sys_info_words[1],         init = 0,           ev = 248
    
                -- Stub Calls
        SIMUL   

            STUB StrLen 1..5=>()1

        END SIMUL
        
        --Called to initialize sequence, data1, data2 of system airframe word
        #SetSysAirFrameWords(36,'b',25);
        
        -- Calling the Unit Under Test :
        #ProcessAirframeInfoWords();
        
    END ELEMENT

END TEST -- TEST 2

TEST 3
FAMILY nominal


    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfa429-ProcessAirframeInfoWords-DB-LLR-009]
    COMMENT 1 iteration of for loop
    COMMENT The function does the following,
    COMMENT a)  Call the function MemCpy with parameters as Dau_config_id_disp,config_engine
    COMMENT of Config_data and ENG_CONFIG_LEN.
    COMMENT b)  Gets the engine configuration length by call function StrLen function with 
    COMMENT Dau_config_id_disp as parameters.
    COMMENT c) Loops from 0 to engine configuration length minus 1 and break from the loop when
    COMMENT Dau_config_id_disp with loop index is equal to space.
    COMMENT Equivalence Class 244,245,246
    COMMENT 
    COMMENT [hdudispfa429-ProcessAirframeInfoWords-DB-LLR-012]
    COMMENT The function does the following when return value of StringCompare with 
    COMMENT spilt word1 and aircraft model as parameters is equal to TRUE AND return 
    COMMENT value of StringCompare with spilt word2 and engine type as parameters is equal to FALSE.
    COMMENT a)   Set 7th  bit of U16_message_words of index 1 (MCDC : TF)
    COMMENT Equivalence Class 249,252 
    COMMENT 
    COMMENT [hdudispfa429-ProcessAirframeInfoWords-DB-LLR-013]
    COMMENT The function does the following,
    COMMENT a)  Call function MemCpy with reference of Aircraft_model of index 15, aircraft model,
    COMMENT     return value of function StrLen with aircraft model as index.
    COMMENT b)  Call function MemCpy with reference of Engine_type of index 15, engine type, 
    COMMENT     return value of function StrLen with engine type as index.
    COMMENT c)  Set U16_sys_info_words with index 1 to bitwise or U16_sys_info_words with index 1
    COMMENT     with result of bitwise or of (ENGN_SER_PART_ERR, ARCFT_SER_PART_ERR, ARCFT_REG_PART_ERR,
    COMMENT     ARCFT_MDL_PART_ERR and ENGN_TYP_PART_ERR)
    COMMENT variable aircrft_model_temp and engine_typ_temp is verified here which is assigned in LLR
    COMMENT hdudispfa429-ProcessAirframeInfoWords-DB-LLR-001 and hdudispfa429-ProcessAirframeInfoWords-DB-LLR-002 
    COMMENT respectively
    COMMENT Equivalence Class 244,245
    COMMENT 
    COMMENT </TD>
    
    ELEMENT
    
        COMMENT INPUT SECTION:
        
            ARRAY Config_data.config_engine,    init = {0=>'H',1=>'o',2=>'w',3=>'e',4=>'l',5=>'l',
            &                                           6=>' ',7=>'D',8=>'i',9=>'s',10=>'p',11=>'l',
            &                                           12=>'a',13=>'y',others=>'\0'},          
            &                                                       ev = init
    
        COMMENT INPUT/OUTPUT SECTION:
        
            ARRAY Dau_config_id_disp,           init = {others=>'\0'},          
            &                                                       ev = {0=>'H',1=>'o',2=>'w',3=>'e',4=>'l',5=>'l',
            &                                                       6=>' ',7=>'D',8=>'i',9=>'s',10=>'p',11=>'l',
            &                                                       12=>'a',13=>'y',others=>'\0'},
    
         COMMENT OUTPUT SECTION:

            ARRAY Aircraft_model,               init = {others=>'\0'},
            &                                                       ev = {15=>'H',16=>'o',17=>'w',18=>'e',19=>'l',20=>'l',
            &                                                       others =>'\0'}
            
            ARRAY Engine_type,                  init = {others=>'\0'},
            &                                                       ev = {15=>'E',16=>'n',17=>'g',18=>'i',19=>'n',20=>'e',
            &                                                       others =>'\0'}
        
            VAR U16_sys_info_words[1],          init = 0,                    ev = 248
                
                -- Stub Calls
        SIMUL   

            STUB StrLen 1..7=>()14

        END SIMUL
        
        --Called to initialize sequence, data1, data2 of system airframe word
        #SetSysAirFrameWords(0,'H','o');
        #SetSysAirFrameWords(1,'w','e');
        #SetSysAirFrameWords(2,'l','l');    
        
        #SetSysAirFrameWords(8,'E','n');
        #SetSysAirFrameWords(9,'g','i');
        #SetSysAirFrameWords(10,'n','e');
        
        -- Calling the Unit Under Test :
        #ProcessAirframeInfoWords();
        
    END ELEMENT

END TEST -- TEST 3

END SERVICE -- ProcessAirframeInfoWords





HEADER hdudispfa429, Source Code Ver : 1.22 , TestScript Ver :1.4
--------------------------------------------------------------------------------
-- Author Name         : Vignesh Sunil
--
-- File Name           : hdudispfa429_9.ptu
--
-- Test Creation Date  : 27-04-2021
--
-- Tested Functions    :A429ProcessA825
--						A429Init
--                      Process429Words
--                      


-- Version History     :
--
-- TEST-VERSION         TEST-DATE         TESTER NAME           MODIFICATIONS
-- ------------        -----------        -----------           -------------
--	  1.1			   27-04-2021		  Vignesh Sunil			Updated as per #PR100338
--	  1.2			   14-05-2021		  Vignesh Sunil			Updated as per #PR100354
--    1.3              22.04.2022         P AFREEN              Updated as per #PR1000371
--    1.4              25.04.2022         P AFREEN              Addressed QA comments as per #PR1000371

--------------------------------------------------------------------------------
--
-- TESTED FILE INCLUDE DIRECTIVES
--
--------------------------------------------------------------------------------

#/*============================================================================*/
#/* Module specific includes*/
#/*============================================================================*/
##include "hdudispflmsscu.h"  
##include "hdudispfa429.h"  
##include "hdudispfcas.h"   
##include "hdudispfdauprofile.h" 
##include "hdudispfglobalsettings.h"  
##include "hdudispfrtd.h"   
##include "hdulibbasictypes.h" 
##include "hdudispfpara.h"      
##include "hdudispfarinc825.h"  
##include "hdudispftext.h"      

-- Updated as per PR 100083 
##include "hdudispfrevno.h"  
##include "hdudispfpdidata.h"
##include "hdudispfgrapp.h"  
##include "hdudispfpbit.h"   
##include "hdulibcorecm7.h"  
##include "hdudispfmenu.h"   
##include "hdudispfmdff.h" 


##define EXTRACT_1ST_BYTE 0x00000FF
##define HEX_F0           0xF0
##define HEX_0F           0x0F
##define HEX_CC           0xCC
##define HEX_33           0x33
##define HEX_AA           0xAA
##define HEX_55           0x55
##define EXTRACT_2BYTE    0x0000FFFF

##define HEX_7F           0x7F
##define LABEL_0273    0273
##define LABEL_0244    0244
##define LABEL_0346    0346
##define LABEL_0247    0247

##define LABEL_0272    0272

##define LABEL_0360    0360
##define LABEL_0370    0370
##define SEVENTEEN                17U
##define TWENTY_FOUR              24U
##define REVNO_DISP_FLIGHT_CRC    0x80FFFFC
##define REVNO_DISP_BOOT_PN       0x800FFEC
##define REVNO_DISP_BOOT_CRC      0x800FFFC
##define REVNO_DISP_MAINT_PN      0x0807FFEC
##define REVNO_DISP_MAINT_CRC     0x0807FFFC
##define REVNO_BMP_PN             0x6281FFEC
##define REVNO_BMP_CRC            0x6281FFFC
##define REVNO_PDI_CRC            0x63FFFFFC
##define REVNO_LEN                16U
##define CRC_LEN                  4U
##define SYSINFO_LABEL_WORDS      81
##define TO_HEX(i)               (i <= 9 ? '0' + i : 'A' - 10 + i)
##define BIT_SHIFT_BY_512         512
##define BIT_SHIFT_BY_1024        1024
##define BIT_SHIFT_BY_256         256
##define BIT_SHIFT_BY_2048        2048
##define BIT_SHIFT_BY_4096        4096
##define BIT_SHIFT_BY_128         128
##define BIT_SHIFT_BY_4           4
##define SHIFT_BY_28              28
##define SHIFT_BY_24              24
##define SHIFT_BY_20              20
##define SHIFT_BY_16              16
##define SHIFT_BY_12              12
##define SHIFT_BY_8               8
##define SHIFT_BY_4               4
##define EXT_BIT_28_31            0xF0000000
##define EXT_BIT_24_27            0x0F000000
##define EXT_BIT_20_23            0x00F00000
##define EXT_BIT_16_19            0x000F0000
##define EXT_BIT_12_15            0x0000F000
##define EXT_BIT_8_11             0x00000F00
##define EXT_BIT_4_7              0x000000F0
##define EXT_BIT_0_3              0x0000000F
##define MAX_64_BIT               0xFFFFFFFF
##define BUF_LEN_22               22
##define BUF_LEN_6                6
##define BUF_LEN_16               16
##define CHAR_H                   'H'
##define CHAR_LEN_6               6

##define CHAR_LEN_17              17
##define MAX_32           0xFFFFFFFF
##define CAU_WARN_MAX_ID 6
##define DDW_SIG_BIT     19
##define BIT_16_SET      32768
##define AIRFRAME_LABEL_WORDS      36
##define ARCFT_MDL_BYTE   7
##define ENGINE_TYPE_BYTE 15
##define ENGINE_SER_BYTE  23
##define AICFT_SER_BYTE   31
##define AICFT_REGS_BYTE  35
##define CHAR_LEN_24      24

##define LABEL_051    051
##define LABEL_052    052
##define CALILABELCOUNT 2

--------------------------------------------------------------------------------
--
-- TESTED FILE DECLARATIONS 
--
--------------------------------------------------------------------------------
   
-- Declarations of the global variables of the tested file
	#T_INT32 S32_data_exceed[4];
	#T_EXCEED_STRUCT Exceed_data[66];
    #T_UINT16 Pbit_test_result; 
    #T_EIU Active_eiu; 
    #T_UINT16 U16_sys_info_words[ 2 ]; 
    #T_CONFIG_STRUCT Config_data; 
    #T_UINT8 Revno_id[  16U ]; 
    #T_UINT16 U16_message_words[ 3 ]; 
    #T_PARAM_TABLE Parameters_numbox[256];
    #T_PARAM_TABLE Parameters[256];
    #T_A429_PARAMS A429_cfg_data[256]; 
    #T_UINT16 A429_settings_cnt; 
    #T_UINT16 U16_cas_words[    (  64    /8) ]; 
    #T_ACDT_STRUCT Auto_cool_down_tmr; 
    #T_CAS_MSG_DEF Cas_msg[  64    ]; 
    #T_UINT8 Cas_cnt;     
    #T_UINT8 Eiufli_part[31];
    #T_UINT8 Eiucfg_part[31];
    #T_UINT8 Eiucmub_part[31];
    #T_UINT8 Eiucmuf_part[31];
    #T_UINT8 Eiucmum_part[31];
    #T_UINT8 Commb_part[31];
    #T_UINT8 Maint_part[31];    
    #T_UINT8 Commf_part[31]; 
    #T_UINT8 Boot_revno[31];
    #T_UINT8 Maint_revno[31];
    #T_UINT8 App_revno[31];
    #T_UINT8 Config_id[55];
    #T_UINT8 Bitmap_revno[25];
    #T_UINT8 Dau_config_id_disp[55];
    #T_UINT8 COnfig_data[50];
    #T_UINT8 Eiu_heading[18];
    #T_UINT8 Dau_config_id_dau[55];
	#T_UINT32 Offset_value_cal[NUMBEROFENGINES];
	#T_UINT32 Gain_value_cal[NUMBEROFENGINES];
#T_FLOAT N1_value;
	
	#T_PARAM_TABLE Scu_parameters[3]; 
    #T_UINT16 Timer_a429_tag[16]; 
    #T_TIMER_PARAM_STRUCT Exceed_timer_params[16];
    #T_PAGE Page_settings; 
    #T_UINT8 Timer_cnt; 
    #T_BOOL Md_engine_flag; 
    #T_UINT8 Cmu_fuel_flow;
    #T_UINT8 Scu_label_flag; 	
	
-- Declarations of the temporary variable
    
    --variables used to handle MemCpy
    #T_UINT8 PTU_dst[10],PTU_src[10];
    
    --variables used to handle MemSet
    #T_UINT8 PTU_memSet[10];
    
    #T_UINT8 PTU_address1,PTU_address2;
    
    #T_UINT8 PTU_REVNO_DISP_FLIGHT_CRC[500];
    
    #T_UINT8 PTU_REVNO_DISP_BOOT_PN[500];
    
    #T_UINT8 PTU_REVNO_DISP_BOOT_CRC[500];
    
    #T_UINT8 PTU_REVNO_DISP_MAINT_PN[500];
    
    #T_UINT8 PTU_REVNO_DISP_MAINT_CRC[500];
    
    #T_UINT8 PTU_REVNO_BMP_PN[500];
    
    #T_UINT8 PTU_REVNO_BMP_CRC[500];
    
    #T_UINT8 PTU_REVNO_PDI_CRC[500];
--------------------------------------------------------------------------------

BEGIN

    COMMENT Author Name         :   Vignesh Sunil
    COMMENT
    COMMENT File Name           :   hdudispfa429_9.ptu
    COMMENT 
    COMMENT Tested Functions    :  A429ProcessA825  
    COMMENT                        A429Init
    COMMENT                        Process429Words
    COMMENT                       
    COMMENT
    COMMENT Assumptions and Constraints
    COMMENT <AC>
    COMMENT 
    COMMENT Assumption(s): 
    COMMENT None
    COMMENT
    COMMENT Constraint(s):
    COMMENT 
    COMMENT 1. In source file 'hdudispfa429.c' following macro's are modified for testing purpose
    COMMENT /* modified macro for testing purpose */
    COMMENT //#define REVNO_DISP_FLIGHT_CRC    0x80FFFFC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_DISP_FLIGHT_CRC[500];
    COMMENT #define REVNO_DISP_FLIGHT_CRC    ((T_UINT8 *) &PTU_REVNO_DISP_FLIGHT_CRC[0])
    COMMENT
    COMMENT /* modified macro for testing purpose */
    COMMENT //#define REVNO_DISP_BOOT_PN       0x800FFEC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_DISP_BOOT_PN[500];
    COMMENT #define REVNO_DISP_BOOT_PN       ((T_UINT8 *)&PTU_REVNO_DISP_BOOT_PN[0])
    COMMENT
    COMMENT /*modified macro for testing purpose */
    COMMENT //#define REVNO_DISP_BOOT_CRC      0x800FFFC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_DISP_BOOT_CRC[500];
    COMMENT #define REVNO_DISP_BOOT_CRC      ((T_UINT8 *) &PTU_REVNO_DISP_BOOT_CRC[0])
    COMMENT
    COMMENT /*modified macro for testing purpose */
    COMMENT //#define REVNO_DISP_MAINT_PN      0x0807FFEC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_DISP_MAINT_PN[500];
    COMMENT #define REVNO_DISP_MAINT_PN      ((T_UINT8 *) &PTU_REVNO_DISP_MAINT_PN[0])
    COMMENT
    COMMENT /* modified macro for testing purpose */
    COMMENT //#define REVNO_DISP_MAINT_CRC     0x0807FFFC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_DISP_MAINT_CRC[500];
    COMMENT #define REVNO_DISP_MAINT_CRC     ((T_UINT8 *)&PTU_REVNO_DISP_MAINT_CRC[0])
    COMMENT
    COMMENT /* modified macro for testing purpose */
    COMMENT //#define REVNO_BMP_PN             0x6281FFEC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_BMP_PN[500];
    COMMENT #define REVNO_BMP_PN        ((T_UINT8 *)&PTU_REVNO_BMP_PN[0])
    COMMENT
    COMMENT /* modified macro for testing purpose */
    COMMENT //#define REVNO_BMP_CRC            0x6281FFFC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_BMP_CRC[500];
    COMMENT #define REVNO_BMP_CRC       ((T_UINT8 *)&PTU_REVNO_BMP_CRC[0])
    COMMENT
    COMMENT /* modified macro for testing purpose */
    COMMENT //#define REVNO_PDI_CRC            0x62B5FFFC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_PDI_CRC[500];
    COMMENT #define REVNO_PDI_CRC       ((T_UINT8 *)&PTU_REVNO_PDI_CRC[0])
    COMMENT
	COMMENT
	COMMENT /*#define REVNO_DISP_MAINT_CFG_PN  0x08010000*/
	COMMENT T_UINT8 PTU_REVNO_DISP_MAINT_CFG_PN[500];
	COMMENT
	COMMENT #define REVNO_DISP_MAINT_CFG_PN     ((T_UINT8 *)&PTU_REVNO_DISP_MAINT_CFG_PN[0])
	COMMENT /*#define REVNO_DISP_MAINT_CFG_CRC 0x08017FFC*/
	COMMENT
	COMMENT T_UINT8 PTU_REVNO_DISP_MAINT_CFG_CRC[500];
	COMMENT #define REVNO_DISP_MAINT_CFG_CRC     ((T_UINT8 *)&PTU_REVNO_DISP_MAINT_CFG_CRC[0])
	COMMENT
	COMMENT /*#define REVNO_DISP_SL_PN         0x0803FFEC*/
	COMMENT T_UINT8 PTU_REVNO_DISP_SL_PN[500];
	COMMENT
	COMMENT #define REVNO_DISP_SL_PN     ((T_UINT8 *)&PTU_REVNO_DISP_SL_PN[0])
	COMMENT /*#define REVNO_DISP_SL_CRC        0x0803FFFC*/
	COMMENT
	COMMENT T_UINT8 PTU_REVNO_DISP_SL_CRC[500];
	COMMENT #define REVNO_DISP_SL_CRC     ((T_UINT8 *)&PTU_REVNO_DISP_SL_CRC[0])
    COMMENT
    COMMENT /* modified macro for testing purpose */
    COMMENT //#define REVNO_BMP_PN             0x6281FFEC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_BMP_PN[500];
    COMMENT #define REVNO_BMP_PN        ((T_UINT8 *)&PTU_REVNO_BMP_PN[0])
    COMMENT
    COMMENT /* modified macro for testing purpose */
    COMMENT //#define REVNO_BMP_CRC            0x6281FFFC
    COMMENT
    COMMENT T_UINT8 PTU_REVNO_BMP_CRC[500];
    COMMENT #define REVNO_BMP_CRC       ((T_UINT8 *)&PTU_REVNO_BMP_CRC[0])
    COMMENT
    COMMENT 
    COMMENT 2.In function 'A429Init' for loops cannot be covered for 0 and 1 since it is controlled 
    COMMENT   by macro 'CAU_WARN_MAX_ID '
    COMMENT 
    COMMENT 3. PTU's has been split into 9 due to dependency.
    COMMENT 
    COMMENT 4.In 'ProcessSysInfoWords' for loop cannot be covered for 0 and 1 since it is controlled 
    COMMENT   by macro 'SYSINFO_LABEL_WORDS'
    COMMENT
    COMMENT 5.In 'A429ProcessA825'for loop cannot be covered for 0 and 1 since it is controlled 
    COMMENT   by macro 'FOUR'
    COMMENT
    COMMENT 6. Equivalence Class 110 cannot be mapped since maximum value of input parameter 
    COMMENT never be greater than MACRO 'MAX_64_BIT'.
    COMMENT
    COMMENT 7.Warning "enumerated type mixed with another type" is obtained when   
    COMMENT  '(enum T_EIU) type' is exercised with value "EIU2+1" 
    COMMENT  warning #188-D: enumerated type mixed with another type  
    COMMENT
    COMMENT 8.In 'ProcessAirframeInfoWords'for loop cannot be covered for 0 and 1 since it is controlled 
    COMMENT   by macro 'AIRFRAME_LABEL_WORDS'
	COMMENT
	COMMENT
    COMMENT </AC>

    COMMENT Equivalence Class Description
    COMMENT <ECD>
    COMMENT
    COMMENT Valid Class(es)
    COMMENT Class 1
    COMMENT In function 'ProcessF4CbitErr',u8PayLoad with zero index of A825 messages right shifted
    COMMENT by zero times and logical AND with one is equal to ONE
    COMMENT
    COMMENT Class 2
    COMMENT In function 'ProcessF4CbitErr',u8PayLoad with zero index of A825 messages right shifted 
    COMMENT by zero times and logical AND with one is equal to zero
    COMMENT 
    COMMENT Class 3
    COMMENT The function 'MemCpy' copies data from source buffer to destination buffer
    COMMENT
    COMMENT Class 4
    COMMENT The function 'MemSet' copies value to destination buffer.
    COMMENT
    COMMENT Class 5
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMAPP_REVNO1
    COMMENT
    COMMENT Class 6
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMAPP_REVNO1
    COMMENT
    COMMENT Class 7
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMAPP_REVNO2
    COMMENT
    COMMENT Class 8
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMAPP_REVNO2
    COMMENT
    COMMENT Class 9
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMBOOT_REVNO1
    COMMENT
    COMMENT Class 10
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMBOOT_REVNO1
    COMMENT
    COMMENT Class 11
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMBOOT_REVNO2
    COMMENT
    COMMENT Class 12
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMBOOT_REVNO2
    COMMENT
    COMMENT Class 13
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMMAINT_REVNO1
    COMMENT
    COMMENT Class 14
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMMAINT_REVNO1
    COMMENT
    COMMENT Class 15
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMMAINT_REVNO2
    COMMENT
    COMMENT Class 16
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMMAINT_REVNO2
    COMMENT 
    COMMENT Class 17
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMAPP_CRC
    COMMENT 
    COMMENT Class 18
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMAPP_CRC
    COMMENT
    COMMENT Class 19
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMBOOT_CRC
    COMMENT
    COMMENT Class 20
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMBOOT_CRC
    COMMENT
    COMMENT Class 21
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMMAINT_CRC
    COMMENT
    COMMENT Class 22
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMMAINT_CRC
    COMMENT
    COMMENT Class 23
    COMMENT The function 'ProcessSWPartNum', calls 'MemCpy'.
    COMMENT
    COMMENT Class 24
    COMMENT The function 'ProcessSWPartNum', calls 'BinAsciiCRC'.
    COMMENT
    COMMENT Class 25
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by zero times and bitwise AND with one is not equal to zero
    COMMENT
    COMMENT Class 26
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by zero times and bitwise AND with one is  equal to zero
    COMMENT
    COMMENT Class 27
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by one time and bitwise AND with one is not equal to zero
    COMMENT.
    COMMENT Class 28
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by one time and bitwise AND with one is equal to zero.
    COMMENT
    COMMENT Class 29
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by two times and bitwise AND with one is not equal to zero.
    COMMENT
    COMMENT Class 30
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by two times and bitwise AND with one is  equal to zero.
    COMMENT
    COMMENT Class 31
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by three times and bitwise AND with one is not equal to zero.
    COMMENT
    COMMENT Class 32
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by three times and bitwise AND with one is equal to zero.
    COMMENT
    COMMENT Class 33
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by four times and bitwise AND with one is not equal to zero.
    COMMENT
    COMMENT Class 34
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by four times and bitwise AND with one is  equal to zero.
    COMMENT
    COMMENT Class 35
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by five times and bitwise AND with one is not equal to zero.
    COMMENT
    COMMENT Class 36
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by five times and bitwise AND with one is equal to zero.
    COMMENT
    COMMENT Class 37
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by six times and bitwise AND with one is not equal to zero.
    COMMENT
    COMMENT Class 38
    COMMENT In function 'ProcessF4PbitErr', u8PayLoad with zero index of A825 messages right shifted
    COMMENT by six times and bitwise AND with one is  equal to zero.
    COMMENT
    COMMENT Class 39
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is equal to A429_CHAN_1
    COMMENT
    COMMENT Class 40
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is not equal to A429_CHAN_1
    COMMENT
    COMMENT Class 41
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is equal to A429_CHAN_2
    COMMENT
    COMMENT Class 42
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is not equal to A429_CHAN_2
    COMMENT
    COMMENT Class 43
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is equal to DIS_COMAPP_REVNO1
    COMMENT
    COMMENT Class 44
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is not equal to DIS_COMAPP_REVNO1
    COMMENT
    COMMENT Class 45
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is equal to DIS_COMAPP_REVNO2
    COMMENT
    COMMENT Class 46
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is not equal to DIS_COMAPP_REVNO2
    COMMENT
    COMMENT Class 47
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  equal to DIS_COMBOOT_REVNO1
    COMMENT
    COMMENT Class 48
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  not equal to DIS_COMBOOT_REVNO1
    COMMENT
    COMMENT Class 49
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  equal to DIS_COMBOOT_REVNO2
    COMMENT
    COMMENT Class 50
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  not equal to DIS_COMBOOT_REVNO2
    COMMENT
    COMMENT Class 51
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  equal to DIS_COMMAINT_REVNO1
    COMMENT
    COMMENT Class 52
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  not equal to DIS_COMMAINT_REVNO1
    COMMENT
    COMMENT Class 53
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  equal to DIS_COMMAINT_REVNO2
    COMMENT
    COMMENT Class 54
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  not equal to DIS_COMMAINT_REVNO2
    COMMENT
    COMMENT Class 55
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  equal to DIS_COMBOOT_CRC
    COMMENT
    COMMENT Class 56
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  not equal to DIS_COMBOOT_CRC
    COMMENT
    COMMENT Class 57
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  equal to DIS_COMMAINT_CRC
    COMMENT
    COMMENT Class 58
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  not equal to DIS_COMMAINT_CRC
    COMMENT
    COMMENT Class 59
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  equal to DIS_COMAPP_CRC
    COMMENT
    COMMENT Class 60
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  not equal to DIS_COMAPP_CRC
    COMMENT
    COMMENT Class 61
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  equal to F4_PBIT_ERR
    COMMENT
    COMMENT Class 62
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  not equal to F4_PBIT_ERR
    COMMENT
    COMMENT Class 63
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  equal to F4_CBIT_ERR
    COMMENT
    COMMENT Class 64
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is  not equal to F4_CBIT_ERR
    COMMENT
    COMMENT Class 65
    COMMENT In function 'A429ProcessA825', 9 and 10th bit of A429 word is greater than zero
    COMMENT
    COMMENT Class 66
    COMMENT In function 'A429ProcessA825', 9 and 10th bit of A429 word is less than or equal to zero.
    COMMENT
    COMMENT Class 67
    COMMENT The function 'A429ProcessA825', calls 'Process429Words'.
    COMMENT
    COMMENT Class 68
    COMMENT In function 'A429ProcessA825', u8PaySize of A825 messages is equal to EIGHT 
    COMMENT
    COMMENT Class 69
    COMMENT In function 'A429ProcessA825', u8PaySize of A825 messages is not equal to EIGHT
    COMMENT
    COMMENT Class 70
    COMMENT In function 'Process429Words',  SDI bits  is other than ZERO
    COMMENT
    COMMENT Class 71
    COMMENT In function 'Process429Words',  SDI bits  is euqal to ZERO
    COMMENT
    COMMENT Class 72
    COMMENT In function 'Process429Words' ,channel is ZERO 
    COMMENT
    COMMENT Class 73
    COMMENT In function 'Process429Words' ,channel is not  ZERO 
    COMMENT
    COMMENT Class 74
    COMMENT In function 'Process429Words' label of A429_data with indices channel and
    COMMENT loop index count is equal to received label  
    COMMENT
    COMMENT Class 75
    COMMENT In function 'Process429Words' when label of A429_data with indices channel and
    COMMENT loop index count is not equal to received label  
    COMMENT
    COMMENT Class 76
    COMMENT In function 'Process429Words', Active_eiu is equal to EIU1
    COMMENT
    COMMENT Class 77
    COMMENT In function 'Process429Words', Active_eiu is equal to EIU2
    COMMENT
    COMMENT Class 78
    COMMENT In function 'Process429Words', Active_eiu is other than EIU1 and EIU2
    COMMENT
    COMMENT Class 79
    COMMENT In function 'Process429Words', SDI value is equal to ONE
    COMMENT
    COMMENT Class 80
    COMMENT In function 'Process429Words', SDI value  is equal to TWO
    COMMENT
    COMMENT Class 81
    COMMENT In function 'Process429Words', SDI value  is other than ONE and TWO
    COMMENT
    COMMENT Class 82
    COMMENT In function 'Process429Words', label found flag is TRUE 
    COMMENT
    COMMENT Class 83
    COMMENT In function 'Process429Words', label found flag is FALSE 
    COMMENT
    COMMENT Class 84
    COMMENT In function 'Process429Words', Pbit_test_result is equal to ZERO
    COMMENT
    COMMENT Class 85
    COMMENT In function 'Process429Words',Pbit_test_result is not equal to ZERO
    COMMENT
    COMMENT Class 86
    COMMENT In function 'Process429Words', Type of A429_data is BNR 
    COMMENT
    COMMENT Class 87
    COMMENT In function 'Process429Words',  Type of A429_data is DDW 
    COMMENT
    COMMENT Class 88
    COMMENT In function 'Process429Words',  Type of A429_data is other than BNR and DDW
    COMMENT
    COMMENT Class 89
    COMMENT In function 'Process429Words', Display characteristic identifier is ZERO
    COMMENT
    COMMENT Class 90
    COMMENT In function 'Process429Words', Display characteristic identifier is not  ZERO
    COMMENT
    COMMENT Class 91
    COMMENT In function 'Process429Words', Sign bit is other than ZERO
    COMMENT
    COMMENT Class 92
    COMMENT In function 'Process429Words', Sign bit is equal to ZERO
    COMMENT
    COMMENT Class 93
    COMMENT In function 'Process429Words', result of addition of sig_bits of A429_data with indices
    COMMENT channel and index value where label is found and (start_bit of A429_data with indices 
    COMMENT channel and index value where label is found minus one) is DATA_28_BIT
    COMMENT
    COMMENT Class 94
    COMMENT In function 'Process429Words', result of addition of sig_bits of A429_data with indices
    COMMENT channel and index value where label is found and (start_bit of A429_data with indices 
    COMMENT channel and index value where label is found minus one) is not euqal to DATA_28_BIT
    COMMENT
    COMMENT Class 95
    COMMENT The function 'Process429Words',calls RTDSetParam
    COMMENT
    COMMENT Class 96
    COMMENT In function 'Process429Words',label of A429_data with indices channel and index value
    COMMENT where label is found is other than LABEL_0360
    COMMENT 
    COMMENT Class 97
    COMMENT In function 'Process429Words',label of A429_data with indices channel and index value
    COMMENT where label is found is LABEL_0360
    COMMENT
    COMMENT Class 98
    COMMENT In function 'Process429Words', Cas_cnt is other than zero 
    COMMENT
    COMMENT Class 99
    COMMENT In function 'Process429Words', Cas_cnt is equal to zero 
    COMMENT
    COMMENT Class 100
    COMMENT In function 'Process429Words',label of Cas_msg with index zero is equal to label value
    COMMENT
    COMMENT Class 101
    COMMENT In function 'Process429Words',label of Cas_msg with index zero is not equal to label value
    COMMENT
    COMMENT Class 102
    COMMENT In function 'Process429Words' ID value is FOUR
    COMMENT
    COMMENT Class 103
    COMMENT In function 'Process429Words' ID value is not FOUR
    COMMENT
    COMMENT Class 104
    COMMENT The function 'Process429Words' calls CasSetCasWord
    COMMENT
    COMMENT Class 105
    COMMENT In function 'Process429Words' wog_label of Auto_cool_down_tmr is equal to label
    COMMENT
    COMMENT Class 106
    COMMENT In function 'Process429Words' wog_label of Auto_cool_down_tmr is not equal to label
    COMMENT
    COMMENT Class 107
    COMMENT The function 'Process429Words' calls SetSysInfoWords
    COMMENT
    COMMENT Class 108
    COMMENT In function 'BinAsciiCRC', value is less than MAX_64_BIT
    COMMENT
    COMMENT Class 109
    COMMENT In function 'BinAsciiCRC', value is equal to MAX_64_BIT
    COMMENT
    COMMENT Class 110
    COMMENT In function 'BinAsciiCRC', value is greater than MAX_64_BIT 
    COMMENT
    COMMENT Class 111
    COMMENT The function 'A429Init' calls 'CasExtract'
    COMMENT
    COMMENT Class 112
    COMMENT The function 'A429Init' calls 'A429Extract' 
    COMMENT 
    COMMENT Class 113
    COMMENT In function 'A429Init', A429 port of A429 configuration data with loop counter as index is equal to ONE
    COMMENT 
    COMMENT Class 114
    COMMENT In function 'A429Init', A429 port of A429 configuration data with loop counter as index is equal to two 
    COMMENT 
    COMMENT Class 115
    COMMENT In function 'A429Init', A429 port of A429 configuration data with loop counter as index is not equal to ONE or TWO
    COMMENT 
    COMMENT Class 116
    COMMENT In function 'A429Init', A429 type of A429 configuration data with loop counter as index is equal to BNR
    COMMENT 
    COMMENT Class 117
    COMMENT In function 'A429Init', A429 type of A429 configuration data with loop counter as index is equal to DDW 
    COMMENT 
    COMMENT Class 118
    COMMENT In function 'A429Init', A429 type of A429 configuration data with loop counter as index is not equal to DDW or BNR
    COMMENT
    COMMENT Class 119
    COMMENT In function 'A429Init', Cas_cnt is equal to zero.
    COMMENT
    COMMENT Class 120
    COMMENT In function 'A429Init', Cas_cnt is not equal to zero.   
    COMMENT 
    COMMENT Class 121
    COMMENT In function 'A429Init', A429 label of A429 configuration data with loop counter as index is equal to  label of Cas_msg 
    COMMENT with index zero 
    COMMENT 
    COMMENT Class 122
    COMMENT In function 'A429Init', A429 type of A429 configuration data with loop counter as index is not equal to label of Cas_msg 
    COMMENT with index zero 
    COMMENT
    COMMENT Class 123
    COMMENT In function 'A429Init', Port1_label_count is equal to Port2_label_count
    COMMENT
    COMMENT Class 124
    COMMENT In function 'A429Init', Port1_label_count is not equal to Port2_label_count 
    COMMENT
    COMMENT Class 125
    COMMENT The function 'ProcessSysInfoWords' calls 'MemCpy'.
    COMMENT
    COMMENT Class 126
    COMMENT The function 'ProcessSysInfoWords' calls 'BinAsciiCRC'.
    COMMENT
    COMMENT Class 127
    COMMENT The function 'ProcessSysInfoWords' calls 'MemSet'.  
    COMMENT
    COMMENT Class 128
    COMMENT In function 'ProcessSysInfoWords', Bitmap_revno with index zero is not equal to CHAR_H 
    COMMENT
    COMMENT Class 129
    COMMENT In function 'ProcessSysInfoWords', Bitmap_revno with index zero is equal to CHAR_H  
    COMMENT
    COMMENT Class 130
    COMMENT In function 'ProcessSysInfoWords',  config_version with index zero of Config_data is not equal to CHAR_H        
    COMMENT
    COMMENT Class 131
    COMMENT In function 'ProcessSysInfoWords',  config_version with index zero of Config_data is equal to CHAR_H        
    COMMENT
    COMMENT Class 132
    COMMENT In function 'ProcessSysInfoWords', App_revno with index BUF_LEN_6 is not equal to CHAR_H    
    COMMENT
    COMMENT Class 133
    COMMENT In function 'ProcessSysInfoWords', App_revno with index BUF_LEN_6 is equal to CHAR_H        
    COMMENT
    COMMENT Class 134
    COMMENT In function 'ProcessSysInfoWords', Boot_revno with index BUF_LEN_6 is not equal to CHAR_H   
    COMMENT
    COMMENT Class 135
    COMMENT In function 'ProcessSysInfoWords', Boot_revno with index BUF_LEN_6 is equal to CHAR_H 
    COMMENT
    COMMENT Class 136
    COMMENT In function 'ProcessSysInfoWords', Maint_revno with index BUF_LEN_6 is not equal to CHAR_H 
    COMMENT
    COMMENT Class 137
    COMMENT In function 'ProcessSysInfoWords', Maint_revno with index BUF_LEN_6 is equal to CHAR_H  
    COMMENT
    COMMENT Class 140
    COMMENT In function 'ProcessSysInfoWords', Commf_part with index BUF_LEN_6 is not equal to CHAR_H   
    COMMENT
    COMMENT Class 141
    COMMENT In function 'ProcessSysInfoWords', Commf_part with index BUF_LEN_6 is equal to CHAR_H 
    COMMENT
    COMMENT Class 142
    COMMENT In function 'ProcessSysInfoWords', Commb_part with index BUF_LEN_6 is not equal to CHAR_H   
    COMMENT
    COMMENT Class 143
    COMMENT In function 'ProcessSysInfoWords', Commb_part with index BUF_LEN_6 is equal to CHAR_H 
    COMMENT
    COMMENT Class 144
    COMMENT In function 'ProcessSysInfoWords', Maint_part with index BUF_LEN_6 is not equal to CHAR_H 
    COMMENT
    COMMENT Class 145
    COMMENT In function 'ProcessSysInfoWords', Maint_part with index BUF_LEN_6 is equal to CHAR_H   
    COMMENT
    COMMENT Class 146
    COMMENT In function 'ProcessSysInfoWords', A429_data_recieved is TRUE
    COMMENT
    COMMENT Class 147
    COMMENT In function 'ProcessSysInfoWords', A429_data_recieved is not TRUE   
    COMMENT
    COMMENT Class 148
    COMMENT In function 'ProcessSysInfoWords', data1 of system info word with index as loop counter is equal to horizantal tab.
    COMMENT
    COMMENT Class 149
    COMMENT In function 'ProcessSysInfoWords', data1 of system info word with index as loop counter is equal to carriage return
    COMMENT
    COMMENT Class 150
    COMMENT In function 'ProcessSysInfoWords', data1 of system info word with index as loop counter is not equal to horizantal tab 
    COMMENT or carriage return  
    COMMENT
    COMMENT Class 151
    COMMENT In function 'ProcessSysInfoWords', data2 of system info word with index as loop counter is equal to carriage return
    COMMENT
    COMMENT Class 152
    COMMENT In function 'ProcessSysInfoWords', data2 of system info word with index as loop counter is equal to horizantal tab
    COMMENT
    COMMENT Class 153
    COMMENT In function 'ProcessSysInfoWords', data2 of system info word with index as loop counter is not equal to horizantal tab 
    COMMENT or carriage return  
    COMMENT
    COMMENT Class 154
    COMMENT In function 'ProcessSysInfoWords', first flag is equal to one
    COMMENT
    COMMENT Class 156
    COMMENT In function 'ProcessSysInfoWords', first flag is not equal to one
    COMMENT
    COMMENT Class 157
    COMMENT In function 'ProcessSysInfoWords', second  flag is equal to one
    COMMENT
    COMMENT Class 158
    COMMENT In function 'ProcessSysInfoWords', second  flag is not equal to one
    COMMENT
    COMMENT Class 159
    COMMENT In function 'ProcessSysInfoWords', third  flag is equal to one
    COMMENT
    COMMENT Class 160
    COMMENT In function 'ProcessSysInfoWords', third  flag is not equal to one  
    COMMENT
    COMMENT Class 161
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is less than SIXTEEN
    COMMENT
    COMMENT Class 162
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is greater than SIXTEEN
    COMMENT
    COMMENT Class 163
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is equal to SIXTEEN  
    COMMENT
    COMMENT Class 164
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is less than THIRTY_TWO
    COMMENT
    COMMENT Class 165
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is greater than THIRTY_TWO
    COMMENT
    COMMENT Class 166
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is equal to THIRTY_TWO
    COMMENT
    COMMENT Class 167
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is less than SYS_INFO_WORDS_48
    COMMENT
    COMMENT Class 168
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is greater than SYS_INFO_WORDS_48
    COMMENT
    COMMENT Class 169
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is  equal to SYS_INFO_WORDS_48
    COMMENT
    COMMENT Class 170
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is less than SYS_INFO_WORDS_64
    COMMENT
    COMMENT Class 171
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is greater than SYS_INFO_WORDS_64
    COMMENT
    COMMENT Class 172
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is equal to SYS_INFO_WORDS_64
    COMMENT
    COMMENT Class 173
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is less than SYS_INFO_WORDS_80
    COMMENT
    COMMENT Class 174
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is greater than SYS_INFO_WORDS_80
    COMMENT
    COMMENT Class 175
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is equal to SYS_INFO_WORDS_80    
    COMMENT
    COMMENT Class 176
    COMMENT In function 'ProcessSysInfoWords', sequence of system info word with index as loop counter is not equal to ZERO 
    COMMENT
    COMMENT Class 177
    COMMENT In function 'ProcessSysInfoWords',sequence of system info word with index as loop counter is equal to ZERO      
    COMMENT
    COMMENT Class 178
    COMMENT In function 'ProcessSysInfoWords', Eiufli_part with index 0 is not equal to zero
    COMMENT
    COMMENT Class 179
    COMMENT In function 'ProcessSysInfoWords', Eiufli_part with index 0 is equal to zero
    COMMENT
    COMMENT Class 180
    COMMENT In function 'ProcessSysInfoWords', Eiucfg_part with index 0 is not equal to zero
    COMMENT
    COMMENT Class 181
    COMMENT In function 'ProcessSysInfoWords', Eiucfg_part with index 0 is equal to zero
    COMMENT
    COMMENT Class 182
    COMMENT In function 'ProcessSysInfoWords', Eiucmub_part with index 0 is not equal to zero.
    COMMENT
    COMMENT Class 183
    COMMENT In function 'ProcessSysInfoWords', Eiucmub_part with index 0 is equal to zero.
    COMMENT
    COMMENT Class 184
    COMMENT In function 'ProcessSysInfoWords', Eiucmuf_part  with index 0 is not equal to zero
    COMMENT
    COMMENT Class 185
    COMMENT In function 'ProcessSysInfoWords', Eiucmuf_part  with index 0 is equal to zero
    COMMENT
    COMMENT Class 186
    COMMENT In function 'ProcessSysInfoWords', Eiucmum_part with index 0 is not equal to zero.
    COMMENT
    COMMENT Class 187
    COMMENT In function 'ProcessSysInfoWords', Eiucmum_part with index 0 is equal to zero.  
    COMMENT
    COMMENT Class 188
    COMMENT The function 'A429ProcessA825' calls ProcessSWPartNum.
    COMMENT 
    COMMENT Class 192
    COMMENT The function 'SetSysInfoWords' stores all the system information words read from label 360.
    COMMENT
    COMMENT Class 201
    COMMENT The function 'A429ProcessA825' calls ProcessF4CbitErr.
    COMMENT
    COMMENT Class 202
    COMMENT The function 'A429ProcessA825' calls ProcessF4PbitErr.
    COMMENT
    COMMENT Class 206
    COMMENT The function 'A429ProcessA825' ssm is equal to zero.
    COMMENT
    COMMENT Class 207
    COMMENT The function 'A429ProcessA825' ssm is not equal to zero.    
    COMMENT 
    COMMENT class 208
    COMMENT In function 'StringCompare', Length of first string is equal to length of second string
    COMMENT 
    COMMENT class 209
    COMMENT In function 'StringCompare', Length of first string is not equal to length of second string
    COMMENT 
    COMMENT class 210
    COMMENT In function 'StringCompare', char1 with loop index  is equal to char2 with loop index 
    COMMENT 
    COMMENT class 211
    COMMENT In function 'StringCompare', char1 with loop index  is not equal to char2 with loop index 
    COMMENT 
    COMMENT class 212
    COMMENT The function 'StringCompare' calls 'StrLen'
    COMMENT 
    COMMENT class 213
    COMMENT The function 'SetSysAirFrameWords' stores all the system information words read from label 370
    COMMENT 
    COMMENT class 214
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
	COMMENT greater than ARCFT_MDL_BYTE
    COMMENT 
    COMMENT class 215
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
	COMMENT less than ARCFT_MDL_BYTE
    COMMENT 
    COMMENT class 216
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
	COMMENT equal to ARCFT_MDL_BYTE
    COMMENT 
    COMMENT class 217
    COMMENT In function 'ProcessAirframeInfoWords', index is greater than ARCFT_MDL_BYTE
    COMMENT 
    COMMENT class 218
    COMMENT In function 'ProcessAirframeInfoWords', index is less than ARCFT_MDL_BYTE
    COMMENT 
    COMMENT class 219
    COMMENT In function 'ProcessAirframeInfoWords', index is equal to ARCFT_MDL_BYTE
    COMMENT 
    COMMENT class 220
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
	COMMENT greater than ENGINE_TYPE_BYTE
    COMMENT 
    COMMENT class 221
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
	COMMENT less than ENGINE_TYPE_BYTE
    COMMENT 
    COMMENT class 222
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
	COMMENT equal to ENGINE_TYPE_BYTE
    COMMENT 
    COMMENT class 223
    COMMENT In function 'ProcessAirframeInfoWords', index is greater than ENGINE_TYPE_BYTE
    COMMENT 
    COMMENT class 224
    COMMENT In function 'ProcessAirframeInfoWords', index is less than ENGINE_TYPE_BYTE
    COMMENT 
    COMMENT class 225
    COMMENT In function 'ProcessAirframeInfoWords', index is equal to ENGINE_TYPE_BYTE
    COMMENT 
    COMMENT class 226
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
	COMMENT greater than ENGINE_SER_BYTE
    COMMENT 
    COMMENT class 227
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
	COMMENT less than ENGINE_SER_BYTE
    COMMENT 
    COMMENT class 228
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
	COMMENT equal to ENGINE_SER_BYTE
    COMMENT 
    COMMENT class 229
    COMMENT In function 'ProcessAirframeInfoWords', index is greater than ENGINE_SER_BYTE
    COMMENT 
    COMMENT class 230
    COMMENT In function 'ProcessAirframeInfoWords', index is less than ENGINE_SER_BYTE
    COMMENT 
    COMMENT class 231
    COMMENT In function 'ProcessAirframeInfoWords', index is equal to ENGINE_SER_BYTE
    COMMENT 
    COMMENT class 232
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
	COMMENT greater than AICFT_SER_BYTE
    COMMENT 
    COMMENT class 233
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
	COMMENT less than AICFT_SER_BYTE
    COMMENT 
    COMMENT class 234
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
	COMMENT equal to AICFT_SER_BYTE
    COMMENT 
    COMMENT class 235
    COMMENT In function 'ProcessAirframeInfoWords', index is greater than AICFT_SER_BYTE
    COMMENT 
    COMMENT class 236
    COMMENT In function 'ProcessAirframeInfoWords', index is less than AICFT_SER_BYTE
    COMMENT 
    COMMENT class 237
    COMMENT In function 'ProcessAirframeInfoWords', index is equal to AICFT_SER_BYTE
    COMMENT 
    COMMENT class 238
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
	COMMENT greater than AICFT_REGS_BYTE
    COMMENT 
    COMMENT class 239
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
	COMMENT less than AICFT_REGS_BYTE
    COMMENT 
    COMMENT class 240
    COMMENT In function 'ProcessAirframeInfoWords', sequence of system airframe words with loop index is 
	COMMENT equal to AICFT_REGS_BYTE
    COMMENT 
    COMMENT class 241
    COMMENT In function 'ProcessAirframeInfoWords', index is greater than AICFT_REGS_BYTE
    COMMENT 
    COMMENT class 242
    COMMENT In function 'ProcessAirframeInfoWords', index is less than AICFT_REGS_BYTE
    COMMENT 
    COMMENT class 243
    COMMENT In function 'ProcessAirframeInfoWords', index is equal to AICFT_REGS_BYTE
    COMMENT 
    COMMENT class 244
    COMMENT The function 'ProcessAirframeInfoWords', calls the function 'MemCpy'
    COMMENT 
    COMMENT class 245
    COMMENT The function 'ProcessAirframeInfoWords', calls the function 'StrLen'
    COMMENT 
    COMMENT class 246
    COMMENT In function 'ProcessAirframeInfoWords', Dau_config_id_disp with loop index is equall to space
    COMMENT 
    COMMENT class 247
    COMMENT In function 'ProcessAirframeInfoWords', Dau_config_id_disp with loop index is not equall to space
    COMMENT 
    COMMENT class 248
    COMMENT The function 'ProcessAirframeInfoWords', calls the function 'StringCompare'
    COMMENT 
    COMMENT class 249
    COMMENT In function 'ProcessAirframeInfoWords', return value of StringCompare with spilt word1
	COMMENT and aircraft model as parameters  is TRUE
    COMMENT 
    COMMENT class 250
    COMMENT In function 'ProcessAirframeInfoWords', return value of StringCompare with spilt word1
	COMMENT and aircraft model as parameters  is FALSE
    COMMENT 
    COMMENT class 251
    COMMENT In function 'ProcessAirframeInfoWords', return value of StringCompare with spilt word2
	COMMENT and engine type as parameters  is TRUE
    COMMENT 
    COMMENT class 252
    COMMENT In function 'ProcessAirframeInfoWords', return value of StringCompare with spilt word2
	COMMENT and engine type as parameters  is FALSE
    COMMENT 
    COMMENT class 253
    COMMENT The function 'ProcessSysInfoWords', calls the function 'ProcessAirframeInfoWords'
    COMMENT 
    COMMENT Class 255
    COMMENT In function 'Process429Words',label of A429_data with indices channel and index value
    COMMENT where label is found is other than LABEL_0370
    COMMENT 
    COMMENT Class 256
    COMMENT In function 'Process429Words',label of A429_data with indices channel and index value
    COMMENT where label is found is LABEL_0370
    COMMENT
    COMMENT Class 257
    COMMENT In function 'Process429Words',label is equal to label of Exceed_data with index 0
    COMMENT 
    COMMENT Class 258
    COMMENT In function 'Process429Words',label is not equal to label of Exceed_data with index 0
    COMMENT
    COMMENT Class 259
    COMMENT The function 'A429ProcessA825' ssm is equal to RTD_STAT_FAIL.
    COMMENT
    COMMENT Class 260
    COMMENT The function 'A429ProcessA825' ssm is not equal to not equal RTD_STAT_FAIL. 
	COMMENT
	COMMENT Class 261
	COMMENT The function 'Process429Words' Config_data.eng_sdi is equal to 1
	COMMENT
	COMMENT Class 262
	COMMENT The function 'Process429Words' Config_data.eng_sdi is other than 1
	COMMENT
	COMMENT Class 263
	COMMENT The function 'Process429Words' Config_data.channels.u16_x is equal to chann
	COMMENT
	COMMENT Class 264
	COMMENT The function 'Process429Words' Config_data.channels.u16_x is not equal to channel value
	COMMENT
	COMMENT Class 265
	COMMENT The function 'Process429Words' Config_data.channels.u16_y is equal to channel value
	COMMENT
	COMMENT Class 266
	COMMENT The function 'Process429Words' Config_data.channels.u16_y is not equal to channel value
	COMMENT
    COMMENT Class 267
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is equal to DIS_COMSL_REVNO2
    COMMENT
    COMMENT Class 268
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is not equal to DIS_COMSL_REVNO2
	COMMENT
    COMMENT Class 269
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is equal to DIS_COMSL_REVNO1
    COMMENT
    COMMENT Class 270
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is not equal to DIS_COMSL_REVNO1
	COMMENT
    COMMENT Class 271
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is equal to DIS_COMSL_CRC
    COMMENT
    COMMENT Class 272
    COMMENT In function 'A429ProcessA825', doc of BID of sID of A825 messages is not equal to DIS_COMSL_CRC
	COMMENT
    COMMENT Class 273
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMMAINT_REVNO2
    COMMENT
    COMMENT Class 274
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMMAINT_REVNO2
	COMMENT
    COMMENT Class 275
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMSL_REVNO2
    COMMENT
    COMMENT Class 276
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMSL_REVNO2
	COMMENT
    COMMENT Class 277
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is DIS_COMSL_CRC
    COMMENT
    COMMENT Class 278
    COMMENT In function 'ProcessSWPartNum', doc of BID of sID of s_mess is other than DIS_COMSL_CRC
	COMMENT
    COMMENT Class 279
    COMMENT In function 'ProcessSysInfoWords', Maint_config_revno with index BUF_LEN_6 is not equal to CHAR_H 
    COMMENT
    COMMENT Class 280
    COMMENT In function 'ProcessSysInfoWords', Maint_config_revno with index BUF_LEN_6 is equal to CHAR_H  
    COMMENT
    COMMENT Class 281
    COMMENT In function 'ProcessSysInfoWords',  Soft_loader_revno with index BUF_LEN_6 is not equal to CHAR_H        
    COMMENT
    COMMENT Class 282
    COMMENT In function 'ProcessSysInfoWords',  Soft_loader_revno with index BUF_LEN_6 is equal to CHAR_H  
	COMMENT
    COMMENT Class 283
    COMMENT In function 'ProcessSysInfoWords',  Commsl_part with index BUF_LEN_6 is not equal to CHAR_H        
    COMMENT
    COMMENT Class 284
    COMMENT In function 'ProcessSysInfoWords',  Commsl_part with index BUF_LEN_6 is equal to CHAR_H
    COMMENT Invalid Class(es)
    COMMENT 
    COMMENT Class 193
    COMMENT In function 'BinAsciiCRC',invalid reference is passed to parameter 'out_buf'
    COMMENT
    COMMENT Class 189
    COMMENT In function 'MemCpy', invalid reference is passed to p_src.
    COMMENT
    COMMENT Class 190
    COMMENT In function 'MemCpy', invalid reference is passed to p_dst.
    COMMENT
    COMMENT Class 191
    COMMENT In function 'MemSet', invalid reference is passed to p_dst. 
    COMMENT
    COMMENT Class 203
    COMMENT In function 'A429ProcessA825', invalid reference is passed to s_mess. 
    COMMENT 
    COMMENT Class 204
    COMMENT In function 'ProcessF4PbitErr', invalid refernce is passed to s_mess
    COMMENT 
    COMMENT Class 205
    COMMENT In function 'ProcessF4CbitErr', invalid refernce is passed to s_mess     
    COMMENT
    COMMENT Class 285
    COMMENT In function 'Process429Words', scu_enable of Configuration data is not ONE
    COMMENT
    COMMENT Class 286
    COMMENT In function 'Process429Words', Cmu_fuel_flow is ONE
    COMMENT
    COMMENT Class 287
    COMMENT In function 'Process429Words', Md_engine_flag is TRUE
    COMMENT
    COMMENT Class 288
    COMMENT In function 'Process429Words', scu_enable of Configuration data is ONE
    COMMENT
    COMMENT Class 289
    COMMENT In function 'Process429Words', Cmu_fuel_flow is not ONE
    COMMENT
    COMMENT Class 290
    COMMENT In function 'Process429Words', Md_engine_flag is FALSE	
    COMMENT
    COMMENT Class 291
    COMMENT In function 'Process429Words', received label is LABEL_0244
    COMMENT
    COMMENT Class 292
    COMMENT In function 'Process429Words', received label is not LABEL_0244	
    COMMENT
    COMMENT Class 293
    COMMENT In function 'Process429Words', label of Cas_msg with index zero not equal to received label	
    COMMENT
    COMMENT Class 294
    COMMENT In function 'Process429Words', label of Cas_msg with index zero equal to received label	
    COMMENT
    COMMENT Class 295
    COMMENT In function 'Process429Words', label of Exceed_data with index zero not equal to received label	
    COMMENT
    COMMENT Class 296
    COMMENT In function 'Process429Words', label of Exceed_data with index zero equal to received label	
    COMMENT
    COMMENT Class 297
    COMMENT In function 'Process429Words', wog_label of Auto_cool_down_tmr not equal to received label	
    COMMENT
    COMMENT Class 298
    COMMENT In function 'Process429Words', wog_label of Auto_cool_down_tmr equal to received label		
    COMMENT
    COMMENT Class 299
    COMMENT In function 'Process429Words', timer id is ONE.		
    COMMENT
    COMMENT Class 300
    COMMENT In function 'Process429Words', timer id is not ONE.		
    COMMENT
    COMMENT Class 301
    COMMENT In function 'Process429Words',timer_label of Timer_settings with index timer of Page_settings is equal  
    COMMENT to label of A429_data indices of channel and loop index count
    COMMENT
    COMMENT Class 302
    COMMENT In function 'Process429Words',timer_label of Timer_settings with index timer of Page_settings is not equal  
    COMMENT to label of A429_data indices of channel and loop index count	
    COMMENT
    COMMENT Class 303
    COMMENT In function 'Process429Words',timer_sdi   
    COMMENT of Timer_settings with index timer of Page_settings is equal to sdi of  
    COMMENT A429_data indices of channel and loop index count	
    COMMENT
    COMMENT Class 304
    COMMENT In function 'Process429Words',timer_sdi   
    COMMENT of Timer_settings with index timer of Page_settings is not equal to sdi of  
    COMMENT A429_data indices of channel and loop index count	
    COMMENT
    COMMENT Class 305
    COMMENT In function 'Process429Words', timer id is TWO.		
    COMMENT
    COMMENT Class 306
    COMMENT In function 'Process429Words', timer id is not TWO.		
    COMMENT
    COMMENT Class 307
    COMMENT In function 'Process429Words', timer id is ZERO.		
    COMMENT
    COMMENT Class 308
    COMMENT In function 'Process429Words', timer id is not ZERO.	
    COMMENT
    COMMENT Class 309
    COMMENT In function 'Process429Words', label value is LABEL_0273	
    COMMENT
    COMMENT Class 310
    COMMENT In function 'Process429Words', label value is not LABEL_0273	
    COMMENT
    COMMENT Class 311
    COMMENT In function 'Process429Words', Md engine flag is TRUE	
    COMMENT
    COMMENT Class 312
    COMMENT In function 'Process429Words', Md engine flag is FALSE		
    COMMENT
    COMMENT Class 313
    COMMENT In function 'Process429Words', ff once flag is False	
    COMMENT
    COMMENT Class 314
    COMMENT In function 'Process429Words', ff once flag is TRUE	
    COMMENT
    COMMENT Class 315
    COMMENT In function 'Process429Words', id value is THREE	
    COMMENT
    COMMENT Class 316
    COMMENT In function 'Process429Words', id value is not THREE	
    COMMENT
    COMMENT Class 317
    COMMENT In function 'Process429Words', ssm is equal to ZERO	
    COMMENT
    COMMENT Class 318
    COMMENT In function 'Process429Words', ssm is not equal to ZERO	
    COMMENT
    COMMENT Class 319
    COMMENT In function 'Process429Words', Fault_log_adv  is TRUE	
    COMMENT
    COMMENT Class 320
    COMMENT In function 'Process429Words', Fault_log_adv is FALSE	
    COMMENT
    COMMENT Class 321
    COMMENT In function 'Process429Words', Pbit_test_result  is ZERO	
    COMMENT
    COMMENT Class 322
    COMMENT In function 'Process429Words', Pbit_test_result is not ZERO	
    COMMENT
    COMMENT Class 323
    COMMENT In function 'Process429Words', received label is equal 
    COMMENT  to LABEL_0247 or LABEL_055 or LABEL_057	
    COMMENT
    COMMENT Class 324
    COMMENT In function 'Process429Words', received label is not equal 
    COMMENT  to LABEL_0247 or LABEL_055 or LABEL_057	
    COMMENT
    COMMENT Class 325
    COMMENT In function 'Process429Words', Sign bit is other than ZERO
    COMMENT
    COMMENT Class 326
    COMMENT In function 'Process429Words', Sign bit is ZERO	
    COMMENT
    COMMENT Class 327
    COMMENT In function 'Process429Words', DATA_28_BIT is equal to A429_data of 
    COMMENT  indices of channel and loop index count of sig_bits plus A429_data of 
    COMMENT  indices channel and loop index count of start_bit minus ONE.
    COMMENT
    COMMENT Class 328
    COMMENT In function 'Process429Words', DATA_28_BIT is not equal to A429_data of 
    COMMENT  indices of channel and loop index count of sig_bits plus A429_data of 
    COMMENT  indices channel and loop index count of start_bit minus ONE.	
    COMMENT
    COMMENT Class 329
    COMMENT In function 'Process429Words', label of A429_data with index as  channel and loop index count 
    COMMENT is equal to LABEL_0247
    COMMENT
    COMMENT Class 330
    COMMENT In function 'Process429Words', label of A429_data with index as  channel and loop index count 
    COMMENT is not equal to LABEL_0247	
    COMMENT
    COMMENT Class 331
    COMMENT In function 'Process429Words', Du_position is TWO	
    COMMENT
    COMMENT Class 332
    COMMENT In function 'Process429Words', Du_position is ONE	
    COMMENT
    COMMENT Class 333
    COMMENT In function 'Process429Words', Du_position is otherthan ONE	,TWO	
    COMMENT
    COMMENT Class 334
    COMMENT In function 'Process429Words', ssm is THREE 
    COMMENT
    COMMENT Class 335
    COMMENT In function 'Process429Words', ssm is not THREE 	
    COMMENT
    COMMENT Class 336
    COMMENT In function 'Process429Words', data is within range of (data >= 40 and data <=50)	
    COMMENT
    COMMENT Class 337
    COMMENT In function 'Process429Words', data is not within range of (data >= 40 and data <=50)	
    COMMENT
    COMMENT Class 338
    COMMENT In function 'Process429Words', data is within range of (data >= 151 and data <=425)	
    COMMENT
    COMMENT Class 339
    COMMENT In function 'Process429Words', data is not within range of (data >= 151 and data <=425)	
    COMMENT
    COMMENT Class 340
    COMMENT In function 'Process429Words', loop index count is equal to LABEL_0272	
    COMMENT
    COMMENT Class 341
    COMMENT In function 'Process429Words', loop index count is not equal to LABEL_0272		
    COMMENT
    COMMENT Class 342
    COMMENT In function 'Process429Words', sdi value is ZERO	
    COMMENT
    COMMENT Class 343
    COMMENT In function 'Process429Words', sdi value is not ZERO	
    COMMENT
    COMMENT Class 344
    COMMENT In function 'Process429Words', loop index count is equal to LABEL_0250	
    COMMENT
    COMMENT Class 345
    COMMENT In function 'Process429Words', loop index count is not equal to LABEL_0250		
    COMMENT
    COMMENT Class 346
    COMMENT In function 'Process429Words', scu label flag is equal to SEVEN		
    COMMENT
    COMMENT Class 347
    COMMENT In function 'Process429Words', scu label flag is not equal to SEVEN			
    COMMENT
    COMMENT Class 348
    COMMENT In function 'Process429Words', scu timer of index ZERO or scu timer of index ONE or scu 
    COMMENT  timer of index TWO is greater than RTD_MAX_INTERVAL_SCU	
	COMMENT
    COMMENT Class 349
    COMMENT In function 'Process429Words', scu timer of index ZERO or scu timer of index ONE or scu 
    COMMENT  timer of index TWO is equal to RTD_MAX_INTERVAL_SCU	
	COMMENT
    COMMENT Class 350
    COMMENT In function 'Process429Words', scu timer of index ZERO or scu timer of index ONE or scu 
    COMMENT  timer of index TWO is less than RTD_MAX_INTERVAL_SCU
	COMMENT
    COMMENT Class 351
    COMMENT In function 'A429Init', scu_enable of configuration data is equal to TRUE	
	COMMENT
    COMMENT Class 352
    COMMENT In function 'A429Init', scu_enable of configuration data is equal to FALSE	
	COMMENT
    COMMENT Class 353
    COMMENT In function 'A429Init', label of A429_data with index zero and loop counter value is equal to LABEL_0247
	COMMENT
    COMMENT Class 354
    COMMENT In function 'A429Init', label of A429_data with index zero and loop counter value is not equal to LABEL_0247
	COMMENT
    COMMENT Class 355
    COMMENT In function 'A429Init', label of A429_data with index zero and loop counter value is equal to LABEL_0272
	COMMENT
    COMMENT Class 356
    COMMENT In function 'A429Init', label of A429_data with index zero and loop counter value is not equal to LABEL_0272
	COMMENT
    COMMENT Class 357
    COMMENT In function 'A429Init', sdi of A429_data with index zero and loop counter value is equal to ZERO	
	COMMENT
    COMMENT Class 358
    COMMENT In function 'A429Init', sdi of A429_data with index zero and loop counter value is not equal to ZERO	
	COMMENT
    COMMENT Class 359
    COMMENT In function 'A429Init', label of A429_data with index zero and loop counter value is equal to LABEL_0250
	COMMENT
    COMMENT Class 360
    COMMENT In function 'A429Init', label of A429_data with index zero and loop counter value is not equal to LABEL_0250	
	COMMENT
    COMMENT Class 361
    COMMENT In function 'Process429Words', Du_identified  is FALSE
	COMMENT
    COMMENT Class 362
    COMMENT In function 'Process429Words', Du_identified  is TRUE	
    COMMENT
    COMMENT Class 363
    COMMENT In function 'Process429Words' label of A429_data with indices channel and
    COMMENT loop index count is equal to LABEL_0346  
    COMMENT
    COMMENT Class 364
    COMMENT In function 'Process429Words' when label of A429_data with indices channel and
    COMMENT loop index count is not equal to LABEL_0346   
    COMMENT
    COMMENT Class 365
    COMMENT The function 'Process429Words' ssm is equal to three.
    COMMENT
    COMMENT Class 366
    COMMENT The function 'Process429Words' ssm is not equal to three.
    COMMENT  	
    COMMENT </ECD>

--------------------------------------------------------------------------------
--
-- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
--
--------------------------------------------------------------------------------

SIMUL

    DEFINE STUB hdudispfa429_c

        #void A429Extract(T_UINT8 _in *address); 
    
        #void CasExtract(T_UINT8 _in *address);
 
        #void CasSetCasWord(T_UINT8 _in u8_index, T_UINT16 _in u16_cas_word); 
        
        #void RTDSetParam(T_UINT8 _in channel, T_UINT16 _in a429_tag, T_FLOAT _in s32_data, T_RTD_STATUS _in ertd_stat); 

		--variable str is made as _no because local variable address cannot be expected and 
		--the variable is verified in hdudispfa429_6.ptu.
		#T_UINT16 StrLen( T_CHAR _no *str);

	#void OffsetInttoIntArray(T_UINT8 sdi);

	#void GainInttoIntArray(T_UINT8 sdi);

    #void SetCMUFuelFlowEnable(T_UINT8  _in ff_enable_flag); 
    #void SetFuelFlowData(T_UINT8  _in a429_tag, T_FLOAT  _in data); 
    #void ProcessLmsScuProbeErr(T_UINT32  _in data, T_UINT8  _in status);
    #void ProcessLmsScuSysStatusErr(T_UINT32  _in data, T_UINT8  _in status); 
    #void ProcessingArinc01Fault(void); 
    #void ScuRTDSetParam(T_UINT8  _in channel, T_UINT16  _in a429_tag, T_UINT8  _in rtd_tag, T_FLOAT  _in s32_data, T_RTD_STATUS  _in ertd_stat); 

	
    END DEFINE

ELSE_SIMUL

    --No action defined as of now if the module is not simulated

END SIMUL

--------------------------------------------------------------------------------
--
-- ENVIRONMENTS DECLARATIONS
--
--------------------------------------------------------------------------------
--IF HOST

--No special things that have to be done on the host to run the test.

--ELSE

--No action defined for the target execution as of now

--END IF
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
-- TESTED FILE ENVIRONNEMENT
--------------------------------------------------------------------------------

-- Environment of the file hdudispfa429.c
--ENVIRONMENT ENV_hdudispfa429_c

--None

--END ENVIRONMENT -- ENV_hdudispfa429_c
--USE ENV_hdudispfa429_c

--------------------------------------------------------------------------------
-- Declaration of the service A429ProcessA825
--------------------------------------------------------------------------------
SERVICE A429ProcessA825
SERVICE_TYPE extern

    -- Tested service parameters declarations
  #T_A825_MESSAGE s_mess;
    
    ENVIRONMENT ENV_A429ProcessA825
    
        STRUCTURE s_mess,       init = { lcc => EEC, sID => { BID => { doc => 0, rci => 0 } }, u8PaySize => 0x2,
        &u8PayLoad => { others => 0 } },                                            ev = init
    
    END ENVIRONMENT -- ENV_A429ProcessA825
    USE ENV_A429ProcessA825

TEST 44
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-037]
    COMMENT  The function do nothing when scu_enable of Configuration data is not ONE
    COMMENT Equivalence Class 285
    COMMENT
    COMMENT [hdudispfa429-Process429Words-DB-LLR-025]
    COMMENT The function do not set the data neg to arinc word 
    COMMENT shifted by A429_data with indices of channel and loop index count of 
    COMMENT start bit subtracted by ONE And MAX_32 shifted by THIRTY_TWO subtracted
    COMMENT  by sig_bits of A429_data of indices of channel and loop count plus ONE.
    COMMENT Equivalence Class 285
    COMMENT 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-018]
    COMMENT The function call the function SetFuelFlowData with parameters 
    COMMENT next index value where label is found and extracted data when
    COMMENT all the below conditions are satisfied :
    COMMENT 1.Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1  
    COMMENT OR Active_eiu is equal to EIU2 And  TRUE is equal to source_EIU2 
    COMMENT And TRUE is equal to label_found And ZERO is equal to pbit_test_result.
    COMMENT 2. type of A429_data indices of channel and loop index count is 
    COMMENT equal to BNR And ZERO to arinc word right shift of TEN And dataZeros.
    COMMENT 3. Cmu_fuel_flow is ONE and Md_engine_flag is TRUE
    COMMENT 4. received label is LABEL_0244
	COMMENT  And does not set the N1 value to 32bit data when the label of A429_data with indices as channel and index count value not COMMENT equal to LABEL_0346 AND ssm to THREE--364(FX)
    COMMENT Equivalence Class 286,287,291,364
    COMMENT 
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
		
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x25,1=>0x11,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = 0,            ev = init
			
            VAR Pbit_test_result,                             init = 0,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA4,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = 1,             ev = init
						
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 0,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		
		    STUB SetFuelFlowData(1,0)
		    STUB RTDSetParam(1,1,0,(T_RTD_STATUS)0)
		          
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 44

TEST 45
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-018]
    COMMENT The function do not call SetFuelFlowData with parameters 
    COMMENT next index value where label is found and extracted data when
    COMMENT all the below conditions are satisfied :
    COMMENT 1.Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1  
    COMMENT OR Active_eiu is equal to EIU2 And  TRUE is equal to source_EIU2 
    COMMENT And TRUE is equal to label_found And ZERO is equal to pbit_test_result.
    COMMENT 2. type of A429_data indices of channel and loop index count is 
    COMMENT equal to BNR And ZERO to arinc word right shift of TEN And dataZeros.
    COMMENT 3. Cmu_fuel_flow is ONE and Md_engine_flag is TRUE
    COMMENT 4. do nothing when received label is not LABEL_0244
    COMMENT Equivalence Class 286,287,292
    COMMENT 
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
		
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x01,1=>0x11,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = 0,            ev = init
			
            VAR Pbit_test_result,                             init = 0,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0x80,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = 1,             ev = init
						
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 0,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		
		    STUB RTDSetParam(1,1,0,(T_RTD_STATUS)0)
		          
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 45

TEST 46
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-018]
    COMMENT The function do nothing when
    COMMENT 1.Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1  
    COMMENT OR Active_eiu is equal to EIU2 And  TRUE is equal to source_EIU2 
    COMMENT And TRUE is equal to label_found And ZERO is equal to pbit_test_result.
    COMMENT 2. type of A429_data indices of channel and loop index count is 
    COMMENT equal to BNR And ZERO to arinc word right shift of TEN And dataZeros.
    COMMENT 3. Cmu_fuel_flow is not ONE and Md_engine_flag is TRUE
    COMMENT 4. do nothing when received label is not LABEL_0244
    COMMENT Equivalence Class 289,287,292
    COMMENT 
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
		
		
		
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x25,1=>0x11,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = 0,            ev = init
			
            VAR Pbit_test_result,                             init = 0,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA4,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = 1,             ev = init
						
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =0,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 0,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		
		    STUB RTDSetParam(1,1,0,(T_RTD_STATUS)0)
		          
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 46

TEST 47
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-018]
    COMMENT The function do nothing when
    COMMENT 1.Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1  
    COMMENT OR Active_eiu is equal to EIU2 And  TRUE is equal to source_EIU2 
    COMMENT And TRUE is equal to label_found And ZERO is equal to pbit_test_result.
    COMMENT 2. type of A429_data indices of channel and loop index count is 
    COMMENT equal to BNR And ZERO to arinc word right shift of TEN And dataZeros.
    COMMENT 3. Cmu_fuel_flow is ONE and Md_engine_flag is FALSE
    COMMENT 4. do nothing when received label is not LABEL_0244
    COMMENT Equivalence Class 286,290
    COMMENT 
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
		
		
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x25,1=>0x11,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = 0,            ev = init
			
            VAR Pbit_test_result,                             init = 0,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA4,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = 1,             ev = init
						
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =FALSE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 0,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		
		    STUB RTDSetParam(1,1,0,(T_RTD_STATUS)0)
		          
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 47


TEST 106
FAMILY nominal

COMMENT Test Description
COMMENT <TD>
COMMENT [hdudispfa429-Process429Words-DB-LLR-018]
COMMENT The function do nothing when
COMMENT 1.Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1
COMMENT OR Active_eiu is equal to EIU2 And TRUE is equal to source_EIU2
COMMENT And TRUE is equal to label_found And ZERO is equal to pbit_test_result.
COMMENT 2. type of A429_data indices of channel and loop index count is
COMMENT equal to BNR And ZERO to arinc word right shift of TEN And dataZeros.
COMMENT 3. Cmu_fuel_flow is ONE and Md_engine_flag is FALSE
COMMENT 4. do nothing when received label is not LABEL_0244
COMMENT And sets the N1 value to 32bit data when the label of A429_data with indices as channel and index count value to LABEL_0346 AND ssm  COMMENT to THREE(TT)
COMMENT Equivalence Class 286,290,363,365
COMMENT
COMMENT </TD>



ELEMENT

         COMMENT INPUT SECTION:
         
         --A825 messages
         STRUCTURE s_mess, init = { lcc => EEC, sID =>{ BID =>{ doc => A429_CHAN_2,others => 0 } },
         & u8PaySize =>0x1, u8PayLoad =>{0=>0x67,1=>0x11,2=>0x1D,3=>0x60,others=>0x8 } },
         & ev = init
         
         -- Holds the currently active eiu
         VAR Active_eiu, init = EIU1, ev = init
         
         VAR Config_data.scu_enable, init = 0, ev = init
         
         VAR Pbit_test_result, init = 0, ev = init
         
         -- A429 label
         VAR A429_data[1][0].label, init = 0xE6, ev = init
         
         -- A429 type
         VAR A429_data[1][0].type, init = BNR, ev = init
         
         VAR A429_data[1][0].start_bit, init = 12, ev = init
         
         VAR A429_data[1][0].sig_bits, init = DATA_28_BIT, ev = init
         
         VAR A429_data[1][0].scale_factor, init = 0, ev = init
         
         VAR A429_data[1][0].offset, init = 0, ev = init
         
         VAR Scu_bg_lim_val[1], init = 1, ev = init
         
         VAR Scu_label_flag, init = 1, ev = init
         
         VAR Scu_fty_offset_flag, init = 2, ev = init
         
         VAR Du_position, init = TWO, ev = init
         
         VAR Du_identified, init = FALSE, ev = init
         
         -- Holds the CAS count
         VAR Cas_cnt, init =0x0, ev = init
         
         VAR Cmu_fuel_flow, init =ONE, ev = init
         
         VAR Md_engine_flag, init =FALSE, ev = init
         
         -- Holds the port2 label count value
         VAR Port2_label_count, init = 0x3, ev = init
         
         -- CAS label
         VAR Cas_msg[0].label, init = 0xD, ev = init
         
         
         
         -- Exceed label
         VAR Exceed_data[0].label, init = 0x3D, ev = init
         
         -- wog label
         VAR Auto_cool_down_tmr.wog_label, init = 0xF, ev = init
         
         -- strat bit of wog
         VAR Auto_cool_down_tmr.wog_start_bit, init = 0x5, ev = init
         
         VAR Timer_cnt, init = 0, ev = init
         
         
         COMMENT OUTPUT SECTION:
         
         VAR N1_value,    init=1,   ev=0
         
         
         COMMENT INPUT/OUTPUT SECTION:
         
         --None
         
         -- Stub Calls:
         SIMUL
         
         STUB RTDSetParam(1,1,0,(T_RTD_STATUS)3)
         
         
         END SIMUL
         
         
         
         -- Calling the Unit Under Test :
         #A429ProcessA825(&s_mess);
         
         
END ELEMENT

END TEST -- TEST 106

TEST 107
FAMILY nominal

       COMMENT Test Description
       COMMENT <TD>
       COMMENT [hdudispfa429-Process429Words-DB-LLR-018]
       COMMENT The function do nothing when
       COMMENT 1.Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1
       COMMENT OR Active_eiu is equal to EIU2 And TRUE is equal to source_EIU2
       COMMENT And TRUE is equal to label_found And ZERO is equal to pbit_test_result.
       COMMENT 2. type of A429_data indices of channel and loop index count is
       COMMENT equal to BNR And ZERO to arinc word right shift of TEN And dataZeros.
       COMMENT 3. Cmu_fuel_flow is ONE and Md_engine_flag is FALSE
       COMMENT 4. do nothing when received label is not LABEL_0244
	   COMMENT And does not set the N1 value to 32bit data when the label of A429_data with indices as channel and index count value to COMMENT LABEL_0346 AND ssm not equal to THREE(TF)
       COMMENT Equivalence Class 286,290,363,366
       COMMENT
       COMMENT </TD>
       
      
       ELEMENT

         COMMENT INPUT SECTION:
         
         --A825 messages
         STRUCTURE s_mess, init = { lcc => EEC, sID =>{ BID =>{ doc => A429_CHAN_2,others => 0 } },
         & u8PaySize =>0x1, u8PayLoad =>{0=>0x67,1=>0x11,2=>0x1D,3=>0x03,others=>0x8 } },
         & ev = init
         
         -- Holds the currently active eiu
         VAR Active_eiu, init = EIU1, ev = init
         
         VAR Config_data.scu_enable, init = 0, ev = init
         
         VAR Pbit_test_result, init = 0, ev = init
         
         -- A429 label
         VAR A429_data[1][0].label, init = 0xE6, ev = init
         
         -- A429 type
         VAR A429_data[1][0].type, init = BNR, ev = init
         
         VAR A429_data[1][0].start_bit, init = 12, ev = init
         
         VAR A429_data[1][0].sig_bits, init = DATA_28_BIT, ev = init
         
         VAR A429_data[1][0].scale_factor, init = 0, ev = init
         
         VAR A429_data[1][0].offset, init = 0, ev = init
         
         VAR Scu_bg_lim_val[1], init = 1, ev = init
         
         VAR Scu_label_flag, init = 1, ev = init
         
         VAR Scu_fty_offset_flag, init = 2, ev = init
         
         VAR Du_position, init = TWO, ev = init
         
         VAR Du_identified, init = FALSE, ev = init
         
         -- Holds the CAS count
         VAR Cas_cnt, init =0x0, ev = init
         
         VAR Cmu_fuel_flow, init =ONE, ev = init
         
         VAR Md_engine_flag, init =FALSE, ev = init
         
         -- Holds the port2 label count value
         VAR Port2_label_count, init = 0x3, ev = init
         
         -- CAS label
         VAR Cas_msg[0].label, init = 0xD, ev = init
         
         
         
         -- Exceed label
         VAR Exceed_data[0].label, init = 0x3D, ev = init
         
         -- wog label
         VAR Auto_cool_down_tmr.wog_label, init = 0xF, ev = init
         
         -- strat bit of wog
         VAR Auto_cool_down_tmr.wog_start_bit, init = 0x5, ev = init
         
         VAR Timer_cnt, init = 0, ev = init
         
         
         COMMENT OUTPUT SECTION:
         
         
         
         
         COMMENT INPUT/OUTPUT SECTION:
         
         --None
         
         -- Stub Calls:
         SIMUL
         
         STUB RTDSetParam(1,1,0,(T_RTD_STATUS)0)
         
         
         END SIMUL
         
         
         
         -- Calling the Unit Under Test :
         #A429ProcessA825(&s_mess);
         
        
         
END ELEMENT

END TEST -- TEST 107


TEST 48
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-019]
    COMMENT The function loops for zero times when Timer_cnt is zero and
    COMMENT extract data by i32_arinc_word right shifting by TEN
    COMMENT when below conditions are satisfied :
    COMMENT a).Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1  OR Active_eiu 
    COMMENT is equal to EIU2 And  TRUE is equal to source_EIU2 And TRUE is equal to 
    COMMENT label_found And ZERO is equal to pbit_test_result.
    COMMENT b)type of A429_data indices of channel and loop index count is equal to 
    COMMENT DDW And label of Cas_msg with index zero And label of Exceed_data with index 
    COMMENT zero And wog_label of Auto_cool_down_tmr are not equal to received label And 
    COMMENT label of A429_data indices of channel and loop index count is not equal to LABEL_0360 and LABEL_0370 .
    COMMENT Equivalence Class 76,79,82,84,87,95,96,99,101,106,258,293,295,297 
    COMMENT 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-020]
    COMMENT The function perform the following :
    COMMENT 1. Set the timer id of Exceed_timer_params with index timer to timer id
    COMMENT 2. Set the timer parameter of Exceed_timer_params with index timer to 
    COMMENT parameter i32_arinc_word right shifted by THIRTEEN AND with FIFTEEN
    COMMENT 3. Set the timer color of Exceed_timer_params with index timer to 
    COMMENT parameter i32_arinc_word right shifted by SEVENTEEN AND with FIFTEEN
    COMMENT 4. Set the timer data flag of Exceed_timer_params with index timer to TRUE.
    COMMENT 5.Set timer_flash of Exceed_timer_params with index timer to parameter 
	COMMENT i32_arinc_word right shifted by TWENTY_ONE AND with ONE
    COMMENT when below conditions are satisfied :
    COMMENT 1. Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1  
    COMMENT OR Active_eiu is equal to EIU2 And  TRUE is equal to source_EIU2 
    COMMENT And TRUE is equal to label_found And ZERO is equal to pbit_test_result.
    COMMENT 2. type of A429_data indices of channel and loop index count is 
    COMMENT equal to DDW And label of A429_data indices of channel and loop 
    COMMENT index count is equal to LABEL_0240
    COMMENT 3. timer id is ONE.
    COMMENT Equivalence Class 87,299
    COMMENT 
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x25,1=>0x15,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = 0,            ev = init
			
            VAR Pbit_test_result,                             init = 0,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA4,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = 1,             ev = init
						
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =FALSE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 0,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            VAR Exceed_timer_params[0].timer_id,       init = 0,             ev = 1   
			
            VAR Exceed_timer_params[0].timer_param,       init = 1,             ev = 8
			
            VAR Exceed_timer_params[0].timer_color,       init = 1,             ev = 14 
			
            VAR Exceed_timer_params[0].timer_flash,       init = 1,             ev = 0 
			
            VAR Exceed_timer_params[0].timer_data_flag,       init = FALSE,             ev = TRUE   
			
            VAR Timer_a429_tag[0],       init = 0,             ev = 1   		
		
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
				          
		    STUB RTDSetParam(1,1,329541.0,(T_RTD_STATUS)0)    
	
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 48

TEST 49
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-019]
    COMMENT 1.set the timer_a249_label of Exceed_timer_params with index timer to 
    COMMENT label of A429_data with indices of channel and loop index count and set
    COMMENT the timer_a429_sdi of Exceed_timer_params with index timer to sdi  of 
    COMMENT A429_data with indices of channel and loop index count
    COMMENT when below conditions are satisfied :
    COMMENT 1) timer_label of Timer_settings with index timer of Page_settings is equal  
    COMMENT to label of A429_data indices of channel and loop index count And timer_sdi   
    COMMENT of Timer_settings with index timer of Page_settings is equal to sdi of  
    COMMENT A429_data indices of channel and loop index count 
    COMMENT a).Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1  OR Active_eiu 
    COMMENT is equal to EIU2 And  TRUE is equal to source_EIU2 And TRUE is equal to 
    COMMENT label_found And ZERO is equal to pbit_test_result.
    COMMENT b)type of A429_data indices of channel and loop index count is equal to 
    COMMENT DDW And label of Cas_msg with index zero And label of Exceed_data with index 
    COMMENT zero And wog_label of Auto_cool_down_tmr are not equal to received label And 
    COMMENT label of A429_data indices of channel and loop index count is not equal to LABEL_0360 and LABEL_0370 .
    COMMENT Equivalence Class 76,79,82,84,87,95,96,99,101,106,258,293,295,297,301,303 
    COMMENT 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-021]
    COMMENT The function perform the following :
    COMMENT 1. Set the timer id of Exceed_timer_params with index timer to timer id
    COMMENT 2. Set the timer seconds of Exceed_timer_params with index timer 
    COMMENT to parameter i32_arinc_word right shifted by THIRTEEN AND with 0xFFFF
    COMMENT 3. Set the timer data flag of Exceed_timer_params with index timer to TRUE.
    COMMENT when below conditions are satisfied :
    COMMENT 1. Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1  
    COMMENT OR Active_eiu is equal to EIU2 And  TRUE is equal to source_EIU2 
    COMMENT And TRUE is equal to label_found And ZERO is equal to pbit_test_result.
    COMMENT 2. type of A429_data indices of channel and loop index count is 
    COMMENT equal to DDW And label of A429_data indices of channel and loop 
    COMMENT index count is equal to LABEL_0240
    COMMENT 3. timer id is TWO.
    COMMENT Equivalence Class 87,300,305
    COMMENT 
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x25,1=>0x19,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = 0,            ev = init
			
            VAR Pbit_test_result,                             init = 0,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA4,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR A429_data[1][0].sdi,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = 1,             ev = init
						
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =FALSE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 1,             ev = init   
			
            VAR Page_settings.Timer_settings[0].timer_label,       init = 0xA4,             ev = init  
			
            VAR Page_settings.Timer_settings[0].timer_sdi,       init = 0,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            VAR Exceed_timer_params[0].timer_id,       init = 0,             ev = 2   
			
            VAR Exceed_timer_params[0].timer_seconds,       init = 1,             ev = 41192
			
            VAR Exceed_timer_params[0].timer_sec_flag,       init = FALSE,             ev = TRUE 
			
            VAR Exceed_timer_params[0].timer_a249_label,       init = 0,             ev = 164   
			
            VAR Exceed_timer_params[0].timer_a429_sdi,       init = 1,             ev = 0   
			
            VAR Timer_a429_tag[0],       init = 0,             ev = 1   		
		
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
				          
		    STUB RTDSetParam(1,1,329542.0,(T_RTD_STATUS)0)    
	
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 49

TEST 50
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-019]
    COMMENT 1.Don't set the timer_a249_label of Exceed_timer_params with index timer to 
    COMMENT label of A429_data with indices of channel and loop index count and set
    COMMENT the timer_a429_sdi of Exceed_timer_params with index timer to sdi  of 
    COMMENT A429_data with indices of channel and loop index count
    COMMENT when below conditions are satisfied :
    COMMENT 1) timer_label of Timer_settings with index timer of Page_settings is not equal  
    COMMENT to label of A429_data indices of channel and loop index count And timer_sdi   
    COMMENT of Timer_settings with index timer of Page_settings is equal to sdi of  
    COMMENT A429_data indices of channel and loop index count 
    COMMENT a).Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1  OR Active_eiu 
    COMMENT is equal to EIU2 And  TRUE is equal to source_EIU2 And TRUE is equal to 
    COMMENT label_found And ZERO is equal to pbit_test_result.
    COMMENT b)type of A429_data indices of channel and loop index count is equal to 
    COMMENT DDW And label of Cas_msg with index zero And label of Exceed_data with index 
    COMMENT zero And wog_label of Auto_cool_down_tmr are not equal to received label And 
    COMMENT label of A429_data indices of channel and loop index count is not equal to LABEL_0360 and LABEL_0370 .
    COMMENT Equivalence Class 76,79,82,84,87,95,96,99,101,106,258,293,295,297,302,303 
    COMMENT 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-022]
    COMMENT The function perform the following :
    COMMENT 1. Set the timer id of Exceed_timer_params with index timer to timer id
    COMMENT 2. Set the timer data flag of Exceed_timer_params with index timer to FALSE.
    COMMENT 3.Set the timer second flag of Exceed_timer_params with index timer to FALSE.
    COMMENT when below conditions are satisfied :
    COMMENT 1. Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1  
    COMMENT OR Active_eiu is equal to EIU2 And  TRUE is equal to source_EIU2 
    COMMENT And TRUE is equal to label_found And ZERO is equal to pbit_test_result.
    COMMENT 2. type of A429_data indices of channel and loop index count is 
    COMMENT equal to DDW And label of A429_data indices of channel and loop 
    COMMENT index count is equal to LABEL_0240
    COMMENT 3. timer id is ZERO.
    COMMENT Equivalence Class 87,300,306,307
    COMMENT 
    COMMENT 
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x25,1=>0x11,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = 0,            ev = init
			
            VAR Pbit_test_result,                             init = 0,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA4,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR A429_data[1][0].sdi,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = 1,             ev = init
						
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =FALSE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 2,             ev = init   
			
            VAR Page_settings.Timer_settings[0].timer_label,       init = 0xA1,             ev = init 
			
            VAR Page_settings.Timer_settings[1].timer_label,       init = 0xA1,             ev = init  
			
            VAR Page_settings.Timer_settings[0].timer_sdi,       init = 0,             ev = init   
			
            VAR Page_settings.Timer_settings[1].timer_sdi,       init = 0,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            VAR Exceed_timer_params[0].timer_id,       init = 1,             ev = init   
			
            VAR Exceed_timer_params[0].timer_data_flag,       init = TRUE,             ev = init
			
            VAR Exceed_timer_params[0].timer_sec_flag,       init = TRUE,             ev = init 
			
			
            VAR Timer_a429_tag[0],       init = 0,             ev = init 		
		
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
				          
		    STUB RTDSetParam(1,1,329540.0,(T_RTD_STATUS)0)    
	
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 50

TEST 51
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-019]
    COMMENT 1.Don't set the timer_a249_label of Exceed_timer_params with index timer to 
    COMMENT label of A429_data with indices of channel and loop index count and set
    COMMENT the timer_a429_sdi of Exceed_timer_params with index timer to sdi  of 
    COMMENT A429_data with indices of channel and loop index count
    COMMENT when below conditions are satisfied :
    COMMENT 1) timer_label of Timer_settings with index timer of Page_settings is equal  
    COMMENT to label of A429_data indices of channel and loop index count And timer_sdi   
    COMMENT of Timer_settings with index timer of Page_settings is not equal to sdi of  
    COMMENT A429_data indices of channel and loop index count 
    COMMENT a).Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1  OR Active_eiu 
    COMMENT is equal to EIU2 And  TRUE is equal to source_EIU2 And TRUE is equal to 
    COMMENT label_found And ZERO is equal to pbit_test_result.
    COMMENT b)type of A429_data indices of channel and loop index count is equal to 
    COMMENT DDW And label of Cas_msg with index zero And label of Exceed_data with index 
    COMMENT zero And wog_label of Auto_cool_down_tmr are not equal to received label And 
    COMMENT label of A429_data indices of channel and loop index count is not equal to LABEL_0360 and LABEL_0370 .
    COMMENT Equivalence Class 76,79,82,84,87,95,96,99,101,106,258,293,295,297,302,304 
    COMMENT 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-022]
    COMMENT The function do nothing when
    COMMENT 1. timer id is otherthan TWO,ONE,ZERO.
    COMMENT Equivalence Class 87,300,306,308
    COMMENT 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-023]
    COMMENT The function perform the following :
    COMMENT 1. update RTD coming off the A429 bus by calling the function 
    COMMENT RTDSetParam with parameters channel,  next index value where 
    COMMENT label is found , extracted data, SSM value
    COMMENT 2. set the Timer_a429_tag with index timer to next index value 
    COMMENT where label is found
    COMMENT when below conditions are satisfied :
    COMMENT 1. Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1  
    COMMENT OR Active_eiu is equal to EIU2 And  TRUE is equal to source_EIU2 
    COMMENT And TRUE is equal to label_found And ZERO is equal to pbit_test_result.
    COMMENT 2. type of A429_data indices of channel and loop index count is 
    COMMENT equal to DDW And label of A429_data indices of channel and loop 
    COMMENT index count is equal to LABEL_0240.
    COMMENT Equivalence Class None
    COMMENT 
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x25,1=>0x1D,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = 0,            ev = init
			
            VAR Pbit_test_result,                             init = 0,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA4,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR A429_data[1][0].sdi,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = 1,             ev = init
						
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =FALSE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 1,             ev = init   
			
            VAR Page_settings.Timer_settings[0].timer_label,       init = 0xA4,             ev = init   
			
            VAR Page_settings.Timer_settings[0].timer_sdi,       init = 1,             ev = init   
            
        
        COMMENT OUTPUT SECTION:
		
            VAR Timer_a429_tag[0],       init = 0,             ev = init   		
		
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
				          
		    STUB RTDSetParam(1,1,329543.0,(T_RTD_STATUS)0)    
	
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 51


TEST 52
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT   
    COMMENT  [hdudispfa429-Process429Words-DB-LLR-024]
    COMMENT  The function do nothing.
    COMMENT  when below conditions are satisfied :
    COMMENT  1. Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1  
    COMMENT  OR Active_eiu is equal to EIU2 And  TRUE is equal to source_EIU2 
    COMMENT  And TRUE is equal to label_found And ZERO is equal to pbit_test_result.
    COMMENT  2. label value is LABEL_0273 and Md engine flag is TRUE and ff once flag is False
    COMMENT  3. id value is not THREE and ssm is equal to ZERO
    COMMENT  Equivalence Class 76,79,82,84,309,311,313,316
    COMMENT  
    COMMENT  [hdudispfa429-Process429Words-DB-LLR-038]
    COMMENT  The function set data with result of data bitwise OR with 
    COMMENT  result of one left shift by FORTEEN
    COMMENT   when all of the below conditions are satisfied
    COMMENT  1.Active_eiu is EIU1 AND SDI value is ONE  OR
    COMMENT    Active_eiu is EIU2 AND SDI value is TWO
    COMMENT    Result of above condition AND label found flag is TRUE AND 
    COMMENT    Pbit_test_result is equal to ZERO
    COMMENT  2.Type of A429_data is DDW AND label of A429_data with indices channel 
    COMMENT  and index value where label is found is other than LABEL_0360 and LABEL_0370.
    COMMENT  3.Cas_cnt is other than zero AND label of Cas_msg with index zero is 
    COMMENT  equal to label value.
    COMMENT  4.ID value is FIVE.
    COMMENT  5. Fault log advisory is bitwise OR with Fault log advisory data right 
    COMMENT  shift by FORTEEN AND with ONE is equal to TRUE
    COMMENT  Equivalence Class 76,79,82,84,286,319 
    COMMENT  
    COMMENT  
    COMMENT  
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,
            &                       others => 0 } }, u8PaySize =>0x8, u8PayLoad =>{0=>0xDD,1=>0x81,
            &                       2=>0x1D,3=>0x15, 4=>0xBC,5=>0x81,6=>0x1D,7=>0x1F } },
            &                                                           ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                     init = EIU1,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,          init = 0xBB,            ev = init
            
            --Type of A429_data 
            VAR A429_data[1][0].type,           init = DDW,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                        init = 0x15,            ev =init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,              init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,               init = 0xBB,            ev = init  
			
            VAR Md_engine_flag,               init = TRUE,            ev = init  
			
            VAR Config_data.scu_enable,               init = ONE,            ev = init     
			
            VAR Fault_log_adv,               init = ONE,            ev = init           
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,             init = FALSE,           ev = TRUE
            
            -- CAS data received status
            VAR Cas_data_recieved,              init = FALSE,           ev = TRUE
            
        COMMENT INPUT/OUTPUT SECTION:
            
            -- None
            
        
        -- Stub Calls:
        SIMUL
            
            -- updates RTD coming off the A429 bus
            STUB  RTDSetParam  (1,6, 345952.0, (T_RTD_STATUS)0)
            
            -- To set the CAS words
            STUB CasSetCasWord  (5, 18272)

        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 52

TEST 53
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT   
    COMMENT  [hdudispfa429-Process429Words-DB-LLR-038]
    COMMENT  The function do nothing when
    COMMENT  1.Active_eiu is EIU1 AND SDI value is ONE  OR
    COMMENT    Active_eiu is EIU2 AND SDI value is TWO
    COMMENT    Result of above condition AND label found flag is TRUE AND 
    COMMENT    Pbit_test_result is equal to ZERO
    COMMENT  2.Type of A429_data is DDW AND label of A429_data with indices channel 
    COMMENT  and index value where label is found is other than LABEL_0360 and LABEL_0370.
    COMMENT  3.Cas_cnt is other than zero AND label of Cas_msg with index zero is 
    COMMENT  equal to label value.
    COMMENT  4.ID value is FIVE.
    COMMENT  5. Fault log advisory is bitwise OR with Fault log advisory data right 
    COMMENT  shift by FORTEEN AND with ONE is equal to FALSE
    COMMENT  Equivalence Class 76,79,82,84,286,320
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,
            &                       others => 0 } }, u8PaySize =>0x8, u8PayLoad =>{0=>0xDD,1=>0x81,
            &                       2=>0x0D,3=>0x14, 4=>0xBC,5=>0x81,6=>0x1D,7=>0x1F } },
            &                                                           ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                     init = EIU1,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,          init = 0xBB,            ev = init
            
            --Type of A429_data 
            VAR A429_data[1][0].type,           init = DDW,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                        init = 0x15,            ev =init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,              init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,               init = 0xBB,            ev = init  
			
            VAR Md_engine_flag,               init = TRUE,            ev = init  
			
            VAR Config_data.scu_enable,               init = ONE,            ev = init     
			
            VAR Fault_log_adv,               init = 0,            ev = init           
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,             init = FALSE,           ev = TRUE
            
            -- CAS data received status
            VAR Cas_data_recieved,              init = FALSE,           ev = TRUE
            
        COMMENT INPUT/OUTPUT SECTION:
            
            -- None
            
        
        -- Stub Calls:
        SIMUL
            
            -- updates RTD coming off the A429 bus
            STUB  RTDSetParam  (1,6, 328544.0, (T_RTD_STATUS)0)
            
            -- To set the CAS words
            STUB CasSetCasWord  (5, 864)

        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 53

TEST 54
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT  [hdudispfa429-Process429Words-DB-LLR-024]
    COMMENT  The function do nothing.
    COMMENT  when below conditions are satisfied :
    COMMENT  1. Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1  
    COMMENT  OR Active_eiu is equal to EIU2 And  TRUE is equal to source_EIU2 
    COMMENT  And TRUE is equal to label_found And ZERO is equal to pbit_test_result.
    COMMENT  2. label value is LABEL_0273 and Md engine flag is TRUE and ff once flag is False
    COMMENT  3. id value is THREE and ssm is not equal to ZERO
    COMMENT  Equivalence Class 76,79,82,84,309,311,313,315,318
    COMMENT  
    COMMENT  [hdudispfa429-Process429Words-DB-LLR-038]
    COMMENT  The function do nothing
    COMMENT   when all of the below conditions are satisfied
    COMMENT  1.Active_eiu is EIU1 AND SDI value is ONE  OR
    COMMENT    Active_eiu is EIU2 AND SDI value is TWO
    COMMENT    Result of above condition AND label found flag is TRUE AND 
    COMMENT    Pbit_test_result is equal to ZERO
    COMMENT  2.Type of A429_data is DDW AND label of A429_data with indices channel 
    COMMENT  and index value where label is found is other than LABEL_0360 and LABEL_0370.
    COMMENT  3.Cas_cnt is other than zero AND label of Cas_msg with index zero is 
    COMMENT  equal to label value.
    COMMENT  4.ID value is not FIVE
    COMMENT  Equivalence Class 76,79,82,84,286,319 
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,
            &                       others => 0 } }, u8PaySize =>0x8, u8PayLoad =>{0=>0xDD,1=>0x81,
            &                       2=>0x0D,3=>0x2C, 4=>0xBC,5=>0x81,6=>0x1D,7=>0x1F } },
            &                                                           ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                     init = EIU1,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,          init = 0xBB,            ev = init
            
            --Type of A429_data 
            VAR A429_data[1][0].type,           init = DDW,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                        init = 0x15,            ev =init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,              init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,               init = 0xBB,            ev = init  
			
            VAR Md_engine_flag,               init = TRUE,            ev = init  
			
            VAR Config_data.scu_enable,               init = ONE,            ev = init     
			
            VAR Fault_log_adv,               init = 0,            ev = init           
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,             init = FALSE,           ev = TRUE
            
            -- CAS data received status
            VAR Cas_data_recieved,              init = FALSE,           ev = TRUE
            
        COMMENT INPUT/OUTPUT SECTION:
            
            -- None
            
        
        -- Stub Calls:
        SIMUL
            
            -- updates RTD coming off the A429 bus
            STUB  RTDSetParam  (1,4, 721760.0, (T_RTD_STATUS)1)

        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 54

TEST 55
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT ELEMENT 1
    COMMENT  [hdudispfa429-Process429Words-DB-LLR-024]
    COMMENT The function call the function SetCMUFuelFlowEnable with 
    COMMENT parameter i32_arinc_word right shifting by TWENTY_FOUR and with 
    COMMENT ONE and set the ff once falg to TRUE
    COMMENT  when below conditions are satisfied :
    COMMENT  1. Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1  
    COMMENT  OR Active_eiu is equal to EIU2 And  TRUE is equal to source_EIU2 
    COMMENT  And TRUE is equal to label_found And ZERO is equal to pbit_test_result.
    COMMENT  2. label value is LABEL_0273 and Md engine flag is TRUE and ff once flag is False
    COMMENT  3. id value is THREE and ssm is equal to ZERO
    COMMENT  Equivalence Class 76,79,82,84,309,311,313,315,317
    COMMENT 
    COMMENT ELEMENT 2
    COMMENT  [hdudispfa429-Process429Words-DB-LLR-024]
    COMMENT The function do nothing
    COMMENT  when below conditions are satisfied :
    COMMENT  1. Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1  
    COMMENT  OR Active_eiu is equal to EIU2 And  TRUE is equal to source_EIU2 
    COMMENT  And TRUE is equal to label_found And ZERO is equal to pbit_test_result.
    COMMENT  2. label value is LABEL_0273 and Md engine flag is TRUE and ff once flag is TRUE
    COMMENT  3. id value is THREE and ssm is equal to ZERO
    COMMENT  Equivalence Class 76,79,82,84,309,311,314
    COMMENT 
    COMMENT 
    COMMENT 
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,
            &                       others => 0 } }, u8PaySize =>0x8, u8PayLoad =>{0=>0xDD,1=>0x81,
            &                       2=>0x0D,3=>0x0C, 4=>0xBC,5=>0x81,6=>0x1D,7=>0x1F } },
            &                                                           ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                     init = EIU1,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,          init = 0xBB,            ev = init
            
            --Type of A429_data 
            VAR A429_data[1][0].type,           init = DDW,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                        init = 0x15,            ev =init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,              init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,               init = 0xBB,            ev = init  
			
            VAR Md_engine_flag,               init = TRUE,            ev = init  
			
            VAR Config_data.scu_enable,               init = 0,            ev = init     
			
            VAR Fault_log_adv,               init = 0,            ev = init           
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,             init = FALSE,           ev = TRUE
            
            -- CAS data received status
            VAR Cas_data_recieved,              init = FALSE,           ev = TRUE
            
        COMMENT INPUT/OUTPUT SECTION:
            
            -- None
            
        
        -- Stub Calls:
        SIMUL
            
            -- updates RTD coming off the A429 bus
            STUB  RTDSetParam  (1,4, 197472.0, (T_RTD_STATUS)0)
            
            -- To set the CAS words
            STUB CasSetCasWord  (3, 864)
			
            STUB SetCMUFuelFlowEnable  (0)

        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT
	
	
	
    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,
            &                       others => 0 } }, u8PaySize =>0x8, u8PayLoad =>{0=>0xDD,1=>0x81,
            &                       2=>0x0D,3=>0x0C, 4=>0xBC,5=>0x81,6=>0x1D,7=>0x1F } },
            &                                                           ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                     init = EIU1,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,          init = 0xBB,            ev = init
            
            --Type of A429_data 
            VAR A429_data[1][0].type,           init = DDW,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                        init = 0x15,            ev =init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,              init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,               init = 0xBB,            ev = init  
			
            VAR Md_engine_flag,               init = TRUE,            ev = init  
			
            VAR Config_data.scu_enable,               init = 0,            ev = init     
			
            VAR Fault_log_adv,               init = 0,            ev = init           
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,             init = FALSE,           ev = TRUE
            
            -- CAS data received status
            VAR Cas_data_recieved,              init = FALSE,           ev = TRUE
            
        COMMENT INPUT/OUTPUT SECTION:
            
            -- None
            
        
        -- Stub Calls:
        SIMUL
            
            -- updates RTD coming off the A429 bus
            STUB  RTDSetParam  (1,4, 197472.0, (T_RTD_STATUS)0)
            
            -- To set the CAS words
            STUB CasSetCasWord  (3, 864)
			
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT	
	

END TEST -- TEST 55


TEST 56
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT  [hdudispfa429-Process429Words-DB-LLR-024]
    COMMENT The function do nothing
    COMMENT  when below conditions are satisfied :
    COMMENT  1. Active_eiu is equal to EIU1 And TRUE is equal to source_EIU1  
    COMMENT  OR Active_eiu is equal to EIU2 And  TRUE is equal to source_EIU2 
    COMMENT  And TRUE is equal to label_found And ZERO is equal to pbit_test_result.
    COMMENT  2. label value is LABEL_0273 and Md engine flag is FALSE and ff once flag is TRUE
    COMMENT  3. id value is THREE and ssm is equal to ZERO
    COMMENT  Equivalence Class 76,79,82,84,309,312
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,
            &                       others => 0 } }, u8PaySize =>0x8, u8PayLoad =>{0=>0xDD,1=>0x81,
            &                       2=>0x0D,3=>0x2C, 4=>0xBC,5=>0x81,6=>0x1D,7=>0x1F } },
            &                                                           ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                     init = EIU1,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,          init = 0xBB,            ev = init
            
            --Type of A429_data 
            VAR A429_data[1][0].type,           init = DDW,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                        init = 0x15,            ev =init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,              init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,               init = 0xBB,            ev = init  
			
            VAR Md_engine_flag,               init = FALSE,            ev = init  
			
            VAR Config_data.scu_enable,               init = ONE,            ev = init     
			
            VAR Fault_log_adv,               init = 0,            ev = init           
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,             init = FALSE,           ev = TRUE
            
            -- CAS data received status
            VAR Cas_data_recieved,              init = FALSE,           ev = TRUE
            
        COMMENT INPUT/OUTPUT SECTION:
            
            -- None
            
        
        -- Stub Calls:
        SIMUL
            
            -- updates RTD coming off the A429 bus
            STUB  RTDSetParam  (1,4, 721760.0, (T_RTD_STATUS)1)
            

        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 56

TEST 57
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-025]
    COMMENT  The function does the following. Set the data neg to arinc word 
    COMMENT  shifted by A429_data with indices of channel and loop index count of 
    COMMENT  start bit subtracted by ONE And MAX_32 shifted by THIRTY_TWO subtracted
    COMMENT   by sig_bits of A429_data of indices of channel and loop count plus ONE.
    COMMENT  Set the data neg to negation of data neg.
    COMMENT  Set the data neg to data neg And MAX_32 shifted by THIRTY_TWO subtracted by 
    COMMENT  A429_data of indices of channel and loop index count of sig_bits plus ONE .
    COMMENT  Set the data to data neg multiplied with A429_data of indices channel of 
    COMMENT  loop index count of scale_factor multiply of minus ONE.
    COMMENT   when all of the below conditions are satisfied :
    COMMENT  1. scu_enable of Configuration data is ONE and label found is TRUE and 
    COMMENT  Pbit_test_result is ZERO
    COMMENT  2. A429_data indices of channel and loop index count is equal to BNR And ZERO 
    COMMENT  to arinc word right shift of TEN And data Zeros And received label is equal 
    COMMENT  to LABEL_0247 or LABEL_055 or LABEL_057
    COMMENT  3. Sign bit is other than ZERO And DATA_28_BIT is equal to A429_data of 
    COMMENT  indices of channel and loop index count of sig_bits plus A429_data of 
    COMMENT  indices channel and loop index count of start_bit minus ONE.
    COMMENT  Equivalence Class 286,321,82,86,323,325,327
    COMMENT  
    COMMENT [hdudispfa429-Process429Words-DB-LLR-027]
    COMMENT  The function add offset of A429_data with indices channel and index value
    COMMENT   where label is found to extracted data
    COMMENT   when all of the below conditions are satisfied :
    COMMENT  1. scu_enable of Configuration data is ONE and label found is TRUE and
    COMMENT   Pbit_test_result is ZERO
    COMMENT  2. A429_data indices of channel and loop index count is equal to BNR And
    COMMENT   ZERO to arinc word right shift of TEN And data Zeros.
    COMMENT  Equivalence Class 286,321,82,86,323
    COMMENT
    COMMENT [hdudispfa429-Process429Words-DB-LLR-028]
    COMMENT The function perform the following :
    COMMENT - Set the Scu_timer with index zero to ZERO 
    COMMENT - Set max_val of A429_data with indices channel and loop index count 
    COMMENT to Scu_bg_lim_val with index one when first bit Scu_fty_offset_flag 
    COMMENT is equal to one.
    COMMENT when 
    COMMENT 1. scu_enable of Configuration data is ONE and label found is TRUE 
    COMMENT and Pbit_test_result is ZERO
    COMMENT 2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT (bit 11 to 15 in arinc message) is ZERO.
    COMMENT 3. label of A429_data with index as  channel and loop index count 
    COMMENT is equal to LABEL_0247 AND 
    COMMENT 4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT and channel is ZERO)) and Du_position is TWO or 
    COMMENT 5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,76,72
    COMMENT
    COMMENT [hdudispfa429-A429ProcessA825-DB-LLR-001]
    COMMENT The function nothing when doc of BID of sID of s_mess is equal to A429_CHAN_1.
    COMMENT and Du_identified  is FALSE.
    COMMENT Equivalence Class 39,65,362
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xE5,1=>0x81,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA7,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].max_val,              init = 0,             ev = 1
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[0],              init = 1,             ev = 0
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = TRUE
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
            -- updates RTD coming off the A429 bus
            STUB RTDSetParam(1,1, 0, (T_RTD_STATUS)0)
			
            STUB ScuRTDSetParam(1,1, 0,0, (T_RTD_STATUS)0)
			
            STUB ProcessingArinc01Fault()
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 57

TEST 58
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-025]
    COMMENT  The function do nothing
    COMMENT   when all of the below conditions are satisfied :
    COMMENT  1. scu_enable of Configuration data is ONE and label found is TRUE and 
    COMMENT  Pbit_test_result is ZERO
    COMMENT  2. A429_data indices of channel and loop index count is equal to BNR And ZERO 
    COMMENT  to arinc word right shift of TEN And data Zeros And received label is equal 
    COMMENT  to LABEL_0247 or LABEL_055 or LABEL_057
    COMMENT  3. Sign bit is other than ZERO And DATA_28_BIT is not equal to A429_data of 
    COMMENT  indices of channel and loop index count of sig_bits plus A429_data of 
    COMMENT  indices channel and loop index count of start_bit minus ONE.
    COMMENT  Equivalence Class 286,321,82,86,323,325,328
    COMMENT  
    COMMENT [hdudispfa429-Process429Words-DB-LLR-028]
    COMMENT The function perform the following :
    COMMENT - Set the Scu_timer with index zero to ZERO .
    COMMENT when 
    COMMENT 1. scu_enable of Configuration data is ONE and label found is TRUE 
    COMMENT and Pbit_test_result is ZERO
    COMMENT 2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT (bit 11 to 15 in arinc message) is ZERO.
    COMMENT 3. label of A429_data with index as  channel and loop index count 
    COMMENT is equal to LABEL_0247 AND 
    COMMENT 4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT and channel is ZERO)) and Du_position is TWO or 
    COMMENT 5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,77,72,331
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xE5,1=>0x81,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0xA7,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT-1,             ev = init
			
            VAR A429_data[0][0].max_val,              init = 0,             ev = init
			
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[0],              init = 1,             ev = 0
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 1,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
           
			
            STUB ScuRTDSetParam(0,1, 0,0, (T_RTD_STATUS)0)
			
            STUB ProcessingArinc01Fault()
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 58

TEST 59
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-025]
    COMMENT  The function do nothing
    COMMENT   when all of the below conditions are satisfied :
    COMMENT  1. scu_enable of Configuration data is ONE and label found is TRUE and 
    COMMENT  Pbit_test_result is ZERO
    COMMENT  2. A429_data indices of channel and loop index count is equal to BNR And ZERO 
    COMMENT  to arinc word right shift of TEN And data Zeros And received label is equal 
    COMMENT  to LABEL_0247 or LABEL_055 or LABEL_057
    COMMENT  3. Sign bit is ZERO And DATA_28_BIT is equal to A429_data of 
    COMMENT  indices of channel and loop index count of sig_bits plus A429_data of 
    COMMENT  indices channel and loop index count of start_bit minus ONE.
    COMMENT  Equivalence Class 286,321,82,86,323,326
    COMMENT  
    COMMENT [hdudispfa429-Process429Words-DB-LLR-028]
    COMMENT The function perform the following :
    COMMENT - Set the Scu_timer with index zero to ZERO .
    COMMENT when 
    COMMENT 1. scu_enable of Configuration data is ONE and label found is TRUE 
    COMMENT and Pbit_test_result is ZERO
    COMMENT 2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT (bit 11 to 15 in arinc message) is ZERO.
    COMMENT 3. label of A429_data with index as  channel and loop index count 
    COMMENT is equal to LABEL_0247 AND 
    COMMENT 4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT and channel is ZERO)) and Du_position is TWO or 
    COMMENT 5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,76,72,331
    COMMENT
    COMMENT [hdudispfa429-Process429Words-DB-LLR-029]
    COMMENT The function call the function ScuRTDSetParam with parameter 
    COMMENT channel,loop index count, ZERO, extracted data from A429_data and ssm value when 
    COMMENT 1. scu_enable of Configuration data is ONE and label found is TRUE 
    COMMENT and Pbit_test_result is ZERO
    COMMENT 2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT (bit 11 to 15 in arinc message) is ZERO.
    COMMENT 3. label of A429_data with index as  channel and loop index count 
    COMMENT is equal to LABEL_0247 AND 
    COMMENT 4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT and channel is ZERO)) and Du_position is TWO or 
    COMMENT 5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,76,72,331 
    COMMENT 
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xE5,1=>0x81,2=>0x1D,3=>0x04,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0xA7,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT-1,             ev = init
			
            VAR A429_data[0][0].max_val,              init = 0,             ev = init
			
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[0],              init = 1,             ev = 0
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 1,             ev = init
			
            VAR Du_position,              init = ONE,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = TRUE
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
           
            -- updates RTD coming off the A429 bus
            STUB RTDSetParam(0,1, 0, (T_RTD_STATUS)0)
		   
            STUB ScuRTDSetParam(0,1, 0,0, (T_RTD_STATUS)0)
			
            STUB ProcessingArinc01Fault()
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 59

TEST 60
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-028]
    COMMENT The function perform the following :
    COMMENT - Set the Scu_timer with index zero to ZERO .
    COMMENT when 
    COMMENT 1. scu_enable of Configuration data is ONE and label found is TRUE 
    COMMENT and Pbit_test_result is ZERO
    COMMENT 2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT (bit 11 to 15 in arinc message) is ZERO.
    COMMENT 3. label of A429_data with index as  channel and loop index count 
    COMMENT is equal to LABEL_0247 AND 
    COMMENT 4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT and channel is ZERO)) and Du_position is TWO or 
    COMMENT 5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,77,73,332
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xE5,1=>0x81,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA7,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].max_val,              init = 0,             ev = 1
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[0],              init = 1,             ev = 0
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = ONE,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
			
            STUB ScuRTDSetParam(1,1, 0,0, (T_RTD_STATUS)0)
			
            STUB ProcessingArinc01Fault()
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 60

TEST 61
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-028]
    COMMENT The function do nothing when
    COMMENT 1. scu_enable of Configuration data is ONE and label found is TRUE 
    COMMENT and Pbit_test_result is ZERO
    COMMENT 2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT (bit 11 to 15 in arinc message) is ZERO.
    COMMENT 3. label of A429_data with index as  channel and loop index count 
    COMMENT is equal to LABEL_0247 AND 
    COMMENT 4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT and channel is ZERO)) and Du_position is not TWO or 
    COMMENT 5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT and channel is ONE)) and Du_position is not ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,77,73,333
    COMMENT
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xE5,1=>0x81,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0xA7,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT-1,             ev = init
			
            VAR A429_data[0][0].max_val,              init = 0,             ev = init
			
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[0],              init = 1,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 1,             ev = init
			
            VAR Du_position,              init = 4,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
           
			
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 61

TEST 62
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-028]
    COMMENT The function do nothing when
    COMMENT 1. scu_enable of Configuration data is ONE and label found is TRUE 
    COMMENT and Pbit_test_result is ZERO
    COMMENT 2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT (bit 11 to 15 in arinc message) is ZERO.
    COMMENT 3. label of A429_data with index as  channel and loop index count 
    COMMENT is equal to LABEL_0247 AND 
    COMMENT 4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT and channel is ZERO)) and Du_position is not TWO or 
    COMMENT 5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT and channel is ONE)) and Du_position is not ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,77,73,333
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xE5,1=>0x81,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA7,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].max_val,              init = 0,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[0],              init = 1,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = 4,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 62

TEST 63
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-031]
    COMMENT  The function perform the following :
    COMMENT  1 Do the below when ssm is THREE 
    COMMENT  a. Scu_bg_lim_val with index zero to extracted data from A429_data
    COMMENT  b. Set first bit of Scu_fty_offset_flag and reset third bit of 
    COMMENT  Scu_fty_offset_flag when data is within range of (data >= 40 and data <=50). 
    COMMENT  (data greater than 40)
    COMMENT  2.Set third bit of Scu_fty_offset_flag and reset first bit of 
    COMMENT  Scu_fty_offset_flag when ssm is not THREE
    COMMENT  Do (1) or (2) when below conditons are met 
    COMMENT  1. scu_enable of Configuration data is ONE and label found is 
    COMMENT  TRUE and Pbit_test_result is ZERO
    COMMENT  2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT  (bit 11 to 15 in arinc message) is ZERO.
    COMMENT  3. label of A429_data with index as  channel and loop index count 
    COMMENT  is equal to LABEL_055 AND 
    COMMENT  4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT  and channel is ZERO)) and Du_position is TWO or 
    COMMENT  5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT  and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,76,73,334,336
    COMMENT 
    COMMENT
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xB4,1=>0x81,2=>0x1D,3=>0xFF,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0x2D,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
						
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 41,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_bg_lim_val[0],              init = 1,             ev = 41
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = 3
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = TRUE
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
            -- updates RTD coming off the A429 bus
            STUB RTDSetParam(1,1, 41.0, 3)
			
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 63



TEST 64
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-031]
    COMMENT  The function perform the following :
    COMMENT  1 Do the below when ssm is THREE 
    COMMENT  a. Scu_bg_lim_val with index zero to extracted data from A429_data
    COMMENT  b. Set first bit of Scu_fty_offset_flag and reset third bit of 
    COMMENT  Scu_fty_offset_flag when data is within range of (data >= 40 and data <=50). 
    COMMENT (data equal to 40)
    COMMENT  2.Set third bit of Scu_fty_offset_flag and reset first bit of 
    COMMENT  Scu_fty_offset_flag when ssm is not THREE
    COMMENT  Do (1) or (2) when below conditons are met 
    COMMENT  1. scu_enable of Configuration data is ONE and label found is 
    COMMENT  TRUE and Pbit_test_result is ZERO
    COMMENT  2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT  (bit 11 to 15 in arinc message) is ZERO.
    COMMENT  3. label of A429_data with index as  channel and loop index count 
    COMMENT  is equal to LABEL_055 AND 
    COMMENT  4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT  and channel is ZERO)) and Du_position is TWO or 
    COMMENT  5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT  and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,77,72,334,336
    COMMENT
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xB4,1=>0x81,2=>0x1D,3=>0xFF,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0x2D,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT,             ev = init
						
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 40,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_bg_lim_val[0],              init = 1,             ev = 40
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = 3
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
			
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 64

TEST 65
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-031]
    COMMENT  The function perform the following :
    COMMENT  1 Do the below when ssm is THREE 
    COMMENT  a. Scu_bg_lim_val with index zero to extracted data from A429_data
    COMMENT  b. Set first bit of Scu_fty_offset_flag and reset third bit of 
    COMMENT  Scu_fty_offset_flag when data is within range of (data >= 40 and data <=50). 
    COMMENT  (data equal to 50)
    COMMENT  2.Set third bit of Scu_fty_offset_flag and reset first bit of 
    COMMENT  Scu_fty_offset_flag when ssm is not THREE
    COMMENT  Do (1) or (2) when below conditons are met 
    COMMENT  1. scu_enable of Configuration data is ONE and label found is 
    COMMENT  TRUE and Pbit_test_result is ZERO
    COMMENT  2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT  (bit 11 to 15 in arinc message) is ZERO.
    COMMENT  3. label of A429_data with index as  channel and loop index count 
    COMMENT  is equal to LABEL_055 AND 
    COMMENT  4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT  and channel is ZERO)) and Du_position is TWO or 
    COMMENT  5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT  and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,77,73,334,336
    COMMENT
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xB4,1=>0x81,2=>0x1D,3=>0xFF,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0x2D,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
						
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 50,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_bg_lim_val[0],              init = 1,             ev = 50
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = 3
			
            VAR Du_position,              init = ONE,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
			
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 65

TEST 66
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-031]
    COMMENT  The function perform the following :
    COMMENT  1 Do the below when ssm is THREE 
    COMMENT  a. Scu_bg_lim_val with index zero to extracted data from A429_data
    COMMENT  c. Set third bit of Scu_fty_offset_flag when data is not in range 
    COMMENT  of (data >= 40 and data <=50).(data greater than 50)
    COMMENT  2.Set third bit of Scu_fty_offset_flag and reset first bit of 
    COMMENT  Scu_fty_offset_flag when ssm is not THREE
    COMMENT  Do (1) or (2) when below conditons are met 
    COMMENT  1. scu_enable of Configuration data is ONE and label found is 
    COMMENT  TRUE and Pbit_test_result is ZERO
    COMMENT  2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT  (bit 11 to 15 in arinc message) is ZERO.
    COMMENT  3. label of A429_data with index as  channel and loop index count 
    COMMENT  is equal to LABEL_055 AND 
    COMMENT  4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT  and channel is ZERO)) and Du_position is TWO or 
    COMMENT  5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT  and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,76,72,334,337
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xB4,1=>0x81,2=>0x1D,3=>0xFF,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0x2D,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT,             ev = init
						
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 51,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_bg_lim_val[0],              init = 1,             ev = 51
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = 6
			
            VAR Du_position,              init = ONE,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = TRUE
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
            -- updates RTD coming off the A429 bus
            STUB RTDSetParam(0,1, 51.0, 3)			
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 66

TEST 67
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-031]
    COMMENT  The function perform the following :
    COMMENT  1 Do the below when ssm is THREE 
    COMMENT  a. Scu_bg_lim_val with index zero to extracted data from A429_data
    COMMENT  c. Set third bit of Scu_fty_offset_flag when data is not in range 
    COMMENT  of (data >= 40 and data <=50).(data greater than 50)
    COMMENT  2.Set third bit of Scu_fty_offset_flag and reset first bit of 
    COMMENT  Scu_fty_offset_flag when ssm is not THREE
    COMMENT  Do (1) or (2) when below conditons are met 
    COMMENT  1. scu_enable of Configuration data is ONE and label found is 
    COMMENT  TRUE and Pbit_test_result is ZERO
    COMMENT  2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT  (bit 11 to 15 in arinc message) is ZERO.
    COMMENT  3. label of A429_data with index as  channel and loop index count 
    COMMENT  is equal to LABEL_055 AND 
    COMMENT  4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT  and channel is ZERO)) and Du_position is TWO or 
    COMMENT  5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT  and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,76,72,334,337
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xB4,1=>0x81,2=>0x1D,3=>0xFF,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0x2D,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT,             ev = init
						
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 39,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_bg_lim_val[0],              init = 1,             ev = 39
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = 6
			
            VAR Du_position,              init = ONE,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = TRUE
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
            -- updates RTD coming off the A429 bus
            STUB RTDSetParam(0,1, 39.0, 3)			
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 67

TEST 68
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-031]
    COMMENT  The function perform the following :
    COMMENT  2.Set third bit of Scu_fty_offset_flag and reset first bit of 
    COMMENT  Scu_fty_offset_flag when ssm is not THREE
    COMMENT  Do (1) or (2) when below conditons are met 
    COMMENT  1. scu_enable of Configuration data is ONE and label found is 
    COMMENT  TRUE and Pbit_test_result is ZERO
    COMMENT  2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT  (bit 11 to 15 in arinc message) is ZERO.
    COMMENT  3. label of A429_data with index as  channel and loop index count 
    COMMENT  is equal to LABEL_055 AND 
    COMMENT  4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT  and channel is ZERO)) and Du_position is TWO or 
    COMMENT  5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT  and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,76,72,335,337
    COMMENT
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xB4,1=>0x81,2=>0x1D,3=>0x0F,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0x2D,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT,             ev = init
						
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 39,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = 6
			
            VAR Du_position,              init = ONE,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = TRUE
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
            -- updates RTD coming off the A429 bus
            STUB RTDSetParam(0,1, 39.0, 0)			
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 68

TEST 69
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-031]
    COMMENT  The function do nothing when
    COMMENT  1. scu_enable of Configuration data is ONE and label found is 
    COMMENT  TRUE and Pbit_test_result is ZERO
    COMMENT  2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT  (bit 11 to 15 in arinc message) is ZERO.
    COMMENT  3. label of A429_data with index as  channel and loop index count 
    COMMENT  is equal to LABEL_055 AND 
    COMMENT  4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT  and channel is ZERO)) and Du_position is not TWO or 
    COMMENT  5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT  and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,76,72,333
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xB4,1=>0x81,2=>0x1D,3=>0xFF,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0x2D,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT,             ev = init
						
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 40,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_bg_lim_val[0],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = 4,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
			
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 69

TEST 70
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-031]
    COMMENT  The function do nothing when
    COMMENT  1. scu_enable of Configuration data is ONE and label found is 
    COMMENT  TRUE and Pbit_test_result is ZERO
    COMMENT  2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT  (bit 11 to 15 in arinc message) is ZERO.
    COMMENT  3. label of A429_data with index as  channel and loop index count 
    COMMENT  is equal to LABEL_055 AND 
    COMMENT  4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT  and channel is ZERO)) and Du_position is TWO or 
    COMMENT  5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT  and channel is ONE)) and Du_position is not ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,76,72,333
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xB4,1=>0x81,2=>0x1D,3=>0xFF,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0x2D,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
						
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 50,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_bg_lim_val[0],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = 4,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
			
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 70

TEST 71
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-032]
    COMMENT The function perform the following :
    COMMENT 1 Do the below when ssm is THREE 
    COMMENT a. Scu_bg_lim_val with index one to extracted data from A429_data
    COMMENT b. Set second bit of Scu_fty_offset_flag and reset fourth bit of 
    COMMENT Scu_fty_offset_flag when data is within range of (data >= 151 and data <=425). 
    COMMENT (data is greater than 151)
    COMMENT when below conditons are met 
    COMMENT 1. scu_enable of Configuration data is ONE and label found is TRUE 
    COMMENT and Pbit_test_result is ZERO
    COMMENT 2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT (bit 11 to 15 in arinc message) is ZERO.
    COMMENT 3. label of A429_data with index as  channel and loop index count 
    COMMENT is equal to LABEL_057 AND 
    COMMENT 4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT and channel is ZERO)) and Du_position is TWO or 
    COMMENT 5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,76,73,334,338
    COMMENT 
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xF4,1=>0x81,2=>0x1D,3=>0xFF,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0x2F,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
						
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 152,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = 152
			
            VAR Scu_bg_lim_val[0],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = TRUE
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
            -- updates RTD coming off the A429 bus
            STUB RTDSetParam(1,1, 152, 3)
			
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 71

TEST 72
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-032]
    COMMENT The function perform the following :
    COMMENT 1 Do the below when ssm is THREE 
    COMMENT a. Scu_bg_lim_val with index one to extracted data from A429_data
    COMMENT b. Set second bit of Scu_fty_offset_flag and reset fourth bit of 
    COMMENT Scu_fty_offset_flag when data is within range of (data >= 151 and data <=425). 
    COMMENT (data is equal to 151)
    COMMENT when below conditons are met 
    COMMENT 1. scu_enable of Configuration data is ONE and label found is TRUE 
    COMMENT and Pbit_test_result is ZERO
    COMMENT 2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT (bit 11 to 15 in arinc message) is ZERO.
    COMMENT 3. label of A429_data with index as  channel and loop index count 
    COMMENT is equal to LABEL_057 AND 
    COMMENT 4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT and channel is ZERO)) and Du_position is TWO or 
    COMMENT 5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,77,72,334,338
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xF4,1=>0x81,2=>0x1D,3=>0xFF,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0x2F,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT,             ev = init
						
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 151,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = 151
			
            VAR Scu_bg_lim_val[0],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
			
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 72

TEST 73
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-032]
    COMMENT The function perform the following :
    COMMENT 1 Do the below when ssm is THREE 
    COMMENT a. Scu_bg_lim_val with index one to extracted data from A429_data
    COMMENT b. Set second bit of Scu_fty_offset_flag and reset fourth bit of 
    COMMENT Scu_fty_offset_flag when data is within range of (data >= 151 and data <=425). 
    COMMENT (data is equal to 425)
    COMMENT when below conditons are met 
    COMMENT 1. scu_enable of Configuration data is ONE and label found is TRUE 
    COMMENT and Pbit_test_result is ZERO
    COMMENT 2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT (bit 11 to 15 in arinc message) is ZERO.
    COMMENT 3. label of A429_data with index as  channel and loop index count 
    COMMENT is equal to LABEL_057 AND 
    COMMENT 4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT and channel is ZERO)) and Du_position is TWO or 
    COMMENT 5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,77,73,334,338
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xF4,1=>0x81,2=>0x1D,3=>0xFF,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0x2F,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
						
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 425,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = 425
			
            VAR Scu_bg_lim_val[0],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = ONE,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
			
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 73

TEST 74
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-032]
    COMMENT The function perform the following :
    COMMENT 1 Do the below when ssm is THREE 
    COMMENT a. Scu_bg_lim_val with index one to extracted data from A429_data
    COMMENT b. Set second bit of Scu_fty_offset_flag and reset fourth bit of 
    COMMENT Scu_fty_offset_flag when data is within range of (data >= 151 and data <=425). 
    COMMENT (data is greater than 425)
    COMMENT when below conditons are met 
    COMMENT 1. scu_enable of Configuration data is ONE and label found is TRUE 
    COMMENT and Pbit_test_result is ZERO
    COMMENT 2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT (bit 11 to 15 in arinc message) is ZERO.
    COMMENT 3. label of A429_data with index as  channel and loop index count 
    COMMENT is equal to LABEL_057 AND 
    COMMENT 4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT and channel is ZERO)) and Du_position is TWO or 
    COMMENT 5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,76,72,334,338
    COMMENT
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xF4,1=>0x81,2=>0x1D,3=>0xFF,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0x2F,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT,             ev = init
						
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 426,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = 426
			
            VAR Scu_bg_lim_val[0],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = 10
			
            VAR Du_position,              init = ONE,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = TRUE
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
            -- updates RTD coming off the A429 bus
            STUB RTDSetParam(0,1, 426, 3)			
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 74

TEST 75
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-032]
    COMMENT The function perform the following :
    COMMENT 1 Do the below when ssm is THREE 
    COMMENT a. Scu_bg_lim_val with index one to extracted data from A429_data
    COMMENT b. Set second bit of Scu_fty_offset_flag and reset fourth bit of 
    COMMENT Scu_fty_offset_flag when data is within range of (data >= 151 and data <=425). 
    COMMENT (data is less than 151)
    COMMENT when below conditons are met 
    COMMENT 1. scu_enable of Configuration data is ONE and label found is TRUE 
    COMMENT and Pbit_test_result is ZERO
    COMMENT 2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT (bit 11 to 15 in arinc message) is ZERO.
    COMMENT 3. label of A429_data with index as  channel and loop index count 
    COMMENT is equal to LABEL_057 AND 
    COMMENT 4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT and channel is ZERO)) and Du_position is TWO or 
    COMMENT 5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,76,72,334,338
    COMMENT
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xF4,1=>0x81,2=>0x1D,3=>0xFF,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0x2F,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT,             ev = init
						
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 149,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = 149
			
            VAR Scu_bg_lim_val[0],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = 10
			
            VAR Du_position,              init = ONE,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = TRUE
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
            -- updates RTD coming off the A429 bus
            STUB RTDSetParam(0,1, 149, 3)			
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 75

TEST 76
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-032]
    COMMENT The function perform the following :
    COMMENT 1 Do nothing when ssm is not THREE 
    COMMENT 1. scu_enable of Configuration data is ONE and label found is TRUE 
    COMMENT and Pbit_test_result is ZERO
    COMMENT 2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT (bit 11 to 15 in arinc message) is ZERO.
    COMMENT 3. label of A429_data with index as  channel and loop index count 
    COMMENT is equal to LABEL_057 AND 
    COMMENT 4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT and channel is ZERO)) and Du_position is TWO or 
    COMMENT 5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,76,72,335,338
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xF4,1=>0x81,2=>0x1D,3=>0x0F,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0x2F,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT,             ev = init
						
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 426,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = 8
			
            VAR Du_position,              init = ONE,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = TRUE
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
            -- updates RTD coming off the A429 bus
            STUB RTDSetParam(0,1, 426, 0)			
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 76

TEST 77
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-032]
    COMMENT The function do nothing when
    COMMENT 1. scu_enable of Configuration data is ONE and label found is TRUE 
    COMMENT and Pbit_test_result is ZERO
    COMMENT 2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT (bit 11 to 15 in arinc message) is ZERO.
    COMMENT 3. label of A429_data with index as  channel and loop index count 
    COMMENT is equal to LABEL_057 AND 
    COMMENT 4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT and channel is ZERO)) and Du_position is not TWO or 
    COMMENT 5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT and channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,76,72,335,338,333
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xF4,1=>0x81,2=>0x1D,3=>0xFF,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0x2F,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT,             ev = init
						
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 151,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_bg_lim_val[0],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = 4,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
			
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 77

TEST 78
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-032]
    COMMENT The function do nothing when
    COMMENT 1. scu_enable of Configuration data is ONE and label found is TRUE 
    COMMENT and Pbit_test_result is ZERO
    COMMENT 2. Type of A429_data is BNR AND Display characteristic identifier
    COMMENT (bit 11 to 15 in arinc message) is ZERO.
    COMMENT 3. label of A429_data with index as  channel and loop index count 
    COMMENT is equal to LABEL_057 AND 
    COMMENT 4. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 
    COMMENT and channel is ZERO)) and Du_position is TWO or 
    COMMENT 5. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 
    COMMENT and channel is ONE)) and Du_position is not ONE
    COMMENT  Equivalence Class 286,321,82,86,323,329,76,72,335,338,333
    COMMENT
    COMMENT
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xF4,1=>0x81,2=>0x1D,3=>0xFF,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0x2F,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
						
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 157,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_bg_lim_val[0],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = 4,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
			
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 78

TEST 79
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-033]
    COMMENT The function shall do nothing when all the belwo conditions are satisfied :
    COMMENT 1. scu_enable of Configuration data is ONE and label found is TRUE and Pbit_test_result is ZERO
    COMMENT 2. Type of A429_data is BNR AND Display characteristic identifier(bit 11 to 15 in arinc message) is ZERO.
    COMMENT 3. label of A429_data with indices channel and loop index count is other than LABEL_057, LABEL_055, LABEL_0247
    COMMENT  Equivalence Class 286,321,82,86,324 
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x4,1=>0x81,2=>0x1D,3=>0xFF,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0x20,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
						
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 157,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_bg_lim_val[0],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = 4,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            -- A429 data received status
            VAR A429_data_recieved,                     init = FALSE,           ev = init
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
			
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 79

TEST 80
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-025]
    COMMENT  The function do nothing when
    COMMENT 1. scu_enable of Configuration data is ONE and label found is TRUE and 
    COMMENT Pbit_test_result is ZERO
    COMMENT 2. A429_data indices of channel and loop index count is equal to BNR And ZERO 
    COMMENT to arinc word right shift of TEN And data is not Zeros And received label is equal 
    COMMENT to LABEL_0247 or LABEL_055 or LABEL_057
    COMMENT  Equivalence Class 286,321,82,86,324
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xE5,1=>0xFF,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA7,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = BNR,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 80

TEST 81
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-034]
    COMMENT  The function perform the following :
    COMMENT  1. set the Scu_timer with index one to ZERO
    COMMENT  2. call the function ScuRTDSetParam with parameters channel, loop index count 
    COMMENT  incremented by one, ONE, extracted data from i32_arinc_word right shifting by 
    COMMENT  TEN and ssm value
    COMMENT  3. call the function ProcessLmsScuSysStatusErr with parameters i32_arinc_word 
    COMMENT  right shifting by EIGHT AND 0X1FFFFF and ssm value
    COMMENT  when 
    COMMENT  1.Type of A429_data is DDW label of A429_data with index as channel 
    COMMENT  2. loop index count is equal to LABEL_0272 and sdi value is ZERO and 
    COMMENT  3. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 and channel 
    COMMENT  is ZERO)) and Du_position is TWO or 
    COMMENT  4. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 and channel 
    COMMENT  is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 87,340,342,76,73
    COMMENT
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x5D,1=>0x00,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xBA,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[1],              init = 1,             ev = 0
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		
		   STUB ScuRTDSetParam(1,1,1,329536,(T_RTD_STATUS)0)
		   
		   STUB ProcessLmsScuSysStatusErr(1318144,0)
		   
		   STUB ProcessingArinc01Fault()
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 81

TEST 82
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-034]
    COMMENT  The function perform the following :
    COMMENT  1. set the Scu_timer with index one to ZERO
    COMMENT  2. call the function ScuRTDSetParam with parameters channel, loop index count 
    COMMENT  incremented by one, ONE, extracted data from i32_arinc_word right shifting by 
    COMMENT  TEN and ssm value
    COMMENT  3. call the function ProcessLmsScuSysStatusErr with parameters i32_arinc_word 
    COMMENT  right shifting by EIGHT AND 0X1FFFFF and ssm value
    COMMENT  when 
    COMMENT  1.Type of A429_data is DDW label of A429_data with index as channel 
    COMMENT  2. loop index count is equal to LABEL_0272 and sdi value is ZERO and 
    COMMENT  3. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 and channel 
    COMMENT  is ZERO)) and Du_position is TWO or 
    COMMENT  4. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 and channel 
    COMMENT  is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 87,340,342,77,72,332
    COMMENT
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x5D,1=>0x00,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0xBA,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[1],              init = 1,             ev = 0
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		
		   STUB ScuRTDSetParam(0,1,1,329536,(T_RTD_STATUS)0)
		   
		   STUB ProcessLmsScuSysStatusErr(1318144,0)
		   
		   STUB ProcessingArinc01Fault()
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 82

TEST 83
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-034]
    COMMENT  The function perform the following :
    COMMENT  1. set the Scu_timer with index one to ZERO
    COMMENT  2. call the function ScuRTDSetParam with parameters channel, loop index count 
    COMMENT  incremented by one, ONE, extracted data from i32_arinc_word right shifting by 
    COMMENT  TEN and ssm value
    COMMENT  3. call the function ProcessLmsScuSysStatusErr with parameters i32_arinc_word 
    COMMENT  right shifting by EIGHT AND 0X1FFFFF and ssm value
    COMMENT  when 
    COMMENT  1.Type of A429_data is DDW label of A429_data with index as channel 
    COMMENT  2. loop index count is equal to LABEL_0272 and sdi value is ZERO and 
    COMMENT  3. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 and channel 
    COMMENT  is ZERO)) and Du_position is TWO or 
    COMMENT  4. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 and channel 
    COMMENT  is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 87,340,342,76,72
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x5D,1=>0x00,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0xBA,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[1],              init = 1,             ev = 0
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = ONE,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		
		   STUB ScuRTDSetParam(0,1,1,329536,(T_RTD_STATUS)0)
		   
		   STUB ProcessLmsScuSysStatusErr(1318144,0)
		   
		   STUB ProcessingArinc01Fault()
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 83

TEST 84
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-034]
    COMMENT  The function perform the following :
    COMMENT  1. set the Scu_timer with index one to ZERO
    COMMENT  2. call the function ScuRTDSetParam with parameters channel, loop index count 
    COMMENT  incremented by one, ONE, extracted data from i32_arinc_word right shifting by 
    COMMENT  TEN and ssm value
    COMMENT  3. call the function ProcessLmsScuSysStatusErr with parameters i32_arinc_word 
    COMMENT  right shifting by EIGHT AND 0X1FFFFF and ssm value
    COMMENT  when 
    COMMENT  1.Type of A429_data is DDW label of A429_data with index as channel 
    COMMENT  2. loop index count is equal to LABEL_0272 and sdi value is ZERO and 
    COMMENT  3. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 and channel 
    COMMENT  is ZERO)) and Du_position is TWO or 
    COMMENT  4. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 and channel 
    COMMENT  is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 87,340,342,77,73,332
    COMMENT
    COMMENT [hdudispfa429-Process429Words-DB-LLR-035]
    COMMENT The function call the function ProcessingArinc01Fault when 
    COMMENT 1.Type of A429_data is DDW label of A429_data with index as channel 
    COMMENT 2. loop index count is equal to LABEL_0272 and sdi value is ZERO and 
    COMMENT 3. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 and 
    COMMENT channel is ZERO)) and Du_position is TWO or 
    COMMENT 4. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 and 
    COMMENT channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 87,340,342,77,73
    COMMENT
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x5D,1=>0x00,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xBA,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[1],              init = 1,             ev = 0
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = ONE,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		
		   STUB ScuRTDSetParam(1,1,1,329536,(T_RTD_STATUS)0)
		   
		   STUB ProcessLmsScuSysStatusErr(1318144,0)
		   
		   STUB ProcessingArinc01Fault()
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 84

TEST 85
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-034]
    COMMENT  The function do nothing
    COMMENT  when 
    COMMENT  1.Type of A429_data is DDW label of A429_data with index as channel 
    COMMENT  2. loop index count is equal to LABEL_0272 and sdi value is ZERO and 
    COMMENT  3. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 and channel 
    COMMENT  is ZERO)) and Du_position is not TWO or 
    COMMENT  4. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 and channel 
    COMMENT  is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 87,340,342,77,73,333
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x5D,1=>0x00,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0xBA,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[1],              init = 1,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = 4,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
	           
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 85

TEST 86
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-034]
    COMMENT  The function do nothing
    COMMENT  when 
    COMMENT  1.Type of A429_data is DDW label of A429_data with index as channel 
    COMMENT  2. loop index count is equal to LABEL_0272 and sdi value is ZERO and 
    COMMENT  3. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 and channel 
    COMMENT  is ZERO)) and Du_position is  TWO or 
    COMMENT  4. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 and channel 
    COMMENT  is ONE)) and Du_position is not ONE
    COMMENT  Equivalence Class 87,340,342,77,72,333
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x5D,1=>0x00,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xBA,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[1],              init = 1,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = 4,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 86

TEST 87
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-034]
    COMMENT  The function do nothing
    COMMENT  when 
    COMMENT  1.Type of A429_data is DDW label of A429_data with index as channel 
    COMMENT  2. loop index count is equal to LABEL_0272 and sdi value is not ZERO and 
    COMMENT  3. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 and channel 
    COMMENT  is ZERO)) and Du_position is  TWO or 
    COMMENT  4. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 and channel 
    COMMENT  is ONE)) and Du_position is not ONE
    COMMENT  Equivalence Class 87,340,77,72,343
    COMMENT
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x5D,1=>0xFF,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xBA,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[1],              init = 1,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = 4,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 87

TEST 88
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-036]
    COMMENT  The function perform the following :
    COMMENT  1. Set the Scu_timer with index two to ZERO
    COMMENT  2. Call the function ScuRTDSetParam with parameters channel, loop index 
    COMMENT  count incremented by one, TWO, extracted data from i32_arinc_word right 
    COMMENT  shifting by TEN and ssm value
    COMMENT  3. Call the function ProcessLmsScuSysStatusErr with parameters i32_arinc_word 
    COMMENT  right shifting by EIGHT AND 0X1FFFFF and ssm value
    COMMENT  4.Call the function ProcessingArinc01Fault
    COMMENT   when 
    COMMENT  1.Type of A429_data is DDW label of A429_data with index as channel 
    COMMENT  2. loop index count is equal to LABEL_0250 and sdi value is ZERO and 
    COMMENT  3. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 and 
    COMMENT  channel is ZERO)) and Du_position is TWO or 
    COMMENT  4. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 and 
    COMMENT  channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 87,341,344,76,73
    COMMENT
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x15,1=>0x00,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA8,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[2],              init = 1,             ev = 0
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		
		   STUB ScuRTDSetParam(1,1,2,329536,(T_RTD_STATUS)0)
		   
		   STUB ProcessingArinc01Fault()

		   STUB ProcessLmsScuProbeErr(1318144,0)
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 88

TEST 89
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-036]
    COMMENT  The function perform the following :
    COMMENT  1. Set the Scu_timer with index two to ZERO
    COMMENT  2. Call the function ScuRTDSetParam with parameters channel, loop index 
    COMMENT  count incremented by one, TWO, extracted data from i32_arinc_word right 
    COMMENT  shifting by TEN and ssm value
    COMMENT  3. Call the function ProcessLmsScuSysStatusErr with parameters i32_arinc_word 
    COMMENT  right shifting by EIGHT AND 0X1FFFFF and ssm value
    COMMENT  4.Call the function ProcessingArinc01Fault
    COMMENT   when 
    COMMENT  1.Type of A429_data is DDW label of A429_data with index as channel 
    COMMENT  2. loop index count is equal to LABEL_0250 and sdi value is ZERO and 
    COMMENT  3. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 and 
    COMMENT  channel is ZERO)) and Du_position is TWO or 
    COMMENT  4. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 and 
    COMMENT  channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 87,341,344,77,72,332
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x15,1=>0x00,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0xA8,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[2],              init = 1,             ev = 0
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		
		   STUB ScuRTDSetParam(0,1,2,329536,(T_RTD_STATUS)0)
		   
		   STUB ProcessingArinc01Fault()

		   STUB ProcessLmsScuProbeErr(1318144,0)         
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 89

TEST 90
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-036]
    COMMENT  The function perform the following :
    COMMENT  1. Set the Scu_timer with index two to ZERO
    COMMENT  2. Call the function ScuRTDSetParam with parameters channel, loop index 
    COMMENT  count incremented by one, TWO, extracted data from i32_arinc_word right 
    COMMENT  shifting by TEN and ssm value
    COMMENT  3. Call the function ProcessLmsScuSysStatusErr with parameters i32_arinc_word 
    COMMENT  right shifting by EIGHT AND 0X1FFFFF and ssm value
    COMMENT  4.Call the function ProcessingArinc01Fault
    COMMENT   when 
    COMMENT  1.Type of A429_data is DDW label of A429_data with index as channel 
    COMMENT  2. loop index count is equal to LABEL_0250 and sdi value is ZERO and 
    COMMENT  3. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 and 
    COMMENT  channel is ZERO)) and Du_position is TWO or 
    COMMENT  4. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 and 
    COMMENT  channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 87,341,344,76,72
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x15,1=>0x00,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0xA8,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[2],              init = 1,             ev = 0
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = ONE,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		
		   STUB ScuRTDSetParam(0,1,2,329536,(T_RTD_STATUS)0)
		   
		   STUB ProcessingArinc01Fault()

		   STUB ProcessLmsScuProbeErr(1318144,0)
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 90

TEST 91
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-036]
    COMMENT  The function perform the following :
    COMMENT  1. Set the Scu_timer with index two to ZERO
    COMMENT  2. Call the function ScuRTDSetParam with parameters channel, loop index 
    COMMENT  count incremented by one, TWO, extracted data from i32_arinc_word right 
    COMMENT  shifting by TEN and ssm value
    COMMENT  3. Call the function ProcessLmsScuSysStatusErr with parameters i32_arinc_word 
    COMMENT  right shifting by EIGHT AND 0X1FFFFF and ssm value
    COMMENT  4.Call the function ProcessingArinc01Fault
    COMMENT   when 
    COMMENT  1.Type of A429_data is DDW label of A429_data with index as channel 
    COMMENT  2. loop index count is equal to LABEL_0250 and sdi value is ZERO and 
    COMMENT  3. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 and 
    COMMENT  channel is ZERO)) and Du_position is TWO or 
    COMMENT  4. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 and 
    COMMENT  channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 87,341,344,77,73,332
    COMMENT
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x15,1=>0x00,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA8,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[2],              init = 1,             ev = 0
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = ONE,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		
		   STUB ScuRTDSetParam(1,1,2,329536,(T_RTD_STATUS)0)
		   
		   STUB ProcessingArinc01Fault()

		   STUB ProcessLmsScuProbeErr(1318144,0)
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 91

TEST 92
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-036]
    COMMENT  The function do nothing 
    COMMENT   when 
    COMMENT  1.Type of A429_data is DDW label of A429_data with index as channel 
    COMMENT  2. loop index count is equal to LABEL_0250 and sdi value is ZERO and 
    COMMENT  3. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 and 
    COMMENT  channel is ZERO)) and Du_position is not TWO or 
    COMMENT  4. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 and 
    COMMENT  channel is ONE)) and Du_position is ONE
    COMMENT  Equivalence Class 87,341,344,77,72,333
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_1,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x15,1=>0x00,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[0][0].label,                  init = 0xA8,            ev = init
            
            -- A429 type
            VAR A429_data[0][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[0][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[0][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[0][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[0][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[1],              init = 1,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = 4,             ev = init
			
            VAR Du_identified,              init = TRUE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port1_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
	           
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 92

TEST 93
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-036]
    COMMENT  The function do nothing 
    COMMENT   when 
    COMMENT  1.Type of A429_data is DDW label of A429_data with index as channel 
    COMMENT  2. loop index count is equal to LABEL_0250 and sdi value is ZERO and 
    COMMENT  3. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 and 
    COMMENT  channel is ZERO)) and Du_position is  TWO or 
    COMMENT  4. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 and 
    COMMENT  channel is ONE)) and Du_position is not ONE
    COMMENT  Equivalence Class 87,341,344,77,72,333
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x15,1=>0x00,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA8,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[1],              init = 1,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = 4,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 93

TEST 94
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-036]
    COMMENT  The function do nothing 
    COMMENT   when 
    COMMENT  1.Type of A429_data is otherthan DDW label of A429_data with index as channel 
    COMMENT  2. loop index count is equal to LABEL_0250 and sdi value is ZERO and 
    COMMENT  3. ((Active eiu is EIU1 and channel is ONE) or (Active eiu is EIU2 and 
    COMMENT  channel is ZERO)) and Du_position is  TWO or 
    COMMENT  4. ((Active eiu is EIU1 and channel is ZERO) or (Active eiu is EIU2 and 
    COMMENT  channel is ONE)) and Du_position is not ONE
    COMMENT  Equivalence Class 88
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x15,1=>0x00,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU2,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = ZERO,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA8,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = BCD,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 1,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_timer[1],              init = 1,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = 4,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 94

TEST 95
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-037]
    COMMENT  The function call the function ProcessingArinc01Fault when 
    COMMENT  1. scu_enable of Configuration data is ONE 
    COMMENT  2. scu label flag is equal to SEVEN 
    COMMENT  3. scu timer of index ZERO or scu timer of index ONE or scu 
    COMMENT  timer of index TWO is greater than RTD_MAX_INTERVAL_SCU
    COMMENT  Equivalence Class 286,346,349
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xE5,1=>0x11,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = 1,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA7,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = SEVEN,             ev = init
			
            VAR Scu_timer[0],              init = RTD_MAX_INTERVAL_SCU,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 0,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		
		    STUB ProcessingArinc01Fault()
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 95

TEST 96
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-037]
    COMMENT  The function call the function ProcessingArinc01Fault when 
    COMMENT  1. scu_enable of Configuration data is ONE 
    COMMENT  2. scu label flag is equal to SEVEN 
    COMMENT  3. scu timer of index ZERO or scu timer of index ONE or scu 
    COMMENT  timer of index TWO is greater than RTD_MAX_INTERVAL_SCU
    COMMENT  Equivalence Class 286,346,348
    COMMENT
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xE5,1=>0x11,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = 1,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA7,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = SEVEN,             ev = init
			
            VAR Scu_timer[0],              init = RTD_MAX_INTERVAL_SCU+1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 0,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		 STUB ProcessingArinc01Fault()
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 96

TEST 97
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-037]
    COMMENT  The function call the function ProcessingArinc01Fault when 
    COMMENT  1. scu_enable of Configuration data is ONE 
    COMMENT  2. scu label flag is equal to SEVEN 
    COMMENT  3. scu timer of index ZERO is lessthan RTD_MAX_INTERVAL_SCU ,scu timer of index ONE or scu 
    COMMENT  timer of index TWO is greater than RTD_MAX_INTERVAL_SCU
    COMMENT  Equivalence Class 286,346,349,350
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xE5,1=>0x11,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = 1,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA7,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = SEVEN,             ev = init
			
            VAR Scu_timer[0],              init = RTD_MAX_INTERVAL_SCU-1,             ev = init
			
            VAR Scu_timer[1],              init = RTD_MAX_INTERVAL_SCU,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 0,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		
		    STUB ProcessingArinc01Fault()
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 97

TEST 98
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-037]
    COMMENT  The function call the function ProcessingArinc01Fault when 
    COMMENT  1. scu_enable of Configuration data is ONE 
    COMMENT  2. scu label flag is equal to SEVEN 
    COMMENT  3. scu timer of index ZERO is less than RTD_MAX_INTERVAL_SCU, scu timer of index ONE or scu 
    COMMENT  timer of index TWO is greater than RTD_MAX_INTERVAL_SCU
    COMMENT  Equivalence Class 286,346,349,350
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xE5,1=>0x11,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = 1,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA7,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = SEVEN,             ev = init
			
            VAR Scu_timer[0],              init = RTD_MAX_INTERVAL_SCU-1,             ev = init
			
            VAR Scu_timer[1],              init = RTD_MAX_INTERVAL_SCU+1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 0,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		
		    STUB ProcessingArinc01Fault()
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 98

TEST 99
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-037]
    COMMENT  The function call the function ProcessingArinc01Fault when 
    COMMENT  1. scu_enable of Configuration data is ONE 
    COMMENT  2. scu label flag is equal to SEVEN 
    COMMENT  3. scu timer of index ZERO is less than RTD_MAX_INTERVAL_SCU, scu timer of index ONE less than RTD_MAX_INTERVAL_SCU
	COMMENT  or scu 
    COMMENT  timer of index TWO is equal to RTD_MAX_INTERVAL_SCU
    COMMENT  Equivalence Class 286,346,349,350
    COMMENT
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xE5,1=>0x11,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = 1,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA7,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = SEVEN,             ev = init
			
            VAR Scu_timer[0],              init = RTD_MAX_INTERVAL_SCU-1,             ev = init
			
            VAR Scu_timer[1],              init = RTD_MAX_INTERVAL_SCU-1,             ev = init
			
            VAR Scu_timer[2],              init = RTD_MAX_INTERVAL_SCU,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 0,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		
		     STUB ProcessingArinc01Fault()
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 99

TEST 100
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-037]
    COMMENT  The function call the function ProcessingArinc01Fault when 
    COMMENT  1. scu_enable of Configuration data is ONE 
    COMMENT  2. scu label flag is equal to SEVEN 
    COMMENT  3. scu timer of index ZERO is less than RTD_MAX_INTERVAL_SCU, scu timer of index ONE less than RTD_MAX_INTERVAL_SCU
	COMMENT  or scu 
    COMMENT  timer of index TWO is greater than to RTD_MAX_INTERVAL_SCU
    COMMENT  Equivalence Class 286,346,348,350
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xE5,1=>0x11,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = 1,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA7,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = SEVEN,             ev = init
			
            VAR Scu_timer[0],              init = RTD_MAX_INTERVAL_SCU-1,             ev = init
			
            VAR Scu_timer[1],              init = RTD_MAX_INTERVAL_SCU-1,             ev = init
			
            VAR Scu_timer[2],              init = RTD_MAX_INTERVAL_SCU+1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 0,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		
		   STUB ProcessingArinc01Fault()
            
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 100

TEST 101
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-037]
    COMMENT  The function call the function ProcessingArinc01Fault when 
    COMMENT  1. scu_enable of Configuration data is ONE 
    COMMENT  2. scu label flag is equal to SEVEN 
    COMMENT  3. scu timer of index ZERO is less than RTD_MAX_INTERVAL_SCU, scu timer of index ONE less than RTD_MAX_INTERVAL_SCU
	COMMENT  or scu timer of index TWO is less than RTD_MAX_INTERVAL_SCU
    COMMENT  Equivalence Class 286,346,350
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xE5,1=>0x11,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = 1,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA7,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = SEVEN,             ev = init
			
            VAR Scu_timer[0],              init = RTD_MAX_INTERVAL_SCU-1,             ev = init
			
            VAR Scu_timer[1],              init = RTD_MAX_INTERVAL_SCU-1,             ev = init
			
            VAR Scu_timer[2],              init = RTD_MAX_INTERVAL_SCU-1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 0,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 101

TEST 102
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-037]
    COMMENT  The function do nothing  when 
    COMMENT  1. scu_enable of Configuration data is ONE 
    COMMENT  2. scu label flag is not equal to SEVEN 
    COMMENT  3. scu timer of index ZERO is less than RTD_MAX_INTERVAL_SCU, scu timer of index ONE less than RTD_MAX_INTERVAL_SCU
	COMMENT  or scu timer of index TWO is less than RTD_MAX_INTERVAL_SCU
    COMMENT  Equivalence Class 286,347
    COMMENT
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0xE5,1=>0x11,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = ONE,            ev = init
			
            VAR Pbit_test_result,                             init = 1,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA7,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = 1,             ev = init
			
            VAR Scu_timer[0],              init = RTD_MAX_INTERVAL_SCU-1,             ev = init
			
            VAR Scu_timer[1],              init = RTD_MAX_INTERVAL_SCU-1,             ev = init
			
            VAR Scu_timer[2],              init = RTD_MAX_INTERVAL_SCU-1,             ev = init
			
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =TRUE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xF,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 0,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
		          
    
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 102


TEST 103
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-019]
    COMMENT 1.Function do nothing when
    COMMENT b)type of A429_data indices of channel and loop index count is equal to 
    COMMENT DDW And label of Cas_msg with index zero And label of Exceed_data with index 
    COMMENT zero And wog_label of Auto_cool_down_tmr are equal to received label And 
    COMMENT label of A429_data indices of channel and loop index count is  not equal LABEL_0360 and LABEL_0370 .
    COMMENT Equivalence Class 76,79,82,84,87,95,97,99,101,106,256,298
    COMMENT 
    COMMENT 
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x25,1=>0x11,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = 0,            ev = init
			
            VAR Pbit_test_result,                             init = 0,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xA4,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR A429_data[1][0].sdi,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = 1,             ev = init
						
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =FALSE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 0xA4,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 2,             ev = init   
			
            VAR Page_settings.Timer_settings[0].timer_label,       init = 0xA1,             ev = init 
			
            VAR Page_settings.Timer_settings[1].timer_label,       init = 0xA1,             ev = init  
			
            VAR Page_settings.Timer_settings[0].timer_sdi,       init = 0,             ev = init   
			
            VAR Page_settings.Timer_settings[1].timer_sdi,       init = 0,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            VAR Exceed_timer_params[0].timer_id,       init = 1,             ev = init   
			
            VAR Exceed_timer_params[0].timer_data_flag,       init = TRUE,             ev = init
			
            VAR Exceed_timer_params[0].timer_sec_flag,       init = TRUE,             ev = init 
			
			
            VAR Timer_a429_tag[0],       init = 0,             ev = init 		
		
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
				          
		    STUB RTDSetParam(1,1,329540.0,(T_RTD_STATUS)0)    
	
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 103

TEST 104
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-019]
    COMMENT 1.Function do nothing when
    COMMENT b)type of A429_data indices of channel and loop index count is equal to 
    COMMENT DDW And label of Cas_msg with index zero And label of Exceed_data with index 
    COMMENT zero And wog_label of Auto_cool_down_tmr are not equal to received label And 
    COMMENT label of A429_data indices of channel and loop index count is equal to LABEL_0360 and not equal LABEL_0370 .
    COMMENT Equivalence Class 76,79,82,84,87,95,97,99,101,106,256
    COMMENT 
    COMMENT 
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x0F,1=>0x11,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = 0,            ev = init
			
            VAR Pbit_test_result,                             init = 0,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xF0,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR A429_data[1][0].sdi,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = 1,             ev = init
						
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =FALSE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 1,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 2,             ev = init   
			
            VAR Page_settings.Timer_settings[0].timer_label,       init = 0xA1,             ev = init 
			
            VAR Page_settings.Timer_settings[1].timer_label,       init = 0xA1,             ev = init  
			
            VAR Page_settings.Timer_settings[0].timer_sdi,       init = 0,             ev = init   
			
            VAR Page_settings.Timer_settings[1].timer_sdi,       init = 0,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            VAR Exceed_timer_params[0].timer_id,       init = 1,             ev = init   
			
            VAR Exceed_timer_params[0].timer_data_flag,       init = TRUE,             ev = init
			
            VAR Exceed_timer_params[0].timer_sec_flag,       init = TRUE,             ev = init 
			
			
            VAR Timer_a429_tag[0],       init = 0,             ev = init 		
		
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
				          
	
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 104

TEST 105
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispfa429-Process429Words-DB-LLR-019]
    COMMENT 1.Function do nothing when
    COMMENT b)type of A429_data indices of channel and loop index count is equal to 
    COMMENT DDW And label of Cas_msg with index zero And label of Exceed_data with index 
    COMMENT zero And wog_label of Auto_cool_down_tmr are not equal to received label And 
    COMMENT label of A429_data indices of channel and loop index count is not equal to LABEL_0360 and equal LABEL_0370 .
    COMMENT Equivalence Class 76,79,82,84,87,95,96,99,101,106,255
    COMMENT 
    COMMENT 
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
            
            --A825 messages
            STRUCTURE s_mess,       init = { lcc => EEC, sID =>{ BID =>{  doc => A429_CHAN_2,others => 0 } },
            &                       u8PaySize =>0x1, u8PayLoad =>{0=>0x1F,1=>0x11,2=>0x1D,3=>0x14,others=>0x8 } },
            &                       ev = init
            
            -- Holds the currently active eiu
            VAR Active_eiu,                             init = EIU1,            ev = init
			
            VAR Config_data.scu_enable,                             init = 0,            ev = init
			
            VAR Pbit_test_result,                             init = 0,            ev = init
            
            -- A429 label
            VAR A429_data[1][0].label,                  init = 0xF8,            ev = init
            
            -- A429 type
            VAR A429_data[1][0].type,                   init = DDW,             ev = init
			
            VAR A429_data[1][0].start_bit,              init = 12,             ev = init
			
            VAR A429_data[1][0].sig_bits,              init = DATA_28_BIT,             ev = init
			
            VAR A429_data[1][0].scale_factor,              init = 0,             ev = init
			
            VAR A429_data[1][0].offset,              init = 0,             ev = init
			
            VAR A429_data[1][0].sdi,              init = 0,             ev = init
			
            VAR Scu_bg_lim_val[1],              init = 1,             ev = init
			
            VAR Scu_label_flag,              init = 1,             ev = init
						
            VAR Scu_fty_offset_flag,              init = 2,             ev = init
			
            VAR Du_position,              init = TWO,             ev = init
			
            VAR Du_identified,              init = FALSE,             ev = init
            
            -- Holds the CAS count
            VAR Cas_cnt,                                init =0x0,              ev = init
			
            VAR Cmu_fuel_flow,                                init =ONE,              ev = init
			
            VAR Md_engine_flag,                                init =FALSE,              ev = init
            
            -- Holds the port2 label count value
            VAR Port2_label_count,                      init = 0x3,             ev = init
            
            -- CAS label
            VAR Cas_msg[0].label,                       init = 0xD,             ev = init 

            -- Exceed label			
            VAR Exceed_data[0].label,                       init = 0x3D,             ev = init 			
            
            -- wog label
            VAR Auto_cool_down_tmr.wog_label,           init = 1,             ev = init           
            
            -- strat bit of wog
            VAR Auto_cool_down_tmr.wog_start_bit,       init = 0x5,             ev = init   
			
            VAR Timer_cnt,       init = 2,             ev = init   
			
            VAR Page_settings.Timer_settings[0].timer_label,       init = 0xA1,             ev = init 
			
            VAR Page_settings.Timer_settings[1].timer_label,       init = 0xA1,             ev = init  
			
            VAR Page_settings.Timer_settings[0].timer_sdi,       init = 0,             ev = init   
			
            VAR Page_settings.Timer_settings[1].timer_sdi,       init = 0,             ev = init   
            
        
        COMMENT OUTPUT SECTION:

            VAR Exceed_timer_params[0].timer_id,       init = 1,             ev = init   
			
            VAR Exceed_timer_params[0].timer_data_flag,       init = TRUE,             ev = init
			
            VAR Exceed_timer_params[0].timer_sec_flag,       init = TRUE,             ev = init 
			
			
            VAR Timer_a429_tag[0],       init = 0,             ev = init 		
		
            
        COMMENT INPUT/OUTPUT SECTION:
        
            --None
        
        -- Stub Calls:
        SIMUL
				          
	
        END SIMUL

        -- Calling the Unit Under Test :
        #A429ProcessA825(&s_mess);

    END ELEMENT

END TEST -- TEST 105

END SERVICE -- A429ProcessA825



--------------------------------------------------------------------------------
-- Declaration of the service A429Init
--------------------------------------------------------------------------------
SERVICE A429Init
SERVICE_TYPE extern

TEST 15
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfa429-A429Init-DB-LLR-010]
    COMMENT The function loop from zero to Port1_label_count and perform the following :
    COMMENT 1. set the label of Scu_parameters with index zero to label of A429_data 
    COMMENT with index zero and loop counter value
    COMMENT 2. set the sdi of Scu_parameters with index zero to sdi of A429_data with 
    COMMENT index zero and loop counter value
    COMMENT 3. set the type of Scu_parameters with index zero to type of A429_data 
    COMMENT with index zero and loop counter value
    COMMENT when all the below conditions are satisfied :
    COMMENT 1. Port1_label_count is equal to Port2_label_count
    COMMENT 2. scu_enable of configuration data is equal to TRUE
    COMMENT 3. label of A429_data with index zero and loop counter value is equal to LABEL_0247.
    COMMENT Equivalence Class 351,353
    COMMENT </TD >
    COMMENT

    ELEMENT

        COMMENT INPUT SECTION:

            -- Counter for a429 settings
            VAR A429_settings_cnt,              init=2,                 ev=init

            -- Holds the port1 label count value
            VAR Port1_label_count,              init=55,                ev=1

            -- Holds the port2 label count value
            VAR Port2_label_count,              init=90,                ev=1

            -- Holds the CAS count
            VAR Cas_cnt,                        init=10,                ev=init

            -- CAS label
            VAR Cas_msg[0].label,               init=155,               ev=init
			
            VAR Config_data.scu_enable,               init=TRUE,               ev=init

        COMMENT INPUT/OUTPUT SECTION:

            -- A429 configuration data
            VAR A429_cfg_data[0].A429_port,     init=ONE,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].A429_port,     init=TWO,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[0].A429_type,     init=DDW,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].A429_type,     init=DDW,               ev=init

        COMMENT OUTPUT SECTION:

            -- A429 configuration data
            VAR A429_cfg_data[0].A429_label,    init=LABEL_0247,               ev=init
			
            VAR A429_cfg_data[0].A429_sdi,    init=1,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[0].label_data.A429_ddw_timeout,    
            &                                   init=256,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].A429_label,    init=120,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].label_data.A429_ddw_timeout,     
            &                                   init=256,               ev=init         
            
            -- A429 data values
            VAR A429_data[0][0].label,          init=100,               ev=A429_cfg_data[0].A429_label
            
            VAR A429_data[0][0].type,           init=BCD,                ev=A429_cfg_data[0].A429_type
            
            VAR A429_data[0][0].sig_bits,       init=52,                ev=DDW_SIG_BIT
            
            VAR A429_data[0][0].start_bit,      init=54,                ev=ONE
            
            VAR A429_data[0][0].min_val,        init=112.0,             ev=ONE
            
            VAR A429_data[0][0].max_val,        init=12.0,              ev=ONE
            
            VAR A429_data[0][0].scale_factor,   init=152.0,             ev=ONE
            
            VAR A429_data[0][0].timeout,        init=13,                ev=A429_cfg_data[0].label_data.A429_ddw_timeout


            VAR A429_data[1][0].label,          init=100,               ev=A429_cfg_data[1].A429_label
            
            VAR A429_data[1][0].type,           init=BCD,                ev=A429_cfg_data[1].A429_type
            
            -- A429 significant bits
            VAR A429_data[1][0].sig_bits,       init=52,                ev=DDW_SIG_BIT
            
            -- A429 start bits
            VAR A429_data[1][0].start_bit,      init=64,                ev=ONE
            
            -- A429 minimum val
            VAR A429_data[1][0].min_val,        init=112.0,             ev=ONE
            
            -- A429 maximum val
            VAR A429_data[1][0].max_val,        init=12.0,              ev=ONE
            
            -- A429 scale factor
            VAR A429_data[1][0].scale_factor,   init=152.0,             ev=ONE
            
            VAR A429_data[1][0].timeout,        init=13,                ev=A429_cfg_data[1].label_data.A429_ddw_timeout            
			
            VAR Scu_parameters[0].label,      init=0,               ev=LABEL_0247
			
            VAR Scu_parameters[0].sdi,      init=0,               ev=1
			
            VAR Scu_parameters[0].type,      init=0,               ev=DDW

        -- Stub Calls
        SIMUL

            -- function extract CAS data from the pdi
            STUB  A429Extract (A429_MESSAGE_ADDRESS) 

            -- function extracts A429  settings
            STUB CasExtract (CAS_MESSAGE_ADDRESS)
    
        END SIMUL

    -- Calling The Unit Under Test 
    #A429Init();
    END ELEMENT

END TEST -- TEST 15

TEST 16
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfa429-A429Init-DB-LLR-011]
    COMMENT The function loop from zero to Port1_label_count and perform the following :
    COMMENT 1. set the label of Scu_parameters with index one to label of A429_data 
    COMMENT with index zero and loop counter value
    COMMENT 2. set the sdi of Scu_parameters with index one to sdi of A429_data 
    COMMENT with index zero and loop counter value
    COMMENT 3. set the type of Scu_parameters with index one to type of A429_data 
    COMMENT with index zero and loop counter value
    COMMENT when all the below conditions are satisfied :
    COMMENT 1. Port1_label_count is equal to Port2_label_count
    COMMENT 2. scu_enable of configuration data is equal to TRUE
    COMMENT 3. label of A429_data with index zero and loop counter value is equal 
    COMMENT to LABEL_0272 and sdi of A429_data with index zero and loop counter value is equal to ZERO.
    COMMENT Equivalence Class 351,354,355,357
    COMMENT </TD >
    COMMENT

    ELEMENT

        COMMENT INPUT SECTION:

            -- Counter for a429 settings
            VAR A429_settings_cnt,              init=2,                 ev=init

            -- Holds the port1 label count value
            VAR Port1_label_count,              init=55,                ev=1

            -- Holds the port2 label count value
            VAR Port2_label_count,              init=90,                ev=1

            -- Holds the CAS count
            VAR Cas_cnt,                        init=10,                ev=init

            -- CAS label
            VAR Cas_msg[0].label,               init=155,               ev=init
			
            VAR Config_data.scu_enable,               init=TRUE,               ev=init

        COMMENT INPUT/OUTPUT SECTION:

            -- A429 configuration data
            VAR A429_cfg_data[0].A429_port,     init=ONE,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].A429_port,     init=TWO,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[0].A429_type,     init=DDW,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].A429_type,     init=DDW,               ev=init

        COMMENT OUTPUT SECTION:

            -- A429 configuration data
            VAR A429_cfg_data[0].A429_label,    init=LABEL_0272,               ev=init
			
            VAR A429_cfg_data[0].A429_sdi,    init=ZERO,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[0].label_data.A429_ddw_timeout,    
            &                                   init=256,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].A429_label,    init=120,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].label_data.A429_ddw_timeout,     
            &                                   init=256,               ev=init         
            
            -- A429 data values
            VAR A429_data[0][0].label,          init=100,               ev=A429_cfg_data[0].A429_label
            
            VAR A429_data[0][0].type,           init=BCD,                ev=A429_cfg_data[0].A429_type
            
            VAR A429_data[0][0].sig_bits,       init=52,                ev=DDW_SIG_BIT
            
            VAR A429_data[0][0].start_bit,      init=54,                ev=ONE
            
            VAR A429_data[0][0].min_val,        init=112.0,             ev=ONE
            
            VAR A429_data[0][0].max_val,        init=12.0,              ev=ONE
            
            VAR A429_data[0][0].scale_factor,   init=152.0,             ev=ONE
            
            VAR A429_data[0][0].timeout,        init=13,                ev=A429_cfg_data[0].label_data.A429_ddw_timeout


            VAR A429_data[1][0].label,          init=100,               ev=A429_cfg_data[1].A429_label
            
            VAR A429_data[1][0].type,           init=BCD,                ev=A429_cfg_data[1].A429_type
            
            -- A429 significant bits
            VAR A429_data[1][0].sig_bits,       init=52,                ev=DDW_SIG_BIT
            
            -- A429 start bits
            VAR A429_data[1][0].start_bit,      init=64,                ev=ONE
            
            -- A429 minimum val
            VAR A429_data[1][0].min_val,        init=112.0,             ev=ONE
            
            -- A429 maximum val
            VAR A429_data[1][0].max_val,        init=12.0,              ev=ONE
            
            -- A429 scale factor
            VAR A429_data[1][0].scale_factor,   init=152.0,             ev=ONE
            
            VAR A429_data[1][0].timeout,        init=13,                ev=A429_cfg_data[1].label_data.A429_ddw_timeout            
			
            VAR Scu_parameters[1].label,      init=0,               ev=LABEL_0272
			
            VAR Scu_parameters[1].sdi,      init=1,               ev=0
			
            VAR Scu_parameters[1].type,      init=0,               ev=DDW

        -- Stub Calls
        SIMUL

            -- function extract CAS data from the pdi
            STUB  A429Extract (A429_MESSAGE_ADDRESS) 

            -- function extracts A429  settings
            STUB CasExtract (CAS_MESSAGE_ADDRESS)
    
        END SIMUL

    -- Calling The Unit Under Test 
    #A429Init();
    END ELEMENT

END TEST -- TEST 16

TEST 17
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfa429-A429Init-DB-LLR-011]
    COMMENT The function loop from zero to Port1_label_count and perform the following :
    COMMENT 1. don't set the label of Scu_parameters with index one to label of A429_data 
    COMMENT with index zero and loop counter value
    COMMENT 2. don't set the sdi of Scu_parameters with index one to sdi of A429_data 
    COMMENT with index zero and loop counter value
    COMMENT 3. don't set the type of Scu_parameters with index one to type of A429_data 
    COMMENT with index zero and loop counter value
    COMMENT when all the below conditions are satisfied :
    COMMENT 1. Port1_label_count is equal to Port2_label_count
    COMMENT 2. scu_enable of configuration data is equal to TRUE
    COMMENT 3. label of A429_data with index zero and loop counter value is equal 
    COMMENT to LABEL_0272 and sdi of A429_data with index zero and loop counter value is not equal to ZERO.
    COMMENT Equivalence Class 351,354,355,358
    COMMENT </TD >
    COMMENT

    ELEMENT

        COMMENT INPUT SECTION:

            -- Counter for a429 settings
            VAR A429_settings_cnt,              init=2,                 ev=init

            -- Holds the port1 label count value
            VAR Port1_label_count,              init=55,                ev=1

            -- Holds the port2 label count value
            VAR Port2_label_count,              init=90,                ev=1

            -- Holds the CAS count
            VAR Cas_cnt,                        init=10,                ev=init

            -- CAS label
            VAR Cas_msg[0].label,               init=155,               ev=init
			
            VAR Config_data.scu_enable,               init=TRUE,               ev=init

        COMMENT INPUT/OUTPUT SECTION:

            -- A429 configuration data
            VAR A429_cfg_data[0].A429_port,     init=ONE,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].A429_port,     init=TWO,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[0].A429_type,     init=DDW,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].A429_type,     init=DDW,               ev=init

        COMMENT OUTPUT SECTION:

            -- A429 configuration data
            VAR A429_cfg_data[0].A429_label,    init=LABEL_0272,               ev=init
			
            VAR A429_cfg_data[0].A429_sdi,    init=1,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[0].label_data.A429_ddw_timeout,    
            &                                   init=256,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].A429_label,    init=120,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].label_data.A429_ddw_timeout,     
            &                                   init=256,               ev=init         
            
            -- A429 data values
            VAR A429_data[0][0].label,          init=100,               ev=A429_cfg_data[0].A429_label
            
            VAR A429_data[0][0].type,           init=BCD,                ev=A429_cfg_data[0].A429_type
            
            VAR A429_data[0][0].sig_bits,       init=52,                ev=DDW_SIG_BIT
            
            VAR A429_data[0][0].start_bit,      init=54,                ev=ONE
            
            VAR A429_data[0][0].min_val,        init=112.0,             ev=ONE
            
            VAR A429_data[0][0].max_val,        init=12.0,              ev=ONE
            
            VAR A429_data[0][0].scale_factor,   init=152.0,             ev=ONE
            
            VAR A429_data[0][0].timeout,        init=13,                ev=A429_cfg_data[0].label_data.A429_ddw_timeout


            VAR A429_data[1][0].label,          init=100,               ev=A429_cfg_data[1].A429_label
            
            VAR A429_data[1][0].type,           init=BCD,                ev=A429_cfg_data[1].A429_type
            
            -- A429 significant bits
            VAR A429_data[1][0].sig_bits,       init=52,                ev=DDW_SIG_BIT
            
            -- A429 start bits
            VAR A429_data[1][0].start_bit,      init=64,                ev=ONE
            
            -- A429 minimum val
            VAR A429_data[1][0].min_val,        init=112.0,             ev=ONE
            
            -- A429 maximum val
            VAR A429_data[1][0].max_val,        init=12.0,              ev=ONE
            
            -- A429 scale factor
            VAR A429_data[1][0].scale_factor,   init=152.0,             ev=ONE
            
            VAR A429_data[1][0].timeout,        init=13,                ev=A429_cfg_data[1].label_data.A429_ddw_timeout            
			
            -- Parameter attributes 
            VAR Parameters[1].label,            init=120,               ev=A429_data[0][0].label

            -- Parameter attributes 
            VAR Parameters_numbox[1].label,     init=120,               ev=A429_data[0][0].label

            -- Parameter attributes 
            VAR Parameters[1].type,             init=BCD,               ev=A429_data[0][0].type

            -- Parameter attributes 
            VAR Parameters_numbox[1].type,      init=BCD,               ev=A429_data[0][0].type
			
        -- Stub Calls
        SIMUL

            -- function extract CAS data from the pdi
            STUB  A429Extract (A429_MESSAGE_ADDRESS) 

            -- function extracts A429  settings
            STUB CasExtract (CAS_MESSAGE_ADDRESS)
    
        END SIMUL

    -- Calling The Unit Under Test 
    #A429Init();
    END ELEMENT

END TEST -- TEST 17

TEST 18
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfa429-A429Init-DB-LLR-012]
    COMMENT The function loop from zero to Port1_label_count and perform the following :
    COMMENT 1. set the label of Scu_parameters with index two to label of A429_data 
    COMMENT with index zero and loop counter value
    COMMENT 2. set the sdi of Scu_parameters with index two to sdi of A429_data 
    COMMENT with index zero and loop counter value
    COMMENT 3. set the type of Scu_parameters with index two to type of A429_data 
    COMMENT with index zero and loop counter value
    COMMENT when all the below conditions are satisfied :
    COMMENT 1. Port1_label_count is equal to Port2_label_count
    COMMENT 2. scu_enable of configuration data is equal to TRUE
    COMMENT 3. label of A429_data with index zero and loop counter value is 
    COMMENT equal to LABEL_0250.
    COMMENT Equivalence Class 351,354,356,359
    COMMENT </TD >
    COMMENT

    ELEMENT

        COMMENT INPUT SECTION:

            -- Counter for a429 settings
            VAR A429_settings_cnt,              init=2,                 ev=init

            -- Holds the port1 label count value
            VAR Port1_label_count,              init=55,                ev=1

            -- Holds the port2 label count value
            VAR Port2_label_count,              init=90,                ev=1

            -- Holds the CAS count
            VAR Cas_cnt,                        init=10,                ev=init

            -- CAS label
            VAR Cas_msg[0].label,               init=155,               ev=init
			
            VAR Config_data.scu_enable,               init=TRUE,               ev=init

        COMMENT INPUT/OUTPUT SECTION:

            -- A429 configuration data
            VAR A429_cfg_data[0].A429_port,     init=ONE,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].A429_port,     init=TWO,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[0].A429_type,     init=DDW,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].A429_type,     init=DDW,               ev=init

        COMMENT OUTPUT SECTION:

            -- A429 configuration data
            VAR A429_cfg_data[0].A429_label,    init=LABEL_0250,               ev=init
			
            VAR A429_cfg_data[0].A429_sdi,    init=ZERO,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[0].label_data.A429_ddw_timeout,    
            &                                   init=256,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].A429_label,    init=120,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].label_data.A429_ddw_timeout,     
            &                                   init=256,               ev=init         
            
            -- A429 data values
            VAR A429_data[0][0].label,          init=100,               ev=A429_cfg_data[0].A429_label
            
            VAR A429_data[0][0].type,           init=BCD,                ev=A429_cfg_data[0].A429_type
            
            VAR A429_data[0][0].sig_bits,       init=52,                ev=DDW_SIG_BIT
            
            VAR A429_data[0][0].start_bit,      init=54,                ev=ONE
            
            VAR A429_data[0][0].min_val,        init=112.0,             ev=ONE
            
            VAR A429_data[0][0].max_val,        init=12.0,              ev=ONE
            
            VAR A429_data[0][0].scale_factor,   init=152.0,             ev=ONE
            
            VAR A429_data[0][0].timeout,        init=13,                ev=A429_cfg_data[0].label_data.A429_ddw_timeout


            VAR A429_data[1][0].label,          init=100,               ev=A429_cfg_data[1].A429_label
            
            VAR A429_data[1][0].type,           init=BCD,                ev=A429_cfg_data[1].A429_type
            
            -- A429 significant bits
            VAR A429_data[1][0].sig_bits,       init=52,                ev=DDW_SIG_BIT
            
            -- A429 start bits
            VAR A429_data[1][0].start_bit,      init=64,                ev=ONE
            
            -- A429 minimum val
            VAR A429_data[1][0].min_val,        init=112.0,             ev=ONE
            
            -- A429 maximum val
            VAR A429_data[1][0].max_val,        init=12.0,              ev=ONE
            
            -- A429 scale factor
            VAR A429_data[1][0].scale_factor,   init=152.0,             ev=ONE
            
            VAR A429_data[1][0].timeout,        init=13,                ev=A429_cfg_data[1].label_data.A429_ddw_timeout            
			
            VAR Scu_parameters[2].label,      init=0,               ev=LABEL_0250
			
            VAR Scu_parameters[2].sdi,      init=1,               ev=0
			
            VAR Scu_parameters[2].type,      init=0,               ev=DDW

        -- Stub Calls
        SIMUL

            -- function extract CAS data from the pdi
            STUB  A429Extract (A429_MESSAGE_ADDRESS) 

            -- function extracts A429  settings
            STUB CasExtract (CAS_MESSAGE_ADDRESS)
    
        END SIMUL

    -- Calling The Unit Under Test 
    #A429Init();
    END ELEMENT

END TEST -- TEST 18

TEST 19
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfa429-A429Init-DB-LLR-013]
    COMMENT The function loop from zero to Port1_label_count and perform the following :
    COMMENT 1. Set label of Parameters with index sum of port label loop counter 
    COMMENT and one to label of A429_data with indices  zero and with 
    COMMENT index port label loop counter.
    COMMENT 2. Set label of Parameters_numbox with index sum of port label loop 
    COMMENT counter and one to label of A429_data with indices  zero and with 
    COMMENT index port label loop counter.
    COMMENT 3. Set sdi of Parameters with index sum of port label loop counter 
    COMMENT and one to sdi of A429_data with indices  zero and with index port 
    COMMENT label loop counter.
    COMMENT 4. Set sdi of Parameters_numbox with index sum of port label loop 
    COMMENT counter and one to sdi of A429_data with indices  zero and with index 
    COMMENT port label loop counter.
    COMMENT 5. Set type of Parameters with index sum of port label loop counter 
    COMMENT and one to type of A429_data with indices  zero and with index port 
    COMMENT label loop counter
    COMMENT 6. Set type of Parameters_numbox with index sum of port label loop 
    COMMENT counter and one to type of A429_data with indices  zero and with index 
    COMMENT port label loop counter
    COMMENT when all the below conditions are satisfied :
    COMMENT 1. Port1_label_count is equal to Port2_label_count
    COMMENT 2. scu_enable of configuration data is equal to TRUE
    COMMENT 3. label of A429_data with index zero and loop counter value is 
    COMMENT other than LABEL_0247, LABEL_0272 and LABEL_0250.
    COMMENT Equivalence Class 351,354,355,360
    COMMENT </TD >
    COMMENT

    ELEMENT

        COMMENT INPUT SECTION:

            -- Counter for a429 settings
            VAR A429_settings_cnt,              init=2,                 ev=init

            -- Holds the port1 label count value
            VAR Port1_label_count,              init=55,                ev=1

            -- Holds the port2 label count value
            VAR Port2_label_count,              init=90,                ev=1

            -- Holds the CAS count
            VAR Cas_cnt,                        init=10,                ev=init

            -- CAS label
            VAR Cas_msg[0].label,               init=155,               ev=init
			
            VAR Config_data.scu_enable,               init=TRUE,               ev=init

        COMMENT INPUT/OUTPUT SECTION:

            -- A429 configuration data
            VAR A429_cfg_data[0].A429_port,     init=ONE,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].A429_port,     init=TWO,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[0].A429_type,     init=DDW,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].A429_type,     init=DDW,               ev=init

        COMMENT OUTPUT SECTION:

            -- A429 configuration data
            VAR A429_cfg_data[0].A429_label,    init=10,               ev=init
			
            VAR A429_cfg_data[0].A429_sdi,    init=1,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[0].label_data.A429_ddw_timeout,    
            &                                   init=256,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].A429_label,    init=120,               ev=init

            -- A429 configuration data
            VAR A429_cfg_data[1].label_data.A429_ddw_timeout,     
            &                                   init=256,               ev=init         
            
            -- A429 data values
            VAR A429_data[0][0].label,          init=100,               ev=A429_cfg_data[0].A429_label
            
            VAR A429_data[0][0].type,           init=BCD,                ev=A429_cfg_data[0].A429_type
            
            VAR A429_data[0][0].sig_bits,       init=52,                ev=DDW_SIG_BIT
            
            VAR A429_data[0][0].start_bit,      init=54,                ev=ONE
            
            VAR A429_data[0][0].min_val,        init=112.0,             ev=ONE
            
            VAR A429_data[0][0].max_val,        init=12.0,              ev=ONE
            
            VAR A429_data[0][0].scale_factor,   init=152.0,             ev=ONE
            
            VAR A429_data[0][0].timeout,        init=13,                ev=A429_cfg_data[0].label_data.A429_ddw_timeout


            VAR A429_data[1][0].label,          init=100,               ev=A429_cfg_data[1].A429_label
            
            VAR A429_data[1][0].type,           init=BCD,                ev=A429_cfg_data[1].A429_type
            
            -- A429 significant bits
            VAR A429_data[1][0].sig_bits,       init=52,                ev=DDW_SIG_BIT
            
            -- A429 start bits
            VAR A429_data[1][0].start_bit,      init=64,                ev=ONE
            
            -- A429 minimum val
            VAR A429_data[1][0].min_val,        init=112.0,             ev=ONE
            
            -- A429 maximum val
            VAR A429_data[1][0].max_val,        init=12.0,              ev=ONE
            
            -- A429 scale factor
            VAR A429_data[1][0].scale_factor,   init=152.0,             ev=ONE
            
            VAR A429_data[1][0].timeout,        init=13,                ev=A429_cfg_data[1].label_data.A429_ddw_timeout            
			
            -- Parameter attributes 
            VAR Parameters[1].label,            init=120,               ev=A429_data[0][0].label

            -- Parameter attributes 
            VAR Parameters_numbox[1].label,     init=120,               ev=A429_data[0][0].label

            -- Parameter attributes 
            VAR Parameters[1].type,             init=BCD,               ev=A429_data[0][0].type

            -- Parameter attributes 
            VAR Parameters_numbox[1].type,      init=BCD,               ev=A429_data[0][0].type
			
        -- Stub Calls
        SIMUL

            -- function extract CAS data from the pdi
            STUB  A429Extract (A429_MESSAGE_ADDRESS) 

            -- function extracts A429  settings
            STUB CasExtract (CAS_MESSAGE_ADDRESS)
    
        END SIMUL

    -- Calling The Unit Under Test 
    #A429Init();
    END ELEMENT

END TEST -- TEST 19


END SERVICE -- A429Init





























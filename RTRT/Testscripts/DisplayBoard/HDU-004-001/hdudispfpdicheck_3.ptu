HEADER hdudispfpdicheck,Source Code Ver : 1.16,TestScript Ver : 1.3
--------------------------------------------------------------------------------
-- Author Name         : Vignesh Sunil
--
-- File Name           : hdudispfpdicheck_3.ptu
--
-- Test Creation Date  : 15.10.2020
--
-- Tested Functions    : CheckCarrotGraph
--                       CheckExceedParam
--                       CheckRoundDial
--                       CheckVerPos
--                       CalStringParam
--                       CheckDecimalFormat
--                       FindTotalDigits
--                       IntToStringTrim
--
-- Version History     :
--
-- TEST-VERSION        TEST-DATE               TESTER NAME          MODIFICATIONS
-- ------------        ---------               -----------          -------------
--     1.1             15.10.2020              Vignesh Sunil       Created the ptu file.  
--     1.2             22.10.2020              Vignesh Sunil       Updated as per #PR100317
--     1.3             29.04.2021              Vignesh Sunil       Updated as per #PR100338 
--------------------------------------------------------------------------------
--
-- TESTED FILE INCLUDE DIRECTIVES 
--
--------------------------------------------------------------------------------

##include "hdudispfgrapp.h"   /* defines graphical applications */
##include "hdudispfpdidata.h" /* provides pdi declarations */
##include "hdudispfbargraphs.h" /* definitions for bar graphs */
##include "hdudispfrounddial.h" /* definitions for round dials */
##include "hdudispfbinascii.h" /* converts character to ascii */
##include "hdudispfpara.h"  /*builds faults, messages, sys info list and configures the top menu*/
##include "hdudispfnumbox.h"  /* definitions for number box */
##include "hdudispfcarrotgraph.h"  /* definitions for number box */
##include "hdudispfmenu.h"    /* contains prototype for menu module*/
##include "hdudispfa429.h"    /* contains definition of a429*/
##include "hdudispfconfig.h"   /* contains page and color config information*/
##include "hdudispfresource.h"  /* provides central location to use On Chip Peripherals*/
##include "hdudispfforeground.h"  /* provides coordinates for displaying redx on screen*/
##include "hdudispfpdicheck.h" /*contains pdi check*/
##include "hdudispfpanel.h"   /* Contains functions prototypes of panel.*/
##include "hdulibbasictypes.h" /* contains Define standard types  */
##include "hdudispfrterror.h"  /* Contains Error Types  */
##include "hdudispflookup.h"
##include "hdudispffonts.h"
--------------------------------------------------------------------------------
--
-- TESTED FILE DECLARATIONS 
--
--------------------------------------------------------------------------------

-- Declarations of the global variables of the tested file

    #extern T_BOOL CalStringParam(T_UINT8 * string_txt, T_UINT16 * max_width, T_UINT16 * line_count);
    #extern T_BOOL CheckDecimalFormat(T_FORMAT format);
    #extern T_UINT16 FindTotalDigits(T_UINT32 format);
    #extern T_UINT8 Label_size;
    #extern T_BOOL Global_check;
    #extern T_COLOR FindColorRange(T_UINT16 color);
--------------------------------------------------------------------------------

BEGIN

    COMMENT Author Name      :  Vignesh Sunil
    COMMENT
    COMMENT File Name        :  hdudispfpdicheck_3.ptu
    COMMENT
    COMMENT Tested Functions :  CheckCarrotGraph
    COMMENT 					CheckExceedParam
    COMMENT 					CheckRoundDial
    COMMENT 					CheckVerPos
    COMMENT 					CalStringParam
    COMMENT 					CheckDecimalFormat
    COMMENT 					FindTotalDigits
    COMMENT 					IntToStringTrim
    COMMENT 							
   	COMMENT
    COMMENT Assumptions and Constraints		
    COMMENT <AC>
    COMMENT
    COMMENT Assumption(s):
    COMMENT None
    COMMENT
    COMMENT Constraint(s):
	COMMENT 1. In the function 'CheckRoundDial', 'for' loop cannot be covered for 0 and 1 times
	COMMENT	since it is controlled by the macro "ASSOCIALTED_LABEL".
	COMMENT 
	COMMENT 2. In the function 'CheckElogTrig', 'for' loop cannot be covered for 0 and 1 times
	COMMENT	since it is controlled by the macro "MAX_ELOG_EVENT".	
	COMMENT 
	COMMENT 3. In the function 'CheckElogParam', 'for' loop cannot be covered for 0 and 1 times
	COMMENT	since it is controlled by the macro "MAX_ELOG_EVENT".
    COMMENT
    COMMENT 4.The follwoing warnings are observed while execution
    COMMENT  i)enumerated type mixed with another type
    COMMENT
    COMMENT </AC>

	COMMENT Equivalence Class Description
	COMMENT <ECD>
	COMMENT 
	COMMENT Valid Class(es)
	COMMENT
	COMMENT Class 1
	COMMENT In function 'PdiDataCheck', Global_check is set to FALSE
	COMMENT
	COMMENT Class 2
	COMMENT In function 'PdiDataCheck', the function CheckConfig is called
	COMMENT
	COMMENT Class 3
	COMMENT In function 'PdiDataCheck', the function CheckCASParameters is called	
	COMMENT
	COMMENT Class 4
	COMMENT In function 'PdiDataCheck', the function CheckA429Parameters is called		
	COMMENT
	COMMENT Class 5
	COMMENT In function 'PdiDataCheck', the function CheckElogTrig is called	
	COMMENT
	COMMENT Class 6
	COMMENT In function 'PdiDataCheck', the function CheckElogParam is called	
	COMMENT
	COMMENT Class 7
	COMMENT In function 'PdiDataCheck', the function CheckAcdtParams is called		
	COMMENT
	COMMENT Class 8
	COMMENT In function 'CheckConfig', Pdi_error_count is less than MAX_ERROR_MSG	
	COMMENT
	COMMENT Class 9
	COMMENT In function 'CheckConfig', call function CheckString with parameters (config_name of Config_data and MAX_CONFIG_NAME) returns FALSE
	COMMENT
	COMMENT Class 10
	COMMENT In function 'CheckConfig', Pdi_error_count is equal and greater than to MAX_ERROR_MSG	
	COMMENT
	COMMENT Class 11
	COMMENT In function 'CheckConfig', call function CheckString with parameters (config_name of Config_data and MAX_CONFIG_NAME) returns TRUE	
	COMMENT
	COMMENT Class 12
	COMMENT In function 'CheckConfig', call function CheckString with parameters (config_version of Config_data and MAX_CONFIG_VERSION) returns FALSE
	COMMENT
	COMMENT Class 13
	COMMENT In function 'CheckConfig', call function CheckString with parameters (config_version of Config_data and MAX_CONFIG_VERSION) returns TRUE
	COMMENT
	COMMENT Class 14
	COMMENT In function 'CheckConfig', call function CheckDuResolution  returns TRUE
	COMMENT
	COMMENT Class 15
	COMMENT In function 'CheckConfig', call function CheckDuResolution  returns FALSE
	COMMENT
	COMMENT Class 16
	COMMENT In function 'CheckConfig', call function CheckString with parameters (config_engine of Config_data and MAX_CONFIG_ENGINE) returns FALSE	
	COMMENT
	COMMENT Class 17
	COMMENT In function 'CheckConfig', call function CheckString with parameters (config_engine of Config_data and MAX_CONFIG_ENGINE) returns TRUE		
	COMMENT
	COMMENT Class 18
	COMMENT In function 'CheckConfig', call function CheckMinMax with parameters (u16_x of channels of Config_data,  ZERO and ONE) returns FALSE 		
	COMMENT
	COMMENT Class 19
	COMMENT In function 'CheckConfig', call function CheckMinMax with parameters (u16_x of channels of Config_data,  ZERO and ONE) returns TRUE 	
	COMMENT
	COMMENT Class 20
	COMMENT In function 'CheckConfig', call function CheckMinMax with parameters  (u16_y of channels of Config_data, ZERO and ONE) returns FALSE		
	COMMENT
	COMMENT Class 21
	COMMENT In function 'CheckConfig', call function CheckMinMax with parameters  (u16_y of channels of Config_data, ZERO and ONE) returns TRUE	
	COMMENT
	COMMENT Class 22
	COMMENT In function 'CheckConfig', Pdi_error_count is not equal to ZERO.
	COMMENT
	COMMENT Class 23
	COMMENT In function 'CheckConfig', call function CheckMinMax with parameters (eng_sdi of Config_data, ZERO and ONE) returns FALSE		
	COMMENT
	COMMENT Class 24
	COMMENT In function 'CheckConfig', call function CheckMinMax with parameters (eng_sdi of Config_data, ZERO and ONE) returns TRUE		
	COMMENT
	COMMENT Class 25
	COMMENT In function 'CheckConfig', Pdi_error_count is not equal to ZERO.	
	COMMENT
	COMMENT Class 26
	COMMENT In function 'CheckDuResolution', Display_size is equal to E_7_INCH
	COMMENT
	COMMENT Class 27
	COMMENT In function 'CheckDuResolution', Display_size is equal to E_10_INCH		
	COMMENT
	COMMENT Class 28
	COMMENT In function 'CheckDuResolution', Display_size is not equal to E_10_INCH	and E_7_INCH		
	COMMENT
	COMMENT Class 29
	COMMENT In function 'CheckPageSettings', call function CheckMinMax with parameters (page_num of Page_settings, ZERO and MAX_PAGE_NUM) returns FALSE
	COMMENT
	COMMENT Class 30
	COMMENT In function 'CheckPageSettings', call function CheckMinMax with parameters (page_num of Page_settings, ZERO and MAX_PAGE_NUM) returns TRUE	
	COMMENT
	COMMENT Class 31
	COMMENT In function 'CheckPageSettings', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 32
	COMMENT In function 'CheckPageSettings', Pdi_error_count is greater than MAX_ERROR_MSG	
	COMMENT
	COMMENT Class 33
	COMMENT In function 'CheckPageSettings', call function CheckString with parameters (page_name of Page_settings and MAX_PAGE_NAME) returns FALSE
	COMMENT
	COMMENT Class 34
	COMMENT In function 'CheckPageSettings', call function CheckString with parameters (page_name of Page_settings and MAX_PAGE_NAME) returns TRUE	
	COMMENT
	COMMENT Class 35
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters (page_menu of Page_settings, ZERO,MAX_PAGE_MENU and MAX_PAGE_MENU_10INCH) returns FALSE
	COMMENT
	COMMENT Class 36
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters (page_menu of Page_settings, ZERO,MAX_PAGE_MENU and MAX_PAGE_MENU_10INCH) returns TRUE	
	COMMENT
	COMMENT Class 37
	COMMENT In function 'CheckPageSettings', call function CheckColor with parameter color value returns FALSE
	COMMENT
	COMMENT Class 38
	COMMENT In function 'CheckPageSettings', call function CheckColor with parameter color value returns TRUE	
	COMMENT
	COMMENT Class 39
	COMMENT In function 'CheckPageSettings', call function CheckFont with parameters (timer_font of Page_settings, E_TINY_FONT and E_LARGE_FONT) returns FALSE
	COMMENT
	COMMENT Class 40
	COMMENT In function 'CheckPageSettings', call function CheckFont with parameters (timer_font of Page_settings, E_TINY_FONT and E_LARGE_FONT) returns TRUE	
	COMMENT
	COMMENT Class 41
	COMMENT In function 'CheckPageSettings', Timer_flag is equal to TRUE
	COMMENT
	COMMENT Class 42
	COMMENT In function 'CheckPageSettings', Timer_flag is equal to FALSE		
	COMMENT
	COMMENT Class 43
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters u16_x of timer_axis of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE
	COMMENT
	COMMENT Class 44
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters u16_x of timer_axis of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH returns TRUE	
	COMMENT
	COMMENT Class 45
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters u16_y of timer_axis of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE
	COMMENT
	COMMENT Class 46
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters u16_y of timer_axis of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH returns TRUE		
	COMMENT
	COMMENT Class 47
	COMMENT In function 'CheckPageSettings', Acdt_flag is equal to TRUE
	COMMENT
	COMMENT Class 48
	COMMENT In function 'CheckPageSettings', Acdt_flag is equal to FALSE		
	COMMENT
	COMMENT Class 49
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns FALSE
	COMMENT
	COMMENT Class 50
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns TRUE
	COMMENT
	COMMENT Class 51
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns FALSE
	COMMENT
	COMMENT Class 52
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns TRUE	
	COMMENT
	COMMENT Class 53
	COMMENT In function 'CheckExceedParam', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 54
	COMMENT In function 'CheckExceedParam', Pdi_error_count is greater than MAX_ERROR_MSG	
	COMMENT
	COMMENT Class 55
	COMMENT In function 'CheckExceedParam', call function CheckMinMax with parameters (temporary Exceedance bit, MIN_START_BIT and MAX_START_BIT) returns FALSE
	COMMENT
	COMMENT Class 56
	COMMENT In function 'CheckExceedParam', call function CheckMinMax with parameters (temporary Exceedance bit, MIN_START_BIT and MAX_START_BIT) returns TRUE	
	COMMENT
	COMMENT Class 57
	COMMENT In function 'CheckExceedParam', call function CheckMinMax with parameters (label of Exceed_data with index exceed counter, ONE and MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 58
	COMMENT In function 'CheckExceedParam', call function CheckMinMax with parameters (label of Exceed_data with index exceed counter, ONE and MAX_LABEL) returns TRUE		
	COMMENT
	COMMENT Class 59
	COMMENT In function 'CheckExceedParam', call function CheckMinMax with parameters (sdi of Exceed_data with index as loop counter, ZERO and THREE) returns FALSE
	COMMENT
	COMMENT Class 60
	COMMENT In function 'CheckExceedParam', call function CheckMinMax with parameters (sdi of Exceed_data with index as loop counter, ZERO and THREE) returns TRUE	
	COMMENT
	COMMENT Class 61
	COMMENT In function 'CheckExceedParam', call function CheckMinMax with parameters (exceed_font of Exceed_data with index exceed counter, E_TINY_FONT and E_LARGE_FONT) returns FALSE
	COMMENT
	COMMENT Class 62
	COMMENT In function 'CheckExceedParam', call function CheckMinMax with parameters (exceed_font of Exceed_data with index exceed counter, E_TINY_FONT and E_LARGE_FONT) returns TRUE	
	COMMENT
	COMMENT Class 63
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 64
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 65
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 66
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE		
	COMMENT
	COMMENT Class 67
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter plus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 68
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter plus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE		
	COMMENT
	COMMENT Class 69
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter minus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 70
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter minus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 71
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter plus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 72
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter plus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE			
	COMMENT
	COMMENT Class 73
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter minus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 74
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter minus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE	
	COMMENT
	COMMENT Class 75
	COMMENT In function 'CheckTextBox', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 76
	COMMENT In function 'CheckTextBox', Pdi_error_count is greater than MAX_ERROR_MSG		
	COMMENT
	COMMENT Class 77
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (label of Tb_settings with index TB counter-1 of Page_settings,1 and MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 78
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (label of Tb_settings with index TB counter-1 of Page_settings,1 and MAX_LABEL) returns TRUE		
	COMMENT
	COMMENT Class 79
	COMMENT In function 'CheckTextBox', call function heckString with parameters (tb_string of Tb_settings with index TB counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE
	COMMENT
	COMMENT Class 80
	COMMENT In function 'CheckTextBox', call function heckString with parameters (tb_string of Tb_settings with index TB counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns TRUE			
	COMMENT
	COMMENT Class 81
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (sdi of Tb_settings with index TB counter-1 of Page_settings, ZERO and THREE) returns FALSE
	COMMENT
	COMMENT Class 82
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (sdi of Tb_settings with index TB counter-1 of Page_settings, ZERO and THREE) returns TRUE		
	COMMENT
	COMMENT Class 83
	COMMENT In function 'CheckTextBox', eng_sdi of Config_data is equal to TRUE
	COMMENT
	COMMENT Class 84
	COMMENT In function 'CheckTextBox', eng_sdi of Config_data is equal to FALSE		
	COMMENT
	COMMENT Class 85
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of tb_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 86
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of tb_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE		
	COMMENT
	COMMENT Class 87
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (tb_width of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 88
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (tb_width of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE	
	COMMENT
	COMMENT Class 89
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (tb_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 90
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (tb_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE		
	COMMENT
	COMMENT Class 91
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_margin of Tb_settings with index TB counter-1 of Page_settings,ZERO and TWENTY) returns FALSE
	COMMENT
	COMMENT Class 92
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_margin of Tb_settings with index TB counter-1 of Page_settings,ZERO and TWENTY) returns TRUE
	COMMENT
	COMMENT Class 93
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_frame_width of Tb_settings with index TB counter-1 of Page_settings,ZERO and TWENTY) returns FALSE
	COMMENT
	COMMENT Class 94
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_frame_width of Tb_settings with index TB counter-1 of Page_settings,ZERO and TWENTY) returns TRUE	
	COMMENT
	COMMENT Class 95
	COMMENT In function 'CheckTextBox', call function CheckColor with parameter (tb_frame_color of Tb_settings with index TB counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 96
	COMMENT In function 'CheckTextBox', call function CheckColor with parameter (tb_frame_color of Tb_settings with index TB counter-1 of Page_settings) returns TRUE		
	COMMENT
	COMMENT Class 97
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_bit of Tb_settings with index TB counter-1 of Page_settings,MIN_START_BIT and MAX_START_BIT) returns FALSE
	COMMENT
	COMMENT Class 98
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_bit of Tb_settings with index TB counter-1 of Page_settings,MIN_START_BIT and MAX_START_BIT) returns TRUE		
	COMMENT
	COMMENT Class 99
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_cross_val_type of Tb_settings with index TB counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns FALSE 
	COMMENT
	COMMENT Class 100
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_cross_val_type of Tb_settings with index TB counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns TRUE 	
	COMMENT
	COMMENT Class 101
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_align of Tb_settings with index TB counter-1 of Page_settings,ALIGN_CENTER and ALIGN_LEFT) returns FALSE
	COMMENT
	COMMENT Class 102
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_align of Tb_settings with index TB counter-1 of Page_settings,ALIGN_CENTER and ALIGN_LEFT) returns TRUE	
	COMMENT
	COMMENT Class 103
	COMMENT In function 'CheckTextBox', call function CheckFont with parameters (tb_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 104
	COMMENT In function 'CheckTextBox', call function CheckFont with parameters (tb_font of Tb_settings with index TB counter-1 of Page_settings) returns TRUE	
	COMMENT
	COMMENT Class 105
	COMMENT In function 'CheckTextBox', call function CheckColor with parameter (tb_color of Tb_settings with index TB counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 106
	COMMENT In function 'CheckTextBox', call function CheckColor with parameter (tb_color of Tb_settings with index TB counter-1 of Page_settings) returns TRUE
	COMMENT
	COMMENT Class 107
	COMMENT In function 'CheckTextBox', Tb_parameter_occurrence with index Tb counter-1 is otherthan ZERO
	COMMENT
	COMMENT Class 108
	COMMENT In function 'CheckTextBox', Tb_parameter_occurrence with index Tb counter-1 is ZERO
	COMMENT
	COMMENT Class 109
	COMMENT In function 'CheckTextBox', tb_state of Tb_settings with index TB counter-1 of Page_settings is not equal to TXT_STATE_NORMA
	COMMENT
	COMMENT Class 110
	COMMENT In function 'CheckTextBox', tb_state of Tb_settings with index TB counter-1 of Page_settings is not equal to TXT_STATE_REVERSE
	COMMENT
	COMMENT Class 111
	COMMENT In function 'CheckTextBox', tb_state of Tb_settings with index TB counter-1 of Page_settings is not equal to TXT_STATE_REVERSE and TXT_STATE_NORMA	
	COMMENT
	COMMENT Class 112
	COMMENT In function 'CheckTextBox', tb_flash of Tb_settings with index TB counter-1 of Page_settings is not equal to TEXT_FLASH_ON
	COMMENT
	COMMENT Class 113
	COMMENT In function 'CheckTextBox', tb_flash of Tb_settings with index TB counter-1 of Page_settings is not equal to  TEXT_FLASH_OFF
	COMMENT
	COMMENT Class 114
	COMMENT In function 'CheckTextBox', tb_flash of Tb_settings with index TB counter-1 of Page_settings is not equal too TEXT_FLASH_ON and TEXT_FLASH_OFF	
	COMMENT
	COMMENT Class 115
	COMMENT In function 'CheckTextBox', call function CheckColor with parameter tb_flash_color of Tb_settings with index TB counter-1 of Page_settings returns FALSE
	COMMENT
	COMMENT Class 116
	COMMENT In function 'CheckTextBox', call function CheckColor with parameter tb_flash_color of Tb_settings with index TB counter-1 of Page_settings returns TRUE
	COMMENT
	COMMENT Class 117
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of tb_redx_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 118
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of tb_redx_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 119
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (tb_redx_width of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 120
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (tb_redx_width of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE
	COMMENT
	COMMENT Class 121
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings with index 
	COMMENT TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 122
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings with index 
	COMMENT TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT 
	COMMENT Class 123
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings
	COMMENT with index TB counter-1 of Page_settings by two and PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE
	COMMENT
	COMMENT Class 124
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings
	COMMENT with index TB counter-1 of Page_settings by two and PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns TRUE
	COMMENT
	COMMENT Class 125
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings with index 
	COMMENT TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 126
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings with index 
	COMMENT TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT 
	COMMENT Class 127
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings
	COMMENT with index TB counter-1 of Page_settings by two and PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE
	COMMENT
	COMMENT Class 128
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings
	COMMENT with index TB counter-1 of Page_settings by two and PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns TRUE
	COMMENT
	COMMENT Class 129
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (tb_redx_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 130
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (tb_redx_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 131
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax2 with parameters (u16_x of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 132
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax2 with parameters (u16_x of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 133
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax2 with parameters (u16_y of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings, -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
	COMMENT
	COMMENT Class 134
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax2 with parameters (u16_y of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings, -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE.
	COMMENT
	COMMENT Class 135
	COMMENT In function 'CheckTextBox', call function CheckFont with parameters (tb_redx_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 136
	COMMENT In function 'CheckTextBox', call function CheckFont with parameters (tb_redx_font of Tb_settings with index TB counter-1 of Page_settings) returns TRUE
	COMMENT
	COMMENT Class 137
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings,MAX_STRING_CHAR_TXT) returns FALSE
	COMMENT
	COMMENT Class 138
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings,MAX_STRING_CHAR_TXT) returns TRUE	
	COMMENT
	COMMENT Class 139
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of 
	COMMENT txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 140
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of 
	COMMENT txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 141
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  
	COMMENT tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 142
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of 
	COMMENT tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 143
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of 
	COMMENT tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 144
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of 
	COMMENT tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE
	COMMENT
	COMMENT Class 145
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of 
	COMMENT tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE 
	COMMENT
	COMMENT Class 146
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of 
	COMMENT tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE 	
	COMMENT 
	COMMENT Class 147
	COMMENT In function 'CheckText', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 148
	COMMENT In function 'CheckText', Pdi_error_count is greater than MAX_ERROR_MSG		
	COMMENT
	COMMENT Class 149
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (label of Text_settings with index text loop  counter-1 of Page_settings,1 and  MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 150
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (label of Text_settings with index text loop  counter-1 of Page_settings,1 and  MAX_LABEL) returns TRUE
	COMMENT
	COMMENT Class 151
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_string of Text_settings with index text loop  counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE
	COMMENT
	COMMENT Class 152
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_string of Text_settings with index text loop  counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns TRUE	
	COMMENT
	COMMENT Class 153
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (sdi of Text_settings with index text loop  counter-1 of Page_settings, ZERO and THREE) returns FALSE
	COMMENT
	COMMENT Class 154
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (sdi of Text_settings with index text loop  counter-1 of Page_settings, ZERO and THREE) returns TRUE	
	COMMENT
	COMMENT Class 155
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_align of Text_settings with index text loop  counter-1 of Page_settings,ALIGN_CENTER and ALIGN_LEFT) returns FALSE
	COMMENT
	COMMENT Class 156
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_align of Text_settings with index text loop  counter-1 of Page_settings,ALIGN_CENTER and ALIGN_LEFT) returns TRUE		
	COMMENT 
	COMMENT Class 157
	COMMENT In function 'CheckText', Text_parameter_occurrence with index text loop counter-1 is otherthan ZERO
	COMMENT
	COMMENT Class 158
	COMMENT In function 'CheckText', Text_parameter_occurrence with index text loop counter-1 is ZERO	
	COMMENT
	COMMENT Class 159
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_font of Text_settings with index text loop  counter-1 of Page_settings,E_TINY_FONT and E_LARGE_FONT) returns FALSE
	COMMENT
	COMMENT Class 160
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_font of Text_settings with index text loop  counter-1 of Page_settings,E_TINY_FONT and E_LARGE_FONT) returns TRUE		
	COMMENT 
	COMMENT Class 161
	COMMENT In function 'CheckText', eng_sdi of Config_data is equal to TRUE
	COMMENT
	COMMENT Class 162
	COMMENT In function 'CheckText', eng_sdi of Config_data is not equal to TRUE		
	COMMENT
	COMMENT Class 163
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_x of txt_axis of Tb_settings with index as text loop counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 164
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_x of txt_axis of Tb_settings with index as text loop counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 165
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_y of txt_axis of Tb_settings with index as text loop  counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
	COMMENT
	COMMENT Class 166
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_y of txt_axis of Tb_settings with index as text loop  counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE.		
	COMMENT 
	COMMENT Class 167
	COMMENT In function 'CheckText', txt_align of Text_settings with index text loop  counter-1 of Page_settings is equal to ALIGN_CENTER
	COMMENT
	COMMENT Class 168
	COMMENT In function 'CheckText', txt_align of Text_settings with index text loop  counter-1 of Page_settings is equal to ALIGN_CENTER_LEFT	
	COMMENT 
	COMMENT Class 169
	COMMENT In function 'CheckText', txt_align of Text_settings with index text loop  counter-1 of Page_settings is equal to ALIGN_RIGHT
	COMMENT
	COMMENT Class 170
	COMMENT In function 'CheckText', txt_align of Text_settings with index text loop  counter-1 of Page_settings is not equal to ALIGN_CENTER,ALIGN_CENTER_LEFT and ALIGN_RIGHT.		
	COMMENT
	COMMENT Class 171
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameter Text X axis plus max width,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE
	COMMENT
	COMMENT Class 172
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameter Text X axis plus max width,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns TRUE	
	COMMENT
	COMMENT Class 173
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameter line count plus Text Y axis,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE
	COMMENT
	COMMENT Class 174
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameter line count plus Text Y axis,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns TRUE		
	COMMENT
	COMMENT Class 173
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameter Text X axis,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE
	COMMENT
	COMMENT Class 174
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameter Text X axis,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns TRUE	
	COMMENT
	COMMENT Class 175
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameter Text Y axis ,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE
	COMMENT
	COMMENT Class 176
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameter Text Y axis ,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns TRUE	
	COMMENT
	COMMENT Class 177
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_bit of Text_settings with index text loop  counter-1 of Page_settings,MIN_START_BIT and MAX_START_BIT) returns FALSE 
	COMMENT
	COMMENT Class 178
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_bit of Text_settings with index text loop  counter-1 of Page_settings,MIN_START_BIT and MAX_START_BIT) returns TRUE 	
	COMMENT
	COMMENT Class 179
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_cross_val_type of Text_settings with index text loop  counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns FALSE
	COMMENT
	COMMENT Class 180
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_cross_val_type of Text_settings with index text loop  counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns TRUE		
	COMMENT
	COMMENT Class 181
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_cross_val of Text_settings with index text loop  counter-1 of Page_settings,MIN_RANGE and MAX_RANGE) returns FALSE
	COMMENT
	COMMENT Class 182
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_cross_val of Text_settings with index text loop  counter-1 of Page_settings,MIN_RANGE and MAX_RANGE) returns TRUE	
	COMMENT 
	COMMENT Class 183
	COMMENT In function 'CheckText', txt_flash of Text_settings with index text loop  counter-1 of Page_settings is equal to TEXT_FLASH_ON
	COMMENT
	COMMENT Class 184
	COMMENT In function 'CheckText', txt_flash of Text_settings with index text loop  counter-1 of Page_settings is equal to TEXT_FLASH_OFF
	COMMENT 
	COMMENT Class 185
	COMMENT In function 'CheckText', txt_flash of Text_settings with index text loop  counter-1 of Page_settings is not equal to TEXT_FLASH_ON and TEXT_FLASH_OFF	
	COMMENT
	COMMENT Class 186
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 187
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE
	COMMENT
	COMMENT Class 188
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 189
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE	
	COMMENT
	COMMENT Class 190
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 191
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 192
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 193
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE	
	COMMENT
	COMMENT Class 194
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,txt_redx_height of  Text_settings with index 
	COMMENT text loop  counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE 
	COMMENT
	COMMENT Class 195
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,txt_redx_height of  Text_settings with index 
	COMMENT text loop  counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE 
	COMMENT
	COMMENT Class 196
	COMMENT In function 'CheckText', call function  CheckAxisMinMax2 with parameters (u16_x of txt_redx_offset_axis OF Text_settings with index text loop  counter-1 of Page_settings 
	COMMENT ,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH ) returns FALSE
	COMMENT
	COMMENT Class 197
	COMMENT In function 'CheckText', call function  CheckAxisMinMax2 with parameters (u16_x of txt_redx_offset_axis OF Text_settings with index text loop  counter-1 of Page_settings 
	COMMENT ,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH ) returns FALSE
	COMMENT
	COMMENT Class 198
	COMMENT In function 'CheckText', call function CheckFont with parameters (txt_redx_font of Text_settings with index text loop  counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 199
	COMMENT In function 'CheckText', call function CheckFont with parameters (txt_redx_font of Text_settings with index text loop  counter-1 of Page_settings) returns TRUE	
	COMMENT
	COMMENT Class 200
	COMMENT In function 'CheckText', call function CheckString with parameters (txt_redx_font of Text_settings with index text loop  counter-1 of Page_settings and MAX_STRING_CHAR_TXT ) returns FALSE
	COMMENT
	COMMENT Class 201
	COMMENT In function 'CheckText', call function CheckString with parameters (txt_redx_font of Text_settings with index text loop  counter-1 of Page_settings and MAX_STRING_CHAR_TXT ) returns TRUE	
	COMMENT
	COMMENT Class 202
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
	COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 203
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
	COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 204
	COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
	COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
	COMMENT
	COMMENT Class 205
	COMMENT In function 'CheckText',CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
    COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE 
	COMMENT
	COMMENT Class 206
	COMMENT In function 'CheckText',CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
	COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 207
	COMMENT In function 'CheckText',CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
	COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 208
	COMMENT In function 'CheckText',CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
	COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 209
	COMMENT In function 'CheckText',CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
	COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE	
	COMMENT 
	COMMENT Class 210
	COMMENT In function 'CheckText', new line indication is TRUE 
	COMMENT 
	COMMENT Class 226
	COMMENT In function 'CheckCasLocationSett', CasLocationSet_parameters is equal to FALSE.
	COMMENT
	COMMENT Class 227
	COMMENT In function 'CheckCasLocationSett', CasLocationSet_parameters is equal to TRUE.	
	COMMENT
	COMMENT Class 228
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_x of cas_axis of Cas_loc_settings of Page_settings , ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns FALSE			
	COMMENT
	COMMENT Class 229
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_x of cas_axis of Cas_loc_settings of Page_settings , ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns TRUE	
	COMMENT
	COMMENT Class 230
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_num_rows of Cas_loc_settings of Page_settings, ONE and MAX_CAS_NUM_ROWS) returns FALSE		
	COMMENT
	COMMENT Class 231
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_num_rows of Cas_loc_settings of Page_settings, ONE and MAX_CAS_NUM_ROWS) returns TRUE
	COMMENT 
	COMMENT Class 232
	COMMENT In function 'CheckCasLocationSett', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 233
	COMMENT In function 'CheckCasLocationSett', Pdi_error_count is greater than MAX_ERROR_MSG		
	COMMENT
	COMMENT Class 233
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_num_column of Cas_loc_settings of Page_settings, ONE and MAX_CAS_COLUMNS) returns FALSE 	
	COMMENT
	COMMENT Class 234
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_num_column of Cas_loc_settings of Page_settings, ONE and MAX_CAS_COLUMNS) returns TRUE 
	COMMENT
	COMMENT Class 235
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (cas_row_height of Cas_loc_settings of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH ) returns FALSE	
	COMMENT
	COMMENT Class 236
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (cas_row_height of Cas_loc_settings of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH ) returns TRUE	
	COMMENT
	COMMENT Class 237
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (cas_col_width of Cas_loc_settings of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 238
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (cas_col_width of Cas_loc_settings of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE	
	COMMENT
	COMMENT Class 239
	COMMENT In function 'CheckCasLocationSett', call function CheckFont with parameters (cas_font of Cas_loc_settings of Page_settings, E_TINY_FONT and E_LARGE_FONT) returns FALSE
	COMMENT
	COMMENT Class 240
	COMMENT In function 'CheckCasLocationSett', call function CheckFont with parameters (cas_font of Cas_loc_settings of Page_settings, E_TINY_FONT and E_LARGE_FONT) returns TRUE	
	COMMENT
	COMMENT Class 241
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_y of cas_axis of Cas_loc_settings of Page_settings plus row value, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE 
	COMMENT
	COMMENT Class 242
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_y of cas_axis of Cas_loc_settings of Page_settings plus row value, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE 	
	COMMENT
	COMMENT Class 243
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_x of cas_axis of Cas_loc_settings of Page_settings plus column max width, ZERO,PANEL_HEIGHT minus DEC_SIX and PANEL_WIDTH minus DEC_SIX) returns FALSE
	COMMENT
	COMMENT Class 244
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_x of cas_axis of Cas_loc_settings of Page_settings plus column max width, ZERO,PANEL_HEIGHT minus DEC_SIX and PANEL_WIDTH minus DEC_SIX) returns TRUE	
	COMMENT
	COMMENT Class 245
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_y of cas_axis of Cas_loc_settings of Page_settings plus row value, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE 
	COMMENT
	COMMENT Class 246
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_y of cas_axis of Cas_loc_settings of Page_settings plus row value, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE 	
	COMMENT
	COMMENT Class 247
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_x of cas_axis of Cas_loc_settings of Page_settings plus column value, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 248
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_x of cas_axis of Cas_loc_settings of Page_settings plus column value, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 249
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_y of cas_axis of Cas_loc_settings of Page_settings plus string height, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 250
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_y of cas_axis of Cas_loc_settings of Page_settings plus string height, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE		
	COMMENT
	COMMENT Class 251
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_adv_flash_timer of Cas_loc_settings of Page_settings, ONE and MAX_TIMER) returns FALSE
	COMMENT
	COMMENT Class 252
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_adv_flash_timer of Cas_loc_settings of Page_settings, ONE and MAX_TIMER) returns TRUE
	COMMENT
	COMMENT Class 253
	COMMENT In function 'CheckCasLocationSett', cas_adv_flash_timer of Cas_loc_settings of Page_settings is not equal to ZERO
	COMMENT
	COMMENT Class 254
	COMMENT In function 'CheckCasLocationSett', cas_adv_flash_timer of Cas_loc_settings of Page_settings is not equal to MAX_CAS_FLASH_TIMER_9999
	COMMENT
	COMMENT Class 255
	COMMENT In function 'CheckCasLocationSett', cas_adv_flash_timer of Cas_loc_settings of Page_settings is not equal to MAX_CAS_FLASH_TIMER
	COMMENT
	COMMENT Class 256
	COMMENT In function 'CheckCasLocationSett', cas_adv_flash_timer of Cas_loc_settings of Page_settings is equal to ZERO	
	COMMENT
	COMMENT Class 257
	COMMENT In function 'CheckCasLocationSett', cas_adv_flash_timer of Cas_loc_settings of Page_settings is equal to MAX_CAS_FLASH_TIMER_9999
	COMMENT
	COMMENT Class 258
	COMMENT In function 'CheckCasLocationSett', cas_adv_flash_timer of Cas_loc_settings of Page_settings is equal to MAX_CAS_FLASH_TIMER	
	COMMENT
	COMMENT Class 259
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_caut_flash_timer of Cas_loc_settings of Page_settings, ONE and MAX_TIMER) returns FALSE
	COMMENT
	COMMENT Class 260
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_caut_flash_timer of Cas_loc_settings of Page_settings, ONE and MAX_TIMER) returns TRUE
	COMMENT
	COMMENT Class 261
	COMMENT In function 'CheckCasLocationSett', cas_caut_flash_timer of Cas_loc_settings of Page_settings is not equal to ZERO
	COMMENT
	COMMENT Class 262
	COMMENT In function 'CheckCasLocationSett', cas_caut_flash_timer of Cas_loc_settings of Page_settings is not equal to MAX_CAS_FLASH_TIMER_9999
	COMMENT
	COMMENT Class 263
	COMMENT In function 'CheckCasLocationSett', cas_caut_flash_timer of Cas_loc_settings of Page_settings is not equal to MAX_CAS_FLASH_TIMER
	COMMENT
	COMMENT Class 264
	COMMENT In function 'CheckCasLocationSett', cas_caut_flash_timer of Cas_loc_settings of Page_settings is equal to ZERO	
	COMMENT
	COMMENT Class 265
	COMMENT In function 'CheckCasLocationSett', cas_caut_flash_timer of Cas_loc_settings of Page_settings is equal to MAX_CAS_FLASH_TIMER_9999
	COMMENT
	COMMENT Class 266
	COMMENT In function 'CheckCasLocationSett', cas_caut_flash_timer of Cas_loc_settings of Page_settings is equal to MAX_CAS_FLASH_TIMER		
	COMMENT
	COMMENT Class 267
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_warn_flash_timer of Cas_loc_settings of Page_settings, ONE and MAX_TIMER) returns FALSE
	COMMENT
	COMMENT Class 268
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_warn_flash_timer of Cas_loc_settings of Page_settings, ONE and MAX_TIMER) returns TRUE
	COMMENT
	COMMENT Class 269
	COMMENT In function 'CheckCasLocationSett', cas_warn_flash_timer of Cas_loc_settings of Page_settings is not equal to ZERO
	COMMENT
	COMMENT Class 270
	COMMENT In function 'CheckCasLocationSett', cas_warn_flash_timer of Cas_loc_settings of Page_settings is not equal to MAX_CAS_FLASH_TIMER_9999
	COMMENT
	COMMENT Class 271
	COMMENT In function 'CheckCasLocationSett', cas_warn_flash_timer of Cas_loc_settings of Page_settings is not equal to MAX_CAS_FLASH_TIMER
	COMMENT
	COMMENT Class 272
	COMMENT In function 'CheckCasLocationSett', cas_warn_flash_timer of Cas_loc_settings of Page_settings is equal to ZERO	
	COMMENT
	COMMENT Class 273
	COMMENT In function 'CheckCasLocationSett', cas_warn_flash_timer of Cas_loc_settings of Page_settings is equal to MAX_CAS_FLASH_TIMER_9999
	COMMENT
	COMMENT Class 274
	COMMENT In function 'CheckCasLocationSett', cas_warn_flash_timer of Cas_loc_settings of Page_settings is equal to MAX_CAS_FLASH_TIMER			
	COMMENT
	COMMENT Class 275
	COMMENT In function 'CheckCarrotGraph', call function OctToStringTrim with parameters label of Cg_settings with index CG counter-1 of Page_settings, size of label and label string.
	COMMENT
	COMMENT Class 276
	COMMENT In function 'CheckCarrotGraph', call function CheckMinMax with parameters (sdi of Cg_settings with index CG counter-1 of Page_settings, ZERO and THREE) returns FALSE 	
	COMMENT
	COMMENT Class 277
	COMMENT In function 'CheckCarrotGraph', call function CheckMinMax with parameters (sdi of Cg_settings with index CG counter-1 of Page_settings, ZERO and THREE) returns TRUE 		
	COMMENT
	COMMENT Class 278
	COMMENT In function 'CheckCarrotGraph', cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_VERTICAL,BG_HORIZONTAL
	COMMENT
	COMMENT Class 279
	COMMENT In function 'CheckCarrotGraph', cg_orien of Cg_settings with index CG counter-1 of Page_settings is equal to BG_VERTICAL,BG_HORIZONTAL	
	COMMENT
	COMMENT Class 280
	COMMENT In function 'CheckCarrotGraph', Pdi_error_count is less than MAX_ERROR_MSG then
	COMMENT
	COMMENT Class 281
	COMMENT In function 'CheckCarrotGraph', Pdi_error_count is greater than MAX_ERROR_MSG then	
	COMMENT
	COMMENT Class 282
	COMMENT In function 'CheckCarrotGraph', call function CheckMinMax with parameters (cg_lin_range with index counter j of Cg_settings with index CG counter-1 of Page_settings divided by ( product of ONE_HUNDRED and CalculatePower with parameter ONE and decimal extract)  , MIN_LIN_RANGE and MAX_LIN_RANGE) returns FALSE	
	COMMENT
	COMMENT Class 283
	COMMENT In function 'CheckCarrotGraph', call function CheckMinMax with parameters (cg_lin_range with index counter j of Cg_settings with index CG counter-1 of Page_settings divided by ( product of ONE_HUNDRED and CalculatePower with parameter ONE and decimal extract)  , MIN_LIN_RANGE and MAX_LIN_RANGE) returns TRUE		
	COMMENT
	COMMENT Class 284
	COMMENT In function 'CheckCarrotGraph', call function CheckAxisMinMax with parameters (ABS (cg_lin_offset with index counter j of Cg_settings with index CG counter-1 of Page_settings by four plus u16_y of cg_axis of Cg_settings with index CG counter-1 of Page_settings)  , ZERO, PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 285
	COMMENT In function 'CheckCarrotGraph', call function CheckAxisMinMax with parameters (ABS (cg_lin_offset with index counter j of Cg_settings with index CG counter-1 of Page_settings by four plus u16_y of cg_axis of Cg_settings with index CG counter-1 of Page_settings)  , ZERO, PANEL_WIDTH and PANEL_HEIGHT) returns TRUE			
	COMMENT
	COMMENT Class 286
	COMMENT In function 'CheckCarrotGraph', call function  CheckMinMax with parameter (cg_ptr_shape with index counter j of Cg_settings with index CG counter-1 of Page_settings,FG_CAPITAL_R_POINTER and FG_POINTER_SHAPE10)  returns FALSE
	COMMENT
	COMMENT Class 287
	COMMENT In function 'CheckCarrotGraph', call function  CheckMinMax with parameter (cg_ptr_shape with index counter j of Cg_settings with index CG counter-1 of Page_settings,FG_CAPITAL_R_POINTER and FG_POINTER_SHAPE10)  returns TRUE			
	COMMENT
	COMMENT Class 288
	COMMENT In function 'CheckCarrotGraph', call function  CheckColor with parameter cg_ptr_color with index counter j of Cg_settings with index CG counter-1 of Page_settings returns FALSE
	COMMENT
	COMMENT Class 289
	COMMENT In function 'CheckCarrotGraph', call function  CheckColor with parameter cg_ptr_color with index counter j of Cg_settings with index CG counter-1 of Page_settings returns TRUE	
	COMMENT
	COMMENT Class 290
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (cg_ptr_scale with indices counter j and ZERO of Cg_settings with index CG counter-1 of Page_settings, ZERO, PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 291
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (cg_ptr_scale with indices counter j and ZERO of Cg_settings with index CG counter-1 of Page_settings, ZERO, PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 292
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax2 with parameters (cg_ptr_scale_offset with indices counter j and ZERO of Cg_settings with index CG counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 293
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax2 with parameters (cg_ptr_scale_offset with indices counter j and ZERO of Cg_settings with index CG counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 294
	COMMENT In function 'CheckCarrotGraph', call function  CheckMinMax with parameters (cg_ptr_rot with index counter j of Cg_settings with index CG counter-1 of Page_settings, MIN_LIN_ANGLE and MAX_LIN_ANGLE) returns FALSE 
	COMMENT
	COMMENT Class 295
	COMMENT In function 'CheckCarrotGraph', call function  CheckMinMax with parameters (cg_ptr_rot with index counter j of Cg_settings with index CG counter-1 of Page_settings, MIN_LIN_ANGLE and MAX_LIN_ANGLE) returns TRUE 	
	COMMENT
	COMMENT Class 296
	COMMENT In function 'CheckCarrotGraph', call function  CheckMinMax with parameters (cg_lim_val_type with index counter j of Cg_settings with index CG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns FALSE
	COMMENT
	COMMENT Class 297
	COMMENT In function 'CheckCarrotGraph', call function  CheckMinMax with parameters (cg_lim_val_type with index counter j of Cg_settings with index CG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns TRUE
	COMMENT
	COMMENT Class 298
	COMMENT In function 'CheckCarrotGraph', cg_lim_color with index counter j of Cg_settings with index CG counter-1 of Page_settings is not equal to ZERO
	COMMENT
	COMMENT Class 299
	COMMENT In function 'CheckCarrotGraph', cg_lim_color with index counter j of Cg_settings with index CG counter-1 of Page_settings is equal to ZERO
	COMMENT
	COMMENT Class 300
	COMMENT In function 'CheckCarrotGraph', call function  CheckMinMax with parameter cg_lim_type with index counter j of Cg_settings with index CG counter-1 of Page_settings,TYPE_NORMAL and  TYPE_WARNING returns FALSE
	COMMENT
	COMMENT Class 301
	COMMENT In function 'CheckCarrotGraph', call function  CheckMinMax with parameter cg_lim_type with index counter j of Cg_settings with index CG counter-1 of Page_settings,TYPE_NORMAL and  TYPE_WARNING returns TRUE	
	COMMENT
	COMMENT Class 302
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 303
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 304
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (cg_redx_width of Cg_settings with index CG counter-1 of Page_settings , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 305
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (cg_redx_width of Cg_settings with index CG counter-1 of Page_settings , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 306
	COMMENT In function 'CheckCarrotGraph', Cg_parameter_occurrence with index CG counter-1 is equal to TRUE 
	COMMENT
	COMMENT Class 307
	COMMENT In function 'CheckCarrotGraph', Cg_parameter_occurrence with index CG counter-1 is equal to FALSE 
	COMMENT
	COMMENT Class 308
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (cg_redx_height of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE 
	COMMENT
	COMMENT Class 309
	COMMENT In function 'CheckCarrotGraph', call function CheckAxisMinMax with parameters (cg_redx_height of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE 	
	COMMENT
	COMMENT Class 310
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax2 with parameters (u16_x of cg_redx_offset_axis of Cg_settings with index CG counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 311
	COMMENT In function 'CheckCarrotGraph', call function CheckAxisMinMax2 with parameters (u16_x of cg_redx_offset_axis of Cg_settings with index CG counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 312
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, cg_redx_width of Cg_settings with index CG counter-1 of Page_settings divided by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 313
	COMMENT In function 'CheckCarrotGraph', call function CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, cg_redx_width of Cg_settings with index CG counter-1 of Page_settings divided by two ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE		
	COMMENT
	COMMENT Class 314
	COMMENT In function 'CheckCarrotGraph', call function  CheckFont with parameters (cg_redx_font of Cg_settings with index CG counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 315
	COMMENT In function 'CheckCarrotGraph', call function CheckFont with parameters (cg_redx_font of Cg_settings with index CG counter-1 of Page_settings) returns TRUE
	COMMENT
	COMMENT Class 316
	COMMENT In function 'CheckCarrotGraph', call function  CheckString with parameters (cg_redx_txt with index counter j of Cg_settings with index CG counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE
	COMMENT
	COMMENT Class 317
	COMMENT In function 'CheckCarrotGraph', call function CheckString with parameters (cg_redx_txt with index counter j of Cg_settings with index CG counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns TRUE
	COMMENT
	COMMENT Class 318
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 319
	COMMENT In function 'CheckCarrotGraph', call function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 320
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 321
	COMMENT In function 'CheckCarrotGraph', call function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE		
	COMMENT
	COMMENT Class 322
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 323
	COMMENT In function 'CheckCarrotGraph', call function CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE		
	COMMENT
	COMMENT Class 324
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 325
	COMMENT In function 'CheckCarrotGraph', call function CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE	
	COMMENT
	COMMENT Class 326
	COMMENT In function 'CheckCarrotGraph', Number box byte format is not equal to NUM_ONEB,NUM_TWOB,NUM_THREEB
	COMMENT
	COMMENT Class 327
	COMMENT In function 'CheckCarrotGraph', Number box byte format is equal to NUM_ONEB,NUM_TWOB,NUM_THREEB	
	COMMENT
	COMMENT Class 328
	COMMENT In function 'CheckCarrotGraph', function CheckDecimalFormat with parameter number box decimal format is FALSE And number box decimal format is not Zero
	COMMENT
	COMMENT Class 329
	COMMENT In function 'CheckCarrotGraph', function CheckDecimalFormat with parameter number box decimal format is FALSE And number box decimal format is Zero	
	COMMENT
	COMMENT Class 330
	COMMENT In function 'CheckCarrotGraph', function CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 331
	COMMENT In function 'CheckCarrotGraph', function CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns TRUE
	COMMENT
	COMMENT Class 332
	COMMENT In function 'CheckCarrotGraph', function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 333
	COMMENT In function 'CheckCarrotGraph', function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 334
	COMMENT In function 'CheckCarrotGraph', function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns FALSE
	COMMENT
	COMMENT Class 335
	COMMENT In function 'CheckCarrotGraph', function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns TRUE		
	COMMENT
	COMMENT Class 336
	COMMENT In function 'CheckCarrotGraph', function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 337
	COMMENT In function 'CheckCarrotGraph', function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE	
	COMMENT
	COMMENT Class 338
	COMMENT In function 'CheckCarrotGraph', function CheckMinMax with parameters (parameter cg_no_ptr ofCarrot graph of Cg_settings with index CG counter-1 of Page_settings, ONE and MAX_NO_PTR ) returns FALSE 
	COMMENT
	COMMENT Class 339
	COMMENT In function 'CheckCarrotGraph', function CheckMinMax with parameters (parameter cg_no_ptr ofCarrot graph of Cg_settings with index CG counter-1 of Page_settings, ONE and MAX_NO_PTR ) returns TRUE 		
	COMMENT
	COMMENT Class 340
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (label of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_LABEL) returns FALSE 
	COMMENT
	COMMENT Class 341
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (label of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_LABEL) returns TRUE 		
	COMMENT
	COMMENT Class 342
	COMMENT In function 'CheckBarGraph', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 343
	COMMENT In function 'CheckBarGraph', Pdi_error_count is greater than MAX_ERROR_MSG		
	COMMENT
	COMMENT Class 344
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (sdi of Bg_settings with index BG counter-1 of Page_settings, ZERO and THREE) returns FALSE
	COMMENT
	COMMENT Class 345
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (sdi of Bg_settings with index BG counter-1 of Page_settings, ZERO and THREE) returns TRUE
	COMMENT
	COMMENT Class 346
	COMMENT In function 'CheckBarGraph', bg_orien of Bg_settings with index BG counter-1 of Page_settings not equal to BG_HORIZONTAL,BG_VERTICAL
	COMMENT
	COMMENT Class 347
	COMMENT In function 'CheckBarGraph', bg_orien of Bg_settings with index BG counter-1 of Page_settings equal to BG_HORIZONTAL,BG_VERTICAL
	COMMENT
	COMMENT Class 348
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
	COMMENT
	COMMENT Class 349
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE 
	COMMENT
	COMMENT Class 350
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (bg_width of Bg_settings with index BG counter-1 of Page_settings , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 351
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (bg_width of Bg_settings with index BG counter-1 of Page_settings , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 352
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_y of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 353
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_y of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 354
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_no_lin of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_NO_LIN) returns FALSE 
	COMMENT
	COMMENT Class 355
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_no_lin of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_NO_LIN) returns TRUE 	
	COMMENT
	COMMENT Class 356
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_lin_range with index counter j of Bg_settings with index BG counter-1 of Page_settings divided by product of ( ten and CalculatePower with parameter 10 and decimal number), MIN_LIN_RANGE and MAX_LIN_RANGE) returns FALSE 
	COMMENT
	COMMENT Class 357
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_lin_range with index counter j of Bg_settings with index BG counter-1 of Page_settings divided by product of ( ten and CalculatePower with parameter 10 and decimal number), MIN_LIN_RANGE and MAX_LIN_RANGE) returns TRUE 	
	COMMENT
	COMMENT Class 358
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_NO_LIM) returns FALSE
	COMMENT
	COMMENT Class 359
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_NO_LIM) returns TRUE
	COMMENT
	COMMENT Class 360
	COMMENT In function 'CheckBarGraph', Bg_parameter_occurrence with index BG counter-1 is equal to TRUE
	COMMENT
	COMMENT Class 361
	COMMENT In function 'CheckBarGraph', Bg_parameter_occurrence with index BG counter-1 is not equal to TRUE	
	COMMENT
	COMMENT Class 362
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_lim_val_type with index counter j of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns FALSE
	COMMENT
	COMMENT Class 363
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_lim_val_type with index counter j of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns TRUE	
	COMMENT
	COMMENT Class 364
	COMMENT In function 'CheckBarGraph', function CheckColor with parameters (bg_lim_color of Bg_settings with index BG counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 365
	COMMENT In function 'CheckBarGraph', function CheckColor with parameters (bg_lim_color of Bg_settings with index BG counter-1 of Page_settings) returns TRUE	
	COMMENT
	COMMENT Class 366
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_lim_type with counter j as index of Bg_settings with index BG counter-1 of Page_settings,TYPE_NORMAL,TYPE_WARNING) returns FALSE
	COMMENT
	COMMENT Class 367
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_lim_type with counter j as index of Bg_settings with index BG counter-1 of Page_settings,TYPE_NORMAL,TYPE_WARNING) returns TRUE	
	COMMENT
	COMMENT Class 368
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (bg_redx_width of Bg_settings with index BG counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 369
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (bg_redx_width of Bg_settings with index BG counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 370
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (bg_redx_height of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH,PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 371
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (bg_redx_height of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH,PANEL_HEIGHT) returns TRUE
	COMMENT
	COMMENT Class 372
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax2 with parameters (u16_x of bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO ,-PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 373
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax2 with parameters (u16_x of bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO ,-PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 374
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
	COMMENT
	COMMENT Class 375
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE 
	COMMENT
	COMMENT Class 376
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 377
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE 	
	COMMENT
	COMMENT Class 378
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 379
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE
	COMMENT
	COMMENT Class 380
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 381
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE		
	COMMENT
	COMMENT Class 382
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 383
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 384
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, bg_redx_width of Bg_settings with index BG counter-1 of Page_settings by two,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 385
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, bg_redx_width of Bg_settings with index BG counter-1 of Page_settings by two,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 386
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_y of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, bg_redx_height of Bg_settings with index BG counter-1 of Page_settings by two,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 387
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_y of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, bg_redx_height of Bg_settings with index BG counter-1 of Page_settings by two,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE		
	COMMENT
	COMMENT Class 388
	COMMENT In function 'CheckBarGraph', function  CheckFont with parameters (bg_redx_font of Bg_settings with index BG counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 389
	COMMENT In function 'CheckBarGraph', function  CheckFont with parameters (bg_redx_font of Bg_settings with index BG counter-1 of Page_settings) returns TRUE		
	COMMENT
	COMMENT Class 390
	COMMENT In function 'CheckBarGraph', function  CheckString with parameters (bg_redx_txt with index counter j-1 of Bg_settings with index BG counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE
	COMMENT
	COMMENT Class 391
	COMMENT In function 'CheckBarGraph', function  CheckString with parameters (bg_redx_txt with index counter j-1 of Bg_settings with index BG counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns TRUE		
	COMMENT
	COMMENT Class 392
	COMMENT In function 'CheckBarGraph', nb_lim_color with index counter j of Nb_settings with index NB counter-1 of Page_settings is not equal to ZERO
	COMMENT
	COMMENT Class 393
	COMMENT In function 'CheckBarGraph', nb_lim_color with index counter j of Nb_settings with index NB counter-1 of Page_settings is equal to ZERO	
	COMMENT
	COMMENT Class 394
	COMMENT In function 'CheckBarGraph', function  CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 395
	COMMENT In function 'CheckBarGraph', function  CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns TRUE		
	COMMENT
	COMMENT Class 396
	COMMENT In function 'CheckBarGraph', function  Number box byte format is not equal to NUM_ONEB, NUM_TWOB,NUM_THREEB , NUM_FOURB
	COMMENT
	COMMENT Class 397
	COMMENT In function 'CheckBarGraph', function  Number box byte format is equal to NUM_ONEB, NUM_TWOB,NUM_THREEB , NUM_FOURB
	COMMENT
	COMMENT Class 398
	COMMENT In function 'CheckBarGraph', function  CheckDecimalFormat with parameter (Number box decimal format ) returns FALSE
	COMMENT
	COMMENT Class 399
	COMMENT In function 'CheckBarGraph', function  CheckDecimalFormat with parameter (Number box decimal format ) returns TRUE
	COMMENT
	COMMENT Class 400
	COMMENT In function 'CheckBarGraph', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 401
	COMMENT In function 'CheckBarGraph', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 402
	COMMENT In function 'CheckBarGraph', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns FALSE
	COMMENT
	COMMENT Class 403
	COMMENT In function 'CheckBarGraph', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns TRUE
	COMMENT
	COMMENT Class 404
	COMMENT In function 'CheckBarGraph', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns FALSE
	COMMENT
	COMMENT Class 405
	COMMENT In function 'CheckBarGraph', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns TRUE
	COMMENT
	COMMENT Class 406
	COMMENT In function 'CheckBarGraph', function  CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 407
	COMMENT In function 'CheckBarGraph', function  CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE
	COMMENT
	COMMENT Class 408
	COMMENT In function 'CheckNumberBox', function  CheckMinMax with parameters (label of Nb_settings with index NB counter-1 of Page_settings, ONE and MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 409
	COMMENT In function 'CheckNumberBox', function  CheckMinMax with parameters (label of Nb_settings with index NB counter-1 of Page_settings, ONE and MAX_LABEL) returns TRUE
	COMMENT
	COMMENT Class 410
	COMMENT In function 'CheckNumberBox', Pdi_error_count is less than MAX_ERROR_MSG 
	COMMENT
	COMMENT Class 411
	COMMENT In function 'CheckNumberBox', Pdi_error_count is greater than MAX_ERROR_MSG 
	COMMENT
	COMMENT Class 412
	COMMENT In function 'CheckNumberBox', function  eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Nb_settings with index NB counter-1 of Page_settings, ZERO and THREE) returns FALSE
	COMMENT
	COMMENT Class 413
	COMMENT In function 'CheckNumberBox', function  eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Nb_settings with index NB counter-1 of Page_settings, ZERO and THREE) returns TRUE
	COMMENT
	COMMENT Class 414
	COMMENT In function 'CheckNumberBox', function  CheckDecimalFormat with parameter Number box decimal format is FALSE
	COMMENT
	COMMENT Class 415
	COMMENT In function 'CheckNumberBox', function  CheckDecimalFormat with parameter Number box decimal format is TRUE
	COMMENT
	COMMENT Class 416
	COMMENT In function 'CheckNumberBox', Number box byte format is not equal to NUM_ONEB ,NUM_TWOB ,NUM_THREEB, NUM_FOURB
	COMMENT
	COMMENT Class 417
	COMMENT In function 'CheckNumberBox',  Number box byte format is equal to NUM_ONEB ,NUM_TWOB ,NUM_THREEB, NUM_FOURB
	COMMENT
	COMMENT Class 418
	COMMENT In function 'CheckNumberBox', Nb_parameter_occurrence with index NB counter-1 is equal to TRUE
	COMMENT
	COMMENT Class 419
	COMMENT In function 'CheckNumberBox',  Nb_parameter_occurrence with index NB counter-1 is not equal to TRUE
	COMMENT
	COMMENT Class 420
	COMMENT In function 'CheckNumberBox', function  CheckMinMax with parameters (nb_no_lim of Number Box of Nb_settings with index NB counter-1 of Page_settings, ONE and MAX_NO_LIM Ranges ) returns FALSE
	COMMENT
	COMMENT Class 421
	COMMENT In function 'CheckNumberBox', function  CheckMinMax with parameters (nb_no_lim of Number Box of Nb_settings with index NB counter-1 of Page_settings, ONE and MAX_NO_LIM Ranges ) returns TRUE
	COMMENT
	COMMENT Class 422
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 423
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 424
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns FALSE
	COMMENT
	COMMENT Class 425
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns TRUE
	COMMENT
	COMMENT Class 426
	COMMENT In function 'CheckNumberBox', function  CheckMinMax with parameters (nb_lim_val_type with index counter j of Nb_settings with index NB counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns FALSE
	COMMENT
	COMMENT Class 427
	COMMENT In function 'CheckNumberBox', function  CheckMinMax with parameters (nb_lim_val_type with index counter j of Nb_settings with index NB counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns TRUE
	COMMENT
	COMMENT Class 428
	COMMENT In function 'CheckNumberBox',  nb_lim_color with index counter j of Nb_settings with loop index as NB counter - 1 of Page_settings is not equal
	COMMENT
	COMMENT Class 429
	COMMENT In function 'CheckNumberBox',  nb_lim_color with index counter j of Nb_settings with loop index as NB counter - 1 of Page_settings is equal
	COMMENT
	COMMENT Class 430
	COMMENT In function 'CheckNumberBox', function  CheckMinMax with parameter nb_lim_type with index counter j of Nb_settings with loop index as NB counter - 1 of Page_settings,TYPE_NORMAL and TYPE_WARNING returns FALSE
	COMMENT
	COMMENT Class 431
	COMMENT In function 'CheckNumberBox', function  CheckMinMax with parameter nb_lim_type with index counter j of Nb_settings with loop index as NB counter - 1 of Page_settings,TYPE_NORMAL and TYPE_WARNING returns TRUE
	COMMENT
	COMMENT Class 432
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 433
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 434
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 435
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 436
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_y of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings plus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 437
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_y of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings plus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE
	COMMENT
	COMMENT Class 438
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (nb_redx_width of Nb_settings with index NB counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 439
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (nb_redx_width of Nb_settings with index NB counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 440
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (nb_redx_height of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 441
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (nb_redx_height of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE	
	COMMENT
	COMMENT Class 442
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax2 with parameters (u16_x of nb_redx_offset_axis of Nb_settings with index NB counter-1 of Page_settings, -PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 443
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax2 with parameters (u16_x of nb_redx_offset_axis of Nb_settings with index NB counter-1 of Page_settings, -PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE		
	COMMENT
	COMMENT Class 444
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings plus u16_x of nb_redx_offset_axis of Nb_settings with index NB counter-1 of Page_settings,string width by two,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 445
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings plus u16_x of nb_redx_offset_axis of Nb_settings with index NB counter-1 of Page_settings,string width by two,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE			
	COMMENT
	COMMENT Class 446
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_y of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings plus u16_y of nb_redx_offset_axis of Nb_settings with index NB counter-1 of Page_settings,string height by two,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 447
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_y of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings plus u16_y of nb_redx_offset_axis of Nb_settings with index NB counter-1 of Page_settings,string height by two,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE
	COMMENT
	COMMENT Class 448
	COMMENT In function 'CheckNumberBox', function  CheckString with parameters (nb_redx_txt with index counter j of Nb_settings with index NB counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE
	COMMENT
	COMMENT Class 449
	COMMENT In function 'CheckNumberBox', function  CheckString with parameters (nb_redx_txt with index counter j of Nb_settings with index NB counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns TRUE	
	COMMENT
	COMMENT Class 450
	COMMENT In function 'CheckRoundDial', call function  OctToStringTrim with parameters label of Rd_settings with index RD counter-1 of Page_settings, size of label and label string.
	COMMENT
	COMMENT Class 451
	COMMENT In function 'CheckRoundDial', function  Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Rd_settings with index RD counter-1 of Page_settings, ZERO and THREE) returns FALSE
	COMMENT
	COMMENT Class 452
	COMMENT In function 'CheckRoundDial', function  Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Rd_settings with index RD counter-1 of Page_settings, ZERO and THREE) returns TRUE	
	COMMENT
	COMMENT Class 453
	COMMENT In function 'CheckRoundDial', assc_labels with index counter j of Rd_settings with index RD counter-1 of Page_settings not equal to ZERO
	COMMENT
	COMMENT Class 454
	COMMENT In function 'CheckRoundDial', assc_labels with index counter j of Rd_settings with index RD counter-1 of Page_settings equal to ZERO	
	COMMENT
	COMMENT Class 455
	COMMENT In function 'CheckRoundDial', Pdi_error_count is less than  MAX_ERROR_MSG then
	COMMENT
	COMMENT Class 456
	COMMENT In function 'CheckRoundDial', Pdi_error_count is greater than  MAX_ERROR_MSG then		
	COMMENT
	COMMENT Class 457
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of rd_axis of Rd_settings with index RD counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PALE_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 458
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of rd_axis of Rd_settings with index RD counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PALE_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 459
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_lin_range with index counter j of Rd_settings with index RD counter-1 of Page_settings divided by COND1,MIN_LIN_RANGE and MAX_LIN_RANGE) returns FALSE
	COMMENT
	COMMENT Class 460
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_lin_range with index counter j of Rd_settings with index RD counter-1 of Page_settings divided by COND1,MIN_LIN_RANGE and MAX_LIN_RANGE) returns TRUE	
	COMMENT
	COMMENT Class 461
	COMMENT In function 'CheckRoundDial', Rd_lin_angle_status with index RD counter-1  right shifted by loop counter minus one and with ONE is equal to ONE
	COMMENT
	COMMENT Class 462
	COMMENT In function 'CheckRoundDial', Rd_lin_angle_status with index RD counter-1  right shifted by loop counter minus one and with ONE is not equal to ONE		
	COMMENT
	COMMENT Class 463
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_ptr_shape with index counter j of Rd_settings with index RD counter-1 of Page_settings, FG_CAPITAL_R_POINTER, FG_MOVING_ROUND_DIAL)  returns FALSE
	COMMENT
	COMMENT Class 464
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_ptr_shape with index counter j of Rd_settings with index RD counter-1 of Page_settings, FG_CAPITAL_R_POINTER, FG_MOVING_ROUND_DIAL)  returns TRUE	
	COMMENT
	COMMENT Class 465
	COMMENT In function 'CheckRoundDial', function CheckColor with parameter rd_ptr_color with index counter j of Rd_settings with index RD counter-1 of Page_settings returns FALSE
	COMMENT
	COMMENT Class 466
	COMMENT In function 'CheckRoundDial', function CheckColor with parameter rd_ptr_color with index counter j of Rd_settings with index RD counter-1 of Page_settings returns TRUE		
	COMMENT
	COMMENT Class 467
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (rd_ptr_scale with indices counter j and ZERO of Rd_settings with index RD counter-1 of Page_settings, ZERO , PANEL_HEIGHT and  PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 468
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (rd_ptr_scale with indices counter j and ZERO of Rd_settings with index RD counter-1 of Page_settings, ZERO , PANEL_HEIGHT and  PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 469
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax2 with parameters (rd_ptr_scale_offset with indices counter j and ZERO of Rd_settings with index RD counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 470
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax2 with parameters (rd_ptr_scale_offset with indices counter j and ZERO of Rd_settings with index RD counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 471
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_ptr_rot with index counter j of Rd_settings with index RD counter-1 of Page_settings, MIN_LIN_ANGLE and MAX_LIN_ANGLE) returns FALSE
	COMMENT
	COMMENT Class 472
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_ptr_rot with index counter j of Rd_settings with index RD counter-1 of Page_settings, MIN_LIN_ANGLE and MAX_LIN_ANGLE) returns TRUE		
	COMMENT
	COMMENT Class 473
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_lim_val_type with index counter j of Rd_settings with index RD counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns FALSE
	COMMENT
	COMMENT Class 474
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_lim_val_type with index counter j of Rd_settings with index RD counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns TRUE		
	COMMENT
	COMMENT Class 475
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_lim_val_type with index counter j of Rd_settings with index RD counter-1 of Page_settings,TYPE_NORMAL and TYPE_WARNING ) returns FALSE
	COMMENT
	COMMENT Class 476
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_lim_val_type with index counter j of Rd_settings with index RD counter-1 of Page_settings,TYPE_NORMAL and TYPE_WARNING ) returns TRUE		
	COMMENT
	COMMENT Class 477
	COMMENT In function 'CheckRoundDial', rd_lim_color with index counter j of Rd_settings with index RD counter-1 of Page_settings is not equal to ZERO 
	COMMENT
	COMMENT Class 478
	COMMENT In function 'CheckRoundDial', rd_lim_color with index counter j of Rd_settings with index RD counter-1 of Page_settings is equal to ZERO 	
	COMMENT
	COMMENT Class 479
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 480
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 481
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (rd_redx_width of Rd_settings with index RD counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 482
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (rd_redx_width of Rd_settings with index RD counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE		
	COMMENT
	COMMENT Class 483
	COMMENT In function 'CheckRoundDial', Rd_parameter_occurrence with index RD counter-1 is equal to TRUE
	COMMENT
	COMMENT Class 484
	COMMENT In function 'CheckRoundDial', Rd_parameter_occurrence with index RD counter-1 is not equal to TRUE	
	COMMENT
	COMMENT Class 485
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (rd_redx_height of Rd_settings with index RD counter-1 of Page_settings , ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 486
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (rd_redx_height of Rd_settings with index RD counter-1 of Page_settings , ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE		
	COMMENT
	COMMENT Class 487
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax2 with parameters (u16_x of rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings, -PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH ) returns FALSE
	COMMENT
	COMMENT Class 488
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax2 with parameters (u16_x of rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings, -PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH ) returns TRUE		
	COMMENT
	COMMENT Class 489
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings,  rd_redx_width of Rd_settings with index RD counter-1 of Page_settings,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 490
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings,  rd_redx_width of Rd_settings with index RD counter-1 of Page_settings,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE		
	COMMENT
	COMMENT Class 491
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_y of rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings,  rd_redx_height of Rd_settings with index RD counter-1 of Page_settings,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 492
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_y of rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings,  rd_redx_height of Rd_settings with index RD counter-1 of Page_settings,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE		
	COMMENT
	COMMENT Class 493
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of  rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings plus u16_x of  txt_redx_axis of Rd_settings with index RD counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 494
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of  rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings plus u16_x of  txt_redx_axis of Rd_settings with index RD counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 495
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of  rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings plus u16_x of  rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 496
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of  rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings plus u16_x of  rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE		
	COMMENT
	COMMENT Class 497
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_y of  rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings plus u16_y of  rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE 
	COMMENT
	COMMENT Class 498
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_y of  rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings plus u16_y of  rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE 		
	COMMENT
	COMMENT Class 499
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_y of  rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings plus u16_y of  rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 500
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_y of  rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings plus u16_y of  rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE 		
	COMMENT
	COMMENT Class 501
	COMMENT In function 'CheckRoundDial', function CheckFont with parameters (rd_redx_font with index counter j of Rd_settings with index RD counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 502
	COMMENT In function 'CheckRoundDial', function CheckFont with parameters (rd_redx_font with index counter j of Rd_settings with index RD counter-1 of Page_settings) returns TRUE		
	COMMENT
	COMMENT Class 503
	COMMENT In function 'CheckRoundDial', function CheckString with parameters (rd_redx_txt with index counter j of Rd_settings with index RD counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE 
	COMMENT
	COMMENT Class 504
	COMMENT In function 'CheckRoundDial', function CheckString with parameters (rd_redx_txt with index counter j of Rd_settings with index RD counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns TRUE 		
	COMMENT
	COMMENT Class 505
	COMMENT In function 'CheckRoundDial', function  CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 506
	COMMENT In function 'CheckRoundDial', function  CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns TRUE			
	COMMENT
	COMMENT Class 507
	COMMENT In function 'CheckRoundDial', Number box byte format is not equal to NUM_ONEB, NUM_TWOB,NUM_THREEB ,NUM_FOURB
	COMMENT
	COMMENT Class 508
	COMMENT In function 'CheckRoundDial', Number box byte format is equal to NUM_ONEB, NUM_TWOB,NUM_THREEB ,NUM_FOURB
	COMMENT
	COMMENT Class 509
	COMMENT In function 'CheckRoundDial', function  CheckDecimalFormat with parameter Number box decimal format returns FALSE
	COMMENT
	COMMENT Class 510
	COMMENT In function 'CheckRoundDial', function  CheckDecimalFormat with parameter Number box decimal format returns TRUE
	COMMENT
	COMMENT Class 511
	COMMENT In function 'CheckRoundDial', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
	COMMENT
	COMMENT Class 512
	COMMENT In function 'CheckRoundDial', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE 
	COMMENT
	COMMENT Class 513
	COMMENT In function 'CheckRoundDial', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false
	COMMENT
	COMMENT Class 514
	COMMENT In function 'CheckRoundDial', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false
	COMMENT
	COMMENT Class 515
	COMMENT In function 'CheckRoundDial', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
	COMMENT
	COMMENT Class 516
	COMMENT In function 'CheckRoundDial', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE 	
	COMMENT
	COMMENT Class 517
	COMMENT In function 'CheckRoundDial', function  CheckMinMax with parameter poly_shape of Pg_settings with index counter minus one, FG_CAPITAL_R_POINTER and FG_POINTER_SHAPE12 is TRUE
	COMMENT
	COMMENT Class 518
	COMMENT In function 'CheckRoundDial', function  CheckMinMax with parameter poly_shape of Pg_settings with index counter minus one, FG_CAPITAL_R_POINTER and FG_POINTER_SHAPE12 is FALSE	
	COMMENT
	COMMENT Class 519
	COMMENT In function 'CheckRoundDial', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 520
	COMMENT In function 'CheckRoundDial', fPdi_error_count is greater than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 521
	COMMENT In function 'CheckRoundDial', function  CheckMinMax with parameter poly_no_pts of Pg_settings with index counter minus one,THREE and M_FOURTY_FIVE is TRUE
	COMMENT
	COMMENT Class 522
	COMMENT In function 'CheckRoundDial', function  CheckMinMax with parameter poly_no_pts of Pg_settings with index counter minus one,THREE and M_FOURTY_FIVE is FALSE
	COMMENT
	COMMENT Class 523
	COMMENT In function 'CheckRoundDial', function  CheckMinMax with parameter poly_inc_no_pts of Pg_settings with index counter minus one, THREE and M_FOURTY_FIVE is TRUE
	COMMENT
	COMMENT Class 524
	COMMENT In function 'CheckRoundDial', function  CheckMinMax with parameter poly_inc_no_pts of Pg_settings with index counter minus one, THREE and M_FOURTY_FIVE is FALSE
	COMMENT
	COMMENT Class 525
	COMMENT In function 'CheckRoundDial', function  CheckMinMax with parameter poly_inc_no_pts of Pg_settings with index counter minus one, THREE and M_FOURTY_FIVE is TRUE
	COMMENT
	COMMENT Class 526
	COMMENT In function 'CheckRoundDial', function  CheckMinMax with parameter poly_inc_no_pts of Pg_settings with index counter minus one, THREE and M_FOURTY_FIVE is FALSE
	COMMENT
	COMMENT Class 527
	COMMENT In function 'CheckRoundDial', function  CheckFloatMinMax with parameter( poly_pts with index [Counter Poly Points][1] of Pg_settings with index [Counter loop Poly minus one],-1.0 and 1.0) returns FALSE
	COMMENT
	COMMENT Class 528
	COMMENT In function 'CheckRoundDial', function  CheckFloatMinMax with parameter( poly_pts with index [Counter Poly Points][1] of Pg_settings with index [Counter loop Poly minus one],-1.0 and 1.0) returns TRUE
	COMMENT
	COMMENT Class 529
	COMMENT In function 'CheckCASParameters', function  CheckString with parameters (cas_string of Cas_messages with index counter-1 and (MAX_CAS_STRING_TXT minus ONE) returns FALSE
	COMMENT
	COMMENT Class 530
	COMMENT In function 'CheckCASParameters', function  CheckString with parameters (cas_string of Cas_messages with index counter-1 and (MAX_CAS_STRING_TXT minus ONE) returns TRUE
	COMMENT
	COMMENT Class 531
	COMMENT In function 'CheckCASParameters', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 532
	COMMENT In function 'CheckCASParameters', Pdi_error_count is greater than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 533
	COMMENT In function 'CheckCASParameters', function  CheckMinMax with parameters (label of Cas_messages with index counter-1, ONE and MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 534
	COMMENT In function 'CheckCASParameters', function  CheckMinMax with parameters (label of Cas_messages with index counter-1, ONE and MAX_LABEL) returns TRUE
	COMMENT
	COMMENT Class 535
	COMMENT In function 'CheckCASParameters', function   CheckMinMax with parameters (cas_start_bit of Cas_messages with index counter-1, MIN_CAS_START_BIT and MAX_CAS_START_BIT) returns FALSE 
	COMMENT
	COMMENT Class 536
	COMMENT In function 'CheckCASParameters', function   CheckMinMax with parameters (cas_start_bit of Cas_messages with index counter-1, MIN_CAS_START_BIT and MAX_CAS_START_BIT) returns TRUE 
	COMMENT
	COMMENT Class 537
	COMMENT In function 'CheckCASParameters', function   CheckMinMax with parameters (cas_priority of Cas_messages with index counter-1, ONE and MAX_CAS_PRIORITY) returns FALSE
	COMMENT
	COMMENT Class 538
	COMMENT In function 'CheckCASParameters', function   CheckMinMax with parameters (cas_priority of Cas_messages with index counter-1, ONE and MAX_CAS_PRIORITY) returns TRUE
	COMMENT
	COMMENT Class 539
	COMMENT In function 'CheckCASParameters', function   CheckCasType with parameter cas_type of Cas_messages with index loop count minus one returns FALSE
	COMMENT
	COMMENT Class 540
	COMMENT In function 'CheckCASParameters', function  CheckCasType with parameter cas_type of Cas_messages with index loop count minus one returns TRUE
	COMMENT
	COMMENT Class 541
	COMMENT In function 'CheckCASParameters', function   cas_type of Cas_messages with index loop count minus one is not equal to ZERO
	COMMENT
	COMMENT Class 542
	COMMENT In function 'CheckCASParameters', function   as_type of Cas_messages with index loop count minus one is equal to ZERO	
	COMMENT
	COMMENT Class 543
	COMMENT In function 'CheckCASParameters', function  CheckMinMax with parameters (cas id , ZERO and MAX_CAS_ID) returns FALSE
	COMMENT
	COMMENT Class 544
	COMMENT In function 'CheckCASParameters', function CheckMinMax with parameters (cas id , ZERO and MAX_CAS_ID) returns TRUE	
	COMMENT
	COMMENT Class 545
	COMMENT In function 'CheckA429Parameters', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 546
	COMMENT In function 'CheckA429Parameters', Pdi_error_count is greater than MAX_ERROR_MSG	
	COMMENT
	COMMENT Class 547
	COMMENT In function 'CheckA429Parameters', A429_port of A429_cfg_data with index counter-1 is equal to TWO
	COMMENT
	COMMENT Class 548
	COMMENT In function 'CheckA429Parameters', A429_port of A429_cfg_data with index counter-1 is not equal to TWO	
	COMMENT
	COMMENT Class 549
	COMMENT In function 'CheckA429Parameters', function CheckMinMax with parameters (A429_label of A429_cfg_data with index counter-1, ONE and MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 550
	COMMENT In function 'CheckA429Parameters', function CheckMinMax with parameters (A429_label of A429_cfg_data with index counter-1, ONE and MAX_LABEL) returns TRUE	
	COMMENT
	COMMENT Class 551
	COMMENT In function 'CheckA429Parameters', If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (A429_sdi of A429_cfg_data with index counter -1, ZERO and THREE) returns FALSE
	COMMENT
	COMMENT Class 552
	COMMENT In function 'CheckA429Parameters', If eng_sdi of Config_data is equal to FALSE AND function CheckMinMax with parameters (A429_sdi of A429_cfg_data with index counter -1, ZERO and THREE) returns TRUE	
	COMMENT
	COMMENT Class 553
	COMMENT In function 'CheckA429Parameters', A429_type of A429_cfg_data with index counter-1 is not equal to BNR and DDW 
	COMMENT
	COMMENT Class 554
	COMMENT In function 'CheckA429Parameters', A429_type of A429_cfg_data with index counter-1 is equal to BNR and DDW 	
	COMMENT
	COMMENT Class 555
	COMMENT In function 'CheckA429Parameters', CheckMinMax with parameters (A429_bnr_bits of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ONE and MAX_BNR_BITS) returns FALSE 
	COMMENT
	COMMENT Class 556
	COMMENT In function 'CheckA429Parameters', CheckMinMax with parameters (A429_bnr_bits of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ONE and MAX_BNR_BITS) returns TRUE 	
	COMMENT
	COMMENT Class 557
	COMMENT In function 'CheckA429Parameters', CheckMinMax with parameters (A429_bnr_start_bit of A429_bnr_data of label_data of A429_cfg_data with index counter-1, MIN_START_BIT and MAX_START_BIT) returns FALSE 
	COMMENT
	COMMENT Class 558
	COMMENT In function 'CheckA429Parameters', CheckMinMax with parameters (A429_bnr_start_bit of A429_bnr_data of label_data of A429_cfg_data with index counter-1, MIN_START_BIT and MAX_START_BIT) returns TRUE 	
	COMMENT
	COMMENT Class 559
	COMMENT In function 'CheckA429Parameters', A429_bnr_min of A429_bnr_data of label_data of A429_cfg_data with index counter-1 is less than MIN_BNR 
	COMMENT
	COMMENT Class 560
	COMMENT In function 'CheckA429Parameters', A429_bnr_min of A429_bnr_data of label_data of A429_cfg_data with index counter-1 is greater than MIN_BNR 	
	COMMENT
	COMMENT Class 561
	COMMENT In function 'CheckA429Parameters', function CheckMinMax with parameters (A429_bnr_offset of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ZERO and MAX_BNR_OFFSET) returns FALSE
	COMMENT
	COMMENT Class 562
	COMMENT In function 'CheckA429Parameters', function CheckMinMax with parameters (A429_bnr_offset of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ZERO and MAX_BNR_OFFSET) returns TRUE		
	COMMENT
	COMMENT Class 563
	COMMENT In function 'CheckA429Parameters', function CheckMinMax with parameters (A429_bnr_timeout of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ZERO and MAX_TIMEOUT) returns FALSE
	COMMENT
	COMMENT Class 564
	COMMENT In function 'CheckA429Parameters', function CheckMinMax with parameters (A429_bnr_timeout of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ZERO and MAX_TIMEOUT) returns TRUE		
	COMMENT
	COMMENT Class 565
	COMMENT In function 'CheckA429Parameters', function  CheckFloatMinMax  with parameters (A429_bnr_scale_fact of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ZERO and TWO) returns FALSE
	COMMENT
	COMMENT Class 566
	COMMENT In function 'CheckA429Parameters', function  CheckFloatMinMax  with parameters (A429_bnr_scale_fact of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ZERO and TWO) returns TRUE		
	COMMENT
	COMMENT Class 567
	COMMENT In function 'CheckA429Parameters', function  CheckMinMax with parameters (A429_ddw_timeout of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ZERO and MAX_TIMEOUT) returns FALSE
	COMMENT
	COMMENT Class 568
	COMMENT In function 'CheckA429Parameters', function  CheckMinMax with parameters (A429_ddw_timeout of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ZERO and MAX_TIMEOUT) returns TRUE		
	COMMENT
	COMMENT Class 569
	COMMENT In function 'CheckElogTrig', Elog_trig_bool is equal to FALSE.
	COMMENT
	COMMENT Class 570
	COMMENT In function 'CheckElogTrig', Elog_trig_bool is not equal to FALSE.	
	COMMENT
	COMMENT Class 571
	COMMENT In function 'CheckElogTrig', CheckMinMax with parameters (elog_trig_label with index as condition counter of Elog_trig with index Exceedence log counter, ONE and MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 572
	COMMENT In function 'CheckElogTrig', CheckMinMax with parameters (elog_trig_label with index as condition counter of Elog_trig with index Exceedence log counter, ONE and MAX_LABEL) returns TRUE	
	COMMENT
	COMMENT Class 573
	COMMENT In function 'CheckElogTrig', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 574
	COMMENT In function 'CheckElogTrig', Pdi_error_count is greater than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 575
	COMMENT In function 'CheckElogTrig', eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (elog_trig_sdi with index as condition counter of Elog_trig with index Exceedence log counter , ZERO and THREE) returns FALSE
	COMMENT
	COMMENT Class 576
	COMMENT In function 'CheckElogTrig', eng_sdi of Config_data is equal to FALSE AND function CheckMinMax with parameters (elog_trig_sdi with index as condition counter of Elog_trig with index Exceedence log counter , ZERO and THREE) returns TRUE	
	COMMENT
	COMMENT Class 577
	COMMENT In function 'CheckElogTrig''elog_trig_start_type with index as condition counter of Elog_trig with index Exceedence log counter is not equal to ZERO
	COMMENT
	COMMENT Class 578
	COMMENT In function 'CheckElogTrig''elog_trig_start_type with index as condition counter of Elog_trig with index Exceedence log counter is equal to ZERO	
	COMMENT
	COMMENT Class 579
	COMMENT In function 'CheckElogTrig''elog_trig_cross_type with index as condition counter of Elog_trig with index Exceedence log counter is not equal to ZERO
	COMMENT
	COMMENT Class 580
	COMMENT In function 'CheckElogTrig''elog_trig_cross_type with index as condition counter of Elog_trig with index Exceedence log counter is equal to ZERO	
	COMMENT
	COMMENT Class 581
	COMMENT In function 'CheckElogTrig''elog_trig_cross_type with index as condition counter of Elog_trig with index Exceedence log counter is not equal to ZERO
	COMMENT
	COMMENT Class 582
	COMMENT In function 'CheckElogTrig''elog_trig_cross_type with index as condition counter of Elog_trig with index Exceedence log counter is equal to ZERO			
	COMMENT
	COMMENT Class 583
	COMMENT In function 'PdiDataCheck'' Global_check is TRUE
	COMMENT
	COMMENT Class 584
	COMMENT In function 'PdiDataCheck''Global_check is not TRUE	
	COMMENT
	COMMENT Class 585
	COMMENT In function 'PdiDataCheck'' Page_check of index Page_num is TRUE
	COMMENT
	COMMENT Class 586
	COMMENT In function 'PdiDataCheck''Page_check of index Page_num is not TRUE		
	COMMENT
	COMMENT Class 587
	COMMENT In function 'CheckDecimalFormat'' The function return TRUE if format is NUM_ONED,NUM_TWOD,NUM_THREED,NUM_FOURD,NUM_FIVED and NUM_SIXD.
	COMMENT
	COMMENT Class 588
	COMMENT In function 'CheckDecimalFormat''The function return FALSE if format is not NUM_ONED,NUM_TWOD,NUM_THREED,NUM_FOURD,NUM_FIVED and NUM_SIXD.		
	COMMENT
	COMMENT Class 589
	COMMENT In function 'FindColorRange'' color is set to BLACK.
	COMMENT
	COMMENT Class 590
	COMMENT In function 'FindColorRange'' color is set to DARK_RED	
	COMMENT
	COMMENT Class 591
	COMMENT In function 'FindColorRange'' color is set to RED.
	COMMENT
	COMMENT Class 592
	COMMENT In function 'FindColorRange'' color is set to CAS_REV_RED		
	COMMENT
	COMMENT Class 593
	COMMENT In function 'FindColorRange'' color is set to PINK.
	COMMENT
	COMMENT Class 594
	COMMENT In function 'FindColorRange'' color is set to TEAL	
	COMMENT
	COMMENT Class 595
	COMMENT In function 'FindColorRange'' color is set to GREEN.
	COMMENT
	COMMENT Class 596
	COMMENT In function 'FindColorRange'' color is set to BRIGHT_GREEN		
	COMMENT
	COMMENT Class 597
	COMMENT In function 'FindColorRange'' color is set to DARK_BLUE		
	COMMENT
	COMMENT Class 598
	COMMENT In function 'FindColorRange'' color is set to BLUE.
	COMMENT
	COMMENT Class 599
	COMMENT In function 'FindColorRange'' color is set to LIGHT_GRAY	
	COMMENT
	COMMENT Class 600
	COMMENT In function 'FindColorRange'' color is set to GRAY.
	COMMENT
	COMMENT Class 601
	COMMENT In function 'FindColorRange'' color is set to DARK_GRAY		
	COMMENT
	COMMENT Class 602
	COMMENT In function 'FindColorRange'' color is set to YELLOW.
	COMMENT
	COMMENT Class 603
	COMMENT In function 'FindColorRange'' color is set to ORANGE	
	COMMENT
	COMMENT Class 604
	COMMENT In function 'FindColorRange'' color is set to WHITE.
	COMMENT
	COMMENT Class 605
	COMMENT In function 'FindColorRange'' return COLOR_MAX if color is other than BLACK, RED, LIGHT_RED,
	COMMENT TEAL,GREEN,DARK_BLUE,BLUE, LIGHT_GRAY, YELLOW,TURQUOISE, VIOLETand WHITE
	COMMENT
	COMMENT Class 606
	COMMENT In function 'FindColorRange'' color is set to VIOLET	
	COMMENT
	COMMENT Class 607
	COMMENT In function 'FindColorRange'' color is set to TURQUOISE.		
	COMMENT
	COMMENT Class 608
	COMMENT In function 'CheckVerPos'' M_FP_COMPARE is greater than difference of pos and ZERO AND M_FP_COMPARE is greater than difference of ZERO and pos.
	COMMENT
	COMMENT Class 609
	COMMENT In function 'CheckVerPos'' - M_FP_COMPARE is greater than difference of pos and ONE AND M_FP_COMPARE is greater than difference of ONE and pos.
	COMMENT
	COMMENT Class 610
	COMMENT In function 'CheckVerPos'' - M_FP_COMPARE is greater than difference of pos and TEN AND M_FP_COMPARE is greater than difference of TEN and pos.
	COMMENT
	COMMENT Class 611
	COMMENT In function 'CheckVerPos'' - M_FP_COMPARE is greater than difference of pos and ONE_HUNDRED AND M_FP_COMPARE is greater than difference of ONE_HUNDRED and pos.		
	COMMENT
	COMMENT Class 612
	COMMENT In function 'CheckVerPos'' - M_FP_COMPARE is greater than difference of pos and 0.1f AND M_FP_COMPARE is greater than difference of 0.1f and pos.
	COMMENT
	COMMENT Class 613
	COMMENT In function 'CheckVerPos'' -- M_FP_COMPARE is greater than difference of pos and 0.01f AND M_FP_COMPARE is greater than difference of 0.01f and pos.		
	COMMENT
	COMMENT Class 614
	COMMENT In function 'CheckElogParam'' Elog_param is equal to FALSE.
	COMMENT
	COMMENT Class 615
	COMMENT In function 'CheckElogParam''Elog_param is not equal to FALSE.
	COMMENT
	COMMENT Class 616
	COMMENT In function 'CheckElogParam'' call function CheckMinMax with parameters (elog_label of Elog_label with index Exceedence log counter, ONE and MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 617
	COMMENT In function 'CheckElogParam'' call function CheckMinMax with parameters (elog_label of Elog_label with index Exceedence log counter, ONE and MAX_LABEL) returns TRUE	
	COMMENT
	COMMENT Class 618
	COMMENT In function 'CheckElogParam'' Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 619
	COMMENT In function 'CheckElogParam'' Pdi_error_count is greater than MAX_ERROR_MSG	
	COMMENT
	COMMENT Class 620
	COMMENT In function 'CheckElogParam'' call function CheckMinMax with parameters (elog_sdi of Elog_label with index Exceedence log counter , ZERO and THREE) returns FALSE
	COMMENT
	COMMENT Class 621
	COMMENT In function 'CheckElogParam'' call function CheckMinMax with parameters (elog_sdi of Elog_label with index Exceedence log counter , ZERO and THREE) returns TRUE		
	COMMENT
	COMMENT Class 622
	COMMENT In function 'CheckElogParam'' call function CheckMinMax with parameters (elog_bit_label with index as index_i counter of Elog_label with index Exceedence log counter, ONE and MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 623
	COMMENT In function 'CheckElogParam'' call function CheckMinMax with parameters (elog_bit_label with index as index_i counter of Elog_label with index Exceedence log counter, ONE and MAX_LABEL) returns TRUE	
	COMMENT
	COMMENT Class 624
	COMMENT In function 'CheckElogParam'' call function CheckString with parameters (address of elog_bit_param with index_i and index_j of Elog_label with index Exceedence log counter and MAX_ELOG_BIT_PARAM) returns FALSE
	COMMENT
	COMMENT Class 625
	COMMENT In function 'CheckElogParam'' call function CheckString with parameters (address of elog_bit_param with index_i and index_j of Elog_label with index Exceedence log counter and MAX_ELOG_BIT_PARAM) returns TRUE		
	COMMENT
	COMMENT Class 626
	COMMENT In function 'CheckAcdtParams'' Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 627
	COMMENT In function 'CheckAcdtParams'' Pdi_error_count is greater than MAX_ERROR_MSG	
	COMMENT
	COMMENT Class 628
	COMMENT In function 'CheckAcdtParams'' Acdt_parameters is equal to FALSE.
	COMMENT
	COMMENT Class 629
	COMMENT In function 'CheckAcdtParams'' Acdt_parameters is not equal to FALSE.	
	COMMENT
	COMMENT Class 630
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (label of Auto_cool_down_tmr, ONE and MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 631
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (label of Auto_cool_down_tmr, ONE and MAX_LABEL) returns TRUE	
	COMMENT
	COMMENT Class 632
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (acdt_time of Auto_cool_down_tmr, ZERO and MAX_TIMER) returns FALSE 
	COMMENT
	COMMENT Class 633
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (acdt_time of Auto_cool_down_tmr, ZERO and MAX_TIMER) returns TRUE 	
	COMMENT
	COMMENT Class 634
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (wog_label of Auto_cool_down_tmr, ONE and MAX_LABEL) returns FALSE 
	COMMENT
	COMMENT Class 635
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (wog_label of Auto_cool_down_tmr, ONE and MAX_LABEL) returns TRUE		
	COMMENT
	COMMENT Class 636
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (wog_start_bit of Auto_cool_down_tmr, ELEVEN and MAX_WOG_START_BIT) returns FALSE
	COMMENT
	COMMENT Class 637
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (wog_start_bit of Auto_cool_down_tmr, ELEVEN and MAX_WOG_START_BIT) returns TRUE		
	COMMENT
	COMMENT Class 638
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (acdt_on_trigger of Auto_cool_down_tmr, ONE and SIX) returns FALSE
	COMMENT
	COMMENT Class 639
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (acdt_on_trigger of Auto_cool_down_tmr, ONE and SIX) returns TRUE	
	COMMENT
	COMMENT Class 640
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (acdt_on_cond of Auto_cool_down_tmr, ONE and SIX) returns FALSE
	COMMENT
	COMMENT Class 641
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (acdt_on_cond of Auto_cool_down_tmr, ONE and SIX) returns TRUE	
	COMMENT
	COMMENT Class 642
	COMMENT In function 'CheckFont'' return TRUE if font is E_TINY_FONT,E_SMALL_FONT,E_NORMAL_FONT,E_LARGE_FONT and E_BEZEL_FONT.
	COMMENT
	COMMENT Class 643
	COMMENT In function 'CheckFont''return FALSE if font is other than E_TINY_FONT,E_SMALL_FONT,E_NORMAL_FONT,E_LARGE_FONT and E_BEZEL_FONT.	
	COMMENT
	COMMENT Class 644
	COMMENT In function 'CheckFont'' return TRUE if format is NUM_ONED,NUM_TWOD,NUM_THREED,NUM_FOURD,NUM_FIVED and NUM_SIXD.
	COMMENT
	COMMENT Class 645
	COMMENT In function 'CheckFont''return FALSE if format is other tha NUM_ONED,NUM_TWOD,NUM_THREED,NUM_FOURD,NUM_FIVED and NUM_SIXD.	
	COMMENT
	COMMENT Class 646
	COMMENT In function 'CheckRoundDial''CheckMinMax with parameters (assc_labels with index loop counter of Rd_settings with index 
	COMMENT RD counter minus one of Page_settings, ONE and  MAX_LABEL) returns FALSE	
	COMMENT
	COMMENT Class 647
	COMMENT In function 'CheckRoundDial''CheckMinMax with parameters (assc_labels with index loop counter of Rd_settings with index 
	COMMENT RD counter minus one of Page_settings, ONE and  MAX_LABEL) returns TRUE	
	COMMENT
	COMMENT
	COMMENT Class 648
	COMMENT In function 'CheckExceedTimerSettings' Function OctToStringTrim is called 
	COMMENT 
	COMMENT Class 649
	COMMENT In function 'CheckExceedTimerSettings'CheckMinMax with parameters timer_label of Timer_settings 
    COMMENT with index loop timer count of Page_settings, ONE, MAX_LABEL returns FALSE
	COMMENT 
	COMMENT Class 650
	COMMENT In function 'CheckExceedTimerSettings'CheckMinMax with parameters timer_label of Timer_settings 
    COMMENT with index loop timer count of Page_settings, ONE, MAX_LABEL returns TRUE	
	COMMENT
	COMMENT Class 651
	COMMENT In function 'CheckExceedTimerSettings' engine sdi of configuration data is TRUE
	COMMENT
	COMMENT Class 652
	COMMENT In function 'CheckExceedTimerSettings' engine sdi of configuration data is FALSE
	COMMENT
	COMMENT Class 653
	COMMENT In function 'CheckExceedTimerSettings'CheckMinMax with
    COMMENT  parameters timer sdi of Timer_settings with index loop timer count of Page_settings,
    COMMENT  ZERO, THREE returns FALSE	
	COMMENT
	COMMENT Class 654
	COMMENT In function 'CheckExceedTimerSettings'CheckMinMax with
    COMMENT  parameters timer sdi of Timer_settings with index loop timer count of Page_settings,
    COMMENT  ZERO, THREE returns TRUE	
	COMMENT
	COMMENT Class 655
	COMMENT In function 'CheckExceedTimerSettings'CheckFont with timer_font of Timer_settings of index loop timer
    COMMENT  count of Page_settings as parameter returns FALSE
	COMMENT
	COMMENT Class 656
	COMMENT In function 'CheckExceedTimerSettings'CheckFont with timer_font of Timer_settings of index loop timer
    COMMENT  count of Page_settings as parameter returns TRUE	
	COMMENT
	COMMENT Class 657
	COMMENT In function 'CheckExceedTimerSettings'CheckAxisMinMax with parameters (u16_x of timer_axis of 
    COMMENT Timer_settings with index loop timer count of Page_settings, ZERO,PANEL_HEIGHT
    COMMENT  and PANEL_WIDTH) returns FALSE	
	COMMENT
	COMMENT Class 658
	COMMENT In function 'CheckExceedTimerSettings'CheckAxisMinMax with parameters (u16_x of timer_axis of 
    COMMENT Timer_settings with index loop timer count of Page_settings, ZERO,PANEL_HEIGHT
    COMMENT  and PANEL_WIDTH) returns FALSE	
	COMMENT
	COMMENT Class 659
	COMMENT In function 'CheckExceedTimerSettings'CheckAxisMinMax with parameters
    COMMENT  (u16_y of timer_axis of Timer_settings with index loop timer count of Page_settings)
    COMMENT  returns FALSE		
	COMMENT
	COMMENT Class 660
	COMMENT In function 'CheckExceedTimerSettings'CheckAxisMinMax with parameters
    COMMENT  (u16_y of timer_axis of Timer_settings with index loop timer count of Page_settings)
    COMMENT  returns TRUE	
	COMMENT
	COMMENT Class 661
	COMMENT In function 'CheckExceedTimerSettings'CheckAxisMinMax with parameters (u16_x of timer_axis of Timer_settings with 
    COMMENT index as loop timer counter of Page_settings plus string width by two , 
    COMMENT ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 662
	COMMENT In function 'CheckExceedTimerSettings'CheckAxisMinMax with parameters (u16_x of timer_axis of Timer_settings with 
    COMMENT index as loop timer counter of Page_settings plus string width by two , 
    COMMENT ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE	
	COMMENT
	COMMENT Class 663
	COMMENT In function 'CheckExceedTimerSettings'CheckAxisMinMax with parameters (u16_y of timer_axis of Timer_settings with 
    COMMENT index as loop timer counter of Page_settings plus string width by two , 
    COMMENT ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 664
	COMMENT In function 'CheckExceedTimerSettings'CheckAxisMinMax with parameters (u16_y of timer_axis of Timer_settings with 
    COMMENT index as loop timer counter of Page_settings plus string width by two , 
    COMMENT ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE	
	COMMENT
	COMMENT Class 665
	COMMENT In function 'CheckExceedTimerSettings' Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 666
	COMMENT In function 'CheckExceedTimerSettings' Pdi_error_count is equal to MAX_ERROR_MSG
	COMMENT
	COMMENT Class 667
	COMMENT In function 'CheckExceedTimerSettings' function CheckMinMax with parameters timer_format of Timer_settings
    COMMENT  with index loop timer count of Page_settings, SECONDS, 
    COMMENT  HOUR_MIN_SEC returns FALSE	
	COMMENT
	COMMENT Class 668
	COMMENT In function 'CheckExceedTimerSettings' function CheckMinMax with parameters timer_format of Timer_settings
    COMMENT  with index loop timer count of Page_settings, SECONDS, 
    COMMENT  HOUR_MIN_SEC returns TRUE		
	COMMENT
	COMMENT Class 669
	COMMENT In function 'CheckA429Parameters'scu_enable of Config_data 
    COMMENT is equal to TRUE	
	COMMENT
	COMMENT Class 670
	COMMENT In function 'CheckA429Parameters'scu_enable of Config_data 
    COMMENT is equal to FALSE
	COMMENT
	COMMENT Class 671
	COMMENT In function 'CheckA429Parameters'scu label flag is not equal to SEVEN
	COMMENT
	COMMENT Class 672
	COMMENT In function 'CheckA429Parameters'scu label flag is equal to SEVEN	
	COMMENT
	COMMENT Class 673
	COMMENT In function 'CheckConfig'CheckMinMax with parameters (SCU_ENABLE of Config_data,
    COMMENT  ZERO and ONE) returns FALSE	
	COMMENT
	COMMENT Class 674
	COMMENT In function 'CheckConfig'CheckMinMax with parameters (SCU_ENABLE of Config_data,
    COMMENT  ZERO and ONE) returns TRUE	
	COMMENT 
	COMMENT Class 675
	COMMENT In function 'CheckA429Parameters', Pdi_error_count is equal to MAX_ERROR_MSG
	COMMENT 
	COMMENT Class 676
	COMMENT In function 'CheckExceedTimerSettings', Pdi_error_count is greater than MAX_ERROR_MSG
	COMMENT
	COMMENT Invalid Class(es)
	COMMENT None
	COMMENT </ECD>	

--------------------------------------------------------------------------------
--
-- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
--
--------------------------------------------------------------------------------

    #T_UINT16 U16_message_words[3]; 
    #T_EXCEED_STRUCT Exceed_data[66]; 
    #T_UINT8 Exceed_cnt; 
    #T_BOOL Caslocationset_parameters; 
    #T_POLYGRAPH Pg_settings[30]; 
    #T_UINT8 Pg_cnt; 
    #T_UINT16 Text_parameter_occurrence[30]; 
    #T_UINT8 Text_cnt; 
    #T_UINT16 Tb_parameter_occurrence[50]; 
    #T_UINT8 Tb_cnt; 
    #T_BOOL Cg_tracker[30][50]; 
    #T_UINT16 Cg_parameter_occurrence[30]; 
    #T_CARROTGRAPHDEF Ap_page2_carrot[30];
    #T_UINT8 Cg_cnt; 
    #T_UINT16 Nb_parameter_occurrence[50]; 
    #T_BOOL Nb_tracker[30][50]; 
    #T_SNUMBOXDEF Page_num_boxes[50]; 
    #T_BOOL Rd_tracker[30][50]; 
    #T_UINT16 Rd_parameter_occurrence[30]; 
    #T_UINT32 Rd_lin_angle_status[30]; 
    #T_ROUNDDIALDEF Ap_page0_dials[30]; 
    #T_UINT8 Rd_cnt; 
    #T_BOOL Bg_tracker[30][50]; 
    #T_UINT8 Nb_cnt; 
    #T_UINT16 Bg_parameter_occurrence[30]; 
    #T_SBARGRAPHDEF Ap_page1_bar_graphs[30]; 
    #T_UINT8 Bg_cnt; 
    #T_BOOL Acdt_flag;
    #T_BOOL Timer_flag; 
    #T_EPAGE_NUM Page_num; 
    #T_PAGE Page_settings; 
    #T_ACDT_STRUCT Auto_cool_down_tmr; 
    #T_BOOL Acdt_parameters; 
    #T_ELOG_LABEL_STRUCT Elog_label[5]; 
    #T_BOOL Elog_param;
    #T_ELOG_TRIG_STRUCT Elog_trig[5]; 
    #T_BOOL Elog_trig_bool; 
    #T_A429_PARAMS A429_cfg_data[256]; 
    #T_UINT16 A429_settings_cnt; 
    #T_CAS_MESSAGE_STRUCT Cas_messages[36]; 
    #T_UINT16 Cas_word_cnt; 
    #T_CONFIG_STRUCT Config_data; 
    #T_APPDATA_PANELSTRUCT *Appdata_appdata; 
    #T_DISPLAYSIZE Display_size; 
    #T_ELANDSCAPEORPORTRIAT E_orientation; 
    # volatile T_INT32 Itm_rx_buffer; 
	#T_UINT8 *PTU_pu8_string;	
	
    #T_UINT8 Scu_label_flag; 	
    #T_UINT8 Timer_cnt;		

DEFINE STUB hdudispfpdicheck_c
    #T_FLOAT CalculatePower(T_FLOAT  _in value, T_INT32  _in mul); 
    #T_INT16 FontsGetFontHeight(T_ETXFONT  _in e_tx_font); 
    #T_INT16 FontsGetStringWidth(T_UINT8  _no pu8_string, T_ETXFONT  _in e_tx_font)
	#{
	# pu8_string = PTU_pu8_string;
	#} 
    #T_UINT16 StrLen(char  _in str[200]);
END DEFINE

--------------------------------------------------------------------------------
--
-- ENVIRONMENTS DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- TESTED FILE ENVIRONNEMENT
--------------------------------------------------------------------------------

-- Environment of the file E:\HDU_VIGNESH\EXECUTION_SVN_SRC\HDUDISPFPDICHECK\SRC\hdudispfpdicheck.c
ENVIRONMENT ENV_hdudispfpdicheck_c
 -- VAR Index_value,		init = 0,		ev = init
  VAR Acdt_axis_error,		init = 0,		ev = init
  VAR Pdi_error_count,		init = 0,		ev = init
 -- ARRAY Error_msg_string,		init = { others => "" },		ev = init
  VAR Timer_axis_error,		init = 0,		ev = init
  ARRAY Page_check,		init = { others => FALSE },		ev = init
  ARRAY Page_parameter_error,		init = { others => FALSE },		ev = init
  VAR Label_size,		init = 4,		ev = init
  VAR Global_parameter_error,		init = FALSE,		ev = init
  VAR Global_check,		init = FALSE,		ev = init
  VAR Cas_error,		init = 0,		ev = init
  VAR Exceed_error,		init = 0,		ev = init 
  VAR E_orientation,		init = 0,		ev = init 
  VAR Acdt_flag,		init = FALSE,		ev = init  
  VAR Timer_flag,		init = FALSE,		ev = init   
  VAR Timer_cnt,		init = 0,		ev = init  
  VAR Config_data.scu_enable,		init = 0,		ev = init    
END ENVIRONMENT -- ENV_hdudispfpdicheck_c
USE ENV_hdudispfpdicheck_c

--------------------------------------------------------------------------------
--
-- SERVICES DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Declaration of the service PdiDataCheck
--------------------------------------------------------------------------------
SERVICE PdiDataCheck
SERVICE_TYPE extern

    TEST 414
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-001]
        COMMENT The function shall loop from ONE to Cg_cnt and do the following,
		COMMENT Call the function OctToStringTrim with parameters label of Cg_settings with index CG counter-1 of Page_settings, size of label and label string.
        COMMENT Equivalence Class 275
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-024]
        COMMENT The function shall loop from ONE to Cg_cnt and do the following,
		COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Cg_settings with index CG counter-1 of Page_settings, ZERO and THREE) returns
		COMMENT FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string SDI, Error_msg_string with array index Pdi_error_count.
		COMMENT 2. Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,276
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-011]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_VERTICAL OR cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_HORIZONTAL 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string CG_ORIEN, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,278
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-004]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT - Do nothing when cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_VERTICAL 
        COMMENT - Do nothing when cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_HORIZONTAL
        COMMENT Equivalence Class 280,278
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Cg_settings[0].label,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 4,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH+1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = PANEL_HEIGHT+1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_HORIZONTAL,											ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init			
			
			
																																																							

			VAR Error_msg_string[0],			init = "CG 0000 LABEL",						ev = init
			VAR Error_msg_string[1],			init = "CG 0000 SDI",						ev = init
			VAR Error_msg_string[2],			init = "CG 0000 CG_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "CG 0000 CG_NO_LIN",					ev = init
			VAR Error_msg_string[4],			init = "CG 0000 CG_NO_PTR",					ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1					
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 414
	
	
    TEST 415
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-001]
        COMMENT The function shall loop from ONE to Cg_cnt and do the following,
		COMMENT Call the function OctToStringTrim with parameters label of Cg_settings with index CG counter-1 of Page_settings, size of label and label string.
        COMMENT Equivalence Class 275
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-024]
        COMMENT The function shall loop from ONE to Cg_cnt and do the following,
		COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Cg_settings with index CG counter-1 of Page_settings, ZERO and THREE) returns
		COMMENT FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string SDI, Error_msg_string with array index Pdi_error_count.
		COMMENT 2. Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,276
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-011]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_VERTICAL OR cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_HORIZONTAL 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string CG_ORIEN, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,278
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-004]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT - Do nothing when cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_VERTICAL 
        COMMENT - Do nothing when cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_HORIZONTAL
        COMMENT Equivalence Class 281,278
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Cg_settings[0].label,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 4,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH+1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = PANEL_HEIGHT+1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_HORIZONTAL,											ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init			
			
			
																																																							

			VAR Error_msg_string[0],			init = "CG 0000 LABEL",						ev = init
			VAR Error_msg_string[1],			init = "CG 0000 SDI",						ev = init
			VAR Error_msg_string[2],			init = "CG 0000 CG_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "CG 0000 CG_NO_LIN",					ev = init
			VAR Error_msg_string[4],			init = "CG 0000 CG_ORIEN",					ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1				

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 415	
	
	
    TEST 416
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-001]
        COMMENT The function shall loop from ONE to Cg_cnt and do the following,
		COMMENT Call the function OctToStringTrim with parameters label of Cg_settings with index CG counter-1 of Page_settings, size of label and label string.
        COMMENT Equivalence Class 275
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-024]
        COMMENT The function shall loop from ONE to Cg_cnt and do the following,
		COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Cg_settings with index CG counter-1 of Page_settings, ZERO and THREE) returns
		COMMENT FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string SDI, Error_msg_string with array index Pdi_error_count.
		COMMENT 2. Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,277
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-011]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_VERTICAL OR cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_HORIZONTAL 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string CG_ORIEN, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,278
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-004]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT - Do nothing when cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_VERTICAL 
        COMMENT - Do nothing when cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_HORIZONTAL
        COMMENT Equivalence Class 281,278
        COMMENT
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Cg_settings[0].label,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 4,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH+1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = PANEL_HEIGHT+1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,											ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init			
			
			
																																																							

			VAR Error_msg_string[0],			init = "CG 0000 LABEL",						ev = init
			VAR Error_msg_string[1],			init = "CG 0000 SDI",						ev = init
			VAR Error_msg_string[2],			init = "CG 0000 CG_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "CG 0000 CG_NO_LIN",					ev = init
			VAR Error_msg_string[4],			init = "CG 0000 CG_NO_PTR",					ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 416	
	
	
    TEST 417
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-024]
        COMMENT The function shall loop from ONE to Cg_cnt and do the following,
		COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Cg_settings with index CG counter-1 of Page_settings, ZERO and THREE) returns
		COMMENT FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string SDI, Error_msg_string with array index Pdi_error_count.
		COMMENT 2. Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,277
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-011]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_VERTICAL OR cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_HORIZONTAL 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string CG_ORIEN, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,279
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-005]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT - Set decimal extract to u16Format of Carrot graph with index CG counter-1 right shift by FOUR bitwise and SEVEN
        COMMENT - The function loop from ONE to cg_no_lin of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (cg_lin_range with index counter j of Cg_settings with index CG counter-1 of Page_settings divided by ( product of ONE_HUNDRED and CalculatePower
        COMMENT  with parameter ONE and decimal extract)  , MIN_LIN_RANGE and MAX_LIN_RANGE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIN_RANGE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,282
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-006]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT Loop from ONE to CG_no_lin of Cg_settingswith index CG counter-1 of Page_settings and do the below :
        COMMENT - Do below when cg_orien of Cg_settings with index CG counter-1 of Page_settings is equal to BG_VERTICAL 
        COMMENT If function CheckAxisMinMax with parameters (ABS (cg_lin_offset with index counter j of Cg_settings with index CG counter-1 of Page_settings by four plus u16_y of cg_axis
        COMMENT  of Cg_settings with index CG counter-1 of Page_settings)  , ZERO, PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIN_OFFSET, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,284
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-007]
        COMMENT The function shall loops from ZERO to Cg_cnt and do the following
        COMMENT - Loops from ZERO to cg_no_ptr of Cg_settings with index CG counter-1 of Page_settings minus ONE,
        COMMENT If function CheckMinMax with parameter (cg_ptr_shape with index counter j of Cg_settings with index CG counter-1 of Page_settings,FG_CAPITAL_R_POINTER and FG_POINTER_SHAPE10)
        COMMENT   returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_PTR_SHAPE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,286
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-033]
        COMMENT The function shall loops from ZERO to Cg_cnt and do the following
        COMMENT -Loops from ZERO to cg_no_ptr of Cg_settings with index CG counter-1 of Page_settings minus ONE,
        COMMENT If function CheckColor with parameter cg_ptr_color with index counter j of Cg_settings with index CG counter-1 of Page_settings returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_PTR_COLOR, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,288
        COMMENT
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = PANEL_HEIGHT+1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = MAX_NO_PTR+1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,											ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init
			--VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			--VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init			
			
			
																																																							

			VAR Error_msg_string[0],			init = "CG 0001 CG_AXIS",					ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_NO_LIN",					ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_NO_PTR",					ev = init
			VAR Error_msg_string[3],			init = "CG 0001 CG_PTR_SHAPE",					ev = init
			VAR Error_msg_string[4],			init = "CG 0001 CG_PTR_COLOR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 417	
	
	
    TEST 418
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-005]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT - Set decimal extract to u16Format of Carrot graph with index CG counter-1 right shift by FOUR bitwise and SEVEN
        COMMENT - The function loop from ONE to cg_no_lin of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (cg_lin_range with index counter j of Cg_settings with index CG counter-1 of Page_settings divided by ( product of ONE_HUNDRED and CalculatePower
        COMMENT  with parameter ONE and decimal extract)  , MIN_LIN_RANGE and MAX_LIN_RANGE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIN_RANGE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,282
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-006]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT Loop from ONE to CG_no_lin of Cg_settingswith index CG counter-1 of Page_settings and do the below :
        COMMENT - Do below when cg_orien of Cg_settings with index CG counter-1 of Page_settings is equal to BG_VERTICAL 
        COMMENT If function CheckAxisMinMax with parameters (ABS (cg_lin_offset with index counter j of Cg_settings with index CG counter-1 of Page_settings by four plus u16_y of cg_axis
        COMMENT  of Cg_settings with index CG counter-1 of Page_settings)  , ZERO, PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIN_OFFSET, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,284
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-007]
        COMMENT The function shall loops from ZERO to Cg_cnt and do the following
        COMMENT - Loops from ZERO to cg_no_ptr of Cg_settings with index CG counter-1 of Page_settings minus ONE,
        COMMENT If function CheckMinMax with parameter (cg_ptr_shape with index counter j of Cg_settings with index CG counter-1 of Page_settings,FG_CAPITAL_R_POINTER and FG_POINTER_SHAPE10)
        COMMENT   returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_PTR_SHAPE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,286
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-033]
        COMMENT The function shall loops from ZERO to Cg_cnt and do the following
        COMMENT -Loops from ZERO to cg_no_ptr of Cg_settings with index CG counter-1 of Page_settings minus ONE,
        COMMENT If function CheckColor with parameter cg_ptr_color with index counter j of Cg_settings with index CG counter-1 of Page_settings returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_PTR_COLOR, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,288
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = PANEL_HEIGHT+1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = MAX_NO_PTR+1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,											ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init		
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init			
			


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 418	
	
	
	TEST 419
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-005]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT - Set decimal extract to u16Format of Carrot graph with index CG counter-1 right shift by FOUR bitwise and SEVEN
        COMMENT - The function loop from ONE to cg_no_lin of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (cg_lin_range with index counter j of Cg_settings with index CG counter-1 of Page_settings divided by ( product of ONE_HUNDRED and CalculatePower
        COMMENT  with parameter ONE and decimal extract)  , MIN_LIN_RANGE and MAX_LIN_RANGE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIN_RANGE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,283
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-006]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT Loop from ONE to CG_no_lin of Cg_settingswith index CG counter-1 of Page_settings and do the below :
        COMMENT - Do below when cg_orien of Cg_settings with index CG counter-1 of Page_settings is equal to BG_VERTICAL 
        COMMENT If function CheckAxisMinMax with parameters (ABS (cg_lin_offset with index counter j of Cg_settings with index CG counter-1 of Page_settings by four plus u16_y of cg_axis
        COMMENT  of Cg_settings with index CG counter-1 of Page_settings)  , ZERO, PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIN_OFFSET, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,285
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-007]
        COMMENT The function shall loops from ZERO to Cg_cnt and do the following
        COMMENT - Loops from ZERO to cg_no_ptr of Cg_settings with index CG counter-1 of Page_settings minus ONE,
        COMMENT If function CheckMinMax with parameter (cg_ptr_shape with index counter j of Cg_settings with index CG counter-1 of Page_settings,FG_CAPITAL_R_POINTER and FG_POINTER_SHAPE10)
        COMMENT   returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_PTR_SHAPE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,287
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-033]
        COMMENT The function shall loops from ZERO to Cg_cnt and do the following
        COMMENT -Loops from ZERO to cg_no_ptr of Cg_settings with index CG counter-1 of Page_settings minus ONE,
        COMMENT If function CheckColor with parameter cg_ptr_color with index counter j of Cg_settings with index CG counter-1 of Page_settings returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_PTR_COLOR, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,289
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-008]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT The function shall loop from ZERO to cg_no_ptr of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckAxisMinMax with parameters (cg_ptr_scale with indices counter j and ZERO of Cg_settings with index CG counter-1 of Page_settings, ZERO, PANEL_HEIGHT and PANEL_WIDTH) returns false OR 
        COMMENT function CheckAxisMinMax with parameters (CG_ptr_scale with indices counter j and ONE of Cg_settings with index CG counter-1 of Page_settings, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns false AND
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_PTR_SCALE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,290
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-009]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT The function shall loop from ZERO to cg_no_ptr of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckAxisMinMax2 with parameters (cg_ptr_scale_offset with indices counter j and ZERO of Cg_settings with index CG counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns false OR
        COMMENT  function CheckAxisMinMax2 with parameters (cg_ptr_scale_offset with indices counter j and ONE of Cg_settings with index CG counter-1 of Page_settings, -PANEL_WIDTH, -PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns false
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_PTR_SCALE_OFFSET, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,292
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-010]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT -Loops from ZERO to cg_no_ptr of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (cg_ptr_rot with index counter j of Cg_settings with index CG counter-1 of Page_settings, MIN_LIN_ANGLE and MAX_LIN_ANGLE) returns FALSE AND
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string CG_PTR_ROT, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Else set rotAngle with index counter j of Ap_page2_carrot of CG counter – 1 to CVT(cg_ptr_rot with index counter j of Cg_settings with index CG counter-1 of Page_settings)
        COMMENT Equivalence Class 280,294
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-012]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT -Loops from ZERO to cg_no_lim of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (cg_lim_val_type with index counter j of Cg_settings with index CG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns FALSE OR 
        COMMENT  function CheckFloatMinMax with parameters (cg_lim_val with index counter j of Cg_settings with index CG counter-1 of Page_settings, MIN_RANGE and MAX_LIN_RANGE) returns false
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_FIVE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIM_VAL, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,296
        COMMENT  
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = PANEL_HEIGHT+1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = MAX_NO_PTR+1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,											ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init			
			


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 419
	
	
    TEST 420
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-008]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT The function shall loop from ZERO to cg_no_ptr of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckAxisMinMax with parameters (cg_ptr_scale with indices counter j and ZERO of Cg_settings with index CG counter-1 of Page_settings, ZERO, PANEL_HEIGHT and PANEL_WIDTH) returns false OR 
        COMMENT function CheckAxisMinMax with parameters (CG_ptr_scale with indices counter j and ONE of Cg_settings with index CG counter-1 of Page_settings, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns false AND
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_PTR_SCALE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,290
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-009]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT The function shall loop from ZERO to cg_no_ptr of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckAxisMinMax2 with parameters (cg_ptr_scale_offset with indices counter j and ZERO of Cg_settings with index CG counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns false OR
        COMMENT  function CheckAxisMinMax2 with parameters (cg_ptr_scale_offset with indices counter j and ONE of Cg_settings with index CG counter-1 of Page_settings, -PANEL_WIDTH, -PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns false
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_PTR_SCALE_OFFSET, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,292
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = COLOR_BLACK,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			

			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_REDX_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_REDX_WIDTH",			ev = init
			VAR Error_msg_string[3],			init = "CG 0001 CG_REDX_HEIGHT",		ev = init
			VAR Error_msg_string[4],			init = "CG 0001 CG_REDX_OFFSET_AXIS",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 420


    TEST 421
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-008]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT The function shall loop from ZERO to cg_no_ptr of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckAxisMinMax with parameters (cg_ptr_scale with indices counter j and ZERO of Cg_settings with index CG counter-1 of Page_settings, ZERO, PANEL_HEIGHT and PANEL_WIDTH) returns false OR 
        COMMENT function CheckAxisMinMax with parameters (CG_ptr_scale with indices counter j and ONE of Cg_settings with index CG counter-1 of Page_settings, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns false AND
        COMMENT  Pdi_error_count is greater than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 281,290
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-009]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT The function shall loop from ZERO to cg_no_ptr of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckAxisMinMax2 with parameters (cg_ptr_scale_offset with indices counter j and ZERO of Cg_settings with index CG counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns false OR
        COMMENT  function CheckAxisMinMax2 with parameters (cg_ptr_scale_offset with indices counter j and ONE of Cg_settings with index CG counter-1 of Page_settings, -PANEL_WIDTH, -PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns false
        COMMENT  AND Pdi_error_count is greater than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_PTR_SCALE_OFFSET, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,292
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-010]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT -Loops from ZERO to cg_no_ptr of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (cg_ptr_rot with index counter j of Cg_settings with index CG counter-1 of Page_settings, MIN_LIN_ANGLE and MAX_LIN_ANGLE) returns FALSE AND
        COMMENT  Pdi_error_count is greater than MAX_ERROR_MSG then,
        COMMENT Else set rotAngle with index counter j of Ap_page2_carrot of CG counter – 1 to CVT(cg_ptr_rot with index counter j of Cg_settings with index CG counter-1 of Page_settings)
        COMMENT Equivalence Class 281,294
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-012]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT -Loops from ZERO to cg_no_lim of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (cg_lim_val_type with index counter j of Cg_settings with index CG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns FALSE OR 
        COMMENT  function CheckFloatMinMax with parameters (cg_lim_val with index counter j of Cg_settings with index CG counter-1 of Page_settings, MIN_RANGE and MAX_LIN_RANGE) returns false
        COMMENT  AND Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_FIVE is equal to TRUE then,
        COMMENT Equivalence Class 281,296 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init		
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			

			VAR Error_msg_string[0],			init = "CG 0001 CG_REDX_AXIS",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_REDX_WIDTH",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_REDX_HEIGHT",			ev = init
			VAR Error_msg_string[3],			init = "CG 0001 CG_REDX_OFFSET_AXIS",		ev = init
			VAR Error_msg_string[4],			init = "CG 0001 CG_REDX_AXIS",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 421	
	
	
    TEST 422
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-010]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT -Loops from ZERO to cg_no_ptr of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (cg_ptr_rot with index counter j of Cg_settings with index CG counter-1 of Page_settings, MIN_LIN_ANGLE and MAX_LIN_ANGLE) returns FALSE AND
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string CG_PTR_ROT, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Else set rotAngle with index counter j of Ap_page2_carrot of CG counter – 1 to CVT(cg_ptr_rot with index counter j of Cg_settings with index CG counter-1 of Page_settings)
        COMMENT Equivalence Class 280,294
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			

			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1		
			STUB CalculatePower(10,0)1	
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 422	
	
	
    TEST 423
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-010]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT -Loops from ZERO to cg_no_ptr of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (cg_ptr_rot with index counter j of Cg_settings with index CG counter-1 of Page_settings, MIN_LIN_ANGLE and MAX_LIN_ANGLE) returns FALSE AND
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string CG_PTR_ROT, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Else set rotAngle with index counter j of Ap_page2_carrot of CG counter – 1 to CVT(cg_ptr_rot with index counter j of Cg_settings with index CG counter-1 of Page_settings)
        COMMENT Equivalence Class 280,294
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-012]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT -Loops from ZERO to cg_no_lim of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (cg_lim_val_type with index counter j of Cg_settings with index CG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns FALSE OR 
        COMMENT  function CheckFloatMinMax with parameters (cg_lim_val with index counter j of Cg_settings with index CG counter-1 of Page_settings, MIN_RANGE and MAX_LIN_RANGE) returns false
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_FIVE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIM_VAL, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,296 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			

			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_REDX_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_REDX_WIDTH",		ev = init
			VAR Error_msg_string[3],			init = "CG 0001 CG_REDX_AXIS",				ev = init
			VAR Error_msg_string[4],			init = "CG 0001 CG_REDX_AXIS",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 423

    TEST 424
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-010]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT -Loops from ZERO to cg_no_ptr of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (cg_ptr_rot with index counter j of Cg_settings with index CG counter-1 of Page_settings, MIN_LIN_ANGLE and MAX_LIN_ANGLE) returns FALSE AND
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string CG_PTR_ROT, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Else set rotAngle with index counter j of Ap_page2_carrot of CG counter – 1 to CVT(cg_ptr_rot with index counter j of Cg_settings with index CG counter-1 of Page_settings)
        COMMENT Equivalence Class 281,294
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-012]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT -Loops from ZERO to cg_no_lim of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (cg_lim_val_type with index counter j of Cg_settings with index CG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns FALSE OR 
        COMMENT  function CheckFloatMinMax with parameters (cg_lim_val with index counter j of Cg_settings with index CG counter-1 of Page_settings, MIN_RANGE and MAX_LIN_RANGE) returns false
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_FIVE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIM_VAL, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,296
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 424	
	
	
    TEST 425
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-012]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT -Loops from ZERO to cg_no_lim of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (cg_lim_val_type with index counter j of Cg_settings with index CG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns FALSE OR 
        COMMENT  function CheckFloatMinMax with parameters (cg_lim_val with index counter j of Cg_settings with index CG counter-1 of Page_settings, MIN_RANGE and MAX_LIN_RANGE) returns false
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_FIVE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIM_VAL, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,296
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 425	
	
	
    TEST 426
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-013]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT The function shall loop from ZERO to cg_no_lim of Cg_settings with index CG counter-1 of Page_settings minus one,
        COMMENT If cg_lim_color with index counter j of Cg_settings with index CG counter-1 of Page_settings is not equal to ZERO AND 
        COMMENT function CheckColor with parameter cg_lim_color with index counter j of Cg_settings with index CG counter-1 of Page_settings returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_SIX is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIM_COLOR, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,299
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-025]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT -Loop from counter j ZERO to cg_no_lim of Cg_settings with index CG counter-1 of Page_settings minus one,
        COMMENT If function CheckMinMax with parameter cg_lim_type with index counter j of Cg_settings with index CG counter-1 of Page_settings,TYPE_NORMAL and  TYPE_WARNING returns FALSE
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIM_TYPE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,300 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-014]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false 
        COMMENT OR function CheckAxisMinMax with parameters (u16_y of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index RD counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,302
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-026]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (cg_redx_width of Cg_settings with index CG counter-1 of Page_settings , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_EIGHT is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_REDX_WIDTH, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,304
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			

			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_REDX_FONT",				ev = init



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 426	
	
	
    TEST 427
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-013]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT The function shall loop from ZERO to cg_no_lim of Cg_settings with index CG counter-1 of Page_settings minus one,
        COMMENT If cg_lim_color with index counter j of Cg_settings with index CG counter-1 of Page_settings is not equal to ZERO AND 
        COMMENT function CheckColor with parameter cg_lim_color with index counter j of Cg_settings with index CG counter-1 of Page_settings returns FALSE 
        COMMENT AND Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_SIX is equal to TRUE then,
        COMMENT Equivalence Class 281,299
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-025]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT -Loop from counter j ZERO to cg_no_lim of Cg_settings with index CG counter-1 of Page_settings minus one,
        COMMENT If function CheckMinMax with parameter cg_lim_type with index counter j of Cg_settings with index CG counter-1 of Page_settings,TYPE_NORMAL and  TYPE_WARNING returns FALSE
        COMMENT  AND Pdi_error_count is greater than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 281,300 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-014]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false 
        COMMENT OR function CheckAxisMinMax with parameters (u16_y of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false
        COMMENT  AND Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index RD counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT Equivalence Class 281,302
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-026]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (cg_redx_width of Cg_settings with index CG counter-1 of Page_settings , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
        COMMENT AND Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_EIGHT is equal to TRUE then,
        COMMENT Equivalence Class 281,304
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			

			VAR Error_msg_string[0],			init = "CG 0001 CG_REDX_FONT",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_REDX_TXT",				ev = init



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 427	
	
	
    TEST 428
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-013]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT The function shall loop from ZERO to cg_no_lim of Cg_settings with index CG counter-1 of Page_settings minus one,
        COMMENT If cg_lim_color with index counter j of Cg_settings with index CG counter-1 of Page_settings is not equal to ZERO AND 
        COMMENT function CheckColor with parameter cg_lim_color with index counter j of Cg_settings with index CG counter-1 of Page_settings returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_SIX is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIM_COLOR, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,299
        COMMENT
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init		
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 428	
	
	
    TEST 429
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-025]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT -Loop from counter j ZERO to cg_no_lim of Cg_settings with index CG counter-1 of Page_settings minus one,
        COMMENT If function CheckMinMax with parameter cg_lim_type with index counter j of Cg_settings with index CG counter-1 of Page_settings,TYPE_NORMAL and  TYPE_WARNING returns FALSE
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIM_TYPE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,300 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-014]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false 
        COMMENT OR function CheckAxisMinMax with parameters (u16_y of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index RD counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,302
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-026]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (cg_redx_width of Cg_settings with index CG counter-1 of Page_settings , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_EIGHT is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_REDX_WIDTH, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,304
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1],							init = 11000000,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1],							init = 16,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_LIN_RANGE",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_LIN_OFFSET",				ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)1
			STUB FontsGetFontHeight(352)1			
			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 429	
	
	
    TEST 430
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-013]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT The function shall loop from ZERO to cg_no_lim of Cg_settings with index CG counter-1 of Page_settings minus one,
        COMMENT If cg_lim_color with index counter j of Cg_settings with index CG counter-1 of Page_settings is not equal to ZERO AND 
        COMMENT function CheckColor with parameter cg_lim_color with index counter j of Cg_settings with index CG counter-1 of Page_settings returns FALSE 
        COMMENT AND Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_SIX is equal to TRUE then,
        COMMENT Equivalence Class 281,299
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-025]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT -Loop from counter j ZERO to cg_no_lim of Cg_settings with index CG counter-1 of Page_settings minus one,
        COMMENT If function CheckMinMax with parameter cg_lim_type with index counter j of Cg_settings with index CG counter-1 of Page_settings,TYPE_NORMAL and  TYPE_WARNING returns FALSE
        COMMENT  AND Pdi_error_count is greater than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 281,300 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-014]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false 
        COMMENT OR function CheckAxisMinMax with parameters (u16_y of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false
        COMMENT  AND Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index RD counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,.
        COMMENT Equivalence Class 281,302
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-026]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (cg_redx_width of Cg_settings with index CG counter-1 of Page_settings , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
        COMMENT AND Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_EIGHT is equal to TRUE then,
        COMMENT Equivalence Class 281,304
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1],							init = 11000000,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1],							init = 16,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(352)1
			STUB FontsGetFontHeight(352)1			
			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 430	
	
	
    TEST 431
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-013]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT The function shall loop from ZERO to cg_no_lim of Cg_settings with index CG counter-1 of Page_settings minus one,
        COMMENT If cg_lim_color with index counter j of Cg_settings with index CG counter-1 of Page_settings is not equal to ZERO AND 
        COMMENT function CheckColor with parameter cg_lim_color with index counter j of Cg_settings with index CG counter-1 of Page_settings returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_SIX is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIM_COLOR, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,299,306
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-025]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT -Loop from counter j ZERO to cg_no_lim of Cg_settings with index CG counter-1 of Page_settings minus one,
        COMMENT If function CheckMinMax with parameter cg_lim_type with index counter j of Cg_settings with index CG counter-1 of Page_settings,TYPE_NORMAL and  TYPE_WARNING returns FALSE
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIM_TYPE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,301,306 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-014]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false 
        COMMENT OR function CheckAxisMinMax with parameters (u16_y of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index RD counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,303,306
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-026]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (cg_redx_width of Cg_settings with index CG counter-1 of Page_settings , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_EIGHT is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_REDX_WIDTH, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,304,306
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-027]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (cg_redx_height of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_NINE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_REDX_HEIGHT, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,308
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-017]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of cg_redx_offset_axis of Cg_settings with index CG counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns false
        COMMENT  OR function CheckAxisMinMax2 with parameters (u16_y of cg_redx_offset_axis of Cg_settings with index CG counter-1 of Page_settings,-PANEL_WIDTH, -PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns false 
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,310
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-028]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, cg_redx_width of Cg_settings with index CG counter-1
        COMMENT  of Page_settings divided by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
        COMMENT CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO ,PANEL_HEIGHT minus cg_redx_width of Cg_settings with index
        COMMENT  CG counter-1 of Page_settings divided by two and PANEL_WIDTH minus cg_redx_width of Cg_settings with index CG counter-1 of Page_settings divided by two) returns FALSE AND
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,312
        COMMENT
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1],							init = 11000000,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1],							init = 16,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)1
			STUB FontsGetFontHeight(352)1			
			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 431	

	
    TEST 432
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-027]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (cg_redx_height of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_NINE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_REDX_HEIGHT, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,308
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-017]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of cg_redx_offset_axis of Cg_settings with index CG counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns false
        COMMENT  OR function CheckAxisMinMax2 with parameters (u16_y of cg_redx_offset_axis of Cg_settings with index CG counter-1 of Page_settings,-PANEL_WIDTH, -PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns false 
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,310
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-028]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, cg_redx_width of Cg_settings with index CG counter-1
        COMMENT  of Page_settings divided by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
        COMMENT CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO ,PANEL_HEIGHT minus cg_redx_width of Cg_settings with index
        COMMENT  CG counter-1 of Page_settings divided by two and PANEL_WIDTH minus cg_redx_width of Cg_settings with index CG counter-1 of Page_settings divided by two) returns FALSE AND
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,312 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0],						init = FG_POINTER_SHAPE12+1,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0],						init = COLOR_MAX,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0][0],						init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0][1],						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0][0],						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0][1],						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0],							init = MAX_LIN_ANGLE+1,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_PTR_SHAPE",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_PTR_COLOR",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_PTR_SCALE",				ev = init
			VAR Error_msg_string[3],			init = "CG 0001 CG_PTR_SCALE_OFFSET",		ev = init
			VAR Error_msg_string[4],			init = "CG 0001 CG_PTR_ROT",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 432	
	
	
    TEST 433
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-027]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (cg_redx_height of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE 
        COMMENT AND Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_NINE is equal to TRUE then,
        COMMENT Equivalence Class 281,306,308
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-017]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of cg_redx_offset_axis of Cg_settings with index CG counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns false
        COMMENT  OR function CheckAxisMinMax2 with parameters (u16_y of cg_redx_offset_axis of Cg_settings with index CG counter-1 of Page_settings,-PANEL_WIDTH, -PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns false 
        COMMENT  AND Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TEN is equal to TRUE then,
        COMMENT Equivalence Class 281,306,310
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-028]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, cg_redx_width of Cg_settings with index CG counter-1
        COMMENT  of Page_settings divided by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
        COMMENT CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO ,PANEL_HEIGHT minus cg_redx_width of Cg_settings with index
        COMMENT  CG counter-1 of Page_settings divided by two and PANEL_WIDTH minus cg_redx_width of Cg_settings with index CG counter-1 of Page_settings divided by two) returns FALSE AND
        COMMENT  Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT Equivalence Class 281,306,312 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0],						init = FG_POINTER_SHAPE12+1,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0],						init = COLOR_MAX,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0][0],						init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0][1],						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0][0],						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0][1],						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0],							init = MAX_LIN_ANGLE+1,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 433	
	
	
    TEST 434
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-027]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (cg_redx_height of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE 
        COMMENT AND Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_NINE is equal to TRUE then,
        COMMENT Equivalence Class 280,306,309
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-017]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of cg_redx_offset_axis of Cg_settings with index CG counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
        COMMENT  OR function CheckAxisMinMax2 with parameters (u16_y of cg_redx_offset_axis of Cg_settings with index CG counter-1 of Page_settings,-PANEL_WIDTH, -PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE 
        COMMENT  AND Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TEN is equal to TRUE then,
        COMMENT Equivalence Class 280,306,311
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-028]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, cg_redx_width of Cg_settings with index CG counter-1
        COMMENT  of Page_settings divided by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
        COMMENT CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO ,PANEL_HEIGHT minus cg_redx_width of Cg_settings with index
        COMMENT  CG counter-1 of Page_settings divided by two and PANEL_WIDTH minus cg_redx_width of Cg_settings with index CG counter-1 of Page_settings divided by two) returns TRUE AND
        COMMENT  Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT Equivalence Class 280,306,312
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-029]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_y of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, cg_redx_height of Cg_settings with index CG counter-1 
        COMMENT of Page_settings divided by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
        COMMENT CheckAxisMinMax with parameters (u16_y of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO ,PANEL_WIDTH minus cg_redx_height of Cg_settings with index
        COMMENT  CG counter-1 of Page_settings divided by two and PANEL_HEIGHT minus cg_redx_height of Cg_settings with index CG counter-1 of Page_settings divided by two) returns FALSE AND
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,312
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-030]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following
        COMMENT If function CheckFont with parameters (cg_redx_font of Cg_settings with index CG counter-1 of Page_settings) returns false AND Pdi_error_count is less than
        COMMENT  MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_ELEVEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string CG_REDX_FONT, and Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,314
        COMMENT
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-018]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following
        COMMENT If function CheckString with parameters (cg_redx_txt with index counter j of Cg_settings with index CG counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns false
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TWELVE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string CG_REDX_TXT, and Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,316
        COMMENT
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0],						init = FG_POINTER_SHAPE12+1,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0],						init = COLOR_MAX,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0][0],						init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0][1],						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0][0],						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0][1],						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0],							init = MAX_LIN_ANGLE+1,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 434	
	
	
    TEST 435
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-029]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_y of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, cg_redx_height of Cg_settings with index CG counter-1 
        COMMENT of Page_settings divided by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
        COMMENT CheckAxisMinMax with parameters (u16_y of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO ,PANEL_WIDTH minus cg_redx_height of Cg_settings with index
        COMMENT  CG counter-1 of Page_settings divided by two and PANEL_HEIGHT minus cg_redx_height of Cg_settings with index CG counter-1 of Page_settings divided by two) returns FALSE AND
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,312
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-030]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following
        COMMENT If function CheckFont with parameters (cg_redx_font of Cg_settings with index CG counter-1 of Page_settings) returns false AND Pdi_error_count is less than
        COMMENT  MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_ELEVEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string CG_REDX_FONT, and Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,314
        COMMENT
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-018]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following
        COMMENT If function CheckString with parameters (cg_redx_txt with index counter j of Cg_settings with index CG counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns false
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TWELVE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string CG_REDX_TXT, and Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,316
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0],						init = FG_POINTER_SHAPE12+1,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0],						init = COLOR_MAX,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0][1],						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0][1],						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0],							init = MAX_LIN_ANGLE+1,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_PTR_SHAPE",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_PTR_COLOR",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_PTR_SCALE",				ev = init
			VAR Error_msg_string[3],			init = "CG 0001 CG_PTR_SCALE_OFFSET",		ev = init
			VAR Error_msg_string[4],			init = "CG 0001 CG_PTR_ROT",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0xFFFF,							ev = 65535
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 435	
	
	
    TEST 436
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-029]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_y of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, cg_redx_height of Cg_settings with index CG counter-1 
        COMMENT of Page_settings divided by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
        COMMENT CheckAxisMinMax with parameters (u16_y of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO ,PANEL_WIDTH minus cg_redx_height of Cg_settings with index
        COMMENT  CG counter-1 of Page_settings divided by two and PANEL_HEIGHT minus cg_redx_height of Cg_settings with index CG counter-1 of Page_settings divided by two) returns FALSE AND
        COMMENT  Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT Equivalence Class 281,306,312
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-030]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following
        COMMENT If function CheckFont with parameters (cg_redx_font of Cg_settings with index CG counter-1 of Page_settings) returns false AND Pdi_error_count is greater than
        COMMENT  MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_ELEVEN is equal to TRUE then,
        COMMENT Equivalence Class 281,306,314
        COMMENT
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-018]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following
        COMMENT If function CheckString with parameters (cg_redx_txt with index counter j of Cg_settings with index CG counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns false
        COMMENT  AND Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TWELVE is equal to TRUE then,
        COMMENT Equivalence Class 281,306,316
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0],						init = FG_POINTER_SHAPE12+1,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0],						init = COLOR_MAX,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0][1],						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0][1],						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0],							init = MAX_LIN_ANGLE+1,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_PTR_SHAPE",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_PTR_COLOR",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_PTR_SCALE",				ev = init
			VAR Error_msg_string[3],			init = "CG 0001 CG_PTR_SCALE_OFFSET",		ev = init
			VAR Error_msg_string[4],			init = "CG 0001 CG_PTR_ROT",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 436	
	
	
    TEST 437
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-029]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_y of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, cg_redx_height of Cg_settings with index CG counter-1 
        COMMENT of Page_settings divided by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
        COMMENT CheckAxisMinMax with parameters (u16_y of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO ,PANEL_WIDTH minus cg_redx_height of Cg_settings with index
        COMMENT  CG counter-1 of Page_settings divided by two and PANEL_HEIGHT minus cg_redx_height of Cg_settings with index CG counter-1 of Page_settings divided by two) returns FALSE AND
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,312
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0],						init = FG_POINTER_SHAPE12+1,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0],						init = COLOR_MAX,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0][1],						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0][1],						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0],							init = MAX_LIN_ANGLE+1,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_PTR_SHAPE",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_PTR_COLOR",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_PTR_SCALE",				ev = init
			VAR Error_msg_string[3],			init = "CG 0001 CG_PTR_SCALE_OFFSET",		ev = init
			VAR Error_msg_string[4],			init = "CG 0001 CG_PTR_ROT",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 437	


    TEST 438
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-030]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following
        COMMENT If function CheckFont with parameters (cg_redx_font of Cg_settings with index CG counter-1 of Page_settings) returns false AND Pdi_error_count is less than
        COMMENT  MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_ELEVEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string CG_REDX_FONT, and Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,314
        COMMENT
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0],							init = MAX_LIM_VAL_TYPE+1,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0],								init = MAX_RANGE+1,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0],							init = COLOR_MAX,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0],								init = TYPE_WARNING+1,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_LIM_VAL",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_LIM_COLOR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 438
	
	
    TEST 439
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-029]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_y of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, cg_redx_height of Cg_settings with index CG counter-1 
        COMMENT of Page_settings divided by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
        COMMENT CheckAxisMinMax with parameters (u16_y of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO ,PANEL_WIDTH minus cg_redx_height of Cg_settings with index
        COMMENT  CG counter-1 of Page_settings divided by two and PANEL_HEIGHT minus cg_redx_height of Cg_settings with index CG counter-1 of Page_settings divided by two) returns FALSE AND
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,306,312
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0],							init = MAX_LIM_VAL_TYPE+1,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0],								init = MAX_RANGE+1,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0],							init = COLOR_MAX,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0],								init = TYPE_WARNING+1,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_LIM_VAL",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_LIM_COLOR",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_LIM_TYPE",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1	
			STUB CalculatePower(10,0)1		
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 439	
	
	
    TEST 440
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-028]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, cg_redx_width of Cg_settings with index CG counter-1
        COMMENT  of Page_settings divided by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
        COMMENT CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO ,PANEL_HEIGHT minus cg_redx_width of Cg_settings with index
        COMMENT  CG counter-1 of Page_settings divided by two and PANEL_WIDTH minus cg_redx_width of Cg_settings with index CG counter-1 of Page_settings divided by two) returns FALSE AND
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,312  
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0],							init = MAX_LIM_VAL_TYPE+1,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0],								init = MAX_RANGE+1,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0],							init = COLOR_MAX,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0],								init = TYPE_WARNING+1,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 440	
	
	
    TEST 441
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter cg_redx_txt of cg_settings with index CG counter-1 
        COMMENT of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and cg_redx_font of f cg_settings with 
        COMMENT index CG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and cg_redx_font of f cg_settings with index CG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "CG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 280,306,318
        COMMENT
        COMMENT
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0],								init = MAX_RANGE+1,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0],							init = COLOR_MAX,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0],								init = TYPE_WARNING+1,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_LIM_VAL",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_LIM_COLOR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 441	
	
    TEST 442
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is greater 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT Equivalence Class 281,306,318
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0],								init = MAX_RANGE+1,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0],							init = COLOR_MAX,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0],								init = TYPE_WARNING+1,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_LIM_VAL",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_LIM_COLOR",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_LIM_TYPE",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 442	
	
	
    TEST 443
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter cg_redx_txt of cg_settings with index CG counter-1 
        COMMENT of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and cg_redx_font of f cg_settings with 
        COMMENT index CG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and cg_redx_font of f cg_settings with index CG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "CG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 280,306,320
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0],								init = MAX_RANGE+1,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0],							init = COLOR_MAX,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0],								init = TYPE_WARNING+1,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 443	
	
	
    TEST 444
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter cg_redx_txt of cg_settings with index CG counter-1 
        COMMENT of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and cg_redx_font of f cg_settings with 
        COMMENT index CG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and cg_redx_font of f cg_settings with index CG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "CG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 280,306,320
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = 0,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			

			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(352)2
			STUB FontsGetFontHeight(352)0		
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 444	
	
	
    TEST 445
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT Equivalence Class 281,306,320
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = 0,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			

			VAR Error_msg_string[0],			init = "CG 0001 CG_REDX_OFFSET_AXIS",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)2
			STUB FontsGetFontHeight(352)0		
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 445	
	
	
	TEST 446
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter cg_redx_txt of cg_settings with index CG counter-1 
        COMMENT of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and cg_redx_font of f cg_settings with 
        COMMENT index CG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and cg_redx_font of f cg_settings with index CG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "CG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 280,306,322 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = 0,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			

			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(352)2
			STUB FontsGetFontHeight(352)0		
			
			STUB CalculatePower(10,0)1	
			STUB CalculatePower(10,0)1		
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 446
	
	
    TEST 447
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter cg_redx_txt of cg_settings with index CG counter-1 
        COMMENT of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and cg_redx_font of f cg_settings with 
        COMMENT index CG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and cg_redx_font of f cg_settings with index CG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "CG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 280,306,322 
        COMMENT  
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = 0,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = PANEL_HEIGHT,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			

			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)2		
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 447	
	
    TEST 448
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is greater 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT Equivalence Class 281,306,322 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = 0,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = PANEL_HEIGHT,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			

			VAR Error_msg_string[0],			init = "CG 0001 CG_REDX_OFFSET_AXIS",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)2		
			
			STUB CalculatePower(10,0)1	
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 448	
	
	
    TEST 449
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter cg_redx_txt of cg_settings with index CG counter-1 
        COMMENT of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and cg_redx_font of f cg_settings with 
        COMMENT index CG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and cg_redx_font of f cg_settings with index CG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "CG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 280,306,322 
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = 0,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = PANEL_HEIGHT,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			

			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)2		
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 449	
	
	
    TEST 450
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter cg_redx_txt of cg_settings with index CG counter-1 
        COMMENT of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and cg_redx_font of f cg_settings with 
        COMMENT index CG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and cg_redx_font of f cg_settings with index CG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "CG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 280,306,322 
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = 0,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			

			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)2		
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 450	
	
	
    TEST 451
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT Equivalence Class 281,306,322 
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = 0,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			

			VAR Error_msg_string[0],			init = "CG 0001 CG_REDX_OFFSET_AXIS",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)2		
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 451	
	
	
    TEST 452
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter cg_redx_txt of cg_settings with index CG counter-1 
        COMMENT of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and cg_redx_font of f cg_settings with 
        COMMENT index CG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and cg_redx_font of f cg_settings with index CG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "CG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 280,306,324
        COMMENT  
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = 0,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			

			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)2		
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 452	
	
	
    TEST 453
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter cg_redx_txt of cg_settings with index CG counter-1 
        COMMENT of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and cg_redx_font of f cg_settings with 
        COMMENT index CG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and cg_redx_font of f cg_settings with index CG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "CG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 280,306,319,321,323,325
        COMMENT 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-020]
        COMMENT The function shall loop from ZERO to Cg _cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt
        COMMENT 1.	Set Number box byte format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0xF000000.
        COMMENT 2.	Set Number box decimal format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0x1FC00.
        COMMENT 3.	Set Number box word format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0xFF.
        COMMENT 4.	If Number box byte format is not equal to NUM_ONEB AND  Number box byte format is not equal to NUM_TWOB AND Number box byte format is not equal to NUM_THREEB
        COMMENT             AND  Number box byte format is not equal to NUM_FOURB
        COMMENT             AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT a)	Call the function BuildErrorMsg with parameters string element, Label string, string CG_NB_FORMAT, Error_msg_string with array index Pdi_error_count.
        COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,326
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-021]
        COMMENT The function shall loop from ZERO to Cg _cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If cg_tracker with index CG counter minus one is equal to TRUE then,
        COMMENT If return value of function CheckDecimalFormat with parameter number box decimal format is FALSE And number box decimal format is not Zero AND Pdi_error_count is 
        COMMENT less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_NB_FORMAT, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,328 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = 0,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = PANEL_WIDTH+1,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT+1,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_NB_FORMAT",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "CG 0001 CG_NB_AXIS",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = FALSE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 453	
	
	
    TEST 454
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-020]
        COMMENT The function shall loop from ZERO to Cg _cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt
        COMMENT 1.	Set Number box byte format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0xF000000.
        COMMENT 2.	Set Number box decimal format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0x1FC00.
        COMMENT 3.	Set Number box word format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0xFF.
        COMMENT 4.	If Number box byte format is not equal to NUM_ONEB AND  Number box byte format is not equal to NUM_TWOB AND Number box byte format is not equal to NUM_THREEB
        COMMENT             AND  Number box byte format is not equal to NUM_FOURB
        COMMENT             AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT a)	Call the function BuildErrorMsg with parameters string element, Label string, string CG_NB_FORMAT, Error_msg_string with array index Pdi_error_count.
        COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,306,326
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-021]
        COMMENT The function shall loop from ZERO to Cg _cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If cg_tracker with index CG counter minus one is equal to TRUE then,
        COMMENT If return value of function CheckDecimalFormat with parameter number box decimal format is FALSE And number box decimal format is not Zero AND Pdi_error_count is 
        COMMENT less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_NB_FORMAT, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,306,328 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = 0,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = PANEL_WIDTH+1,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT+1,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = FALSE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 454	
	
	
    TEST 455
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-020]
        COMMENT The function shall loop from ZERO to Cg _cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt
        COMMENT 1.	Set Number box byte format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0xF000000.
        COMMENT 2.	Set Number box decimal format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0x1FC00.
        COMMENT 3.	Set Number box word format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0xFF.
        COMMENT 4.	If Number box byte format is not equal to NUM_ONEB AND  Number box byte format is not equal to NUM_TWOB AND Number box byte format is not equal to NUM_THREEB
        COMMENT             AND  Number box byte format is not equal to NUM_FOURB
        COMMENT             AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TWO is equal to FALSE then,
        COMMENT a)	Call the function BuildErrorMsg with parameters string element, Label string, string CG_NB_FORMAT, Error_msg_string with array index Pdi_error_count.
        COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,307,326
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-021]
        COMMENT The function shall loop from ZERO to Cg _cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If cg_tracker with index CG counter minus one is equal to TRUE then,
        COMMENT If return value of function CheckDecimalFormat with parameter number box decimal format is FALSE And number box decimal format is not Zero AND Pdi_error_count is 
        COMMENT less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TWO is equal to FALSE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_NB_FORMAT, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,307,328 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = 0,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = PANEL_WIDTH+1,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT+1,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = FALSE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 455	
	
	
    TEST 456
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-020]
        COMMENT The function shall loop from ZERO to Cg _cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt
        COMMENT 1.	Set Number box byte format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0xF000000.
        COMMENT 2.	Set Number box decimal format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0x1FC00.
        COMMENT 3.	Set Number box word format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0xFF.
        COMMENT 4.	If Number box byte format is not equal to NUM_ONEB AND  Number box byte format is not equal to NUM_TWOB AND Number box byte format is not equal to NUM_THREEB
        COMMENT             AND  Number box byte format is not equal to NUM_FOURB
        COMMENT             AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT a)	Call the function BuildErrorMsg with parameters string element, Label string, string CG_NB_FORMAT, Error_msg_string with array index Pdi_error_count.
        COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,306,327
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-021]
        COMMENT The function shall loop from ZERO to Cg _cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If cg_tracker with index CG counter minus one is equal to TRUE then,
        COMMENT If return value of function CheckDecimalFormat with parameter number box decimal format is FALSE And number box decimal format is not Zero AND Pdi_error_count is 
        COMMENT less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_NB_FORMAT, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,306,329
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-023]
        COMMENT The function shall loop from ZERO to Cg _cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If cg_tracker with index [CG counter minus one] [NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is 
        COMMENT less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_THREE is equal to TRUE then,
        COMMENT   1. Set eFont of Page_num_boxes with index NB counter-1 to E_NO_FONT
        COMMENT   2.Call the function BuildErrorMsg with parameters string element, Label string, string CG_NB_FONT, Error_msg_string with array index Pdi_error_count.
        COMMENT   3.Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,330
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-019]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_ONE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,332
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_ONEB,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT+1,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_NB_FORMAT",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_NB_AXIS",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = FALSE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 456	
	
	
    TEST 457
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-023]
        COMMENT The function shall loop from ZERO to Cg _cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If cg_tracker with index [CG counter minus one] [NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is 
        COMMENT greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_THREE is equal to TRUE then,
        COMMENT Equivalence Class 281,307,330
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-019]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_ONE is equal to TRUE then,
        COMMENT Equivalence Class 281,307,332
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_TWOB,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT+1,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NB_FORMAT",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_NB_FORMAT",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_NB_AXIS",				ev = init
			VAR Error_msg_string[3],			init = "CG 0001 CG_NB_AXIS",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = FALSE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 457	
	
	
    TEST 458
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-023]
        COMMENT The function shall loop from ZERO to Cg _cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If cg_tracker with index [CG counter minus one] [NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is 
        COMMENT greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_THREE is equal to TRUE then,
        COMMENT Equivalence Class 281,307,330
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-019]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_ONE is equal to TRUE then,
        COMMENT Equivalence Class 281,307,332
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_THREEB,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT+1,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = FALSE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 458	
	
	
    TEST 459
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-023]
        COMMENT The function shall loop from ZERO to Cg _cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If cg_tracker with index [CG counter minus one] [NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is 
        COMMENT greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_THREE is equal to TRUE then,
        COMMENT Equivalence Class 281,307,331
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-019]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_ONE is equal to TRUE then,
        COMMENT Equivalence Class 281,307,333
        COMMENT
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_FOURB,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT+1,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NB_FORMAT",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_NB_FORMAT",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_NB_AXIS",				ev = init
			VAR Error_msg_string[3],			init = "CG 0001 CG_NB_AXIS",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = FALSE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 459


    TEST 460
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-032]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter cg_nb_format of Cg_settings with index CG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And with one is equal to one. 
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus 
        COMMENT six and PANEL_WIDTH minus six) returns false OR CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings minus number box
        COMMENT  width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index
        COMMENT  NB counter-1 of Page_settings plus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis
        COMMENT  of Nb_settings with index NB counter-1 of Page_settings minus  number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than 
        COMMENT  MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_ONE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,334
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_ONED,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT+1,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_NO_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_NB_FORMAT",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "CG 0001 CG_NB_FONT",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 460	
	
	
    TEST 461
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-032]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus 
        COMMENT six and PANEL_WIDTH minus six) returns false OR CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings minus number box
        COMMENT  width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index
        COMMENT  NB counter-1 of Page_settings plus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis
        COMMENT  of Nb_settings with index NB counter-1 of Page_settings minus  number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is greater than 
        COMMENT  MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_ONE is equal to TRUE then,
        COMMENT Equivalence Class 281,306,334
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_ONED,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT+1,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_NO_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			

        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1				

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 461	
	
	
    TEST 462
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-032]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus 
        COMMENT six and PANEL_WIDTH minus six) returns false OR CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings minus number box
        COMMENT  width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index
        COMMENT  NB counter-1 of Page_settings plus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis
        COMMENT  of Nb_settings with index NB counter-1 of Page_settings minus  number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than 
        COMMENT  MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_ONE is equal to FALSE then,
        COMMENT Equivalence Class 280,307,334
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_ONED,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT+1,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_NO_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 462	
	
	
    TEST 463
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-032]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter cg_nb_format of Cg_settings with index CG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And with one is equal to one. 
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus 
        COMMENT six and PANEL_WIDTH minus six) returns false OR CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings minus number box
        COMMENT  width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index
        COMMENT  NB counter-1 of Page_settings plus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis
        COMMENT  of Nb_settings with index NB counter-1 of Page_settings minus  number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than 
        COMMENT  MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_ONE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,336 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_TWOW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 463	

    TEST 464
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-032]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter cg_nb_format of Cg_settings with index CG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And with one is equal to one. 
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus 
        COMMENT six and PANEL_WIDTH minus six) returns false OR CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings minus number box
        COMMENT  width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index
        COMMENT  NB counter-1 of Page_settings plus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis
        COMMENT  of Nb_settings with index NB counter-1 of Page_settings minus  number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than 
        COMMENT  MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_ONE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,334
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = 0,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = 0,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = PANEL_HEIGHT+1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_TWOW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_ORIEN",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0						
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 464	
	
	
    TEST 465
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter cg_redx_txt of cg_settings with index CG counter-1 
        COMMENT of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and cg_redx_font of f cg_settings with 
        COMMENT index CG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and cg_redx_font of f cg_settings with index CG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "CG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 281,306,318
        COMMENT
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
 			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = 0,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = 0,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = PANEL_HEIGHT+1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_TWOW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG  CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		
			
			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0					
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 465	
		
    TEST 466
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is FALSE then,
        COMMENT Equivalence Class 280,307,318
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = 0,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = 0,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = PANEL_HEIGHT+1,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_TWOW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_ORIEN",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		
			
			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 466	
		
    TEST 467
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter cg_redx_txt of cg_settings with index CG counter-1 
        COMMENT of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and cg_redx_font of f cg_settings with 
        COMMENT index CG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and cg_redx_font of f cg_settings with index CG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "CG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 280,306,320
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 50,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 50,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_TWOW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = PANEL_WIDTH+1,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 467	
	
	
    TEST 468
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-032]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus 
        COMMENT six and PANEL_WIDTH minus six) returns false OR CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings minus number box
        COMMENT  width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index
        COMMENT  NB counter-1 of Page_settings plus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis
        COMMENT  of Nb_settings with index NB counter-1 of Page_settings minus  number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is greater than 
        COMMENT  MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_ONE is equal to TRUE then,
        COMMENT Equivalence Class 281,306,334
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 50,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 50,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_TWOW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = PANEL_WIDTH+1,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG  CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 468	
	
	
    TEST 469
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-032]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus 
        COMMENT six and PANEL_WIDTH minus six) returns false OR CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings minus number box
        COMMENT  width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index
        COMMENT  NB counter-1 of Page_settings plus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis
        COMMENT  of Nb_settings with index NB counter-1 of Page_settings minus  number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than 
        COMMENT  MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_ONE is equal to FALSE then,
        COMMENT Equivalence Class 280,307,334
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 50,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 50,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_TWOW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = PANEL_WIDTH+1,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 469	
	
	
    TEST 470
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter cg_redx_txt of cg_settings with index CG counter-1 
        COMMENT of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and cg_redx_font of f cg_settings with 
        COMMENT index CG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and cg_redx_font of f cg_settings with index CG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "CG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 280,306,318
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 50,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 50,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_ONEW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)2
			STUB FontsGetFontHeight(353)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 470	
	
    TEST 471
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is greater 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT Equivalence Class 281,306,318 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 50,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 50,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_ONEW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG  CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)2
			STUB FontsGetFontHeight(353)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 471	
	
	
    TEST 472
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is FALSE then,
        COMMENT Equivalence Class 280,307,318
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 50,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 50,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_ONEW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)2
			STUB FontsGetFontHeight(353)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 472	
	
	
    TEST 473
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter cg_redx_txt of cg_settings with index CG counter-1 
        COMMENT of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and cg_redx_font of f cg_settings with 
        COMMENT index CG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and cg_redx_font of f cg_settings with index CG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "CG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 280,306,322 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 50,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 50,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_ONEW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT+1,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 473	
	
	
    TEST 474
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is greater 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT Equivalence Class 281,306,322
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 50,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 50,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_ONEW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT+1,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG  CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 474	
	
	
    TEST 475
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is FALSE then,
        COMMENT Equivalence Class 280,307,322
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 50,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 50,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_ONEW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT+1,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 475	
	
	
    TEST 476
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter cg_redx_txt of cg_settings with index CG counter-1 
        COMMENT of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and cg_redx_font of f cg_settings with 
        COMMENT index CG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and cg_redx_font of f cg_settings with index CG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "CG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 280,306,318
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 50,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 50,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_ONEW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = 0,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)2				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 476	
	
	
    TEST 477
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is greater 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT Equivalence Class 281,306,322
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 50,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 50,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_ONEW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = 0,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG  CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)2				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 477	
	
	
    TEST 478
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter cg_redx_txt of cg_settings with index CG counter-1 
        COMMENT of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and cg_redx_font of f cg_settings with 
        COMMENT index CG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and cg_redx_font of f cg_settings with index CG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "CG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 280,306,324
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 50,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 50,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_ONEW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = 0,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)2				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 478	
	
	
    TEST 479
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-031]
        COMMENT The function shall loop from ONE to Cg_cnt  and do the following, 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of 
        COMMENT cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings 
        COMMENT with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings
        COMMENT  with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is greater 
        COMMENT  than MAX_ERROR_MSG AND result of Cg_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TEN is true then,
        COMMENT Equivalence Class 281,306,324 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 50,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 50,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_ONEW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = 0,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 479	

		
    TEST 480
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-020]
        COMMENT The function shall loop from ZERO to Cg _cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt
        COMMENT 1.	Set Number box byte format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0xF000000.
        COMMENT 2.	Set Number box decimal format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0x1FC00.
        COMMENT 3.	Set Number box word format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0xFF.
        COMMENT 4.	If Number box byte format is not equal to NUM_ONEB AND  Number box byte format is not equal to NUM_TWOB AND Number box byte format is not equal to NUM_THREEB
        COMMENT             AND  Number box byte format is not equal to NUM_FOURB
        COMMENT             AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT a)	Call the function BuildErrorMsg with parameters string element, Label string, string CG_NB_FORMAT, Error_msg_string with array index Pdi_error_count.
        COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,306,326
        COMMENT
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_TWOW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NB_FORMAT",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_NB_FORMAT",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 480	
	
	
    TEST 481
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-002]
        COMMENT The function shall loop from ONE to Cg_cnt and do the following,
        COMMENT If function CheckMinMax with parameters (parameter cg_no_ptr ofCarrot graph of Cg_settings with index CG counter-1 of Page_settings, ONE and MAX_NO_PTR ) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string from Error message column of Table: Parameters Ranges and Error message 
        COMMENT for Carrot graph, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 281,306,338
        COMMENT
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = NUM_TWOW,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 481
	
    TEST 482
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-014]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false 
        COMMENT OR function CheckAxisMinMax with parameters (u16_y of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index RD counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,302
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 4,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = 0x3000,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_NO_LIM",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_REDX_AXIS",				ev = init
			VAR Error_msg_string[3],			init = "CG 0001 CG_REDX_AXIS_OFFSET",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 482
	
	
    TEST 483
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-014]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false 
        COMMENT OR function CheckAxisMinMax with parameters (u16_y of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false
        COMMENT  AND Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index RD counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT Equivalence Class 281,302
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 4,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = 0x3000,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 483


    TEST 484
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-014]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false 
        COMMENT OR function CheckAxisMinMax with parameters (u16_y of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index RD counter-1 bitwise AND with BIT_SEVEN is equal to FALSE then,
        COMMENT Equivalence Class 280,307,302
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 4,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = 0x3000,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 2,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0		

			STUB FontsGetStringWidth(0)0
			STUB FontsGetFontHeight(0)0			
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 484	
	
	
    TEST 485
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-020]
        COMMENT The function shall loop from ZERO to Cg _cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt
        COMMENT 1.	Set Number box byte format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0xF000000.
        COMMENT 2.	Set Number box decimal format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0x1FC00.
        COMMENT 3.	Set Number box word format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0xFF.
        COMMENT 4.	If Number box byte format is not equal to NUM_ONEB AND  Number box byte format is not equal to NUM_TWOB AND Number box byte format is not equal to NUM_THREEB
        COMMENT             AND  Number box byte format is not equal to NUM_FOURB
        COMMENT             AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT a)	Call the function BuildErrorMsg with parameters string element, Label string, string CG_NB_FORMAT, Error_msg_string with array index Pdi_error_count.
        COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,306,326
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = 2,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 4,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 2,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = 0x3000,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_NO_LIM",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "CG 0001 CG_NB_FORMAT_OFFSET",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 485	
	
	
    TEST 486
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-020]
        COMMENT The function shall loop from ZERO to Cg _cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt
        COMMENT 1.	Set Number box byte format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0xF000000.
        COMMENT 2.	Set Number box decimal format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0x1FC00.
        COMMENT 3.	Set Number box word format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0xFF.
        COMMENT 4.	If Number box byte format is not equal to NUM_ONEB AND  Number box byte format is not equal to NUM_TWOB AND Number box byte format is not equal to NUM_THREEB
        COMMENT             AND  Number box byte format is not equal to NUM_FOURB
        COMMENT             AND Pdi_error_count is greater than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT Equivalence Class 281,306,326
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = 2,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 4,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = 0x3000,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_LIM",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_REDX_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_REDX_AXIS",				ev = init
			VAR Error_msg_string[3],			init = "CG 0001 CG_NB_FORMAT",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 486	
	
	
    TEST 487
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-020]
        COMMENT The function shall loop from ZERO to Cg _cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt
        COMMENT 1.	Set Number box byte format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0xF000000.
        COMMENT 2.	Set Number box decimal format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0x1FC00.
        COMMENT 3.	Set Number box word format to cg_nb_format of Cg_settings with index CG counter-1 of Page_settings bitwise AND with 0xFF.
        COMMENT 4.	If Number box byte format is not equal to NUM_ONEB AND  Number box byte format is not equal to NUM_TWOB AND Number box byte format is not equal to NUM_THREEB
        COMMENT             AND  Number box byte format is not equal to NUM_FOURB
        COMMENT             AND Pdi_error_count is less than MAX_ERROR_MSG AND Cg_parameter_occurrence with index CG counter-1 bitwise AND with BIT_TWO is equal to FALSE then,
        COMMENT Equivalence Class 280,307,326
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = 2,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 4,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = 0x3000,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_PTR",				ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0				
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 487	
	
    TEST 488
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-011]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_VERTICAL OR cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_HORIZONTAL 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string CG_ORIEN, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,278
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-006]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT Loop from ONE to CG_no_lin of Cg_settingswith index CG counter-1 of Page_settings and do the below :
        COMMENT - Do below when cg_orien of Cg_settings with index CG counter-1 of Page_settings is equal to BG_VERTICAL 
        COMMENT If function CheckAxisMinMax with parameters (ABS (cg_lin_offset with index counter j of Cg_settings with index CG counter-1 of Page_settings by four plus u16_y of cg_axis
        COMMENT  of Cg_settings with index CG counter-1 of Page_settings)  , ZERO, PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIN_OFFSET, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,284
        COMMENT
        COMMENT
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_VERTICAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = 2,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 4,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init
			
			VAR Page_settings.Cg_settings[0].cg_nb_format,						init = 0x3000,					ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,						init = 0,							ev = init	
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,						init = PANEL_HEIGHT,				ev = init	
			VAR Page_settings.Nb_settings[0].nb_font,							init = E_LARGE_FONT,				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init				
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1..2],							init = 100,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1..2],							init = 4,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_NO_LIM",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_REDX_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "CG 0001 CG_REDX_AXIS",				ev = init
			VAR Error_msg_string[3],			init = "CG 0001 CG_NB_FORMAT",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Nb_tracker[0][0],			init = FALSE,							ev = init
			VAR Cg_tracker[0][0],			init = TRUE,							ev = init
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 2,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(352)0
			STUB FontsGetFontHeight(352)0		
			
			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0			

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0	

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0		
			
			STUB CalculatePower(10,0)1			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 488

    TEST 489
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-011]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_VERTICAL OR cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_HORIZONTAL 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string CG_ORIEN, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,278
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-006]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT Loop from ONE to CG_no_lin of Cg_settingswith index CG counter-1 of Page_settings and do the below :
        COMMENT - Do below when cg_orien of Cg_settings with index CG counter-1 of Page_settings is equal to BG_VERTICAL 
        COMMENT If function CheckAxisMinMax with parameters (ABS (cg_lin_offset with index counter j of Cg_settings with index CG counter-1 of Page_settings by four plus u16_y of cg_axis
        COMMENT  of Cg_settings with index CG counter-1 of Page_settings)  , ZERO, PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIN_OFFSET, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,284
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_HORIZONTAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1],							init = 11000000,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1],							init = 16,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			VAR Page_settings.Cg_settings[0].cg_nb_format,								init = NUM_ONEW,		ev = init			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_LIN_RANGE",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_LIN_OFFSET",				ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)1
			STUB FontsGetFontHeight(352)1			

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1
			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 489	
	

    TEST 490
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-011]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_VERTICAL OR cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_HORIZONTAL 
        COMMENT AND Pdi_error_count is greater than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 281,278
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-006]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT Loop from ONE to CG_no_lin of Cg_settingswith index CG counter-1 of Page_settings and do the below :
        COMMENT - Do below when cg_orien of Cg_settings with index CG counter-1 of Page_settings is equal to BG_VERTICAL 
        COMMENT If function CheckAxisMinMax with parameters (ABS (cg_lin_offset with index counter j of Cg_settings with index CG counter-1 of Page_settings by four plus u16_y of cg_axis
        COMMENT  of Cg_settings with index CG counter-1 of Page_settings)  , ZERO, PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is greater than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 281,284
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_HORIZONTAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1],							init = 11000000,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1],							init = 16,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			VAR Page_settings.Cg_settings[0].cg_nb_format,								init = NUM_ONEW,		ev = init			

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)1
			STUB FontsGetFontHeight(352)1			

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1
			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 490
	
    TEST 491
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-005]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT - Set decimal extract to u16Format of Carrot graph with index CG counter-1 right shift by FOUR bitwise and SEVEN
        COMMENT - The function loop from ONE to cg_no_lin of Cg_settings with index CG counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (cg_lin_range with index counter j of Cg_settings with index CG counter-1 of Page_settings divided by ( product of ONE_HUNDRED and CalculatePower
        COMMENT  with parameter ONE and decimal extract)  , MIN_LIN_RANGE and MAX_LIN_RANGE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIN_RANGE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,282
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_HORIZONTAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\0' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1],							init = 11000000,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1],							init = 0,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			VAR Page_settings.Cg_settings[0].cg_nb_format,								init = NUM_ONEW,		ev = init			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_LIN_RANGE",				ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)1
			STUB FontsGetFontHeight(352)1			

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1
			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 491	

	
    TEST 492
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
		COMMENT [hdudispfpdicheck-CheckVerPos-DB-LLR-001]
        COMMENT - M_FP_COMPARE is greater than difference of pos and ZERO AND M_FP_COMPARE is greater than difference of ZERO and pos.
        COMMENT Equivalence Class 608
        COMMENT
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR A429_cfg_data[0].A429_label,			init = 1,						ev = init	
			VAR Ap_page0_dials[0].u16Format,			init = 0,						ev = init	
			
			
			--VAR Page_settings.Rd_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Rd_settings[0].assc_labels[0..4],					init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lin,							init = 2,								ev = init		
			
			VAR Page_settings.Rd_settings[0].rd_no_ptr,							init = 2,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_length,							init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern,							init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern_pos,						init = ZERO,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lim,							init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Rd_settings[0].rd_lin_range[1..2],						init = MAX_LIN_RANGE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_lin_angle[1..2],						init = MAX_LIN_ANGLE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_shape[0..1],						init = FG_POINTER_SHAPE12,		ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_color[0..1],						init = COLOR_BLACK,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][1],						init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][0],				init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][1],				init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_rot[0..1],							init = MAX_LIN_ANGLE,				ev = init			

				
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Rd_parameter_occurrence[0],			init = 0,							ev = init

			VAR Rd_cnt,			init = 1,							ev = init

			VAR Caslocationset_parameters,			init = FALSE,							ev = init
			VAR Text_cnt,		init = 0,							ev = init						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1	
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1

			STUB StrLen(Page_settings.Rd_settings[0].rd_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 492
	
	
    TEST 493
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckVerPos-DB-LLR-001]
        COMMENT - - M_FP_COMPARE is greater than difference of pos and ONE AND M_FP_COMPARE is greater than difference of ONE and pos.
        COMMENT Equivalence Class 609
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR A429_cfg_data[0].A429_label,			init = 1,						ev = init	
			VAR Ap_page0_dials[0].u16Format,			init = 0,						ev = init	
			
			
			--VAR Page_settings.Rd_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Rd_settings[0].assc_labels[0..4],					init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lin,							init = 2,								ev = init		
			
			VAR Page_settings.Rd_settings[0].rd_no_ptr,							init = 2,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_length,							init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern,							init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern_pos,						init = ONE,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lim,							init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Rd_settings[0].rd_lin_range[1..2],						init = MAX_LIN_RANGE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_lin_angle[1..2],						init = MAX_LIN_ANGLE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_shape[0..1],						init = FG_POINTER_SHAPE12,		ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_color[0..1],						init = COLOR_BLACK,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][1],						init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][0],				init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][1],				init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_rot[0..1],							init = MAX_LIN_ANGLE,				ev = init			

				
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Rd_parameter_occurrence[0],			init = 0,							ev = init

			VAR Rd_cnt,			init = 1,							ev = init

			VAR Caslocationset_parameters,			init = FALSE,							ev = init
			VAR Text_cnt,		init = 0,							ev = init						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1	
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1

			STUB StrLen(Page_settings.Rd_settings[0].rd_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 493


    TEST 494
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckVerPos-DB-LLR-001]
        COMMENT - M_FP_COMPARE is greater than difference of pos and TEN AND M_FP_COMPARE is greater than difference of TEN and pos.
        COMMENT Equivalence Class 610
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR A429_cfg_data[0].A429_label,			init = 1,						ev = init	
			VAR Ap_page0_dials[0].u16Format,			init = 0,						ev = init	
			
			
			--VAR Page_settings.Rd_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Rd_settings[0].assc_labels[0..4],					init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lin,							init = 2,								ev = init		
			
			VAR Page_settings.Rd_settings[0].rd_no_ptr,							init = 2,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_length,							init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern,							init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern_pos,						init = TEN,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lim,							init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Rd_settings[0].rd_lin_range[1..2],						init = MAX_LIN_RANGE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_lin_angle[1..2],						init = MAX_LIN_ANGLE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_shape[0..1],						init = FG_POINTER_SHAPE12,		ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_color[0..1],						init = COLOR_BLACK,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][1],						init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][0],				init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][1],				init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_rot[0..1],							init = MAX_LIN_ANGLE,				ev = init			

				
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Rd_parameter_occurrence[0],			init = 0,							ev = init

			VAR Rd_cnt,			init = 1,							ev = init

			VAR Caslocationset_parameters,			init = FALSE,							ev = init
			VAR Text_cnt,		init = 0,							ev = init						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1	
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1

			STUB StrLen(Page_settings.Rd_settings[0].rd_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 494	
	
	
    TEST 495
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckVerPos-DB-LLR-001]
        COMMENT - M_FP_COMPARE is greater than difference of pos and ONE_HUNDRED AND M_FP_COMPARE is greater than difference of ONE_HUNDRED and pos.
        COMMENT Equivalence Class 611
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR A429_cfg_data[0].A429_label,			init = 1,						ev = init	
			VAR Ap_page0_dials[0].u16Format,			init = 0,						ev = init	
			
			
			--VAR Page_settings.Rd_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Rd_settings[0].assc_labels[0..4],					init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lin,							init = 2,								ev = init		
			
			VAR Page_settings.Rd_settings[0].rd_no_ptr,							init = 2,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_length,							init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern,							init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern_pos,						init = ONE_HUNDRED,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lim,							init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Rd_settings[0].rd_lin_range[1..2],						init = MAX_LIN_RANGE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_lin_angle[1..2],						init = MAX_LIN_ANGLE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_shape[0..1],						init = FG_POINTER_SHAPE12,		ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_color[0..1],						init = COLOR_BLACK,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][1],						init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][0],				init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][1],				init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_rot[0..1],							init = MAX_LIN_ANGLE,				ev = init			

				
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Rd_parameter_occurrence[0],			init = 0,							ev = init

			VAR Rd_cnt,			init = 1,							ev = init

			VAR Caslocationset_parameters,			init = FALSE,							ev = init
			VAR Text_cnt,		init = 0,							ev = init						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1	
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1

			STUB StrLen(Page_settings.Rd_settings[0].rd_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 495	
	
	
    TEST 496
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT
		COMMENT [hdudispfpdicheck-CheckVerPos-DB-LLR-001]
        COMMENT -M_FP_COMPARE is greater than difference of pos and 0.1f AND M_FP_COMPARE is greater than difference of 0.1f and pos.
        COMMENT Equivalence Class 612
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR A429_cfg_data[0].A429_label,			init = 1,						ev = init	
			VAR Ap_page0_dials[0].u16Format,			init = 0,						ev = init	
			
			
			--VAR Page_settings.Rd_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Rd_settings[0].assc_labels[0..4],					init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lin,							init = 2,								ev = init		
			
			VAR Page_settings.Rd_settings[0].rd_no_ptr,							init = 2,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_length,							init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern,							init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern_pos,						init = 0.1,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lim,							init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Rd_settings[0].rd_lin_range[1..2],						init = MAX_LIN_RANGE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_lin_angle[1..2],						init = MAX_LIN_ANGLE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_shape[0..1],						init = FG_POINTER_SHAPE12,		ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_color[0..1],						init = COLOR_BLACK,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][1],						init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][0],				init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][1],				init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_rot[0..1],							init = MAX_LIN_ANGLE,				ev = init			

				
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Rd_parameter_occurrence[0],			init = 0,							ev = init

			VAR Rd_cnt,			init = 1,							ev = init

			VAR Caslocationset_parameters,			init = FALSE,							ev = init
			VAR Text_cnt,		init = 0,							ev = init						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1	
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1

			STUB StrLen(Page_settings.Rd_settings[0].rd_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 496	
	
	
    TEST 497
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckVerPos-DB-LLR-001]
        COMMENT - M_FP_COMPARE is greater than difference of pos and 0.01f AND M_FP_COMPARE is greater than difference of 0.01f and pos.
        COMMENT Equivalence Class 613
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR A429_cfg_data[0].A429_label,			init = 1,						ev = init	
			VAR Ap_page0_dials[0].u16Format,			init = 0,						ev = init	
			
			
			--VAR Page_settings.Rd_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Rd_settings[0].assc_labels[0..4],					init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lin,							init = 2,								ev = init		
			
			VAR Page_settings.Rd_settings[0].rd_no_ptr,							init = 2,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_length,							init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern,							init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern_pos,						init = 0.01,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lim,							init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Rd_settings[0].rd_lin_range[1..2],						init = MAX_LIN_RANGE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_lin_angle[1..2],						init = MAX_LIN_ANGLE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_shape[0..1],						init = FG_POINTER_SHAPE12,		ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_color[0..1],						init = COLOR_BLACK,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][1],						init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][0],				init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][1],				init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_rot[0..1],							init = MAX_LIN_ANGLE,				ev = init			

				
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Rd_parameter_occurrence[0],			init = 0,							ev = init

			VAR Rd_cnt,			init = 1,							ev = init

			VAR Caslocationset_parameters,			init = FALSE,							ev = init
			VAR Text_cnt,		init = 0,							ev = init						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1	
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1

			STUB StrLen(Page_settings.Rd_settings[0].rd_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 497	
	
	
    TEST 498
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckVerPos-DB-LLR-001]
        COMMENT - M_FP_COMPARE is greater than difference of pos and 0.01f AND M_FP_COMPARE is greater than difference of 0.01f and pos.
        COMMENT Equivalence Class 614
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR A429_cfg_data[0].A429_label,			init = 1,						ev = init	
			VAR Ap_page0_dials[0].u16Format,			init = 0,						ev = init	
			
			
			--VAR Page_settings.Rd_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Rd_settings[0].assc_labels[0..4],					init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lin,							init = 2,								ev = init		
			
			VAR Page_settings.Rd_settings[0].rd_no_ptr,							init = 2,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_length,							init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern,							init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern_pos,						init = 101,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lim,							init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Rd_settings[0].rd_lin_range[1..2],						init = MAX_LIN_RANGE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_lin_angle[1..2],						init = MAX_LIN_ANGLE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_shape[0..1],						init = FG_POINTER_SHAPE12,		ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_color[0..1],						init = COLOR_BLACK,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][1],						init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][0],				init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][1],				init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_rot[0..1],							init = MAX_LIN_ANGLE,				ev = init			

				
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Rd_parameter_occurrence[0],			init = 0,							ev = init

			VAR Rd_cnt,			init = 1,							ev = init

			VAR Caslocationset_parameters,			init = FALSE,							ev = init
			VAR Text_cnt,		init = 0,							ev = init						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1	
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1

			STUB StrLen(Page_settings.Rd_settings[0].rd_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 498


    TEST 499
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT
        COMMENT [ hdudispfpdicheck-CheckVerPos-DB-LLR-002]
        COMMENT The function shall return FALSE if pos is other than ZERO or ONE or TEN or ONE_HUNDRED or 0.1f or 0.01f.
        COMMENT Equivalence Class 615
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR A429_cfg_data[0].A429_label,			init = 1,						ev = init	
			VAR Ap_page0_dials[0].u16Format,			init = 0,						ev = init	
			
			
			--VAR Page_settings.Rd_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Rd_settings[0].assc_labels[0..4],					init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lin,							init = 2,								ev = init		
			
			VAR Page_settings.Rd_settings[0].rd_no_ptr,							init = 2,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_length,							init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern,							init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern_pos,						init = -10,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lim,							init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_txt,						init = { others => 'A' },				ev = init	
			
			VAR Page_settings.Rd_settings[0].rd_lin_range[1..2],						init = MAX_LIN_RANGE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_lin_angle[1..2],						init = MAX_LIN_ANGLE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_shape[0..1],						init = FG_POINTER_SHAPE12,		ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_color[0..1],						init = COLOR_BLACK,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][1],						init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][0],				init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][1],				init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_rot[0..1],							init = MAX_LIN_ANGLE,				ev = init			

				
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Rd_parameter_occurrence[0],			init = 0,							ev = init

			VAR Rd_cnt,			init = 1,							ev = init

			VAR Caslocationset_parameters,			init = FALSE,							ev = init
			VAR Text_cnt,		init = 0,							ev = init						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1	
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1

			STUB StrLen(Page_settings.Rd_settings[0].rd_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 499		
	
	
	TEST 500
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 1,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0x3000,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						


			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NB_FORMAT",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 500	
	
	TEST 501
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 1,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[1].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0x3000,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						


			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NB_FORMAT",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 2,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1	

			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		
	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			STUB StrLen(Page_settings.Bg_settings[1].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 501	
	
	TEST 502
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 1,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0x3000,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						


			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NB_FORMAT",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		
	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 502	
	
	
	TEST 503
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = PANEL_HEIGHT+1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 10,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0x3000,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 6
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 8064
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 503	
	
	TEST 504
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = PANEL_HEIGHT+1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 10,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0x3000,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						


			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NB_FORMAT",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = 6
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 8064
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 504	
	
	
	TEST 505
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = PANEL_HEIGHT+1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 10,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0x3000,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 505	
	
	TEST 506
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 10,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 1,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_VERTICAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0x3000,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 6
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 8064
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 506	
	
	TEST 507
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0x3000,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 6
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 8064
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 507	
	
	TEST 508
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						


			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NB_FORMAT",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 6,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 8064
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 2,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 508	
	
	
	TEST 509
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0x3000,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 6
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 8064
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 509	
	
	
	TEST 510
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0x3000,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						


			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NB_FORMAT",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 510	
	
	
	TEST 511
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 10,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 1,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_VERTICAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0x3000,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						


			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NB_FORMAT",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = 6
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 8064
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 511	
	
	TEST 512
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 10,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 1,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_VERTICAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0x3000,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 512		
	
	
	TEST 513
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0x3000,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = 6
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 8064
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 513	
	
	TEST 514
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0x3000,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						


			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NB_FORMAT",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 514	
	
	
	TEST 515
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-019]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT Equivalence Class 342,360,401
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 100,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 100,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_TWOW,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						


			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NB_AXIS",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)2
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 515	
	
	
	TEST 516
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-019]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT Equivalence Class 342,360,401
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 100,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 100,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_TWOW,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)2
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 516	
	
	TEST 517
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-019]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT Equivalence Class 342,360,401
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 100,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 100,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_TWOW,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)2
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 517	
	
	
	TEST 518
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-019]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT Equivalence Class 342,360,401
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 100,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 100,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_TWOW,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = PANEL_HEIGHT,		ev = init			
			
																																																						


			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NB_AXIS",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)10
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 518	
	
	TEST 519
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-019]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT Equivalence Class 342,360,401
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 100,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 100,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_TWOW,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = PANEL_HEIGHT,		ev = init			
			
																																																						

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)10
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 519	
	
	TEST 520
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-019]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT Equivalence Class 342,360,401
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 100,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 100,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_TWOW,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = PANEL_HEIGHT,		ev = init			
			
																																																						


			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NB_AXIS",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)10
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 520	
	
	TEST 521
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-019]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT Equivalence Class 342,360,401
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 100,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 100,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_TWOW,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						


			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NB_AXIS",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)10
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 521	
	
	TEST 522
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-019]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT Equivalence Class 342,360,401
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 100,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 100,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_TWOW,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)10
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 522	
	
	TEST 523
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-019]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT Equivalence Class 342,360,401
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 100,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 100,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 2,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_TWOW,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)10
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 523	
	
	TEST 524
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-019]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT Equivalence Class 342,360,401
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 100,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 100,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 2,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_TWOW,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 150,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)10
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 524	
	
	TEST 525
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-019]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT Equivalence Class 342,360,401
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 100,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 100,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 2,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_FOURW,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 525	
	
	TEST 526
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-019]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT Equivalence Class 342,360,401
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 100,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 100,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 2,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_ONEW,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)0
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 526	
	
	
	TEST 527
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-PdiDataCheck-DB-LLR-004]
        COMMENT The function shall do the following when Global_check is TRUE and Page_check of index Page_num is TRUE.
        COMMENT 1.Loop from Rd counter ONE till less than equal to Rd_cnt and do below 
        COMMENT  - Loop from counter  zero to rd_no_ptr of Rd_settings with index Rd counter minus one of Page_settings : Set rotAngle with index counter of  
        COMMENT  Ap_page0_dials with index Rd counter minus one to CVT of rd_no_ptr with index counter  of Rd_settings with index Rd counter minus one of Page_settings.
        COMMENT 2.Loop from Cg counter ONE till less than equal to Cg_cnt and do below 
        COMMENT  - Loop from counter  zero to cg_no_ptr of Cg_settings with index Cg counter minus one of Page_settings :Set rotAngle with index counter of  
        COMMENT  Ap_page2_carrot with index Cg counter minus one to CVT of cg_no_ptr with index counter  of Cg_settings with index Cg counter minus one of Page_settings
        COMMENT Equivalence Class 583,585
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		
		
			VAR Page_settings.Rd_settings[0].rd_no_ptr,					init = 1,							ev = init
			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,					init = 1,							ev = init			
																																																						

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = TRUE,					ev = init	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 1,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 527	
	
	
	TEST 528
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-PdiDataCheck-DB-LLR-004]
        COMMENT The function shall do the following when Global_check is TRUE and Page_check of index Page_num is TRUE.
        COMMENT 1.Loop from Rd counter ONE till less than equal to Rd_cnt and do below 
        COMMENT  - Loop from counter  zero to rd_no_ptr of Rd_settings with index Rd counter minus one of Page_settings : Set rotAngle with index counter of  
        COMMENT  Ap_page0_dials with index Rd counter minus one to CVT of rd_no_ptr with index counter  of Rd_settings with index Rd counter minus one of Page_settings.
        COMMENT 2.Loop from Cg counter ONE till less than equal to Cg_cnt and do below 
        COMMENT  - Loop from counter  zero to cg_no_ptr of Cg_settings with index Cg counter minus one of Page_settings :Set rotAngle with index counter of  
        COMMENT  Ap_page2_carrot with index Cg counter minus one to CVT of cg_no_ptr with index counter  of Cg_settings with index Cg counter minus one of Page_settings
        COMMENT Equivalence Class 583,585
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		
		
			VAR Page_settings.Rd_settings[0].rd_no_ptr,					init = 2,							ev = init
			VAR Page_settings.Rd_settings[1].rd_no_ptr,					init = 2,							ev = init
			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,					init = 2,							ev = init			
			VAR Page_settings.Cg_settings[1].cg_no_ptr,					init = 2,							ev = init			
																																																						

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = TRUE,					ev = init	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 2,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 2,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 528	
	
	TEST 529
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-PdiDataCheck-DB-LLR-004]
        COMMENT The function shall do the following when Global_check is TRUE and Page_check of index Page_num is TRUE.
        COMMENT 1.Loop from Rd counter ONE till less than equal to Rd_cnt and do below 
        COMMENT  - Loop from counter  zero to rd_no_ptr of Rd_settings with index Rd counter minus one of Page_settings : Set rotAngle with index counter of  
        COMMENT  Ap_page0_dials with index Rd counter minus one to CVT of rd_no_ptr with index counter  of Rd_settings with index Rd counter minus one of Page_settings.
        COMMENT 2.Loop from Cg counter ONE till less than equal to Cg_cnt and do below 
        COMMENT  - Loop from counter  zero to cg_no_ptr of Cg_settings with index Cg counter minus one of Page_settings :Set rotAngle with index counter of  
        COMMENT  Ap_page2_carrot with index Cg counter minus one to CVT of cg_no_ptr with index counter  of Cg_settings with index Cg counter minus one of Page_settings
        COMMENT Equivalence Class 583,585
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		
		
			VAR Page_settings.Rd_settings[0].rd_no_ptr,					init = 0,							ev = init
			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,					init = 0,							ev = init			
																																																						

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = TRUE,					ev = init	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 1,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 529	
	
	TEST 530
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-PdiDataCheck-DB-LLR-004]
        COMMENT The function shall do the following when Global_check is TRUE and Page_check of index Page_num is TRUE.
        COMMENT 1.Loop from Rd counter ONE till less than equal to Rd_cnt and do below 
        COMMENT  - Loop from counter  zero to rd_no_ptr of Rd_settings with index Rd counter minus one of Page_settings : Set rotAngle with index counter of  
        COMMENT  Ap_page0_dials with index Rd counter minus one to CVT of rd_no_ptr with index counter  of Rd_settings with index Rd counter minus one of Page_settings.
        COMMENT 2.Loop from Cg counter ONE till less than equal to Cg_cnt and do below 
        COMMENT  - Loop from counter  zero to cg_no_ptr of Cg_settings with index Cg counter minus one of Page_settings :Set rotAngle with index counter of  
        COMMENT  Ap_page2_carrot with index Cg counter minus one to CVT of cg_no_ptr with index counter  of Cg_settings with index Cg counter minus one of Page_settings
        COMMENT Equivalence Class 583,585
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		
		
			VAR Page_settings.Rd_settings[0].rd_no_ptr,					init = 1,							ev = init
			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,					init = 1,							ev = init			
																																																						

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = TRUE,					ev = init	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 530	
	
	
	
    TEST 531
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is less than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "BG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 342,374
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-011]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_NINE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,382
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 2,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\r' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 100,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],								init = TYPE_WARNING,			ev = init			
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",			ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",			ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_REDX_OFFSET_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_REDX_AXIS",					ev = init
			VAR Error_msg_string[4],			init = "BG 0001 BG_REDX_AXIS",					ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 531	
	
    TEST 532
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is less than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "BG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 342,374
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-011]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_NINE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,382
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 2,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\r' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 100,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],								init = TYPE_WARNING,			ev = init			
			
			

        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 532	
	
	
    TEST 533
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is less than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "BG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 342,374
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-011]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_NINE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,382
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 2,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\r' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 100,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],								init = TYPE_WARNING,			ev = init			
			

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 533	
	
    TEST 534
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-011]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_VERTICAL OR cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_HORIZONTAL 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string CG_ORIEN, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,278
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-006]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT Loop from ONE to CG_no_lin of Cg_settingswith index CG counter-1 of Page_settings and do the below :
        COMMENT - Do below when cg_orien of Cg_settings with index CG counter-1 of Page_settings is equal to BG_VERTICAL 
        COMMENT If function CheckAxisMinMax with parameters (ABS (cg_lin_offset with index counter j of Cg_settings with index CG counter-1 of Page_settings by four plus u16_y of cg_axis
        COMMENT  of Cg_settings with index CG counter-1 of Page_settings)  , ZERO, PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIN_OFFSET, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,284
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_HORIZONTAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\r' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1],							init = 11000000,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1],							init = 16,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			VAR Page_settings.Cg_settings[0].cg_nb_format,								init = NUM_ONEW,		ev = init			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_LIN_RANGE",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_LIN_OFFSET",				ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)1
			STUB FontsGetFontHeight(352)1			

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1
			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 535	
	
    TEST 536
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-011]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_VERTICAL OR cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_HORIZONTAL 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string CG_ORIEN, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,278
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-006]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT Loop from ONE to CG_no_lin of Cg_settingswith index CG counter-1 of Page_settings and do the below :
        COMMENT - Do below when cg_orien of Cg_settings with index CG counter-1 of Page_settings is equal to BG_VERTICAL 
        COMMENT If function CheckAxisMinMax with parameters (ABS (cg_lin_offset with index counter j of Cg_settings with index CG counter-1 of Page_settings by four plus u16_y of cg_axis
        COMMENT  of Cg_settings with index CG counter-1 of Page_settings)  , ZERO, PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIN_OFFSET, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,284
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_HORIZONTAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\r' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1],							init = 11000000,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1],							init = 16,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			VAR Page_settings.Cg_settings[0].cg_nb_format,								init = NUM_ONEW,		ev = init			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_LIN_RANGE",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_LIN_OFFSET",				ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Cg_parameter_occurrence[0],			init = 0xFFFF,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)1
			STUB FontsGetFontHeight(352)1			

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1
			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 536	
	
    TEST 537
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-011]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT If cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_VERTICAL OR cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_HORIZONTAL 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string CG_ORIEN, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,278
        COMMENT
        COMMENT [hdudispfpdicheck-CheckCarrotGraph-DB-LLR-006]
        COMMENT The function shall loop from ZERO to Cg_cnt and do the following,
        COMMENT Loop from ONE to CG_no_lin of Cg_settingswith index CG counter-1 of Page_settings and do the below :
        COMMENT - Do below when cg_orien of Cg_settings with index CG counter-1 of Page_settings is equal to BG_VERTICAL 
        COMMENT If function CheckAxisMinMax with parameters (ABS (cg_lin_offset with index counter j of Cg_settings with index CG counter-1 of Page_settings by four plus u16_y of cg_axis
        COMMENT  of Cg_settings with index CG counter-1 of Page_settings)  , ZERO, PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string CG_LIN_OFFSET, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 280,284
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			VAR Ap_page2_carrot[0].u16Format,			init = 8,						ev = init	

			
			VAR Page_settings.Cg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Cg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Cg_settings[0].cg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_no_ptr,						init = 0,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_orien,						init = BG_HORIZONTAL,								ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_no_lim,						init = MAX_NO_LIM,											ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_width,						init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_height,					init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_offset_axis.u16_y,			init = 0,								ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_font,						init = E_NORMAL_FONT,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_redx_txt,						init = { others => '\r' },				ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_ptr_shape[0..4],						init = FG_POINTER_SHAPE12,				ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_color[0..4],						init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][0],						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale[0..4][1],						init = PANEL_HEIGHT,					ev = init	
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_scale_offset[0..4][1],						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_ptr_rot[0..4],							init = MAX_LIN_ANGLE,					ev = init
			
			VAR Page_settings.Cg_settings[0].cg_lin_range[1],							init = 11000000,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lin_offset[1],							init = 16,					ev = init	
			
			VAR Page_settings.Cg_settings[0].cg_lim_val_type[0..9],							init = MAX_LIM_VAL_TYPE,	ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_val[0..9],								init = MAX_RANGE,			ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_color[0..9],							init = 0,					ev = init			
			VAR Page_settings.Cg_settings[0].cg_lim_type[0..9],								init = TYPE_WARNING,		ev = init			
			VAR Page_settings.Cg_settings[0].cg_nb_format,								init = NUM_ONEW,		ev = init			
			


			VAR Error_msg_string[0],			init = "CG 0001 CG_LIN_RANGE",				ev = init
			VAR Error_msg_string[1],			init = "CG 0001 CG_LIN_OFFSET",				ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Cg_parameter_occurrence[0],			init = 0,					ev = init

			VAR Cg_cnt,			init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(352)1
			STUB FontsGetFontHeight(352)1			

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1
			
			STUB CalculatePower(10,0)1			
	
			STUB StrLen(Page_settings.Cg_settings[0].cg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 537	
	
    TEST 538
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-025]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings 
		COMMENT with index TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of 
		COMMENT Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two and 
		COMMENT PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is greater than MAX_ERROR_MSG 
		COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 75,108,121
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-026]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_height of Tb_settings with 
		COMMENT index TB counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings,0,PANEL_WIDTH minus tb_redx_height of Tb_settings with index TB counter-1 of Page_settings by two and PANEL_HEIGHT minus tb_redx_height of Tb_settings
		COMMENT with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is greater than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1
		COMMENT bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 75,108,125
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_YELLOW,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_ORANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init	
			VAR Page_settings.Tb_settings[0].tb_cross_val_type,			init = 1,						ev = init				
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_WHITE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_NORMAL,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_ON,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_DARK_YELLOW,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,							ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,							ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,							ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_LARGE_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\r' },				ev = init			
																																																							

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 538	
	
	
    TEST 539
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-025]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings 
		COMMENT with index TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of 
		COMMENT Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two and 
		COMMENT PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is greater than MAX_ERROR_MSG 
		COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 75,108,121
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-026]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_height of Tb_settings with 
		COMMENT index TB counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings,0,PANEL_WIDTH minus tb_redx_height of Tb_settings with index TB counter-1 of Page_settings by two and PANEL_HEIGHT minus tb_redx_height of Tb_settings
		COMMENT with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is greater than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1
		COMMENT bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 75,108,125
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_YELLOW,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_ORANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init	
			VAR Page_settings.Tb_settings[0].tb_cross_val_type,			init = 1,						ev = init				
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_WHITE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_NORMAL,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_ON,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_DARK_YELLOW,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,							ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,							ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,							ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_LARGE_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\r' },				ev = init			
																																																							

			VAR Error_msg_string[0],			init = "TB 0001 TB_REDX_AXIS",					ev = init
			VAR Error_msg_string[1],			init = "TB 0001 TB_REDX_OFFSET_AXIS",			ev = init
			VAR Error_msg_string[2],			init = "TB 0001 TB_REDX_OFFSET_AXIS",			ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 539	
	
    TEST 540
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-025]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings 
		COMMENT with index TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of 
		COMMENT Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two and 
		COMMENT PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is greater than MAX_ERROR_MSG 
		COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 75,108,121
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-026]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_height of Tb_settings with 
		COMMENT index TB counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings,0,PANEL_WIDTH minus tb_redx_height of Tb_settings with index TB counter-1 of Page_settings by two and PANEL_HEIGHT minus tb_redx_height of Tb_settings
		COMMENT with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is greater than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1
		COMMENT bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 75,108,125
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_YELLOW,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_ORANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val_type,			init = 1,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_WHITE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_NORMAL,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_ON,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_DARK_YELLOW,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,							ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,							ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,							ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_LARGE_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\r' },				ev = init			
																																																							

			VAR Error_msg_string[0],			init = "TB 0001 TB_REDX_AXIS",					ev = init
			VAR Error_msg_string[1],			init = "TB 0001 TB_REDX_OFFSET_AXIS",			ev = init
			VAR Error_msg_string[2],			init = "TB 0001 TB_REDX_OFFSET_AXIS",			ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Tb_parameter_occurrence[0],			init = 0,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 540	
	
	
    TEST 541
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,157,205,207,209,210
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val_type,			init = ONE,									ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = 2,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\r' },								ev = init			
		
																																																						

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_REDX_AXIS",					ev = init
			VAR Error_msg_string[1],			init = "TEXT 0001 TXT_REDX_OFFSET_AXIS",			ev = init
			VAR Error_msg_string[2],			init = "TEXT 0001 TXT_REDX_FONT",					ev = init
			VAR Error_msg_string[3],			init = "TEXT 0001 TXT_REDX_TXT",					ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB FontsGetStringWidth(0)0
			STUB FontsGetFontHeight(0)0
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)5
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)5
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 541	
	
    TEST 542
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 148,157,205,207,209,210
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val_type,			init = ONE,									ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = 2,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\r' },								ev = init			
		
																																																						

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_REDX_AXIS",					ev = init
			VAR Error_msg_string[1],			init = "TEXT 0001 TXT_REDX_OFFSET_AXIS",			ev = init
			VAR Error_msg_string[2],			init = "TEXT 0001 TXT_REDX_FONT",					ev = init
			VAR Error_msg_string[3],			init = "TEXT 0001 TXT_REDX_TXT",					ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init						
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB FontsGetStringWidth(0)0
			STUB FontsGetFontHeight(0)0
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)5
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)5
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 542	
	
	
    TEST 543
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 147,158,205,207,209,210
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val_type,			init = ONE,									ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = 2,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\r' },								ev = init			
		
																																																						

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_REDX_AXIS",					ev = init
			VAR Error_msg_string[1],			init = "TEXT 0001 TXT_REDX_OFFSET_AXIS",			ev = init
			VAR Error_msg_string[2],			init = "TEXT 0001 TXT_REDX_FONT",					ev = init
			VAR Error_msg_string[3],			init = "TEXT 0001 TXT_REDX_TXT",					ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB FontsGetStringWidth(0)0
			STUB FontsGetFontHeight(0)0
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)5
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)5
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 543	
	
	
    TEST 544
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,157,205,207,209,210 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 16,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val_type,			init = ONE,									ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = 2,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\r' },								ev = init			
		
																																																						

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_REDX_AXIS",					ev = init
			VAR Error_msg_string[1],			init = "TEXT 0001 TXT_REDX_OFFSET_AXIS",			ev = init
			VAR Error_msg_string[2],			init = "TEXT 0001 TXT_REDX_FONT",					ev = init
			VAR Error_msg_string[3],			init = "TEXT 0001 TXT_REDX_TXT",					ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
			
			VAR Label_size,		init = 1,		ev = init			
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB FontsGetStringWidth(0)0
			STUB FontsGetFontHeight(0)0
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)5
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)5
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 544	
	
	
    TEST 545
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 148,157,205,207,209,210
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 8,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val_type,			init = ONE,									ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = 2,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\r' },								ev = init			
		
																																																						

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_REDX_AXIS",					ev = init
			VAR Error_msg_string[1],			init = "TEXT 0001 TXT_REDX_OFFSET_AXIS",			ev = init
			VAR Error_msg_string[2],			init = "TEXT 0001 TXT_REDX_FONT",					ev = init
			VAR Error_msg_string[3],			init = "TEXT 0001 TXT_REDX_TXT",					ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
			
			VAR Label_size,		init = 0,		ev = init			
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB FontsGetStringWidth(0)0
			STUB FontsGetFontHeight(0)0
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)5
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)5
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 545	
	
	
    TEST 546
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 147,158,205,207,209,210
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt[0..30],				init = 'A' ,								ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt[31],				init = '\r' ,								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)10
			STUB FontsGetFontHeight(E_TINY_FONT)2
			
			STUB FontsGetStringWidth(E_TINY_FONT)10
			STUB FontsGetFontHeight(E_TINY_FONT)2			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)32
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)32
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 546	

    TEST 547
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckRoundDial-DB-LLR-011]
        COMMENT The function shall loop from ZERO to Rd_cnt and do the following,
        COMMENT Loops from counter(j) i.e ZERO to rd_no_ptr of Rd_settings with index RD counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (rd_ptr_rot with index counter j of Rd_settings with index RD counter-1 of Page_settings, MIN_LIN_ANGLE 
        COMMENT and MAX_LIN_ANGLE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string RD_PTR_ROT, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Else set rotAngle with index counter j of Ap_page0_dials with index Rd counter – 1 to CVT(rd_ptr_rot with index counter j of Rd_settings with index
        COMMENT  RD counter-1 of Page_settings)
        COMMENT Equivalence Class 455,471
        COMMENT
        COMMENT [hdudispfpdicheck-CheckRoundDial-DB-LLR-012]
        COMMENT The function shall loop from ZERO to Rd_cnt and do the following,
        COMMENT Loops from ZERO to rd_no_lim of Rd_settings with index RD counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (rd_lim_val_type with index counter j of Rd_settings with index RD counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) 
        COMMENT returns FALSE OR  function CheckFloatMinMax with parameters (rd_lim_val with index counter j of Rd_settings with index RD counter-1 of Page_settings, MIN_RANGE 
        COMMENT and MAX_LIN_RANGE) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Rd_parameter_occurrence with index RD counter-1 bitwise AND with BIT_FIVE is
        COMMENT  equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string RD_LIM_VAL, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 455,472
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckRoundDial-DB-LLR-026]
        COMMENT The function shall loop from ZERO to Rd_cnt and do the following,
        COMMENT The function shall loop from ZERO to rd_no_lim of Rd_settings with index RD counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (rd_lim_val_type with index counter j of Rd_settings with index RD counter-1 of Page_settings,TYPE_NORMAL 
        COMMENT and TYPE_WARNING ) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string RD_LIM_TYPE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 455,475
        COMMENT 
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR A429_cfg_data[0].A429_label,			init = 1,						ev = init	
			VAR Ap_page0_dials[0].u16Format,			init = 0,						ev = init	
			
			
			VAR Page_settings.Rd_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Rd_settings[0].assc_labels[0..4],					init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lin,							init = 2,								ev = init		
			
			VAR Page_settings.Rd_settings[0].rd_no_ptr,							init = 2,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_length,							init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern,							init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern_pos,						init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lim,							init = 2,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_y,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_width,						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_height,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_txt,						init = { others => '\r' },				ev = init	
			
			VAR Page_settings.Rd_settings[0].rd_lin_range[1..2],						init = MAX_LIN_RANGE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_lin_angle[1..2],						init = MAX_LIN_ANGLE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_shape[0..1],						init = FG_POINTER_SHAPE12,		ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_color[0..1],						init = COLOR_BLACK,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][1],						init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][0],				init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][1],				init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_rot[0..1],							init = MAX_LIN_ANGLE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_lim_val_type[0..1],						init = MAX_LIM_VAL_TYPE,			ev = init			
			VAR Page_settings.Rd_settings[0].rd_lim_val[0..1],							init = MAX_RANGE,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_lim_type[0..1],							init = TYPE_WARNING,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_lim_color[0..1],						init = COLOR_RED,					ev = init			



			VAR Error_msg_string[0],			init = "RD 0001 RD_REDX_AXIS",				ev = init
			VAR Error_msg_string[1],			init = "RD 0001 RD_REDX_OFFSET_AXIS",		ev = init
			VAR Error_msg_string[2],			init = "RD 0001 RD_REDX_AXIS",				ev = init
			VAR Error_msg_string[3],			init = "RD 0001 RD_REDX_AXIS",				ev = init
			VAR Error_msg_string[4],			init = "RD 0001 RD_REDX_OFFSET_AXIS",		ev = init



				
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Rd_parameter_occurrence[0],			init = 0xFFFF,							ev = init

			VAR Rd_cnt,			init = 1,							ev = init

			VAR Caslocationset_parameters,			init = FALSE,							ev = init
			VAR Text_cnt,		init = 0,							ev = init						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			--STUB FontsGetStringWidth(E_NO_FONT)1
			--STUB FontsGetFontHeight(E_NO_FONT)1	
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1

			STUB StrLen(Page_settings.Rd_settings[0].rd_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 547	
	
	
    TEST 548
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckRoundDial-DB-LLR-011]
        COMMENT The function shall loop from ZERO to Rd_cnt and do the following,
        COMMENT Loops from counter(j) i.e ZERO to rd_no_ptr of Rd_settings with index RD counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (rd_ptr_rot with index counter j of Rd_settings with index RD counter-1 of Page_settings, MIN_LIN_ANGLE 
        COMMENT and MAX_LIN_ANGLE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string RD_PTR_ROT, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Else set rotAngle with index counter j of Ap_page0_dials with index Rd counter – 1 to CVT(rd_ptr_rot with index counter j of Rd_settings with index
        COMMENT  RD counter-1 of Page_settings)
        COMMENT Equivalence Class 455,471
        COMMENT
        COMMENT [hdudispfpdicheck-CheckRoundDial-DB-LLR-012]
        COMMENT The function shall loop from ZERO to Rd_cnt and do the following,
        COMMENT Loops from ZERO to rd_no_lim of Rd_settings with index RD counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (rd_lim_val_type with index counter j of Rd_settings with index RD counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) 
        COMMENT returns FALSE OR  function CheckFloatMinMax with parameters (rd_lim_val with index counter j of Rd_settings with index RD counter-1 of Page_settings, MIN_RANGE 
        COMMENT and MAX_LIN_RANGE) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Rd_parameter_occurrence with index RD counter-1 bitwise AND with BIT_FIVE is
        COMMENT  equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string RD_LIM_VAL, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 455,472
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckRoundDial-DB-LLR-026]
        COMMENT The function shall loop from ZERO to Rd_cnt and do the following,
        COMMENT The function shall loop from ZERO to rd_no_lim of Rd_settings with index RD counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (rd_lim_val_type with index counter j of Rd_settings with index RD counter-1 of Page_settings,TYPE_NORMAL 
        COMMENT and TYPE_WARNING ) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string RD_LIM_TYPE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 455,475
        COMMENT 
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR A429_cfg_data[0].A429_label,			init = 1,						ev = init	
			VAR Ap_page0_dials[0].u16Format,			init = 0,						ev = init	
			
			
			VAR Page_settings.Rd_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Rd_settings[0].assc_labels[0..4],					init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lin,							init = 2,								ev = init		
			
			VAR Page_settings.Rd_settings[0].rd_no_ptr,							init = 2,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_length,							init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern,							init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern_pos,						init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lim,							init = 2,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_y,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_width,						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_height,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_txt,						init = { others => '\r' },				ev = init	
			
			VAR Page_settings.Rd_settings[0].rd_lin_range[1..2],						init = MAX_LIN_RANGE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_lin_angle[1..2],						init = MAX_LIN_ANGLE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_shape[0..1],						init = FG_POINTER_SHAPE12,		ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_color[0..1],						init = COLOR_BLACK,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][1],						init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][0],				init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][1],				init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_rot[0..1],							init = MAX_LIN_ANGLE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_lim_val_type[0..1],						init = MAX_LIM_VAL_TYPE,			ev = init			
			VAR Page_settings.Rd_settings[0].rd_lim_val[0..1],							init = MAX_RANGE,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_lim_type[0..1],							init = TYPE_WARNING,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_lim_color[0..1],						init = COLOR_RED,					ev = init			



			VAR Error_msg_string[0],			init = "RD 0001 RD_REDX_AXIS",				ev = init
			VAR Error_msg_string[1],			init = "RD 0001 RD_REDX_OFFSET_AXIS",		ev = init
			VAR Error_msg_string[2],			init = "RD 0001 RD_REDX_AXIS",				ev = init
			VAR Error_msg_string[3],			init = "RD 0001 RD_REDX_AXIS",				ev = init
			VAR Error_msg_string[4],			init = "RD 0001 RD_REDX_OFFSET_AXIS",		ev = init



				
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Rd_parameter_occurrence[0],			init = 0xFFFF,							ev = init

			VAR Rd_cnt,			init = 1,							ev = init

			VAR Caslocationset_parameters,			init = FALSE,							ev = init
			VAR Text_cnt,		init = 0,							ev = init						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			--STUB FontsGetStringWidth(E_NO_FONT)1
			--STUB FontsGetFontHeight(E_NO_FONT)1	
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1

			STUB StrLen(Page_settings.Rd_settings[0].rd_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 548	
	
	
    TEST 549
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckRoundDial-DB-LLR-011]
        COMMENT The function shall loop from ZERO to Rd_cnt and do the following,
        COMMENT Loops from counter(j) i.e ZERO to rd_no_ptr of Rd_settings with index RD counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (rd_ptr_rot with index counter j of Rd_settings with index RD counter-1 of Page_settings, MIN_LIN_ANGLE 
        COMMENT and MAX_LIN_ANGLE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string RD_PTR_ROT, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Else set rotAngle with index counter j of Ap_page0_dials with index Rd counter – 1 to CVT(rd_ptr_rot with index counter j of Rd_settings with index
        COMMENT  RD counter-1 of Page_settings)
        COMMENT Equivalence Class 455,471
        COMMENT
        COMMENT [hdudispfpdicheck-CheckRoundDial-DB-LLR-012]
        COMMENT The function shall loop from ZERO to Rd_cnt and do the following,
        COMMENT Loops from ZERO to rd_no_lim of Rd_settings with index RD counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (rd_lim_val_type with index counter j of Rd_settings with index RD counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) 
        COMMENT returns FALSE OR  function CheckFloatMinMax with parameters (rd_lim_val with index counter j of Rd_settings with index RD counter-1 of Page_settings, MIN_RANGE 
        COMMENT and MAX_LIN_RANGE) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Rd_parameter_occurrence with index RD counter-1 bitwise AND with BIT_FIVE is
        COMMENT  equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string RD_LIM_VAL, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 455,472
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckRoundDial-DB-LLR-026]
        COMMENT The function shall loop from ZERO to Rd_cnt and do the following,
        COMMENT The function shall loop from ZERO to rd_no_lim of Rd_settings with index RD counter-1 of Page_settings,
        COMMENT If function CheckMinMax with parameters (rd_lim_val_type with index counter j of Rd_settings with index RD counter-1 of Page_settings,TYPE_NORMAL 
        COMMENT and TYPE_WARNING ) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string RD_LIM_TYPE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 455,475
        COMMENT 
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR A429_cfg_data[0].A429_label,			init = 1,						ev = init	
			VAR Ap_page0_dials[0].u16Format,			init = 0,						ev = init	
			
			
			VAR Page_settings.Rd_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Rd_settings[0].assc_labels[0..4],					init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_x,						init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_y,						init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lin,							init = 2,								ev = init		
			
			VAR Page_settings.Rd_settings[0].rd_no_ptr,							init = 2,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_length,							init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern,							init = 1,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern_pos,						init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lim,							init = 2,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_y,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_width,						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_height,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_txt,						init = { others => '\r' },				ev = init	
			
			VAR Page_settings.Rd_settings[0].rd_lin_range[1..2],						init = MAX_LIN_RANGE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_lin_angle[1..2],						init = MAX_LIN_ANGLE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_shape[0..1],						init = FG_POINTER_SHAPE12,		ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_color[0..1],						init = COLOR_BLACK,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][0],						init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale[0..1][1],						init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][0],				init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_scale_offset[0..1][1],				init = PANEL_HEIGHT,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_ptr_rot[0..1],							init = MAX_LIN_ANGLE,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_lim_val_type[0..1],						init = MAX_LIM_VAL_TYPE,			ev = init			
			VAR Page_settings.Rd_settings[0].rd_lim_val[0..1],							init = MAX_RANGE,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_lim_type[0..1],							init = TYPE_WARNING,				ev = init			
			VAR Page_settings.Rd_settings[0].rd_lim_color[0..1],						init = COLOR_RED,					ev = init			



			VAR Error_msg_string[0],			init = "RD 0001 RD_REDX_AXIS",				ev = init
			VAR Error_msg_string[1],			init = "RD 0001 RD_REDX_OFFSET_AXIS",		ev = init
			VAR Error_msg_string[2],			init = "RD 0001 RD_REDX_AXIS",				ev = init
			VAR Error_msg_string[3],			init = "RD 0001 RD_REDX_AXIS",				ev = init
			VAR Error_msg_string[4],			init = "RD 0001 RD_REDX_OFFSET_AXIS",		ev = init



				
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Rd_parameter_occurrence[0],			init = 0,							ev = init

			VAR Rd_cnt,			init = 1,							ev = init

			VAR Caslocationset_parameters,			init = FALSE,							ev = init
			VAR Text_cnt,		init = 0,							ev = init						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			--STUB FontsGetStringWidth(E_NO_FONT)1
			--STUB FontsGetFontHeight(E_NO_FONT)1	
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1

			STUB StrLen(Page_settings.Rd_settings[0].rd_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 549	
	
	
    TEST 550
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 147,158,205,207,209,210
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt[0..10],				init = '\r' ,								ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt[11..31],				init = '\n' ,								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)10
			STUB FontsGetFontHeight(E_TINY_FONT)2
			
			STUB FontsGetStringWidth(E_TINY_FONT)10
			STUB FontsGetFontHeight(E_TINY_FONT)2			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)32
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)32
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 550	
	
    TEST 551
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckRoundDial-DB-LLR-004]
        COMMENT The function shall loop from ONE to Rd_cnt and do the following,
        COMMENT Loop from loop counter  ZERO to ASSOCIALTED_LABEL - 1 and do the following,
        COMMENT Function  CheckMinMax with parameters (assc_labels with index loop counter of Rd_settings with index RD counter minus one of Page_settings, 
        COMMENT ONE and  MAX_LABEL) 
        COMMENT returns FALSE AND assc_labels with index loop counter of Rd_settings with index RD counter minus one of Page_settings is not equal to Zero 
        COMMENT AND Pdi_error_count isless than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string RD_ASSOCIATED_LABELS, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 455,646,453
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR A429_cfg_data[0].A429_label,			init = 2,						ev = init	
			VAR A429_settings_cnt,			init = 1,						ev = init	
			VAR Ap_page0_dials[0].u16Format,			init = 0,						ev = init	
			
			
			VAR Page_settings.Rd_settings[0].label,					init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].sdi,					init = 4,								ev = init			
			VAR Page_settings.Rd_settings[0].assc_labels[0..4],					init = MAX_LABEL+1,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_x,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lin,							init = 0,								ev = init		
			
			VAR Page_settings.Rd_settings[0].rd_no_ptr,							init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_length,							init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern,							init = 2,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern_pos,						init = 2,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lim,							init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_txt,						init = { others => 'A' },				ev = init			


			VAR Error_msg_string[0],			init = "RD 0000 LABEL",						ev = init
			VAR Error_msg_string[1],			init = "RD 0000 SDI",						ev = init
			VAR Error_msg_string[2],			init = "RD 0000 RD_ASSOCIATED_LABELS",		ev = init
			VAR Error_msg_string[3],			init = "RD 0000 RD_ASSOCIATED_LABELS",					ev = init
			VAR Error_msg_string[4],			init = "RD 0000 RD_ASSOCIATED_LABELS",					ev = init


				
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Rd_parameter_occurrence[0],			init = 0xFFFF,							ev = init

			VAR Rd_cnt,			init = 1,							ev = init

			VAR Caslocationset_parameters,			init = FALSE,							ev = init
			VAR Text_cnt,		init = 0,							ev = init						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			--STUB FontsGetStringWidth(E_NO_FONT)1
			--STUB FontsGetFontHeight(E_NO_FONT)1	
			
			--STUB CalculatePower(10,0)1

			STUB StrLen(Page_settings.Rd_settings[0].rd_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 551	
	
    TEST 552
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckRoundDial-DB-LLR-004]
        COMMENT The function shall loop from ONE to Rd_cnt and do the following,
        COMMENT Loop from loop counter  ZERO to ASSOCIALTED_LABEL - 1 and do the following,
        COMMENT Function  CheckMinMax with parameters (assc_labels with index loop counter of Rd_settings with index RD counter minus one of Page_settings, 
        COMMENT ONE and  MAX_LABEL) 
        COMMENT returns FALSE AND assc_labels with index loop counter of Rd_settings with index RD counter minus one of Page_settings is not equal to Zero 
        COMMENT AND Pdi_error_count is greater than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 456,646,453
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR A429_cfg_data[0].A429_label,			init = 2,						ev = init	
			VAR A429_settings_cnt,			init = 1,						ev = init	
			VAR Ap_page0_dials[0].u16Format,			init = 0,						ev = init	
			
			
			VAR Page_settings.Rd_settings[0].label,					init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].sdi,					init = 4,								ev = init			
			VAR Page_settings.Rd_settings[0].assc_labels[0..4],					init = MAX_LABEL+1,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_x,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_axis.u16_y,						init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lin,							init = 0,								ev = init		
			
			VAR Page_settings.Rd_settings[0].rd_no_ptr,							init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_length,							init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern,							init = 2,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_vern_pos,						init = 2,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_no_lim,							init = 0,								ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_width,						init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_height,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_offset_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_font,						init = E_NO_FONT,						ev = init			
			VAR Page_settings.Rd_settings[0].rd_redx_txt,						init = { others => 'A' },				ev = init		
			VAR Page_settings.Rd_settings[1].rd_redx_txt,						init = { others => 'A' },				ev = init		



				
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Rd_parameter_occurrence[0],			init = 0xFFFF,							ev = init

			VAR Rd_cnt,			init = 2,							ev = init

			VAR Caslocationset_parameters,			init = FALSE,							ev = init
			VAR Text_cnt,		init = 0,							ev = init						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			--STUB CalculatePower(10,0)1

			STUB StrLen(Page_settings.Rd_settings[0].rd_redx_txt)31
			STUB StrLen(Page_settings.Rd_settings[1].rd_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 552	
	
END SERVICE -- PdiDataCheck	


--------------------------------------------------------------------------------
-- Declaration of the service CheckDecimalFormat
--------------------------------------------------------------------------------
SERVICE CheckDecimalFormat
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_FORMAT format;
    -- By function returned type declaration
    #T_BOOL ret_CheckDecimalFormat;

    TEST 1
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-CheckDecimalFormat-DB-LLR-001]
		COMMENT The function shall return TRUE if format is NUM_ONED,NUM_TWOD,NUM_THREED,NUM_FOURD,NUM_FIVED and NUM_SIXD.
        COMMENT Equivalence Class 587
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 				
		
        VAR format,		init = NUM_ONED,		ev = init
		
        COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:
					
        VAR ret_CheckDecimalFormat,		init = FALSE,		ev = TRUE
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL
		
        #ret_CheckDecimalFormat = CheckDecimalFormat(format);
        END ELEMENT

    END TEST -- TEST 1
	
	
    TEST 2
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckDecimalFormat-DB-LLR-001]
		COMMENT The function shall return TRUE if format is NUM_ONED,NUM_TWOD,NUM_THREED,NUM_FOURD,NUM_FIVED and NUM_SIXD.
        COMMENT Equivalence Class 587
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 				
		
        VAR format,		init = NUM_TWOD,		ev = init
		
        COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:
					
        VAR ret_CheckDecimalFormat,		init = FALSE,		ev = TRUE
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL
		
        #ret_CheckDecimalFormat = CheckDecimalFormat(format);
        END ELEMENT

    END TEST -- TEST 2	

    TEST 3
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckDecimalFormat-DB-LLR-001]
		COMMENT The function shall return TRUE if format is NUM_ONED,NUM_TWOD,NUM_THREED,NUM_FOURD,NUM_FIVED and NUM_SIXD.
        COMMENT Equivalence Class 587
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 				
		
        VAR format,		init = NUM_THREED,		ev = init
		
        COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:
					
        VAR ret_CheckDecimalFormat,		init = FALSE,		ev = TRUE
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL
		
        #ret_CheckDecimalFormat = CheckDecimalFormat(format);
        END ELEMENT

    END TEST -- TEST 3
	
    TEST 4
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-CheckDecimalFormat-DB-LLR-001]
		COMMENT The function shall return TRUE if format is NUM_ONED,NUM_TWOD,NUM_THREED,NUM_FOURD,NUM_FIVED and NUM_SIXD.
        COMMENT Equivalence Class 587
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 				
		
        VAR format,		init = NUM_FOURD,		ev = init
		
        COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:
					
        VAR ret_CheckDecimalFormat,		init = FALSE,		ev = TRUE
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL
		
        #ret_CheckDecimalFormat = CheckDecimalFormat(format);
        END ELEMENT

    END TEST -- TEST 4	
	
    TEST 5
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckDecimalFormat-DB-LLR-001]
		COMMENT The function shall return TRUE if format is NUM_ONED,NUM_TWOD,NUM_THREED,NUM_FOURD,NUM_FIVED and NUM_SIXD.
        COMMENT Equivalence Class 587
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 				
		
        VAR format,		init = NUM_FIVED,		ev = init
		
        COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:
					
        VAR ret_CheckDecimalFormat,		init = FALSE,		ev = TRUE
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL
		
        #ret_CheckDecimalFormat = CheckDecimalFormat(format);
        END ELEMENT

    END TEST -- TEST 5	
	
	
    TEST 6
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckDecimalFormat-DB-LLR-001]
		COMMENT The function shall return TRUE if format is NUM_ONED,NUM_TWOD,NUM_THREED,NUM_FOURD,NUM_FIVED and NUM_SIXD.
        COMMENT Equivalence Class 587 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 				
		
        VAR format,		init = NUM_SIXD,		ev = init
		
        COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:
					
        VAR ret_CheckDecimalFormat,		init = FALSE,		ev = TRUE
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL
		
        #ret_CheckDecimalFormat = CheckDecimalFormat(format);
        END ELEMENT

    END TEST -- TEST 6	
	
	
    TEST 7
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckDecimalFormat-DB-LLR-001]
		COMMENT The function return FALSE if format is not NUM_ONED,NUM_TWOD,NUM_THREED,NUM_FOURD,NUM_FIVED and NUM_SIXD.	
        COMMENT Equivalence Class 588
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 				
		
        VAR format,		init = NUM_SEVEND,		ev = init
		
        COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:
					
        VAR ret_CheckDecimalFormat,		init = FALSE,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL
		
        #ret_CheckDecimalFormat = CheckDecimalFormat(format);
        END ELEMENT

    END TEST -- TEST 7	
	
    TEST 8
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckDecimalFormat-DB-LLR-001]
		COMMENT The function return FALSE if format is not NUM_ONED,NUM_TWOD,NUM_THREED,NUM_FOURD,NUM_FIVED and NUM_SIXD.	
        COMMENT Equivalence Class 588
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 				
		
        VAR format,		init = 0,		ev = init
		
        COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:
					
        VAR ret_CheckDecimalFormat,		init = FALSE,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL
		
        #ret_CheckDecimalFormat = CheckDecimalFormat(format);
        END ELEMENT

    END TEST -- TEST 8	

END SERVICE -- CheckDecimalFormat



--------------------------------------------------------------------------------
-- Declaration of the service FindTotalDigits
--------------------------------------------------------------------------------
SERVICE FindTotalDigits
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_UINT32 format;
    -- By function returned type declaration
    #T_UINT16 ret_FindTotalDigits;

    TEST 1
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-FindTotalDigits-DB-LLR-001]
		COMMENT - Set total_digits to sum of total_digits and one if format and NUM_ONEW is not equal to zero.
        COMMENT - Set total_digits to sum of total_digits and two if format and NUM_TWOW is not equal to zero.
        COMMENT - Set total_digits to sum of total_digits and three if format and NUM_THREEW is not equal to zero.
        COMMENT - Set total_digits to sum of total_digits and four if format and NUM_FOURW is not equal to zero.
        COMMENT Equivalence Class NOne
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 			
		
        VAR format,		init = 0,		ev = init
		
        COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:
		
        VAR ret_FindTotalDigits,		init = 0,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL
		
		--unit under test
        #ret_FindTotalDigits = FindTotalDigits(format);
        END ELEMENT

    END TEST -- TEST 1
	
	
    TEST 2
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-FindTotalDigits-DB-LLR-002]
		COMMENT The function shall do the following
        COMMENT - Set total_digits to sum of total_digits and five if format and NUM_FIVEW is not equal to zero.
        COMMENT - Set total_digits to sum of total_digits and six if format and NUM_SIXW is not equal to zero.
        COMMENT - Set total_digits to sum of total_digits and seven if format and NUM_SEVENW is not equal to zero.
        COMMENT - Set total_digits to sum of total_digits and eight if format and NUM_EIGHTW is not equal to zero.
        COMMENT Equivalence Class None
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 			
		
        VAR format,		init = 0xFFFFF,		ev = init
		
        COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:
		
        VAR ret_FindTotalDigits,		init = 36,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test		
        #ret_FindTotalDigits = FindTotalDigits(format);
        END ELEMENT

    END TEST -- TEST 2	

END SERVICE -- FindTotalDigits



--------------------------------------------------------------------------------
-- Declaration of the service IntToStringTrim
--------------------------------------------------------------------------------
SERVICE IntToStringTrim
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_UINT8 label;
    #T_UINT8 label_size;
    #char  str[200];

    TEST 1
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-IntTostringTrim-DB-LLR-001]
        COMMENT The function shall do the  following:
        COMMENT -Loop from counter ONE to bit_size and do the following:
        COMMENT    1. Set str with index bit size minus counter  to (bit modulus ten plus '0')
        COMMENT - Set str with index counter minus one to NULL character.  
        COMMENT Equivalence Class None
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 	
		
        VAR label,		init = 0,		ev = init
		
        VAR label_size,		init = 0,		ev = init
		
        VAR str[0],		init = '\0',		ev = init

        COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:		
		
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #IntToStringTrim(label, label_size, str);
        END ELEMENT

    END TEST -- TEST 1
	
	
    TEST 2
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-IntTostringTrim-DB-LLR-001]
        COMMENT The function shall do the  following:
        COMMENT -Loop from counter ONE to bit_size and do the following:
        COMMENT    1. Set str with index bit size minus counter  to (bit modulus ten plus '0')
        COMMENT - Set str with index counter minus one to NULL character.  
        COMMENT Equivalence Class None
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 	
		
        VAR label,		init = 0,		ev = init
		
        VAR label_size,		init = 1,		ev = init
		
        VAR str[0],		init = '0',		ev = init

        COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:		
		
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #IntToStringTrim(label, label_size, str);
        END ELEMENT

    END TEST -- TEST 2	
	
	
    TEST 3
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-IntTostringTrim-DB-LLR-001]
        COMMENT The function shall do the  following:
        COMMENT -Loop from counter ONE to bit_size and do the following:
        COMMENT    1. Set str with index bit size minus counter  to (bit modulus ten plus '0')
        COMMENT - Set str with index counter minus one to NULL character.  
        COMMENT Equivalence Class None
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 	
		
        VAR label,		init = 0,		ev = init
		
        VAR label_size,		init = 2,		ev = init
		
        VAR str[0],		init = '0',		ev = init
        VAR str[1],		init = '0',		ev = init

        COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:		
		
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #IntToStringTrim(label, label_size, str);
        END ELEMENT

    END TEST -- TEST 3	

END SERVICE -- IntToStringTrim


--------------------------------------------------------------------------------
-- Declaration of the service FindColorRange
--------------------------------------------------------------------------------
SERVICE FindColorRange
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_UINT16 color;
    -- By function returned type declaration
    #T_COLOR ret_FindColorRange;

    TEST 1
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-FindColorRange-DB-LLR-001]
        COMMENT The function shall return COLOR_BLACK if color is BLACK.
        COMMENT Equivalence Class 589
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = BLACK,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_BLACK,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 1
	
    TEST 2
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-FindColorRange-DB-LLR-002]
		COMMENT - Return COLOR_DARK_RED if color is DARK_RED.
        COMMENT Equivalence Class 590
        COMMENT
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = DARK_RED,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_DARK_RED,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 2	
	
    TEST 3
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [ hdudispfpdicheck-FindColorRange-DB-LLR-002]
		COMMENT The function shall do the following
        COMMENT -  Return COLOR_RED  if color is RED .
        COMMENT  Equivalence Class 591
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = RED,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_RED,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 3	
	
    TEST 4
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-FindColorRange-DB-LLR-003]
        COMMENT - Return COLOR_LIGHT_RED  if color is CAS_REV_RED .
        COMMENT  Equivalence Class 592
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = CAS_REV_RED,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_LIGHT_RED,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 4	
	
	
    TEST 5
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-FindColorRange-DB-LLR-003]
        COMMENT - Return COLOR_PINK if color is PINK
        COMMENT  Equivalence Class 593
        COMMENT
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = PINK,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_PINK,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 5	
	
	
    TEST 6
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-FindColorRange-DB-LLR-004]
        COMMENT - Return COLOR_TEAL if color is TEAL
        COMMENT  Equivalence Class 594
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = TEAL,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_TEAL,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 6	
	
	
    TEST 7
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-FindColorRange-DB-LLR-005]
        COMMENT - Return COLOR_GREEN if color is GREEN
        COMMENT  Equivalence Class 595
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = GREEN,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_GREEN,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 7	
	
    TEST 8
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-FindColorRange-DB-LLR-005]
        COMMENT - Return COLOR_BRIGHT_GREEN if color is BRIGHT_GREEN
        COMMENT  Equivalence Class 596
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = BRIGHT_GREEN,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_BRIGHT_GREEN,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 8	
	
	
    TEST 9
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-FindColorRange-DB-LLR-006]
        COMMENT - Return COLOR_DARK_BLUE if color is DARK_BLUE
        COMMENT  Equivalence Class 597
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = DARK_BLUE,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_DARK_BLUE,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 9	
	
	
    TEST 10
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-FindColorRange-DB-LLR-007]
        COMMENT - Return COLOR_BLUE if color is BLUE
        COMMENT  Equivalence Class 598
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = BLUE,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_BLUE,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 10	
	
	
    TEST 11
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-FindColorRange-DB-LLR-008]
        COMMENT - Return COLOR_LIGHT_GRAY if color is LIGHT_GRAY
        COMMENT  Equivalence Class 599
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = LIGHT_GRAY,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_LIGHT_GRAY,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 11	
	
	
    TEST 12
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-FindColorRange-DB-LLR-008]
        COMMENT - Return COLOR_GRAY if color is GRAY
        COMMENT  Equivalence Class 600
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = GRAY,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_GRAY,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 12	
	
	
    TEST 13
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-FindColorRange-DB-LLR-008]
        COMMENT - Return COLOR_DARK_GRAY if color is DARK_GRAY
        COMMENT  Equivalence Class 601
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = DARK_GRAY,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_DARK_GRAY,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 13	

    TEST 14
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-FindColorRange-DB-LLR-009]
        COMMENT - Return COLOR_YELLOW if color is YELLOW
        COMMENT  Equivalence Class 602
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = YELLOW,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_YELLOW,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 14


    TEST 15
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-FindColorRange-DB-LLR-009]
        COMMENT - Return COLOR_ORANGE if color is ORANGE
        COMMENT  Equivalence Class 603
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = ORANGE,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_ORANGE,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 15
	
	
    TEST 16
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-FindColorRange-DB-LLR-010]
        COMMENT - Return COLOR_WHITE if color is WHITE
        COMMENT  Equivalence Class 604
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = WHITE,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_WHITE,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 16	
	
    TEST 17
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT
        COMMENT [hdudispfpdicheck-FindColorRange-DB-LLR-011]
        COMMENT The function shall return COLOR_MAX if color is other than BLACK, RED, LIGHT_RED,TEAL,GREEN,
		COMMENT DARK_BLUE,BLUE, LIGHT_GRAY, YELLOW,TURQUOISE, VIOLETand WHITE.
        COMMENT  Equivalence Class 605
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = INVALID_COLOR,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_MAX,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 17	
	
    TEST 18
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-FindColorRange-DB-LLR-003]
        COMMENT - Return COLOR_VIOLET if color is VIOLET
        COMMENT  Equivalence Class 606
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = VIOLET,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_VIOLET,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 18	
	
	
    TEST 19
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-FindColorRange-DB-LLR-004]
        COMMENT - Return COLOR_TURQUOISE if color is TURQUOISE
        COMMENT  Equivalence Class 607
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION: 
		
			VAR color,		init = TURQUOISE,		ev = init
		
		COMMENT OUTPUT SECTION:
		
			--None
        
        COMMENT INPUT/OUTPUT SECTION:	
		
        VAR ret_FindColorRange,		init = COLOR_TURQUOISE,		ev = init
		
        COMMENT Stub Calls:
        SIMUL   
				
			--None
		
        END SIMUL

		--unit under test				
        #ret_FindColorRange = FindColorRange(color);
        END ELEMENT

    END TEST -- TEST 19	

END SERVICE -- FindColorRange
















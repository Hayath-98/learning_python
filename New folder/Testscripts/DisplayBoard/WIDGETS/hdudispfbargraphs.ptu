HEADER hdudispfbargraphs.c, Source Code Ver : 1.2 , TestScript Ver : 1.1
--------------------------------------------------------------------------------
-- Author Name          : Swathi G
--
-- File Name            : hdudispfbargraphs.ptu
--
-- Test Creation Date   : 31.10.2017
--
-- Tested Functions     : BargraphAllocat
--                        BargraphUpdate
--                        BargraphDraw
--                        BargraphClear
--
-- Version History      :
--
-- TEST-VERSION       TEST-DATE        TESTER NAME        MODIFICATIONS
-- ------------       ---------        -----------        -------------
-- 1.1                31.10.2017        Swathi G          Created the PTU file.
--------------------------------------------------------------------------------
--
-- TESTED FILE INCLUDE DIRECTIVES 
--
--------------------------------------------------------------------------------

#/*============================================================================*/
#/* Module specific includes                                                   */
#/*============================================================================*/

##include "hdudispfdma2d.h"      
##include "hdudispfpolygon1.h"    
##include "hdudispfrterror.h"   
##include "hdudispftext.h"       
##include "hdudispfbargraphs.h"  
##include "hdudispfconfig.h"      
##include "hdudispfbinascii.h"   
##include "hdulibbasictypes.h"   
--------------------------------------------------------------------------------
--
-- TESTED FILE DECLARATIONS 
--
--------------------------------------------------------------------------------

-- Declarations of the global variables of the tested file

-- Declarations of the temporary variable

    --Temporary variable to obtain psParam structure member contents
    #T_PARAM_READING      PTU_psParam;
    
    --Temporary variable to hold rterr file name
    #T_CHAR               PTU_rterr_file[200];
    
    --Temporary variable to hold rterr message
    #T_CHAR               PTU_rterr_message[200];
    
    --Temporary variable used in "RterrWidget" stub native code
    #T_UINT32             index1, index2;
    
    --Temporary variable used in "BinasByteFormatInfoBE" stub native code
    #T_INT16            *  PTU_BinasByte_s16DisDig_src;
    #T_INT8             *  PTU_BinasByte_s16DisDig_dest;
    
    --Temporary variable used in "TextAllocat" stub native code
    #T_PTEXT            *  PTU_pps_handle_add;
    #T_UINT8            *  PTU_pu8_string;
    
    --Temporary variable used in "Dma2dDrawChar" stub native code
    #T_CHAR              PTU_character_data[600];
    #T_UINT32           * PTU_write_loc;
    
    --Temporary variable used in "WidgetsRedX" stub native code
    #T_SDISREGION       *PTU_ps_dis_region;
    #T_SPOLY            PTU_Pps_poly_red_x;

    --Temporary variable used in "WidgetsDotAddr" stub native code
    #T_SDISLOC           PTU_ppoint_3;

    --Temporary variable used in "WidgetsDotAddr" stub native code
    #T_LOOKUP_TABLE      PTU_table;
    #T_PARAM_STAT        PTU_stat;
    
    --Temporary variable used in "WidgetsNumUpdate" stub native code
    #T_PARAM_READING     PTU_param;
    #T_SWIDGETPARAM      PTU_ps_widget_param;
    #T_CHAR              PTU_ac_dig_text[13];


--------------------------------------------------------------------------------

BEGIN

    COMMENT Author Name      : Swathi G
    COMMENT
    COMMENT File Name        : hdudispfbargraphs.ptu
    COMMENT
    COMMENT Tested Functions : BargraphAllocat
    COMMENT                    BargraphUpdate
    COMMENT                    BargraphDraw
    COMMENT                    BargraphClear
    COMMENT
    COMMENT Assumptions and Constraints
    COMMENT <AC>
    COMMENT
    COMMENT Assumption(s):
    COMMENT None
    COMMENT
    COMMENT Constraint(s):
    COMMENT
    COMMENT
    COMMENT </AC>

    COMMENT Equivalence Class Description
    COMMENT <ECD>
    COMMENT
    COMMENT Valid Class(es)
    COMMENT Class 1
    COMMENT In Function BargraphAllocat the u16Width sturcture member of ps_bar_graph_def is greater than MAX_BAR_WIDTH.
    COMMENT 
    COMMENT Class 2
    COMMENT In Function BargraphAllocat the u16Width sturcture member of ps_bar_graph_def is not greater than MAX_BAR_WIDTH.
    COMMENT
    COMMENT Class 3
    COMMENT In Function BargraphAllocat the number of bar garphs installed is equal to MAX_BARS.
    COMMENT
    COMMENT Class 4
    COMMENT In Function BargraphAllocat the number of bar garphs installed is not equal to MAX_BARS.
    COMMENT
    COMMENT Class 5
    COMMENT In Function BargraphAllocat, 'RterrWidget' function is called.
    COMMENT
    COMMENT Class 6
    COMMENT In Function BargraphAllocat, 'BinasGetWidth' function is called.
    COMMENT
    COMMENT Class 7
    COMMENT In Function BargraphAllocat, the resultant value of logical AND operation between return value of function 'BinasGetWidth' 
    COMMENT and eFont structure member of ps_bar_graph_def is true.
    COMMENT
    COMMENT Class 8
    COMMENT In Function BargraphAllocat, the resultant value of logical AND operation between return value of function 'BinasGetWidth' 
    COMMENT and eFont structure member of ps_bar_graph_def is not true.
    COMMENT
    COMMENT Class 9
    COMMENT In Funtion BargraphAllocat, 'BinasByteFormatInfoBE' function is called.
    COMMENT
    COMMENT Class 10
    COMMENT In Funtion BargraphAllocat, 'TextAllocat' function is called.
    COMMENT
    COMMENT Class 11
    COMMENT In Function BargraphUpdate, 'WidgetsUpdateRT' function is called.
    COMMENT
    COMMENT Class 52
    COMMENT In Function BargraphUpdate, 'LookupTableLookup' function is called.
    COMMENT
    COMMENT Class 12
    COMMENT In Function BargraphUpdate, the value of structure member stat of structure member psParam of structure member of 
    COMMENT ps_bar_graph_def of structure ps_bar_graph is not lesser than PARAM_BAD and the value of structure member pText of 
    COMMENT structure member sWidgetParm of structure ps_bar_graph is not equal to NULL.
    COMMENT
    COMMENT Class 13
    COMMENT In Function BargraphUpdate, the value of structure member stat of structure member psParam of structure member of 
    COMMENT ps_bar_graph_def of structure ps_bar_graph is lesser than PARAM_BAD.
    COMMENT
    COMMENT Class 14
    COMMENT In Function BargraphUpdate, the value of structure member stat of structure member psParam of structure member of 
    COMMENT ps_bar_graph_def of structure ps_bar_graph is lesser than PARAM_BAD and the value of structure member pText of 
    COMMENT structure member sWidgetParm of structure ps_bar_graph is not equal to NULL.
    COMMENT
    COMMENT Class 15
    COMMENT In Function BargraphUpdate, the value of structure member stat of structure member psParam of structure member of 
    COMMENT ps_bar_graph_def of structure ps_bar_graph is lesser than PARAM_BAD and the value of structure member pText of 
    COMMENT structure member sWidgetParm of structure ps_bar_graph is equal to NULL.
    COMMENT
    COMMENT Class 16
    COMMENT In Function BargraphUpdate, the value of structure member stat of structure member psParam of structure member of 
    COMMENT ps_bar_graph_def of structure ps_bar_graph is not lesser than PARAM_BAD and the value of structure member pText of 
    COMMENT structure member sWidgetParm of structure ps_bar_graph is not equal to NULL.
    COMMENT
    COMMENT Class 17
    COMMENT In Function BargraphUpdate, the value of structure member stat of structure member psParam of structure member of 
    COMMENT ps_bar_graph_def of structure ps_bar_graph is not lesser than PARAM_BAD and the value of structure member pText of 
    COMMENT structure member sWidgetParm of structure ps_bar_graph is equal to NULL.
    COMMENT
    COMMENT Class 18
    COMMENT In Function BargraphUpdate, 'WidgetsNumUpdate' function is called.
    COMMENT
    COMMENT Class 19
    COMMENT In Function BargraphUpdate, 'BinasGetWidth' function is called.
    COMMENT
    COMMENT Class 20
    COMMENT In Function BargraphUpdate, 'TextUpdate' function is called.
    COMMENT
    COMMENT Class 21
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD.
    COMMENT
    COMMENT Class 22
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD and the value of E_orientation is equal to E_PORTRAIT.
    COMMENT
    COMMENT Class 23
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD, the value of E_orientation is equal to E_PORTRAIT and value of bg_hv is equal to BG_VERTICAL.
    COMMENT
    COMMENT Class 24
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD, the value of E_orientation is equal to E_PORTRAIT and value of bg_hv is not equal to BG_VERTICAL.
    COMMENT
    COMMENT Class 25
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD and the value of E_orientation is not equal to E_PORTRAIT.
    COMMENT
    COMMENT Class 26
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD and value of bg_hv is equal to BG_VERTICAL.
    COMMENT
    COMMENT Class 27
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD, value of bg_hv is equal to BG_VERTICAL and the value of s16_length is lesser than ZERO.
    COMMENT
    COMMENT Class 28
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD, the value of bg_hv is equal to BG_VERTICAL, the value of s16_length is lesser than ZERO and the 
    COMMENT value of u8aaval is not equal to ZERO.
    COMMENT
    COMMENT Class 29
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD, the value of bg_hv is equal to BG_VERTICAL, the value of s16_length is lesser than ZERO and the 
    COMMENT value of u8aaval is equal to ZERO.
    COMMENT
    COMMENT Class 30
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD, value of bg_hv is equal to BG_VERTICAL and the value of s16_length is greater than ZERO.
    COMMENT
    COMMENT Class 31
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD, the value of bg_hv is equal to BG_VERTICAL, the value of s16_length is greater than ZERO and the 
    COMMENT value of u8aaval is not equal to ZERO.
    COMMENT
    COMMENT Class 32
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD, the value of bg_hv is equal to BG_VERTICAL, the value of s16_length is greater than ZERO and the 
    COMMENT value of u8aaval is equal to ZERO.
    COMMENT
    COMMENT Class 33
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD, value of bg_hv is equal to BG_VERTICAL and the value of s16_length is equal ZERO.
    COMMENT
    COMMENT Class 34
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD and value of bg_hv is not equal to BG_VERTICAL.
    COMMENT
    COMMENT Class 35
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD, value of bg_hv is not equal to BG_VERTICAL and the value of s16_length is lesser than ZERO.
    COMMENT
    COMMENT Class 36
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD, the value of bg_hv is not equal to BG_VERTICAL, the value of s16_length is lesser than ZERO and the 
    COMMENT value of u8aaval is not equal to ZERO.
    COMMENT
    COMMENT Class 37
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD, the value of bg_hv is not equal to BG_VERTICAL, the value of s16_length is lesser than ZERO and the 
    COMMENT value of u8aaval is equal to ZERO.
    COMMENT
    COMMENT Class 38
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD, value of bg_hv is not equal to BG_VERTICAL and the value of s16_length is greater than ZERO.
    COMMENT
    COMMENT Class 39
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD, the value of bg_hv is not equal to BG_VERTICAL, the value of s16_length is greater than ZERO and the 
    COMMENT value of u8aaval is not equal to ZERO.
    COMMENT
    COMMENT Class 40
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD, the value of bg_hv is not equal to BG_VERTICAL, the value of s16_length is greater than ZERO and the 
    COMMENT value of u8aaval is equal to ZERO.
    COMMENT
    COMMENT Class 41
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is 
    COMMENT lesser than PARAM_BAD, value of bg_hv is not equal to BG_VERTICAL and the value of s16_length is equal ZERO.
    COMMENT
    COMMENT Class 42
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is not 
    COMMENT lesser than PARAM_BAD.
    COMMENT
    COMMENT Class 43
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is not 
    COMMENT lesser than PARAM_BAD and the value of structure member psDisRegion of structure ps_bar_graph_def is not equal to ZERO.
    COMMENT
    COMMENT Class 44
    COMMENT In Function BargraphDraw, the value of structure member stat of structure member psParam of structure ps_bar_graph_def is not 
    COMMENT lesser than PARAM_BAD and the value of structure member psDisRegion of structure ps_bar_graph_def is equal to ZERO.
    COMMENT
    COMMENT Class 45
    COMMENT In Function BargraphDraw, 'Dma2dIsBusy' is called.
    COMMENT
    COMMENT Class 46
    COMMENT In Function BargraphDraw, 'PolygonFillRectNT' is called.
    COMMENT
    COMMENT Class 47
    COMMENT In Function BargraphDraw, 'WidgetsDotAddr' is called.
    COMMENT
    COMMENT Class 48
    COMMENT In Function BargraphDraw, 'Dma2dDrawChar' is called.
    COMMENT
    COMMENT Class 49
    COMMENT In Function BargraphDraw, 'WidgetsRedX' is called.
    COMMENT
    COMMENT Class 50
    COMMENT The Function BargraphClear, deallocate's the bar graphs.
    COMMENT
    COMMENT Invalid class(es)
    COMMENT
    COMMENT Class 51
    COMMENT The function BargraphAllocat is called with input parameter ps_bar_graph_def as NULL.
    COMMENT
    COMMENT </ECD>

--------------------------------------------------------------------------------
--
-- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
--
--------------------------------------------------------------------------------

SIMUL

DEFINE STUB hdudispfbargraphs_c
    
    #void WidgetsRedX(T_SDISREGION _no *ps_dis_region, T_SPOLY _no **Pps_poly_red_x)
    #{
    #    PTU_ps_dis_region  = ps_dis_region;
    #    PTU_Pps_poly_red_x = **Pps_poly_red_x;
    #}  
    
    #void Dma2dDrawChar(  const void _no *character_data, void _no *write_loc, T_UINT32 _in u32_width, T_UINT32 _in u32_height, T_UINT16 _in e_color) 
    #{   
    #   for(index1 = 0; index1<600;   index1++)
    #   {
    #       PTU_character_data[index1]=*(T_CHAR *)character_data;
    #       character_data++;
    #   }
    #    PTU_write_loc      = write_loc;
    #}
    
    #T_UINT32 WidgetsDotAddr(T_SDISLOC _no *ppoint_3)
    #{
    #    PTU_ppoint_3 = *ppoint_3;
    #} 
    
    #void PolygonFillRectNT(T_INT16 _in s16_ulx, T_INT16 _in s16_uly, T_INT16 _in s16_width, T_INT16 _in s16_height, T_EPENCOLOR _in e_color); 
    
    #T_INT16 S16_panel_height;
    
    #T_ELANDSCAPEORPORTRIAT E_orientation; 
    
    #T_INT16 Dma2dIsBusy(void); 
    
    #void TextUpdate(T_PTEXT _in p_text, T_EPENCOLOR _in e_pen_color, T_ETXFLASH _in e_tx_flash, T_ETXV _in e_txv); 
    
    #void WidgetsNumUpdate(T_PARAM_READING _no *param, T_SWIDGETPARAM _no *ps_widget_param,T_CHAR _no *ac_dig_text, T_UINT16 u16_format)
    #{
    #   for(index1 = 0; index1<30;   index1++)
    #   {
    #       PTU_ac_dig_text[index1]=*(T_CHAR *)ac_dig_text;
    #       ac_dig_text++;
    #   } 
    #
    #   PTU_param             = *param;
    #   PTU_ps_widget_param   = *ps_widget_param;
    #}
        
    #T_INT32 LookupTableLookup( const T_LOOKUP_TABLE _no *table, T_INT32 _in ind_var, T_PARAM_STAT _no *stat)
    #{
    #    PTU_table  = *table;
    #    PTU_stat   = *stat; 
    #} 
    
    #void WidgetsUpdateRT(T_PARAM_READING _in ps_param, T_SWIDGETPARAM _in ps_widget_parm); 
    
    --The input parameters *pps_handle_add and *pu8_string as made as _no since thet are pointer variables and they are verified using temporary variables. 
    #void TextAllocat(T_PTEXT _no *pps_handle_add, T_UINT8 _no *pu8_string, T_UINT16 _in u16_x0, T_UINT16 _in u16_y0, T_ETXALIGN _in e_tx_align, T_ETXFONT _in e_tx_font, T_EPENCOLOR _in e_pen_color, T_ETXV _in e_txv, T_ETXFLASH _in e_tx_flash)
    #{
    #     PTU_pps_handle_add = pps_handle_add;
    #     PTU_pu8_string     = pu8_string;
    #}
    
    --The input parameters *src and *dest as made as _no since thet are pointer variables and they are verified using temporary variables. 
    #T_INT8* BinasByteFormatInfoBE(void _no *src, T_UINT16 _in format, T_INT8 _no *dest)
    #{
    #    PTU_BinasByte_s16DisDig_src  = src;
    #    PTU_BinasByte_s16DisDig_dest = dest;
    #}
    
    #T_UINT16 BinasGetWidth(T_UINT16 _in format);
    
    --The input parameters pc_file and pc_message is made as _no since thet are pointer variables and they are verified using temporary variables.
    #void RterrWidget(T_CHAR * _no pc_file, T_INT8 _in s32_line_number, T_CHAR * _no pc_message) 
    #{
    #   for(index1 = 0; index1<100;   index1++)
    #   {
    #       PTU_rterr_file[index1]=*(T_CHAR *)pc_file;
    #       pc_file++;
    #   }
    #   for(index2 = 0; index2<100;   index2++)
    #   {
    #       PTU_rterr_message[index2]=*(T_CHAR *)pc_message;
    #       pc_message++;
    #   }
    #}

     END DEFINE

ELSE_SIMUL

    -- No action defined as of now if the module is not simulated

END SIMUL

--------------------------------------------------------------------------------
--
-- ENVIRONMENTS DECLARATIONS
--
--------------------------------------------------------------------------------
--IF HOST

-- No special things that have to be done on the host to run the test.

--ELSE

-- No action defined for the target execution as of now

--END IF
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
-- TESTED FILE ENVIRONMENT
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--
-- SERVICES DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Declaration of the service BargraphAllocat
--------------------------------------------------------------------------------

SERVICE BargraphAllocat
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_SBARGRAPHDEF    ps_bar_graph_def;   
    #T_SDISREGION      PTU_psDisRegion;
    #T_PARAM_READING   PTU_psparam;

    TEST 1
    FAMILY nominal

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphAllocat-DB-LLR-001]
        COMMENT The Function BargraphAllocat does nothing, when u16Width of ps_bar_graph_def is not greater than MAX_BAR_WIDTH.
        COMMENT Equivalence Class 2 
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphAllocat-DB-LLR-002]
        COMMENT The Function BargraphAllocat does nothing, when number of bargraphs installed is not equal to MAX_BARS.
        COMMENT Equivalence Class 4 
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphAllocat-DB-LLR-003]
        COMMENT The Function BargraphAllocat does the following.
        COMMENT 1. Set pointer to structure bar graph to address of a bar graph with index number of bargraph installed.
        COMMENT 2. Set ps_bar_graph_def of pointer to structure bar graph to ps_bar_graph_def 
        COMMENT 3. Set psbargraph of ps_bar_graph_def to  pointer to structure bar graph
        COMMENT 4. Set the decimal number to last 3 bits of u16Format of ps_bar_graph_def of ps_bar_graph right shifted by FOUR.
        COMMENT 5. Set reading value to result of COND1 divided by TEN,where 
        COMMENT    COND1 is sum of FIVE and product of fread of psParam of  ps_bar_graph_def,ONE_HUNDRED and 
        COMMENT    value of TEN raised to the decimal value.
        COMMENT 6. Set s32DisDig of sWidgetParm of  pointer to structure  bar graph to reading value.
        COMMENT 7. Set s32Dig of sWidgetParm of  pointer to structure  bar graph to reading value.
        COMMENT 8. Set s32Scaler of sWidgetParm of  pointer to structure  bar graph to to reading value.       
        COMMENT 9. Set s32ScalerStep of sWidgetParm of  pointer to structure bar graph to ZERO.
        COMMENT Equivalence Class None
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphAllocat-DB-LLR-005]
        COMMENT The Function BargraphAllocat set pText of sWidgetParm of pointer to structure bar graph to ZERO 
        COMMENT when return value of function BinasGetWidth with parameter u16Format of ps_bar_graph_def AND 
        COMMENT eFont of ps_bar_graph_def is not equal to TRUE (MCDC condition FT).      
        COMMENT Equivalence Class 6, 8  
        COMMENT </TD>

        #ps_bar_graph_def.psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                                            init = 12,                           ev = init

                VAR PTU_psparam.fread,                                                        init = 12.0,                         ev = init
                
                VAR PTU_psparam.stat,                                                         init = PARAM_OK,                     ev = init
                
                VAR ps_bar_graph_def.psParam,                                                 init = &PTU_psparam,                 ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def.u16Width,                                                init = 578,                          ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def.u16Format,                                               init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def.sDigOffset.u16X0,                                        init = 10,                           ev = init
                
                VAR ps_bar_graph_def.sDigOffset.u16Y0,                                        init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def.eFont,                                                   init = E_LARGE_FONT,                 ev = init
                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def.psbargraph))->ps_bar_graph_def,          init = NULL,                         ev = &ps_bar_graph_def
                                                                                              
            -- Stub Calls :
            SIMUL
        
                --STUB calls
                STUB BinasGetWidth(ps_bar_graph_def.u16Format)0
                      
            END SIMUL
        
            -- Calling the Unit Under Test :
            
            #BargraphAllocat(&ps_bar_graph_def);
            
        END ELEMENT
    
    END TEST -- TEST 1    
    
    TEST 2
    FAMILY nominal

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphAllocat-DB-LLR-001]
        COMMENT The Function BargraphAllocat calls the function RterrWidget with parameters __FILE__ , __LINE__ 
        COMMENT and string "Bar Graph Too Wide." when u16Width of ps_bar_graph_def is greater than MAX_BAR_WIDTH.
        COMMENT Equivalence Class 1, 5  
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphAllocat-DB-LLR-004]
        COMMENT The Function BargraphAllocat does the following when return value of function BinasGetWidth with 
        COMMENT parameter u16Format of ps_bar_graph_def AND eFont of ps_bar_graph_def is equal to TRUE.
        COMMENT 1. Call function BinasByteFormatInfoBE with parameters address of s32DisDig of sWidgetParm 
        COMMENT    of ps bar graph, u16Format of ps_bar_graph_def and acDigText of pointer to structure 
        COMMENT    bar graph to initialize the ascii reading.
        COMMENT 2. Call function TextAllocat with parameters pText of sWidgetParm of pointer to structure bar graph, 
        COMMENT    acDigText of pointer to structure bar graph, u16X0 of sDigOffset of ps_bar_graph_def, u16Y0 of 
        COMMENT    sDigOffset of ps_bar_graph_def, ALIGN_CENTER, eFont of ps_bar_graph_def , WHITE, V_NORMAL 
        COMMENT    and TX_NO_FLASH to initialize the digital display.      
        COMMENT Equivalence Class 6, 7, 9, 10  
        COMMENT </TD>

        #ps_bar_graph_def.psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                                            init = 12,                           ev = init

                VAR PTU_psparam.fread,                                                        init = 12.0,                         ev = init
                
                VAR PTU_psparam.stat,                                                         init = PARAM_OK,                     ev = init
                
                VAR ps_bar_graph_def.psParam,                                                 init = &PTU_psparam,                 ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def.u16Width,                                                init = 678,                          ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def.u16Format,                                               init = (T_UINT16)20,                 ev = init
                
                VAR ps_bar_graph_def.sDigOffset.u16X0,                                        init = 10,                           ev = init
                
                VAR ps_bar_graph_def.sDigOffset.u16Y0,                                        init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def.eFont,                                                   init = E_LARGE_FONT,                 ev = init
                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def.psbargraph))->ps_bar_graph_def,          init = NULL,                         ev = &ps_bar_graph_def
                                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def.psbargraph))->sWidgetParm.s32DisDig,     init = 10,                           ev = 1200
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def.psbargraph))->sWidgetParm.s32Dig,        init = 7,                            ev = 1200
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def.psbargraph))->sWidgetParm.s32Scaler,     init = 8,                            ev = 1200
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def.psbargraph))->sWidgetParm.s32ScalerStep, init = 9,                            ev = 0
                
                VAR PTU_BinasByte_s16DisDig_src,                                              init = NULL,                         ev = &(((T_PSBARGRAPH)(ps_bar_graph_def.psbargraph))->sWidgetParm.s32DisDig)
                
                VAR PTU_BinasByte_s16DisDig_dest,                                             init = NULL,                         ev = (T_INT8* )(((T_PSBARGRAPH)(ps_bar_graph_def.psbargraph))->acDigText)
                
                VAR PTU_pps_handle_add,                                                       init = NULL,                         ev = (T_PTEXT *)&(((T_PSBARGRAPH)(ps_bar_graph_def.psbargraph))->sWidgetParm.pText)
                
                VAR PTU_pu8_string,                                                           init = NULL,                         ev = (T_UINT8 *)((T_PSBARGRAPH)(ps_bar_graph_def.psbargraph))->acDigText
                
                VAR PTU_rterr_file,                                                           init = "RTERR FILE",                 ev = "temp"
                                
                VAR PTU_rterr_message,                                                        init = "RTERR MESSAGE",              ev = "Bar Graph Too Wide."
                                               
            -- Stub Calls :
            SIMUL
        
                --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def.u16Format)100
              
               STUB BinasByteFormatInfoBE(ps_bar_graph_def.u16Format)(T_INT8* )&ps_bar_graph_def.u16Width
              
               STUB TextAllocat((T_UINT16)(ps_bar_graph_def.sDigOffset.u16X0), (T_UINT16)(ps_bar_graph_def.sDigOffset.u16Y0), ALIGN_CENTER, ps_bar_graph_def.eFont, WHITE, V_NORMAL, TX_NO_FLASH)
        
               STUB RterrWidget(10)100
        
            END SIMUL
        
            -- Calling the Unit Under Test :

            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def);
            
        END ELEMENT
    
    END TEST -- TEST 2

--    TEST 3
--    FAMILY nominal
--
--        COMMENT Test Description
--        COMMENT <TD>
--        COMMENT [hdudispfbargraphs-BargraphAllocat-DB-LLR-002]
--        COMMENT The Function BargraphAllocat call the function RterrWidget with parameters __FILE__ , __LINE__ 
--        COMMENT and string "Too many bar graphs." when number of bargraphs installed is equal to MAX_BARS.
--        COMMENT Equivalence Class 3  
--        COMMENT
--        COMMENT [hdudispfbargraphs-BargraphAllocat-DB-LLR-003]
--        COMMENT The Function BargraphAllocat set pText of sWidgetParm of pointer to structure bar graph to 
--        COMMENT ZERO when return value of function BinasGetWidth with parameter u16Format of ps_bar_graph_def 
--        COMMENT AND eFont of ps_bar_graph_def is not equal to TRUE.(MCDC condition TF)    
--        COMMENT Equivalence Class 8  
--        COMMENT </TD>
--
--        #ps_bar_graph_def.psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;
--
--        ELEMENT
--        
--            COMMENT INPUT SECTION:
--                       
--                VAR PTU_psparam.r,                                                            init = 12,                           ev = init
--                
--                VAR PTU_psparam.stat,                                                         init = PARAM_OK,                     ev = init
--                
--                VAR ps_bar_graph_def.psParam,                                                 init = &PTU_psparam,                 ev = init
--                
--                --Holds the u16Width structure member value
--                VAR ps_bar_graph_def.u16Width,                                                init = 578,                          ev = init
--                                
--                --Holds the u16Format structure member value
--                VAR ps_bar_graph_def.u16Format,                                               init = (T_UINT16)10,                 ev = init
--                
--                VAR ps_bar_graph_def.sDigOffset.u16X0,                                        init = 10,                           ev = init
--                
--                VAR ps_bar_graph_def.sDigOffset.u16Y0,                                        init = 10,                           ev = init
--                
--                --Holds the eFont structure member value
--                VAR ps_bar_graph_def.eFont,                                                   init = 0,                            ev = init
--                                        
--            COMMENT INPUT/OUTPUT SECTION:
--        
--                --None              
--        
--            COMMENT OUTPUT SECTION:
--                                    
--                VAR PTU_rterr_file,                                                           init = "RTERR FILE",                 ev = "temp"
--                                
--                VAR PTU_rterr_message,                                                        init = "RTERR MESSAGE",              ev = "Too many bar graphs."
--                                               
--            -- Stub Calls :
--            SIMUL
--        
--               --STUB calls
--              STUB BinasGetWidth 1..29=>(ps_bar_graph_def.u16Format)100
--                          
--              STUB RterrWidget(10)100
--        
--            END SIMUL
--        
--            -- Calling the Unit Under Test :
--            #BargraphClear();
--            #for(index1=0;index1<31;index1++)
--            #BargraphAllocat(&ps_bar_graph_def);
--
--            #BargraphClear();
--            
--        END ELEMENT
--    
--    END TEST -- TEST 3

--    TEST 4
--    FAMILY nominal
--
--        COMMENT Test Description
--        COMMENT <TD>
--        COMMENT This test case is to test "BargraphAllocat" function with NULL input parameter.   
--        COMMENT Equivalence Class 51  
--        COMMENT </TD>
--
--        ELEMENT
--        
--            COMMENT INPUT SECTION:
--                       
--                --None
--                                        
--            COMMENT INPUT/OUTPUT SECTION:
--        
--                --None              
--        
--            COMMENT OUTPUT SECTION:
--                                    
--                --None
--                                               
--            -- Stub Calls :
--            SIMUL
--        
--               --STUB calls
--               --None
--        
--            END SIMUL
--        
--            -- Calling the Unit Under Test :
--            #BargraphAllocat(NULL);
--            
--        END ELEMENT
--    
--    END TEST -- TEST 4
    
END SERVICE -- BargraphAllocat

--------------------------------------------------------------------------------
-- Declaration of the service BargraphClear
--------------------------------------------------------------------------------
SERVICE BargraphClear
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_SBARGRAPHDEF    ps_bar_graph_def[4];   
    #T_SDISREGION      PTU_psDisRegion;
    #T_PARAM_READING   PTU_psparam;

    TEST 1
    FAMILY nominal

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphClear-DB-LLR-001]
        COMMENT The Function BargraphClear set psPolyRedX of As bar graph with index number of bargraphs installed minus one 
        COMMENT to ZERO and decrement number of bargraphs installed by one till number of bargraphs installed is not equal 
        COMMENT to zero. The while loop present in the function is exercised for 0 time.
        COMMENT Equivalence Class 50  
        COMMENT 
        COMMENT </TD>

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                                            init = 12,                           ev = init
                                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                --None                
                
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               --None
                      
            END SIMUL
        
            -- Calling the Unit Under Test :
            #BargraphClear();
            
        END ELEMENT
    
    END TEST -- TEST 1
    
    TEST 2
    FAMILY nominal

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphClear-DB-LLR-001]
        COMMENT The Function BargraphClear set psPolyRedX of As bar graph with index number of bargraphs installed minus one 
        COMMENT to ZERO and decrement number of bargraphs installed by one till number of bargraphs installed is not equal 
        COMMENT to zero. The while loop present in the function is exercised for 1 time.
        COMMENT Equivalence Class 50  
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                                               init = 12,                           ev = init
                
                VAR PTU_psparam.stat,                                                            init = PARAM_OK,                     ev = init
                
                VAR ps_bar_graph_def[0].psParam,                                                 init = &PTU_psparam,                 ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                                                init = 578,                          ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                                               init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                                        init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                                        init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                                                   init = E_LARGE_FONT,                 ev = init
                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          init = NULL,                         ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO
                                                                                              
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
                      
            END SIMUL
        
            -- Calling the Unit Under Test :
            #BargraphAllocat(&ps_bar_graph_def[0]);
            #BargraphClear();
            
        END ELEMENT
    
    END TEST -- TEST 2
    
    TEST 3
    FAMILY nominal

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphClear-DB-LLR-001]
        COMMENT The Function BargraphClear set psPolyRedX of As bar graph with index number of bargraphs installed minus one 
        COMMENT to ZERO and decrement number of bargraphs installed by one till number of bargraphs installed is not equal 
        COMMENT to zero. The while loop present in the function is exercised for 2 or more times.
        COMMENT Equivalence Class 50  
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;
        #ps_bar_graph_def[1].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;
        #ps_bar_graph_def[2].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;
        #ps_bar_graph_def[3].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;
	  #PTU_psparam.fread = 12;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                                               init = 12,                          ev = init
                
                VAR PTU_psparam.stat,                                                            init = PARAM_OK,                    ev = init
				
	          --VAR PTU_psparam.fread,                                                           init = 12,                          ev = init
                
                VAR ps_bar_graph_def[0].psParam,                                                 init = &PTU_psparam,                ev = init
                VAR ps_bar_graph_def[1].psParam,                                                 init = &PTU_psparam,                ev = init
                VAR ps_bar_graph_def[2].psParam,                                                 init = &PTU_psparam,                ev = init
                VAR ps_bar_graph_def[3].psParam,                                                 init = &PTU_psparam,                ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                                                init = 578,                         ev = init
                VAR ps_bar_graph_def[1].u16Width,                                                init = 58,                          ev = init
                VAR ps_bar_graph_def[2].u16Width,                                                init = 57,                          ev = init
                VAR ps_bar_graph_def[3].u16Width,                                                init = 5,                           ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                                               init = (T_UINT16)10,                ev = init
                VAR ps_bar_graph_def[1].u16Format,                                               init = (T_UINT16)10,                ev = init
                VAR ps_bar_graph_def[2].u16Format,                                               init = (T_UINT16)10,                ev = init
                VAR ps_bar_graph_def[3].u16Format,                                               init = (T_UINT16)10,                ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                                        init = 10,                          ev = init
                VAR ps_bar_graph_def[1].sDigOffset.u16X0,                                        init = 9,                           ev = init
                VAR ps_bar_graph_def[2].sDigOffset.u16X0,                                        init = 8,                           ev = init
                VAR ps_bar_graph_def[3].sDigOffset.u16X0,                                        init = 7,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                                        init = 10,                          ev = init
                VAR ps_bar_graph_def[1].sDigOffset.u16Y0,                                        init = 9,                           ev = init
                VAR ps_bar_graph_def[2].sDigOffset.u16Y0,                                        init = 8,                           ev = init
                VAR ps_bar_graph_def[3].sDigOffset.u16Y0,                                        init = 7,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                                                   init = E_LARGE_FONT,                ev = init
                VAR ps_bar_graph_def[1].eFont,                                                   init = E_LARGE_FONT,                ev = init
                VAR ps_bar_graph_def[2].eFont,                                                   init = E_LARGE_FONT,                ev = init
                VAR ps_bar_graph_def[3].eFont,                                                   init = E_LARGE_FONT,                ev = init
                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          init = NULL,                         ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[1].psbargraph))->ps_bar_graph_def,          init = NULL,                         ev = &ps_bar_graph_def[1]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[2].psbargraph))->ps_bar_graph_def,          init = NULL,                         ev = &ps_bar_graph_def[2]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[3].psbargraph))->ps_bar_graph_def,          init = NULL,                         ev = &ps_bar_graph_def[3]
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[1].psbargraph))->psPolyRedX,                init = (T_SPOLY *)1,                 ev = (T_SPOLY *)ZERO
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[2].psbargraph))->psPolyRedX,                init = (T_SPOLY *)10,                ev = (T_SPOLY *)ZERO
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[3].psbargraph))->psPolyRedX,                init = (T_SPOLY *)1000,              ev = (T_SPOLY *)ZERO
                                                                                              
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB BinasGetWidth(ps_bar_graph_def[1].u16Format)0
               STUB BinasGetWidth(ps_bar_graph_def[2].u16Format)0
               STUB BinasGetWidth(ps_bar_graph_def[3].u16Format)0
                      
            END SIMUL
        
            -- Calling the Unit Under Test :
            #BargraphAllocat(&ps_bar_graph_def[0]);
            #BargraphAllocat(&ps_bar_graph_def[1]);
            #BargraphAllocat(&ps_bar_graph_def[2]);
            #BargraphAllocat(&ps_bar_graph_def[3]);
            #BargraphClear();
            
        END ELEMENT
    
    END TEST -- TEST 3  

END SERVICE -- BargraphClear

--------------------------------------------------------------------------------
-- Declaration of the service BargraphDraw
--------------------------------------------------------------------------------
SERVICE BargraphDraw
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_SBARGRAPHDEF    ps_bar_graph_def[4];   
    #T_SDISREGION      PTU_psDisRegion;
    #T_PARAM_READING   PTU_psparam;
    #T_INT16           PTU_s16_height;
    #T_SDISLOC         PTU_ul_cor;
    #T_SRECTPOINT      PTU_psRP;
    #T_SPOLY           PTU_1_Pps_poly_red_x;

    TEST 1
    FAMILY nominal

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-001]
        COMMENT The function BargraphDraw initialize ps bar graph to As bar graph and loop number of 
        COMMENT bargraph installed and does the following (In this test case the for loop is executed for 0 time)
        COMMENT 1. Increment the ps bar graph by one 
        COMMENT 2. Set ps bar graph def to ps_bar_graph_def of ps bar graph
        COMMENT 3. Shall loop till return value of function Dma2dIsBusy is not zero when
        COMMENT    stat of psParam of ps bar graph def is less than PARAM_BAD.
        COMMENT 4. Set length to sLength of ps bar graph def
        COMMENT 5. Set origin bar to sOrigin of ps bar graph def
        COMMENT 6. Set background vertical horizantal to eBGHV of ps bar graph def
        COMMENT Equivalence Class 21 
        COMMENT </TD>

        ELEMENT
        
            COMMENT INPUT SECTION:
                 
                --As the Element section should contain the verification activity hence the dummy verification is performed.                 
                VAR PTU_psparam.r,                      init = 12,                           ev = init
                                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                --None                
                
            -- Stub Calls :
            SIMUL
       
               --None
                      
            END SIMUL
        
            -- Calling the Unit Under Test :
            #BargraphDraw();
            
        END ELEMENT
    
    END TEST -- TEST 1
    
    TEST 2
    FAMILY nominal

        COMMENT Test Description
        COMMENT <TD>
        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-001]
        COMMENT The function BargraphDraw initialize ps bar graph to As bar graph and loop number of 
        COMMENT bargraph installed and does the following (In this test case the for loop is executed for 
        COMMENT 1 time, i.e. the number of bargraphs allocated is one)
        COMMENT 1. Increment the ps bar graph by one 
        COMMENT 2. Set ps bar graph def to ps_bar_graph_def of ps bar graph
        COMMENT 3. Shall loop till return value of function Dma2dIsBusy is not zero when stat of psParam
        COMMENT    of ps bar graph def is less than PARAM_BAD(while loop is exercised for 2 or more times)
        COMMENT 4. Set length to sLength of ps bar graph def
        COMMENT 5. Set origin bar to sOrigin of ps bar graph def
        COMMENT 6. Set background vertical horizontal to eBGHV of ps bar graph def
        COMMENT Equivalence Class 21
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-002]
        COMMENT The function BargraphDraw initialize ps bar graph to As bar graph and loop number of 
        COMMENT bargraph installed and does the following when stat of psParam of ps bar graph def less 
        COMMENT than PARAM_BAD and E_orientation is equal to E_PORTRAIT.
        COMMENT 1. Set temporary variable to u16X0 of origin bar
        COMMENT 2. Set u16X0 of origin bar to u16Y0 of origin bar 
        COMMENT 3. Set u16Y0 of origin bar to S16_panel_height minus temporary variable.
        COMMENT 4. Set background vertical horizontal to BG_HORIZONTAL when background vertical horizontal is equal to BG_VERTICAL
        COMMENT Equivalence Class 22, 23
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-005]
        COMMENT The function BargraphAllocat initialize ps bar graph to As bar graph and loop number 
        COMMENT of bargraph installed and does following when stat of psParam of ps bar graph def less 
        COMMENT than PARAM_BAD and background vertical horizantal is not equal to BG_VERTICAL.
        COMMENT 1. Set anti alias value to absolute value of length MOD FOUR multiply by PIXEL_INC_A4_HOR.
        COMMENT 2. initialize temporary variable to zero and loop till temporary variable is less 
        COMMENT    than u16Width of ps bar graph def and increment temporary variable and set line for 
        COMMENT    anti alias with index temporary variable to anti alias.(for loop is exercised for 2 or more times)
        COMMENT 3. Set u16Y0 of upper left corner to u16Y0 of origin bar minus u16Width of ps bar graph def 
        COMMENT    divided by TWO.
        COMMENT 4. Set u16X0 of upper left corner to u16X0 of origin bar plus length divided by FOUR. 
        COMMENT    when length is less than ZERO
        COMMENT 5. Call function PolygonFillRectNT with parameter u16X0 of upper left corner, u16Y0 
        COMMENT    of upper left corner, minus length divide by FOUR, u16Width of ps bar graph def 
        COMMENT    and ePenColor of ps bar graph def when length is less than ZERO.
        COMMENT 6. Decrement u16X0 of upper left corner by one when lenght is less than ZERO and anti 
        COMMENT    alias is not equal to ZERO.
        COMMENT 7. Set corner address to return value of function WidgetsDotAddr with parameter address of 
        COMMENT    upper left corner when lenght is less than ZERO and anti alias is not equal to ZERO.
        COMMENT 8. Call function Dma2dDrawChar with parameter line for anti alias, corner address, 
        COMMENT    TWO, u16Width of ps bar graph def, ePenColor of ps bar graph def when lenght is less 
        COMMENT    than ZERO and anti alias is not equal to ZERO.
        COMMENT Equivalence Class 34, 27, 28, 35, 36, 39, 45, 46, 47, 48
        COMMENT     
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;
        
        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                        init = 12,                           ev = init
                
                VAR PTU_psparam.stat,                                     init = PARAM_OK,                     ev = init
                
                VAR ps_bar_graph_def[0].psParam,                          init = &PTU_psparam,                 ev = init                
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                         init = 100,                          ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                        init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                 init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                 init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                            init = E_LARGE_FONT,                 ev = init
                
                VAR E_orientation,                                        init = E_PORTRAIT,                   ev = init
                
                VAR ps_bar_graph_def[0].eBGHV,                            init = BG_VERTICAL,                  ev = init
                
                VAR ps_bar_graph_def[0].ePenColor,                        init = GRAY,                         ev = init
                
                VAR S16_panel_height,                                     init = 100,                          ev = init

                VAR ps_bar_graph_def[0].sOrigin.u16X0,                    init = 10,                           ev = init
                                 
                VAR ps_bar_graph_def[0].sOrigin.u16Y0,                    init = 20,                           ev = init
                                        
            COMMENT INPUT/OUTPUT SECTION:        
                
                VAR PTU_ppoint_3.u16X0,                                   init = 12,                           ev = -8172  
                VAR PTU_ppoint_3.u16Y0,                                   init = 12,                           ev = 40    
        
            COMMENT OUTPUT SECTION:
                
                --None
                
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB Dma2dIsBusy()1
               STUB Dma2dIsBusy()10
               STUB Dma2dIsBusy()0
               STUB WidgetsDotAddr()20
               STUB Dma2dDrawChar((T_UINT32)2, (T_UINT32)ps_bar_graph_def[0].u16Width, (T_UINT16)ps_bar_graph_def[0].ePenColor)
               STUB PolygonFillRectNT(-8171, 40, 8191, 100, (T_UINT16)ps_bar_graph_def[0].ePenColor)
                      
            END SIMUL
        
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
             -- Calling the Unit Under Test :
             #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sLength = -32765;
            #BargraphDraw();
            
        END ELEMENT
    
    END TEST -- TEST 2
    
    TEST 7
    FAMILY nominal  

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-007]
        COMMENT The Function BargraphDraw initialize ps bar graph to As bar graph and loop number of 
        COMMENT bargraph installed and does following when stat of psParam of ps bar graph def greater 
        COMMENT than or equal to PARAM_BAD and psDisRegion of ps bar graph def is not equal to ZERO.
        COMMENT 1. Call function WidgetsRedX with parameter psDisRegion of ps bar graph def and 
        COMMENT    address of psPolyRedX of ps bar graph.
        COMMENT Equivalence Class 42, 49, 43 
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                           init = 12,                           ev = init
                
                VAR PTU_psparam.stat,                                        init = PARAM_BAD,                    ev = init
                
                VAR ps_bar_graph_def[0].psParam,                             init = &PTU_psparam,                 ev = init
                
                VAR ps_bar_graph_def[0].sOrigin.u16X0,                       init = 10,                           ev = init
                                 
                VAR ps_bar_graph_def[0].sOrigin.u16Y0,                       init = 10,                           ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                            init = 1,                            ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                           init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                    init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                    init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                               init = E_LARGE_FONT,                 ev = init
                
                VAR E_orientation,                                           init = E_PORTRAIT,                   ev = init
                
                VAR ps_bar_graph_def[0].eBGHV,                               init = BG_VERTICAL,                  ev = init
                
                VAR ps_bar_graph_def[0].ePenColor,                           init = GRAY,                         ev = init
                
                VAR ps_bar_graph_def[0].psDisRegion,                         init = (T_SDISREGION *)&PTU_psDisRegion,        
                &                                                                                                  ev = init
                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                VAR PTU_ps_dis_region,                                       init = NULL,                         ev = (T_SDISREGION *)&PTU_psDisRegion
                VAR PTU_1_Pps_poly_red_x.s16Pts,                             init = 10,                           ev = init                
		    VAR PTU_Pps_poly_red_x.s16Pts,					     init = 0,                            ev = 10
          
        
            COMMENT OUTPUT SECTION:
                
                --None
       
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB WidgetsRedX()
                      
            END SIMUL
        
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
             -- Calling the Unit Under Test :
             #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sLength = -32765;
             #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX  = (T_SPOLY      *)&PTU_1_Pps_poly_red_x;
             
            #BargraphDraw();
            
        END ELEMENT
    
    END TEST -- TEST 7
    
    TEST 8  
    FAMILY nominal 

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-007]
        COMMENT The Function BargraphDraw initialize ps bar graph to As bar graph and loop number of 
        COMMENT bargraph installed and does nothing when stat of psParam of ps bar graph def greater 
        COMMENT than or equal to PARAM_BAD and psDisRegion of ps bar graph def is equal to ZERO.
        COMMENT Equivalence Class 42, 44  
        COMMENT </TD>

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                         init = 12,                           ev = init
                
                VAR PTU_psparam.stat,                                      init = PARAM_BAD,                    ev = init
                
                VAR ps_bar_graph_def[0].psParam,                           init = &PTU_psparam,                 ev = init
                
                VAR ps_bar_graph_def[0].sOrigin.u16X0,                     init = 10,                           ev = init
                                 
                VAR ps_bar_graph_def[0].sOrigin.u16Y0,                     init = 10,                           ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                          init = 100,                          ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                         init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                  init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                  init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                             init = E_LARGE_FONT,                 ev = init
                
                VAR E_orientation,                                         init = E_PORTRAIT,                   ev = init
                
                VAR ps_bar_graph_def[0].eBGHV,                             init = BG_VERTICAL,                  ev = init
                
                VAR ps_bar_graph_def[0].ePenColor,                         init = GRAY,                         ev = init
                
                VAR ps_bar_graph_def[0].psDisRegion,                       init = (T_SDISREGION *)ZERO,         ev = init
                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                --None
 
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
                      
            END SIMUL
        
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
             -- Calling the Unit Under Test :
             #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sLength = -32765;
            #BargraphDraw();
            
        END ELEMENT
    
    END TEST -- TEST 8
    
    TEST 3

    FAMILY nominal


        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-001]
        COMMENT The function BargraphAllocat initialize ps bar graph to As bar graph and loop number of 
        COMMENT bargraph installed and does the following (In this test case the for loop is executed for 
        COMMENT 2 or more times, i.e. the number of bargraphs allocated is 2 or more)
        COMMENT 1. Increment the ps bar graph by one 
        COMMENT 2. Set ps bar graph def to ps_bar_graph_def of ps bar graph
        COMMENT 3. Shall loop till return value of function Dma2dIsBusy is not zero when stat of psParam
        COMMENT    of ps bar graph def is less than PARAM_BAD(while loop is exercised for 1 time for each iteration)
        COMMENT 4. Set length to sLength of ps bar graph def
        COMMENT 5. Set origin bar to sOrigin of ps bar graph def
        COMMENT 6. Set background vertical horizontal to eBGHV of ps bar graph def
        COMMENT Equivalence Class 21, 45, 48
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;
        #ps_bar_graph_def[1].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;
        #ps_bar_graph_def[2].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;
        #ps_bar_graph_def[3].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                                               init = 12,                          ev = init
                
                VAR PTU_psparam.stat,                                                            init = PARAM_OK,                    ev = init
                
                VAR ps_bar_graph_def[0].psParam,                                                 init = &PTU_psparam,                ev = init
                VAR ps_bar_graph_def[1].psParam,                                                 init = &PTU_psparam,                ev = init
                VAR ps_bar_graph_def[2].psParam,                                                 init = &PTU_psparam,                ev = init
                VAR ps_bar_graph_def[3].psParam,                                                 init = &PTU_psparam,                ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                                                init = 579,                         ev = init
                VAR ps_bar_graph_def[1].u16Width,                                                init = 58,                          ev = init
                VAR ps_bar_graph_def[2].u16Width,                                                init = 57,                          ev = init
                VAR ps_bar_graph_def[3].u16Width,                                                init = 4,                           ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                                               init = (T_UINT16)10,                ev = init
                VAR ps_bar_graph_def[1].u16Format,                                               init = (T_UINT16)10,                ev = init
                VAR ps_bar_graph_def[2].u16Format,                                               init = (T_UINT16)10,                ev = init
                VAR ps_bar_graph_def[3].u16Format,                                               init = (T_UINT16)10,                ev = init
                                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                                                   init = E_LARGE_FONT,                ev = init
                VAR ps_bar_graph_def[1].eFont,                                                   init = E_LARGE_FONT,                ev = init
                VAR ps_bar_graph_def[2].eFont,                                                   init = E_LARGE_FONT,                ev = init
                VAR ps_bar_graph_def[3].eFont,                                                   init = E_LARGE_FONT,                ev = init
                
                VAR S16_panel_height,                                                            init = 100,                         ev = init
                
                VAR E_orientation,                                                               init = E_PORTRAIT,                  ev = init

                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                                        init = 10,                          ev = init
                VAR ps_bar_graph_def[1].sDigOffset.u16X0,                                        init = 9,                           ev = init
                VAR ps_bar_graph_def[2].sDigOffset.u16X0,                                        init = 8,                           ev = init
                VAR ps_bar_graph_def[3].sDigOffset.u16X0,                                        init = 7,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                                        init = 20,                          ev = init
                VAR ps_bar_graph_def[1].sDigOffset.u16Y0,                                        init = 15,                          ev = init
                VAR ps_bar_graph_def[2].sDigOffset.u16Y0,                                        init = 17,                          ev = init
                VAR ps_bar_graph_def[3].sDigOffset.u16Y0,                                        init = 72,                          ev = init
                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                VAR PTU_ppoint_3.u16X0,                                                          init = 12,                         ev = -8182  
                VAR PTU_ppoint_3.u16Y0,                                                          init = 12,                         ev = -199                
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          init = NULL,                        ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[1].psbargraph))->ps_bar_graph_def,          init = NULL,                        ev = &ps_bar_graph_def[1]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[2].psbargraph))->ps_bar_graph_def,          init = NULL,                        ev = &ps_bar_graph_def[2]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[3].psbargraph))->ps_bar_graph_def,          init = NULL,                        ev = &ps_bar_graph_def[3]
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                init = (T_SPOLY *)100,              ev = (T_SPOLY *)ZERO
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[1].psbargraph))->psPolyRedX,                init = (T_SPOLY *)1,                ev = (T_SPOLY *)ZERO
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[2].psbargraph))->psPolyRedX,                init = (T_SPOLY *)10,               ev = (T_SPOLY *)ZERO
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[3].psbargraph))->psPolyRedX,                init = (T_SPOLY *)1000,             ev = (T_SPOLY *)ZERO
                                                                                              
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB BinasGetWidth(ps_bar_graph_def[1].u16Format)0
               STUB BinasGetWidth(ps_bar_graph_def[2].u16Format)0
               STUB BinasGetWidth(ps_bar_graph_def[3].u16Format)0
               STUB Dma2dIsBusy()0
               STUB Dma2dIsBusy()0
               STUB Dma2dIsBusy()0
               STUB Dma2dIsBusy()0
               STUB WidgetsDotAddr()20
               STUB Dma2dDrawChar((T_UINT32)2, (T_UINT32)ps_bar_graph_def[0].u16Width, (T_UINT16)ps_bar_graph_def[0].ePenColor)
               STUB PolygonFillRectNT(-8181, -199, 8191, 579, 1000)
                      
            END SIMUL
        
            #BargraphClear();
            -- The function BargraphAllocat is called for bargraph installation:
            #BargraphAllocat(&ps_bar_graph_def[0]);
            #BargraphAllocat(&ps_bar_graph_def[1]);
            #BargraphAllocat(&ps_bar_graph_def[2]);
            #BargraphAllocat(&ps_bar_graph_def[3]);
            -- Calling the Unit Under Test :
            #BargraphDraw();
            
        END ELEMENT
    
    END TEST -- TEST 3   
    
    TEST 4 
    FAMILY nominal  
    
        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-004]
        COMMENT The function BargraphDraw initialize ps bar graph to As bar graph and loop number of 
        COMMENT bargraph installed and does following when stat of psParam of ps bar graph def less 
        COMMENT than PARAM_BAD and background vertical horizantal is equal to BG_VERTICAL and 
        COMMENT length is greater than zero.
        COMMENT 1. Set u16Y0 of upper left corner to u16Y0 of origin bar 
        COMMENT 2. Call function PolygonFillRectNT with parameter u16X0 of upper left corner, 
        COMMENT    u16Y0 of upper left corner, u16Width of ps bar graph def, minus length divide by 
        COMMENT    FOUR and ePenColor of ps bar graph def. 
        COMMENT 3. Set u16Y0 of upper left corner to u16Y0 of origin bar plus length divided by 
        COMMENT    FOUR when anti alias is not equal to ZERO.
        COMMENT 4. Set corner address to return value of WidgetsDotAddr with parameter address 
        COMMENT    of upper left corner.
        COMMENT 5. Call function Dma2dDrawChar with parameter line for anti alias, corner address 
        COMMENT    u16Width of ps bar graph def, one, ePenColor of ps bar graph def when anti 
        COMMENT    alias is not equal to ZERO.     
        COMMENT Equivalence Class 26, 27, 29, 45, 46, 47
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                             init = 12,                 ev = init
                
                VAR PTU_psparam.stat,                                          init = PARAM_OK,           ev = init
                
                VAR ps_bar_graph_def[0].psParam,                               init = &PTU_psparam,       ev = init
                
                VAR ps_bar_graph_def[0].sOrigin.u16X0,                         init = 10,                 ev = init
                                 
                VAR ps_bar_graph_def[0].sOrigin.u16Y0,                         init = 10,                 ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                              init = 2,                  ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                             init = (T_UINT16)10,       ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                      init = 10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                      init = 10,                 ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                                 init = E_LARGE_FONT,       ev = init
                
                VAR E_orientation,                                             init = E_PORTRAIT,         ev = init
                
                VAR ps_bar_graph_def[0].eBGHV,                                 init = BG_HORIZONTAL,      ev = init
             
                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                VAR PTU_s16_height,                                            init = 10,                 ev = init
                VAR PTU_ul_cor.u16Y0,                                          init = 10,                 ev = init
                VAR PTU_ul_cor.u16X0,                                          init = 10,                 ev = init
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          
                &                                                              init = NULL,               ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                
                &                                                              init = (T_SPOLY *)100,     ev = (T_SPOLY *)ZERO
         
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB Dma2dIsBusy()1
               STUB Dma2dIsBusy()10
               STUB Dma2dIsBusy()0
               STUB PolygonFillRectNT(9, 90, (T_INT16)ps_bar_graph_def[0].u16Width, 8190, 100)
                      
            END SIMUL
        
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
             -- Calling the Unit Under Test :
             #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sLength = -32760;
            #BargraphDraw();
            
        END ELEMENT
        
    END TEST -- TEST 4    
    
    TEST 5
    FAMILY nominal 

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-002]
        COMMENT The function BargraphDraw initialize ps bar graph to As bar graph and loop number of 
        COMMENT bargraph installed and does the following when stat of psParam of ps bar graph def less 
        COMMENT than PARAM_BAD and E_orientation is equal to E_PORTRAIT.
        COMMENT 1. Set temporary variable to u16X0 of origin bar
        COMMENT 2. Set u16X0 of origin bar to u16Y0 of origin bar 
        COMMENT 3. Set u16Y0 of origin bar to S16_panel_height minus temporary variable.
        COMMENT 5. Set background vertical horizontal to BG_VERTICAL and set length to minus 
        COMMENT    length when background vertical horizontal is not equal to BG_VERTICAL
        COMMENT Equivalence Class 22, 34
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-006]
        COMMENT The function BargraphDraw initialize ps bar graph to As bar graph and 
        COMMENT loop number of bargraph installed and does following when stat of psParam 
        COMMENT of ps bar graph def less than PARAM_BAD and background vertical horizantal 
        COMMENT is not equal to BG_VERTICAL and length is greater than zero.
        COMMENT 1. Set u16X0 of upper left corner to u16X0 of origin bar 
        COMMENT 2. Call function PolygonFillRectNT with parameter u16X0 of upper left corner, 
        COMMENT    u16Y0 of upper left corner, minus length divide by FOUR, u16Width of 
        COMMENT    ps bar graph def and ePenColor of ps bar graph def 
        COMMENT 3. Set corner address to return value of WidgetsDotAddr with parameter address 
        COMMENT    of upper left corner when anti alias is not equal to ZERO.
        COMMENT 4. Set corner address to return value of WidgetsDotAddr with parameter address 
        COMMENT    of upper left corner when anti alias is not equal to ZERO.
        COMMENT 5. Call function Dma2dDrawChar with parameter line for anti alias, corner address, 
        COMMENT    TWO, u16Width of ps bar graph def, ePenColor of ps bar graph def when anti alias 
        COMMENT    is not equal to ZERO.
        COMMENT Equivalence Class 38, 40, 45, 46, 47
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                             init = 12,                           ev = init
                
                VAR PTU_psparam.stat,                                          init = PARAM_OK,                     ev = init
                
                VAR ps_bar_graph_def[0].psParam,                               init = &PTU_psparam,                 ev = init
                
                VAR ps_bar_graph_def[0].sOrigin.u16X0,                         init = 10,                           ev = init
                                 
                VAR ps_bar_graph_def[0].sOrigin.u16Y0,                         init = 10,                           ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                              init = 1,                            ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                             init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                      init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                      init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                                 init = E_LARGE_FONT,                 ev = init
                
                VAR E_orientation,                                             init = E_PORTRAIT,                   ev = init
                
                VAR ps_bar_graph_def[0].eBGHV,                                 init = BG_VERTICAL,                  ev = init                
                                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          
                &                                                              init = NULL,                         ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                
                &                                                              init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO
        
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB Dma2dIsBusy()1
               STUB Dma2dIsBusy()10
               STUB Dma2dIsBusy()0               
               STUB PolygonFillRectNT(10, 90, 10, 1, 100)
                      
            END SIMUL
        
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
             -- Calling the Unit Under Test :
            #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sLength = 40;
            #BargraphDraw();
            
        END ELEMENT
    
    END TEST -- TEST 5
    
    TEST 6 
    FAMILY nominal  

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-004]
        COMMENT The function BargraphDraw initialize ps bar graph to As bar graph and loop number of 
        COMMENT bargraph installed and does following when stat of psParam of ps bar graph def less 
        COMMENT than PARAM_BAD and background vertical horizantal is equal to BG_VERTICAL and 
        COMMENT length is greater than zero.
        COMMENT 1. Set u16Y0 of upper left corner to u16Y0 of origin bar 
        COMMENT 2. Call function PolygonFillRectNT with parameter u16X0 of upper left corner, 
        COMMENT    u16Y0 of upper left corner, u16Width of ps bar graph def, minus length divide by 
        COMMENT    FOUR and ePenColor of ps bar graph def. 
        COMMENT 3. Set u16Y0 of upper left corner to u16Y0 of origin bar plus length divided by 
        COMMENT    FOUR when anti alias is not equal to ZERO.
        COMMENT 4. Set corner address to return value of WidgetsDotAddr with parameter address 
        COMMENT    of upper left corner.
        COMMENT 5. Call function Dma2dDrawChar with parameter line for anti alias, corner address 
        COMMENT    u16Width of ps bar graph def, one, ePenColor of ps bar graph def when anti 
        COMMENT    alias is not equal to ZERO.      
        COMMENT Equivalence Class 26, 27, 29, 45, 47
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH  *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                          init = 12,                           ev = init
                
                VAR PTU_psparam.stat,                                       init = PARAM_OK,                     ev = init
                
                VAR ps_bar_graph_def[0].psParam,                            init = &PTU_psparam,                 ev = init
                
                VAR ps_bar_graph_def[0].sOrigin.u16X0,                      init = 10,                           ev = init
                                 
                VAR ps_bar_graph_def[0].sOrigin.u16Y0,                      init = 10,                           ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                           init = 1,                            ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                          init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                   init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                   init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                              init = E_LARGE_FONT,                 ev = init
                
                VAR E_orientation,                                          init = E_PORTRAIT,                   ev = init
                
                VAR ps_bar_graph_def[0].eBGHV,                              init = BG_HORIZONTAL,                ev = init                
                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          
                &                                                           init = NULL,                         ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                
                &                                                           init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO
        
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB Dma2dIsBusy()1
               STUB Dma2dIsBusy()10
               STUB Dma2dIsBusy()0
               STUB PolygonFillRectNT(10, 90, 1, 10, 100)
                      
            END SIMUL
        
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
             -- Calling the Unit Under Test :
             #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sLength = -40;
            #BargraphDraw();
            
        END ELEMENT
    
    END TEST -- TEST 6   
    
    TEST 9 
    FAMILY nominal 

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-003]
        COMMENT The function BargraphDraw initialize ps bar graph to As bar graph and loop number of bargraph 
        COMMENT installed and does following when stat of psParam of ps bar graph def less than PARAM_BAD and 
        COMMENT background vertical horizantal is equal to BG_VERTICAL.
        COMMENT 1. Set anti alias value to absolute value of length MOD FOUR 
        COMMENT    multiply by PIXEL_INC_A4_VER.
        COMMENT 2. Shall initialize temporary variable to zero and loop till temporary variable is 
        COMMENT    less than u16Width of ps bar graph def divided by TWO and increment temporary 
        COMMENT    variable and set line for anti alias with index temporary variable to anti 
        COMMENT    alias.(for loop exercised for 1 time)
        COMMENT 3. Set u16X0 of upper left corner to u16X0 of origin bar minus u16Width of 
        COMMENT    ps bar graph def divided by TWO.
        COMMENT 4. Set u16Y0 of upper left corner to u16Y0 of origin bar plus length 
        COMMENT    divided by FOUR. when length is ZERO.
        COMMENT 5. Call function PolygonFillRectNT with parameter u16X0 of upper left corner, 
        COMMENT    u16Y0 of upper left corner, u16Width of ps bar graph def, minus length 
        COMMENT    divide by FOUR and ePenColor of ps bar graph def when length is less than ZERO.
        COMMENT 6. Decrement u16Y0 of upper left corner by one when lenght is less than ZERO and 
        COMMENT    anti alias is not equal to ZERO.
        COMMENT 7. Set corner address to return value of function WidgetsDotAddr with parameter 
        COMMENT    address of upper left corner when lenght is less than ZERO and anti alias is not 
        COMMENT    equal to ZERO.
        COMMENT 8. Call function Dma2dDrawChar with parameter line for anti alias, corner address 
        COMMENT    u16Width of ps bar graph def, one, ePenColor of ps bar graph def when lenght is 
        COMMENT    less than ZERO and anti alias is not equal to ZERO.structure bar graph to address of a 
        COMMENT    bar graph with index number of bargraph installed.      
        COMMENT Equivalence Class 23, 30, 31, 45, 46, 47, 48
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                              init = 12,                           ev = init
                
                VAR PTU_psparam.stat,                                           init = PARAM_OK,                     ev = init
                
                VAR ps_bar_graph_def[0].psParam,                                init = &PTU_psparam,                 ev = init
                
                VAR ps_bar_graph_def[0].sOrigin.u16X0,                          init = 10,                           ev = init
                                 
                VAR ps_bar_graph_def[0].sOrigin.u16Y0,                          init = 10,                           ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                               init = 100,                          ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                              init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                       init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                       init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                                  init = E_LARGE_FONT,                 ev = init
                
                VAR E_orientation,                                              init = E_LAND_SCAPE,                 ev = init
                
                VAR ps_bar_graph_def[0].eBGHV,                                  init = BG_HORIZONTAL,                ev = init
                                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                VAR PTU_ppoint_3.u16X0,                                   init = 12,                           ev = 201  
                VAR PTU_ppoint_3.u16Y0,                                   init = 12,                           ev = -40               
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          
                &                                                               init = NULL,                         ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                
                &                                                               init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO

            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB Dma2dIsBusy()1
               STUB Dma2dIsBusy()10
               STUB Dma2dIsBusy()0
               STUB WidgetsDotAddr()20
               STUB Dma2dDrawChar(2, 100, 100)
               STUB PolygonFillRectNT(10, -40, 191, 100, 100)
                      
            END SIMUL
        
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
             -- Calling the Unit Under Test :
             #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sLength = 765;
            #BargraphDraw();
            
        END ELEMENT
            
    END TEST -- TEST 9
    
    TEST 10 
    FAMILY nominal 

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-002]
        COMMENT The Function BargraphDraw shall initialize ps bar graph to As bar graph 
        COMMENT and loop number of bargraph installed and does nothing when stat of 
        COMMENT psParam of ps bar graph def less than PARAM_BAD and E_orientation is 
        COMMENT not equal to E_PORTRAIT.    
        COMMENT Equivalence Class 25, 33, 45 
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                            init = 12,                           ev = init
                
                VAR PTU_psparam.stat,                                         init = PARAM_OK,                     ev = init
                
                VAR ps_bar_graph_def[0].psParam,                              init = &PTU_psparam,                 ev = init
                
                VAR ps_bar_graph_def[0].sOrigin.u16X0,                        init = 10,                           ev = init
                                 
                VAR ps_bar_graph_def[0].sOrigin.u16Y0,                        init = 10,                           ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                             init = 100,                          ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                            init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                     init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                     init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                                init = E_LARGE_FONT,                 ev = init
                
                VAR E_orientation,                                            init = E_LAND_SCAPE,                 ev = init
                
                VAR ps_bar_graph_def[0].eBGHV,                                init = BG_HORIZONTAL,                ev = init
                                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          
                &                                                             init = NULL,                         ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                
                &                                                             init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO

            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB Dma2dIsBusy()1
               STUB Dma2dIsBusy()10
               STUB Dma2dIsBusy()0
                                     
            END SIMUL

            #BargraphClear();        
            #BargraphAllocat(&ps_bar_graph_def[0]);
             -- Calling the Unit Under Test :
             #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sLength = 0;
            #BargraphDraw();
            
        END ELEMENT
    
    END TEST -- TEST 10

    TEST 11 
    FAMILY nominal   

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-004]
        COMMENT The function BargraphDraw initialize ps bar graph to As bar graph and loop number of 
        COMMENT bargraph installed and does following when stat of psParam of ps bar graph def less 
        COMMENT than PARAM_BAD and background vertical horizantal is equal to BG_VERTICAL and 
        COMMENT length is greater than zero.
        COMMENT 1. Set u16Y0 of upper left corner to u16Y0 of origin bar 
        COMMENT 2. Call function PolygonFillRectNT with parameter u16X0 of upper left corner, 
        COMMENT    u16Y0 of upper left corner, u16Width of ps bar graph def, minus length divide by 
        COMMENT    FOUR and ePenColor of ps bar graph def. 
        COMMENT 3. Set u16Y0 of upper left corner to u16Y0 of origin bar plus length divided by 
        COMMENT    FOUR when anti alias is not equal to ZERO.
        COMMENT 4. Set corner address to return value of WidgetsDotAddr with parameter address 
        COMMENT    of upper left corner.
        COMMENT 5. Call function Dma2dDrawChar with parameter line for anti alias, corner address 
        COMMENT    u16Width of ps bar graph def, one, ePenColor of ps bar graph def when anti 
        COMMENT    alias is not equal to ZERO.      
        COMMENT Equivalence Class 27, 29, 45 
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                         init = 12,                           ev = init
                
                VAR PTU_psparam.stat,                                      init = PARAM_OK,                     ev = init
                
                VAR ps_bar_graph_def[0].psParam,                           init = &PTU_psparam,                 ev = init
                
                VAR ps_bar_graph_def[0].sOrigin.u16X0,                     init = 10,                           ev = init
                                 
                VAR ps_bar_graph_def[0].sOrigin.u16Y0,                     init = 10,                           ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                          init = 1,                            ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                         init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                  init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                  init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                             init = E_LARGE_FONT,                 ev = init
                
                VAR E_orientation,                                         init = E_PORTRAIT,                   ev = init
                
                VAR ps_bar_graph_def[0].eBGHV,                             init = BG_HORIZONTAL,                ev = init
                                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          
                &                                                          init = NULL,                         ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                
                &                                                          init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO
    
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB Dma2dIsBusy()1
               STUB Dma2dIsBusy()0
               STUB PolygonFillRectNT((T_INT16)10, 90, 1, 8192, 100)
                      
            END SIMUL
            
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
             -- Calling the Unit Under Test :
             #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sLength = -32768;
            #BargraphDraw();
            
        END ELEMENT
    
    END TEST -- TEST 11

    TEST 12
    FAMILY nominal  

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-005]
        COMMENT The function BargraphAllocat initialize ps bar graph to As bar graph and loop number 
        COMMENT of bargraph installed and does following when stat of psParam of ps bar graph def less 
        COMMENT than PARAM_BAD and background vertical horizantal is not equal to BG_VERTICAL.
        COMMENT 1. Set anti alias value to absolute value of length MOD FOUR multiply by PIXEL_INC_A4_HOR.
        COMMENT 2. initialize temporary variable to zero and loop till temporary variable is less 
        COMMENT    than u16Width of ps bar graph def and increment temporary variable and set line for 
        COMMENT    anti alias with index temporary variable to anti alias.(for loop is exercised for 2 or more times)
        COMMENT 3. Set u16Y0 of upper left corner to u16Y0 of origin bar minus u16Width of ps bar graph def 
        COMMENT    divided by TWO.
        COMMENT 4. Set u16X0 of upper left corner to u16X0 of origin bar plus length divided by FOUR. 
        COMMENT    when length is less than ZERO
        COMMENT 5. Call function PolygonFillRectNT with parameter u16X0 of upper left corner, u16Y0 
        COMMENT    of upper left corner, minus length divide by FOUR, u16Width of ps bar graph def 
        COMMENT    and ePenColor of ps bar graph def when length is less than ZERO.
        COMMENT 6. Decrement u16X0 of upper left corner by one when lenght is less than ZERO and anti 
        COMMENT    alias is not equal to ZERO.
        COMMENT 7. Set corner address to return value of function WidgetsDotAddr with parameter address of 
        COMMENT    upper left corner when lenght is less than ZERO and anti alias is not equal to ZERO.
        COMMENT 8. Call function Dma2dDrawChar with parameter line for anti alias, corner address, 
        COMMENT    TWO, u16Width of ps bar graph def, ePenColor of ps bar graph def when lenght is less 
        COMMENT    than ZERO and anti alias is not equal to ZERO.
        COMMENT Equivalence Class 35, 37, 41, 45, 47
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                        init = 12,                           ev = init
                
                VAR PTU_psparam.stat,                                     init = PARAM_OK,                     ev = init
                
                VAR ps_bar_graph_def[0].psParam,                          init = &PTU_psparam,                 ev = init
                
                VAR ps_bar_graph_def[0].sOrigin.u16X0,                    init = 10,                           ev = init
                                 
                VAR ps_bar_graph_def[0].sOrigin.u16Y0,                    init = 10,                           ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                         init = 100,                          ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                        init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                 init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                 init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                            init = E_LARGE_FONT,                 ev = init
                
                VAR E_orientation,                                        init = E_PORTRAIT,                   ev = init
                
                VAR ps_bar_graph_def[0].eBGHV,                            init = BG_VERTICAL,                  ev = init
                                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          
                &                                                         init = NULL,                         ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                
                &                                                         init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO
     
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB Dma2dIsBusy()1
               STUB Dma2dIsBusy()10
               STUB Dma2dIsBusy()0
               STUB PolygonFillRectNT(-8182, 40, 8192, 100, 100)
                      
            END SIMUL
        
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
             -- Calling the Unit Under Test :
             #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sLength = -32768;
            #BargraphDraw();
            
        END ELEMENT
    
    END TEST -- TEST 12

    TEST 13
    FAMILY nominal  

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-005]
        COMMENT The function BargraphAllocat initialize ps bar graph to As bar graph and loop number 
        COMMENT of bargraph installed and does following when stat of psParam of ps bar graph def less 
        COMMENT than PARAM_BAD and background vertical horizantal is not equal to BG_VERTICAL.
        COMMENT 1. Set anti alias value to absolute value of length MOD FOUR multiply by PIXEL_INC_A4_HOR.
        COMMENT 2. initialize temporary variable to zero and loop till temporary variable is less 
        COMMENT    than u16Width of ps bar graph def and increment temporary variable and set line for 
        COMMENT    anti alias with index temporary variable to anti alias.(for loop is exercised for 0 times)
        COMMENT 3. Set u16Y0 of upper left corner to u16Y0 of origin bar minus u16Width of ps bar graph def 
        COMMENT    divided by TWO.
        COMMENT 4. Set u16X0 of upper left corner to u16X0 of origin bar plus length divided by FOUR. 
        COMMENT    when length is less than ZERO
        COMMENT 5. Call function PolygonFillRectNT with parameter u16X0 of upper left corner, u16Y0 
        COMMENT    of upper left corner, minus length divide by FOUR, u16Width of ps bar graph def 
        COMMENT    and ePenColor of ps bar graph def when length is less than ZERO.
        COMMENT 6. Decrement u16X0 of upper left corner by one when lenght is less than ZERO and anti 
        COMMENT    alias is not equal to ZERO.
        COMMENT 7. Set corner address to return value of function WidgetsDotAddr with parameter address of 
        COMMENT    upper left corner when lenght is less than ZERO and anti alias is not equal to ZERO.
        COMMENT 8. Call function Dma2dDrawChar with parameter line for anti alias, corner address, 
        COMMENT    TWO, u16Width of ps bar graph def, ePenColor of ps bar graph def when lenght is less 
        COMMENT    than ZERO and anti alias is not equal to ZERO.
        COMMENT Equivalence Class 45, 46, 47  
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                        init = 12,                           ev = init
                
                VAR PTU_psparam.stat,                                     init = PARAM_OK,                     ev = init
                
                VAR ps_bar_graph_def[0].psParam,                          init = &PTU_psparam,                 ev = init
                
                VAR ps_bar_graph_def[0].sOrigin.u16X0,                    init = 10,                           ev = init
                                 
                VAR ps_bar_graph_def[0].sOrigin.u16Y0,                    init = 10,                           ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                         init = 0,                          ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                        init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                 init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                 init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                            init = E_LARGE_FONT,                 ev = init
                
                VAR E_orientation,                                        init = E_PORTRAIT,                   ev = init
                
                VAR ps_bar_graph_def[0].eBGHV,                            init = BG_VERTICAL,                  ev = init
                                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          
                &                                                         init = NULL,                         ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                
                &                                                         init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO
     
            -- Stub Calls :
            SIMUL
        
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB Dma2dIsBusy()1
               STUB Dma2dIsBusy()10
               STUB Dma2dIsBusy()0
               STUB PolygonFillRectNT(-8182, 90, 8192, 0, 100)
                      
            END SIMUL
        
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
             -- Calling the Unit Under Test :
             #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sLength = -32768;
            #BargraphDraw();
            
        END ELEMENT
    
    END TEST -- TEST 13

    TEST 14 
    FAMILY nominal   

        COMMENT Test Description
        COMMENT <TD>
         COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-004]
        COMMENT The function BargraphDraw initialize ps bar graph to As bar graph and loop number of 
        COMMENT bargraph installed and does following when stat of psParam of ps bar graph def less 
        COMMENT than PARAM_BAD and background vertical horizantal is equal to BG_VERTICAL and 
        COMMENT length is greater than zero.
        COMMENT 1. Set u16Y0 of upper left corner to u16Y0 of origin bar 
        COMMENT 2. Call function PolygonFillRectNT with parameter u16X0 of upper left corner, 
        COMMENT    u16Y0 of upper left corner, u16Width of ps bar graph def, minus length divide by 
        COMMENT    FOUR and ePenColor of ps bar graph def. 
        COMMENT 3. Anti alias value is 0. 
        COMMENT Equivalence class 26, 30, 32, 45
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                         init = 12,                           ev = init
                
                VAR PTU_psparam.stat,                                      init = PARAM_OK,                     ev = init
                
                VAR ps_bar_graph_def[0].psParam,                           init = &PTU_psparam,                 ev = init
                
                VAR ps_bar_graph_def[0].sOrigin.u16X0,                     init = 10,                           ev = init
                                 
                VAR ps_bar_graph_def[0].sOrigin.u16Y0,                     init = 10,                           ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                          init = 1,                            ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                         init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                  init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                  init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                             init = E_LARGE_FONT,                 ev = init
                
                VAR E_orientation,                                         init = E_PORTRAIT,                   ev = init
                
                VAR ps_bar_graph_def[0].eBGHV,                             init = BG_HORIZONTAL,                ev = init
                                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          
                &                                                          init = NULL,                         ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                
                &                                                          init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO
    
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB Dma2dIsBusy()1
               STUB Dma2dIsBusy()0
               STUB PolygonFillRectNT((T_INT16)10, -10, 1, 100, 100)
                      
            END SIMUL
            
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
             -- Calling the Unit Under Test :
             #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sLength = 400;
            #BargraphDraw();
            
        END ELEMENT
    
    END TEST -- TEST 14

    TEST 15 
    FAMILY nominal   

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-003]
        COMMENT The function BargraphDraw initialize ps bar graph to As bar graph and loop number of bargraph 
        COMMENT installed and does following when stat of psParam of ps bar graph def less than PARAM_BAD and 
        COMMENT background vertical horizantal is equal to BG_VERTICAL.
        COMMENT 1. Set anti alias value to absolute value of length MOD FOUR 
        COMMENT    multiply by PIXEL_INC_A4_VER.
        COMMENT 2. Shall initialize temporary variable to zero and loop till temporary variable is 
        COMMENT    less than u16Width of ps bar graph def divided by TWO and increment temporary 
        COMMENT    variable and set line for anti alias with index temporary variable to anti 
        COMMENT    alias.(for loop exercised for 1 time)
        COMMENT 3. Set u16X0 of upper left corner to u16X0 of origin bar minus u16Width of 
        COMMENT    ps bar graph def divided by TWO.
        COMMENT 4. Set u16Y0 of upper left corner to u16Y0 of origin bar plus length 
        COMMENT    divided by FOUR. when length is ZERO.
        COMMENT 5. Call function PolygonFillRectNT with parameter u16X0 of upper left corner, 
        COMMENT    u16Y0 of upper left corner, u16Width of ps bar graph def, minus length 
        COMMENT    divide by FOUR and ePenColor of ps bar graph def when length is less than ZERO.
        COMMENT 6. Anti alias value is 0.      
        COMMENT Equivalence Class 23, 27, 28, 45, 48
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                         init = 12,                           ev = init
                
                VAR PTU_psparam.stat,                                      init = PARAM_OK,                     ev = init
                
                VAR ps_bar_graph_def[0].psParam,                           init = &PTU_psparam,                 ev = init
                
                VAR ps_bar_graph_def[0].sOrigin.u16X0,                     init = 10,                           ev = init
                                 
                VAR ps_bar_graph_def[0].sOrigin.u16Y0,                     init = 10,                           ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                          init = 1,                            ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                         init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                  init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                  init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                             init = E_LARGE_FONT,                 ev = init
                
                VAR E_orientation,                                         init = E_PORTRAIT,                   ev = init
                
                VAR ps_bar_graph_def[0].eBGHV,                             init = BG_HORIZONTAL,                ev = init
                                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                VAR PTU_ppoint_3.u16X0,                                   init = 12,                           ev = 10  
                VAR PTU_ppoint_3.u16Y0,                                   init = 12,                           ev = 190              
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          
                &                                                          init = NULL,                         ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                
                &                                                          init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO
    
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB Dma2dIsBusy()1
               STUB Dma2dIsBusy()0
               STUB PolygonFillRectNT((T_INT16)10, 90, 1, 100, 100)
               STUB WidgetsDotAddr()20
               STUB Dma2dDrawChar(1, 1, 100)
                      
            END SIMUL
            
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
             -- Calling the Unit Under Test :
             #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sLength = -401;
            #BargraphDraw();
            
        END ELEMENT
    
    END TEST -- TEST 15

    TEST 16 
    FAMILY nominal   

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphDraw-DB-LLR-004]
        COMMENT The function BargraphDraw initialize ps bar graph to As bar graph and loop number of 
        COMMENT bargraph installed and does following when stat of psParam of ps bar graph def less 
        COMMENT than PARAM_BAD and background vertical horizantal is equal to BG_VERTICAL and 
        COMMENT length is greater than zero.
        COMMENT 1. Set u16Y0 of upper left corner to u16Y0 of origin bar 
        COMMENT 2. Call function PolygonFillRectNT with parameter u16X0 of upper left corner, 
        COMMENT    u16Y0 of upper left corner, u16Width of ps bar graph def, minus length divide by 
        COMMENT    FOUR and ePenColor of ps bar graph def. 
        COMMENT 3. Set u16Y0 of upper left corner to u16Y0 of origin bar plus length divided by 
        COMMENT    FOUR when anti alias is not equal to ZERO.
        COMMENT 4. Set corner address to return value of WidgetsDotAddr with parameter address 
        COMMENT    of upper left corner.
        COMMENT 5. Call function Dma2dDrawChar with parameter line for anti alias, corner address 
        COMMENT    u16Width of ps bar graph def, one, ePenColor of ps bar graph def when anti 
        COMMENT    alias is not equal to ZERO.      
        COMMENT Equivalence Class 26, 30, 31, 46, 47, 48  
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                         init = 12,                           ev = init
                
                VAR PTU_psparam.stat,                                      init = PARAM_OK,                     ev = init
                
                VAR ps_bar_graph_def[0].psParam,                           init = &PTU_psparam,                 ev = init
                
                VAR ps_bar_graph_def[0].sOrigin.u16X0,                     init = 10,                           ev = init
                                 
                VAR ps_bar_graph_def[0].sOrigin.u16Y0,                     init = 10,                           ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                          init = 1,                            ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                         init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                  init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                  init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                             init = E_LARGE_FONT,                 ev = init
                
                VAR E_orientation,                                         init = E_PORTRAIT,                   ev = init
                
                VAR ps_bar_graph_def[0].eBGHV,                             init = BG_HORIZONTAL,                ev = init
                                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                VAR PTU_ppoint_3.u16X0,                                   init = 12,                           ev = 10  
                VAR PTU_ppoint_3.u16Y0,                                   init = 12,                           ev = -11              
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          
                &                                                          init = NULL,                         ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                
                &                                                          init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO
    
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB Dma2dIsBusy()1
               STUB Dma2dIsBusy()0
               STUB PolygonFillRectNT((T_INT16)10, -10, 1, 100, 100)
               STUB WidgetsDotAddr()20
               STUB Dma2dDrawChar(1, 1, 100)
                      
            END SIMUL
            
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
             -- Calling the Unit Under Test :
             #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sLength = 401;
            #BargraphDraw();
            
        END ELEMENT
    
    END TEST -- TEST 16

END SERVICE -- BargraphDraw

--------------------------------------------------------------------------------
-- Declaration of the service BargraphUpdate
--------------------------------------------------------------------------------
SERVICE BargraphUpdate
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_SBARGRAPHDEF    ps_bar_graph_def[14];   
    #T_SDISREGION      PTU_psDisRegion;
    #T_PARAM_READING   PTU_psparam;
    #T_PTEXT           PTU_pText;
    #T_SWIDGETPARAM    PTU_sWidgetParm;

    TEST 1

    FAMILY nominal

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-001]
        COMMENT The Function BargraphUpdate does nothting, As the number of bargraphs installed is 0.
        COMMENT This test case is used to exercise the for loops present in the function for 0 time.
        COMMENT Equivalence Class None 
        COMMENT </TD>

        ELEMENT
        
            COMMENT INPUT SECTION:
                 
                --Dummy variable check as the tool does not allow to continue without any verification				 
                VAR PTU_psparam.r,                       init = 12,                           ev = init
                                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                --None                
                
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               --None
                      
            END SIMUL
        
            -- Calling the Unit Under Test :
            #BargraphClear();
            #BargraphUpdate();
            
        END ELEMENT
    
    END TEST -- TEST 1
    
    TEST 2
    FAMILY nominal

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-001]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and does the following
        COMMENT 1. Set ps bar graph to address of As bar graph with index bar counter 
        COMMENT 2. Set the decimal number to last 3 bits of u16Format of ps_bar_graph_def 
        COMMENT    of ps_bar_graph right shifted by FOUR.
        COMMENT 3. Set member r of psParam of ps_bar_graph_def of ps_bar_graph to result of 
        COMMENT    COND1 divided by TEN,where COND1 is sum of FIVE and product of fread of 
        COMMENT    psParam of  ps_bar_graph_def,ONE_HUNDRED and value of TEN raised to 
        COMMENT    the decimal value.
        COMMENT 4. call the function WidgetsUpdateRT with parameter psParam of ps_bar_graph_def 
        COMMENT    of ps bar graph and address of sWidgetParm of ps bar graph.
        COMMENT This test case is used to exercise the for loops present in the function for 1 time.
        COMMENT Equivalence Class 11
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-002]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and set ps bar graph 
        COMMENT to address of As bar graph with index bar counter and Set sLength of ps bar graph to return 
        COMMENT value of function LookupTableLookup with parameter  psGeometry of ps_bar_graph_def of 
        COMMENT ps bar graph, s32Scaler of sWidgetParm of ps bar graph and address of temp status.
        COMMENT This test case is used to exercise the for loops present in the function for 1 time.
        COMMENT Equivalence Class 52
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-003]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and does nothing
        COMMENT when pText of sWidgetParm of ps bar graph equal to null and stat of psParam of 
        COMMENT ps_bar_graph_def of ps bar graph is less than PARAM_BAD.
        COMMENT This test case is used to exercise the for loops present in the function for 1 time.
        COMMENT Equivalence Class 13, 15		
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                                               init = 12,                           ev = 120
                
                VAR PTU_psparam.fread,                                                           init = 12.0,                         ev = init                

                VAR PTU_psparam.stat,                                                            init = PARAM_OK,                     ev = init
                
                VAR ps_bar_graph_def[0].psParam,                                                 init = &PTU_psparam,                 ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                                                init = 578,                          ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                                               init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                                        init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                                        init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                                                   init = E_LARGE_FONT,                 ev = init
                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                VAR ps_bar_graph_def[0].psParam->r,                                              init = 10,                           ev = 120
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          init = NULL,                         ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO
                                                                                              
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB LookupTableLookup(120)20
               STUB WidgetsUpdateRT(PTU_psparam, PTU_sWidgetParm)
               STUB WidgetsNumUpdate(10)
                      
            END SIMUL
        
            -- Calling the Unit Under Test :
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
           -- #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sWidgetParm.s32Scaler = 120;
           -- #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sWidgetParm.s32Dig = 120;
            --#ps_bar_graph_def[0].psParam->r = 120;
            #BargraphUpdate();

            
        END ELEMENT
    
    END TEST -- TEST 2

    TEST 4
    FAMILY nominal

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-001]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and does the following
        COMMENT 1. Set ps bar graph to address of As bar graph with index bar counter 
        COMMENT 2. Set the decimal number to last 3 bits of u16Format of ps_bar_graph_def 
        COMMENT    of ps_bar_graph right shifted by FOUR.
        COMMENT 3. Set member r of psParam of ps_bar_graph_def of ps_bar_graph to result of 
        COMMENT    COND1 divided by TEN,where COND1 is sum of FIVE and product of fread of 
        COMMENT    psParam of  ps_bar_graph_def,ONE_HUNDRED and value of TEN raised to 
        COMMENT    the decimal value.
        COMMENT 4. call the function WidgetsUpdateRT with parameter psParam of ps_bar_graph_def 
        COMMENT    of ps bar graph and address of sWidgetParm of ps bar graph.
        COMMENT This test case is used to exercise the for loops present in the function for 1 time.
        COMMENT Equivalence Class 11
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-002]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and set ps bar graph 
        COMMENT to address of As bar graph with index bar counter and Set sLength of ps bar graph to return 
        COMMENT value of function LookupTableLookup with parameter  psGeometry of ps_bar_graph_def of 
        COMMENT ps bar graph, s32Scaler of sWidgetParm of ps bar graph and address of temp status.
        COMMENT This test case is used to exercise the for loops present in the function for 1 time.
        COMMENT Equivalence Class 52
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-003]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and call 
        COMMENT function WidgetsNumUpdate with parameter psParam of ps_bar_graph_def of ps bar graph, 
        COMMENT address of sWidgetParm of ps bar graph, acDigText of ps bar graph and u16Format of 
        COMMENT ps_bar_graph_def of ps bar graph when pText of sWidgetParm of ps bar graph not equal 
        COMMENT to null and stat of psParam of ps_bar_graph_def of ps bar graph is less than PARAM_BAD.
        COMMENT This test case is used to exercise the for loops present in the function for 1 time.
        COMMENT Equivalence Class 13, 14, 18 
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                                               init = 12,                           ev = init

                VAR PTU_psparam.fread,                                                           init = 12.0,                         ev = init                

                VAR PTU_psparam.stat,                                                            init = PARAM_OK,                     ev = init
                
                VAR ps_bar_graph_def[0].psParam,                                                 init = &PTU_psparam,                 ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                                                init = 578,                          ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                                               init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                                        init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                                        init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                                                   init = E_LARGE_FONT,                 ev = init
                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          init = NULL,                         ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO
                                                                                              
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB LookupTableLookup(120)20
               STUB WidgetsUpdateRT(PTU_psparam, PTU_sWidgetParm)
               STUB WidgetsNumUpdate(10)
                      
            END SIMUL
        
            -- Calling the Unit Under Test :
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
            #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sWidgetParm.pText = (T_PTEXT     *)&PTU_pText;
            #BargraphUpdate();
            
        END ELEMENT
    
    END TEST -- TEST 4
    
--    TEST 3
--
--    FAMILY nominal
--
--
--        COMMENT Test Description
--        COMMENT <TD>
--        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-001]
--        COMMENT The Function BargraphUpdate does nothting, when u16Width of ps_bar_graph_def is not greater than MAX_BAR_WIDTH.
--        COMMENT Equivalence Class 2   
--        COMMENT </TD>
--
--        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;
--        #ps_bar_graph_def[1].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;
--        #ps_bar_graph_def[2].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;
--        #ps_bar_graph_def[3].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;
--
--        ELEMENT
--        
--            COMMENT INPUT SECTION:
--                       
--                VAR PTU_psparam.r,                                                               init = 12,                          ev = init
--
--                VAR PTU_psparam.fread,                                                           init = 12.0,                          ev = init
--                
--                VAR PTU_psparam.stat,                                                            init = PARAM_OK,                    ev = init
--                
--                VAR ps_bar_graph_def[0].psParam,                                                 init = &PTU_psparam,                ev = init
--                VAR ps_bar_graph_def[1].psParam,                                                 init = &PTU_psparam,                ev = init
--                VAR ps_bar_graph_def[2].psParam,                                                 init = &PTU_psparam,                ev = init
--                VAR ps_bar_graph_def[3].psParam,                                                 init = &PTU_psparam,                ev = init
--                
--                --Holds the u16Width structure member value
--                VAR ps_bar_graph_def[0].u16Width,                                                init = 578,                         ev = init
--                VAR ps_bar_graph_def[1].u16Width,                                                init = 58,                          ev = init
--                VAR ps_bar_graph_def[2].u16Width,                                                init = 57,                          ev = init
--                VAR ps_bar_graph_def[3].u16Width,                                                init = 5,                           ev = init
--                                
--                --Holds the u16Format structure member value
--                VAR ps_bar_graph_def[0].u16Format,                                               init = (T_UINT16)10,                ev = init
--                VAR ps_bar_graph_def[1].u16Format,                                               init = (T_UINT16)10,                ev = init
--                VAR ps_bar_graph_def[2].u16Format,                                               init = (T_UINT16)10,                ev = init
--                VAR ps_bar_graph_def[3].u16Format,                                               init = (T_UINT16)10,                ev = init
--                
--                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                                        init = 10,                          ev = init
--                VAR ps_bar_graph_def[1].sDigOffset.u16X0,                                        init = 9,                           ev = init
--                VAR ps_bar_graph_def[2].sDigOffset.u16X0,                                        init = 8,                           ev = init
--                VAR ps_bar_graph_def[3].sDigOffset.u16X0,                                        init = 7,                           ev = init
--                
--                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                                        init = 10,                          ev = init
--                VAR ps_bar_graph_def[1].sDigOffset.u16Y0,                                        init = 9,                           ev = init
--                VAR ps_bar_graph_def[2].sDigOffset.u16Y0,                                        init = 8,                           ev = init
--                VAR ps_bar_graph_def[3].sDigOffset.u16Y0,                                        init = 7,                           ev = init
--                
--                --Holds the eFont structure member value
--                VAR ps_bar_graph_def[0].eFont,                                                   init = E_LARGE_FONT,                ev = init
--                VAR ps_bar_graph_def[1].eFont,                                                   init = E_LARGE_FONT,                ev = init
--                VAR ps_bar_graph_def[2].eFont,                                                   init = E_LARGE_FONT,                ev = init
--                VAR ps_bar_graph_def[3].eFont,                                                   init = E_LARGE_FONT,                ev = init
--                                        
--            COMMENT INPUT/OUTPUT SECTION:
--        
--                --None              
--        
--            COMMENT OUTPUT SECTION:
--                
--                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          init = NULL,                         ev = &ps_bar_graph_def[0]
--                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[1].psbargraph))->ps_bar_graph_def,          init = NULL,                         ev = &ps_bar_graph_def[1]
--                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[2].psbargraph))->ps_bar_graph_def,          init = NULL,                         ev = &ps_bar_graph_def[2]
--                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[3].psbargraph))->ps_bar_graph_def,          init = NULL,                         ev = &ps_bar_graph_def[3]
--                
--                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO
--                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[1].psbargraph))->psPolyRedX,                init = (T_SPOLY *)1,                 ev = (T_SPOLY *)ZERO
--                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[2].psbargraph))->psPolyRedX,                init = (T_SPOLY *)10,                ev = (T_SPOLY *)ZERO
--                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[3].psbargraph))->psPolyRedX,                init = (T_SPOLY *)1000,              ev = (T_SPOLY *)ZERO
--                                                                                              
--            -- Stub Calls :
--            SIMUL
--        
--               --STUB calls
--               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
--               STUB BinasGetWidth(ps_bar_graph_def[1].u16Format)0
--               STUB BinasGetWidth(ps_bar_graph_def[2].u16Format)0
--               STUB BinasGetWidth(ps_bar_graph_def[3].u16Format)0
--                      
--            END SIMUL
--        
--            -- Calling the Unit Under Test :
--            #BargraphClear();
--            #BargraphAllocat(&ps_bar_graph_def[0]);
--            #BargraphAllocat(&ps_bar_graph_def[1]);
--            #BargraphAllocat(&ps_bar_graph_def[2]);
--            #BargraphAllocat(&ps_bar_graph_def[3]);
--            #BargraphUpdate();
--            
--        END ELEMENT
--    
--    END TEST -- TEST 3  

    TEST 5
    FAMILY nominal

        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-002]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and set ps bar graph 
        COMMENT to address of As bar graph with index bar counter and Set sLength of ps bar graph to return 
        COMMENT value of function LookupTableLookup with parameter  psGeometry of ps_bar_graph_def of 
        COMMENT ps bar graph, s32Scaler of sWidgetParm of ps bar graph and address of temp status.
        COMMENT This test case is used to exercise the for loops present in the function for 1 time.
        COMMENT Equivalence Class 52
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-004]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and does nothing
        COMMENT when pText of sWidgetParm of ps bar graph equal to null and stat of psParam of 
        COMMENT ps_bar_graph_def of ps bar graph is not less than PARAM_BAD.
        COMMENT This test case is used to exercise the for loops present in the function for 1 time.
        COMMENT Equivalence Class 12, 17  
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                                               init = 12,                           ev = init
                
                VAR PTU_psparam.fread,                                                               init = 12.0,                           ev = init
                
                VAR PTU_psparam.stat,                                                            init = PARAM_BAD,                     ev = init
                
                VAR ps_bar_graph_def[0].psParam,                                                 init = &PTU_psparam,                 ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                                                init = 578,                          ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                                               init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                                        init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                                        init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                                                   init = E_LARGE_FONT,                 ev = init
                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          init = NULL,                         ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO
                                                                                              
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB LookupTableLookup(120)20
               STUB WidgetsUpdateRT(PTU_psparam, PTU_sWidgetParm)
                      
            END SIMUL
        
            -- Calling the Unit Under Test :
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
            #BargraphUpdate();
            
        END ELEMENT
    
    END TEST -- TEST 5

TEST 6

    FAMILY nominal


        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-002]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and set ps bar graph 
        COMMENT to address of As bar graph with index bar counter and Set sLength of ps bar graph to return 
        COMMENT value of function LookupTableLookup with parameter  psGeometry of ps_bar_graph_def of 
        COMMENT ps bar graph, s32Scaler of sWidgetParm of ps bar graph and address of temp status.
        COMMENT Equivalence Class 52
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-004]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and set field 
        COMMENT width to return value of BinasGetWidth with parameter u16Format of ps_bar_graph_def 
        COMMENT of ps bar graph and set acDigText with index field width of ps bar graph to ZERO. 
        COMMENT when pText of sWidgetParm of ps bar graph is not equal to null and stat of psParam 
        COMMENT of ps_bar_graph_def of ps bar graph is not less than PARAM_BAD.
        COMMENT Equivalence Class 12, 16, 19
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-005]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and set acDigText 
        COMMENT with index field width minus one of ps bar graph to RED_X and decrement field width 
        COMMENT by one till field width not equal to zero. when pText of sWidgetParm of ps bar graph 
        COMMENT is not equal to null and stat of psParam of ps_bar_graph_def of ps bar graph is not 
        COMMENT less than PARAM_BAD.(while loop is exercised for 0 time)
        COMMENT Equivalence Class 12
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-006]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and call function 
        COMMENT TextUpdate with parameter pText of sWidgetParm of ps bar graph, LIGHT_RED, TX_NO_FLASH 
        COMMENT and V_NORMAL when pText of sWidgetParm of ps bar graph is not equal to null and stat of 
        COMMENT psParam of ps_bar_graph_def of ps bar graph is not less than PARAM_BAD.
        COMMENT Equivalence Class 12, 20		
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                                               init = 12,                           ev = init
                 
                VAR PTU_psparam.fread,                                                               init = 12.0,                           ev = init
                
                VAR PTU_psparam.stat,                                                            init = PARAM_BAD,                     ev = init
                
                VAR ps_bar_graph_def[0].psParam,                                                 init = &PTU_psparam,                 ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                                                init = 578,                          ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                                               init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                                        init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                                        init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                                                   init = E_LARGE_FONT,                 ev = init
                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          init = NULL,                         ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO
                                                                                              
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)0
               STUB TextUpdate((T_PTEXT)PTU_pText,(T_EPENCOLOR)LIGHT_RED, (T_ETXFLASH)TX_NO_FLASH, (T_ETXV)V_NORMAL)
               STUB LookupTableLookup(120)20
               STUB WidgetsUpdateRT(PTU_psparam, PTU_sWidgetParm)
                      
            END SIMUL
        
            -- Calling the Unit Under Test :
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
            #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sWidgetParm.pText = (T_PTEXT     *)&PTU_pText;
            #BargraphUpdate();
            
        END ELEMENT
    
    END TEST -- TEST 6

TEST 7

    FAMILY nominal


        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-002]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and set ps bar graph 
        COMMENT to address of As bar graph with index bar counter and Set sLength of ps bar graph to return 
        COMMENT value of function LookupTableLookup with parameter  psGeometry of ps_bar_graph_def of 
        COMMENT ps bar graph, s32Scaler of sWidgetParm of ps bar graph and address of temp status.
        COMMENT This test case is used to exercise the for loops present in the function for 1 time.
        COMMENT Equivalence Class 52
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-004]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and set field 
        COMMENT width to return value of BinasGetWidth with parameter u16Format of ps_bar_graph_def 
        COMMENT of ps bar graph and set acDigText with index field width of ps bar graph to ZERO. 
        COMMENT when pText of sWidgetParm of ps bar graph is not equal to null and stat of psParam 
        COMMENT of ps_bar_graph_def of ps bar graph is not less than PARAM_BAD.
        COMMENT Equivalence Class 12, 16, 19
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-005]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and set acDigText 
        COMMENT with index field width minus one of ps bar graph to RED_X and decrement field width 
        COMMENT by one till field width not equal to zero. when pText of sWidgetParm of ps bar graph 
        COMMENT is not equal to null and stat of psParam of ps_bar_graph_def of ps bar graph is not 
        COMMENT less than PARAM_BAD.(while loop is exercised for 1 time)
        COMMENT Equivalence Class 16
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-006]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and call function 
        COMMENT TextUpdate with parameter pText of sWidgetParm of ps bar graph, LIGHT_RED, TX_NO_FLASH 
        COMMENT and V_NORMAL when pText of sWidgetParm of ps bar graph is not equal to null and stat of 
        COMMENT psParam of ps_bar_graph_def of ps bar graph is not less than PARAM_BAD.
        COMMENT Equivalence Class 12, 20		
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                                               init = 12,                           ev = init

                VAR PTU_psparam.fread,                                                               init = 12.0,                           ev = init                
                
                VAR PTU_psparam.stat,                                                            init = PARAM_BAD,                     ev = init
                
                VAR ps_bar_graph_def[0].psParam,                                                 init = &PTU_psparam,                 ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                                                init = 578,                          ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                                               init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                                        init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                                        init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                                                   init = E_LARGE_FONT,                 ev = init
                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          init = NULL,                         ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO
                                                                                              
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)1
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)1
               STUB TextUpdate((T_PTEXT)PTU_pText,(T_EPENCOLOR)LIGHT_RED, (T_ETXFLASH)TX_NO_FLASH, (T_ETXV)V_NORMAL)
               STUB WidgetsUpdateRT(PTU_psparam, PTU_sWidgetParm)
               STUB BinasByteFormatInfoBE(ps_bar_graph_def[0].u16Format)(T_INT8* )&ps_bar_graph_def[0].u16Width               
               STUB LookupTableLookup(120)20
               STUB TextAllocat((T_UINT16)(ps_bar_graph_def[0].sDigOffset.u16X0), (T_UINT16)(ps_bar_graph_def[0].sDigOffset.u16Y0), ALIGN_CENTER, ps_bar_graph_def[0].eFont, WHITE, V_NORMAL, TX_NO_FLASH)
                      
            END SIMUL
        
            -- Calling the Unit Under Test :
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
            #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sWidgetParm.pText = (T_PTEXT     *)&PTU_pText;
            #BargraphUpdate();
            
        END ELEMENT
    
    END TEST -- TEST 7

TEST 8

    FAMILY nominal


        COMMENT Test Description
        COMMENT <TD>
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-002]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and set ps bar graph 
        COMMENT to address of As bar graph with index bar counter and Set sLength of ps bar graph to return 
        COMMENT value of function LookupTableLookup with parameter  psGeometry of ps_bar_graph_def of 
        COMMENT ps bar graph, s32Scaler of sWidgetParm of ps bar graph and address of temp status.
        COMMENT This test case is used to exercise the for loops present in the function for 1 time.
        COMMENT Equivalence Class 52
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-004]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and set field 
        COMMENT width to return value of BinasGetWidth with parameter u16Format of ps_bar_graph_def 
        COMMENT of ps bar graph and set acDigText with index field width of ps bar graph to ZERO. 
        COMMENT when pText of sWidgetParm of ps bar graph is not equal to null and stat of psParam 
        COMMENT of ps_bar_graph_def of ps bar graph is not less than PARAM_BAD.
        COMMENT Equivalence Class 12, 16, 19
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-005]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and set acDigText 
        COMMENT with index field width minus one of ps bar graph to RED_X and decrement field width 
        COMMENT by one till field width not equal to zero. when pText of sWidgetParm of ps bar graph 
        COMMENT is not equal to null and stat of psParam of ps_bar_graph_def of ps bar graph is not 
        COMMENT less than PARAM_BAD.(while loop is exercised for 2 or more times)
        COMMENT Equivalence Class 12
        COMMENT
        COMMENT [hdudispfbargraphs-BargraphUpdate-DB-LLR-006]
        COMMENT The Function BargraphUpdate loop number of bar graph installed times and call function 
        COMMENT TextUpdate with parameter pText of sWidgetParm of ps bar graph, LIGHT_RED, TX_NO_FLASH 
        COMMENT and V_NORMAL when pText of sWidgetParm of ps bar graph is not equal to null and stat of 
        COMMENT psParam of ps_bar_graph_def of ps bar graph is not less than PARAM_BAD.
        COMMENT Equivalence Class 12, 20		
        COMMENT </TD>

        #ps_bar_graph_def[0].psbargraph  = (T_PSBARGRAPH      *)&PTU_psDisRegion;

        ELEMENT
        
            COMMENT INPUT SECTION:
                       
                VAR PTU_psparam.r,                                                               init = 12,                           ev = init
                
                VAR PTU_psparam.fread,                                                               init = 12.0,                           ev = init                

                VAR PTU_psparam.stat,                                                            init = PARAM_BAD,                     ev = init
                
                VAR ps_bar_graph_def[0].psParam,                                                 init = &PTU_psparam,                 ev = init
                
                --Holds the u16Width structure member value
                VAR ps_bar_graph_def[0].u16Width,                                                init = 578,                          ev = init
                                
                --Holds the u16Format structure member value
                VAR ps_bar_graph_def[0].u16Format,                                               init = (T_UINT16)10,                 ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16X0,                                        init = 10,                           ev = init
                
                VAR ps_bar_graph_def[0].sDigOffset.u16Y0,                                        init = 10,                           ev = init
                
                --Holds the eFont structure member value
                VAR ps_bar_graph_def[0].eFont,                                                   init = E_LARGE_FONT,                 ev = init
                                        
            COMMENT INPUT/OUTPUT SECTION:
        
                --None              
        
            COMMENT OUTPUT SECTION:
                
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->ps_bar_graph_def,          init = NULL,                         ev = &ps_bar_graph_def[0]
                VAR ((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->psPolyRedX,                init = (T_SPOLY *)100,               ev = (T_SPOLY *)ZERO
                                                                                              
            -- Stub Calls :
            SIMUL
        
               --STUB calls
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)3
               STUB BinasGetWidth(ps_bar_graph_def[0].u16Format)3
               STUB TextUpdate((T_PTEXT)PTU_pText,(T_EPENCOLOR)LIGHT_RED, (T_ETXFLASH)TX_NO_FLASH, (T_ETXV)V_NORMAL)
               STUB WidgetsUpdateRT(PTU_psparam, PTU_sWidgetParm)
               STUB BinasByteFormatInfoBE(ps_bar_graph_def[0].u16Format)(T_INT8* )&ps_bar_graph_def[0].u16Width               
               STUB LookupTableLookup(120)20
               STUB TextAllocat((T_UINT16)(ps_bar_graph_def[0].sDigOffset.u16X0), (T_UINT16)(ps_bar_graph_def[0].sDigOffset.u16Y0), ALIGN_CENTER, ps_bar_graph_def[0].eFont, WHITE, V_NORMAL, TX_NO_FLASH)
                      
                                  
            END SIMUL
        
            -- Calling the Unit Under Test :
            #BargraphClear();
            #BargraphAllocat(&ps_bar_graph_def[0]);
            #((T_PSBARGRAPH)(ps_bar_graph_def[0].psbargraph))->sWidgetParm.pText = (T_PTEXT     *)&PTU_pText;
            #BargraphUpdate();
            
        END ELEMENT
    
    END TEST -- TEST 8

END SERVICE -- BargraphUpdate
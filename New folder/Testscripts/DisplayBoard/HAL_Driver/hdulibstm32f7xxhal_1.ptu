HEADER hdulibstm32f7xxhal,Source Code Ver :1.4 ,TestScript Ver :1.4
--------------------------------------------------------------------------------
-- Author Name         : Anusha V
--
-- File Name           : hdulibstm32f7xxhal_1.ptu
--
-- Test Creation Date  : 30.10.2017 
--
-- Tested Functions    : HALGetTick                      
--
-- Version History     :
--
-- TEST-VERSION        TEST-DATE           TESTER NAME        MODIFICATIONS
-- ------------        ---------           -----------        -------------
--    1.1              30.10.2017          Anusha V           Created the ptu file
--	  1.2			   11.11.2017          Anusha V           Updated as per #PR100171	
--	  1.3			   14.11.2017          Anusha V           Updated as per #PR100171	
--	  1.4			   03.10.2020          Harshitha R        Updated as per PR#100281	

--------------------------------------------------------------------------------
--
-- TESTED FILE INCLUDE DIRECTIVES 
--
--------------------------------------------------------------------------------

#/*============================================================================*/
#/* Module specific includes                                                   */
#/*============================================================================*/

##include "hdulibstm32f7xxhal.h"        
##include "hdulibbasictypes.h"          
##include "hdulibcorecm7.h"             
##include "hdulibstm32f7xxhalcortex.h"  
##include "hdulibstm32f7xxhaldef.h"     
##include "hdulibstm32f7xxhalflash.h"   
##include "hdulibstm32f7xxhalconf.h"    
--------------------------------------------------------------------------------
--
-- TESTED FILE DECLARATIONS 
--
--------------------------------------------------------------------------------

-- Declarations of the global variables of the tested file

	#T_UINT32 System_core_clock;
	
-- Declarations of temporary variables of the tested file

	--Temporary variable created to be used in HALGetTick
	#T_UINT32 PTU_temp;
	
--------------------------------------------------------------------------------

BEGIN
	COMMENT  Author Name         : Anusha V
	COMMENT 
	COMMENT  File Name           : hdulibstm32f7xxhal_1.ptu
	COMMENT 
	COMMENT  Tested Functions    : HALGetTick    
	COMMENT 	
	COMMENT  Assumptions and Constraints
	COMMENT  <AC>
	COMMENT
	COMMENT  Assumption(s):
	COMMENT  None
	COMMENT 
	COMMENT  Constraint(s):
	COMMENT  1.PTU has been split into 2 due to static dependency.
	COMMENT  
	COMMENT  2.Header file "hdulibstm32f746xx.h" is modified for testing purpose. 
	COMMENT    The macro 'FLASH' is modified for stubbing hardware address.  
    COMMENT  /*Commented for testing purpose*/
    COMMENT  /*#define FLASH               ((T_FLASH *) FLASH_R_BASE)*/
    COMMENT  
    COMMENT  /* Modified macro by stubbing hardware address for testing purpose*/
    COMMENT  T_FLASH      PTU_FLASH;
    COMMENT  #define FLASH               ((T_FLASH *) &PTU_FLASH)
    COMMENT
    COMMENT  3.Source file "hdulibstm32f7xxhal.c" is modified for testing purpose   
    COMMENT 
    COMMENT  Snippet of code is added in function 'hdulibstm32f7xxhal.c':
    COMMENT 
    COMMENT  /*local variable declared for testing purpose*/
    COMMENT    T_UINT16 PTU_count =0;
    COMMENT
    COMMENT   while((HALGetTick() - tick_start) < delay)
    COMMENT   {
    COMMENT	   /*Modified for testing purpose to terminate infinite loop*/
    COMMENT	      PTU_count++;
    COMMENT	      if(PTU_count == 4)
    COMMENT	      {
    COMMENT	        break;
    COMMENT	      }
    COMMENT	      else
    COMMENT	      {
    COMMENT	        /*nothing*/
    COMMENT       }
    COMMENT   }
    COMMENT  
	COMMENT  The above modifications are done to terminate the infinite loop and also the above while loop can not be covered for 
	COMMENT  1 time as we are using the condition PTU_count == 4.
	COMMENT  
	COMMENT  4.Following Test script related warnings are observed during Target Execution for volatile keyword member/variable:
	COMMENT  warning #191-D: type qualifier is meaningless on cast type
    COMMENT  </AC> 
      
	COMMENT  Equivalence Class Description
	COMMENT  <ECD>
	COMMENT
	COMMENT  Valid Class(es)
	COMMENT  Class 1
	COMMENT  In the Function 'HalInit','__HAL_FLASH_ART_ENABLE'is called.
	COMMENT
	COMMENT  Class 2
	COMMENT  In the Function 'HalInit','HALNvicSetPriorityGrouping'is called.
	COMMENT
	COMMENT	 Class 3
	COMMENT	 In the Function 'HalInit','HALInitTick' is called.
	COMMENT
    COMMENT  Class 5
	COMMENT  In the Function 'HALInitTick','HALSysTickConfig' is called.
	COMMENT
	COMMENT  Class 6
	COMMENT  In the Function 'HALInitTick','HalNvicSetPriority' is called.
	COMMENT
	COMMENT  Class 7
	COMMENT  In the Function 'HALDelay','HALGetTick' is called.
	COMMENT
	COMMENT  Class 8
	COMMENT  In the Function 'HALDelay', result of subtraction of return value of the function call
	COMMENT  HALGetTick and timer tick is less than delay.
	COMMENT  
	COMMENT  Class 9
	COMMENT  In the Function 'HALDelay', result of subtraction of return value of the function call
	COMMENT  HALGetTick and timer tick is greater than delay.
    COMMENT	
    COMMENT  Class 10
    COMMENT  In the Function 'HALDelay', result of subtraction of return value of the function call
	COMMENT  HALGetTick and timer tick is equal to delay.
	COMMENT
    COMMENT	 Class 11
    COMMENT  In the Function 'HalInit',ART_ACCLERATOR_ENABLE is equal to ZERO
    COMMENT
	COMMENT	 Class 12
    COMMENT  In the Function 'HalInit',ART_ACCLERATOR_ENABLE is not equal to ZERO
    COMMENT
    COMMENT  Invalid Class(es)
	COMMENT  None
    COMMENT  </ECD>
----------------------------------------------------------------------------------
-- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
--
--------------------------------------------------------------------------------

SIMUL

	DEFINE STUB hdulibstm32f7xxhal_c
	
		#void HalNvicSetPriority(T_IRQN_TYPE _in IRQn, T_UINT32 _in PreemptPriority, T_UINT32 _in SubPriority);

		#T_UINT32 HALSysTickConfig(T_UINT32 _in TicksNumb); 
    
		#void HALNvicSetPriorityGrouping(T_UINT32 _in PriorityGroup); 
		
    END DEFINE

ELSE_SIMUL

    --No action defined as of now if the module is not simulated

END SIMUL 

--------------------------------------------------------------------------------
--
-- ENVIRONMENTS DECLARATIONS
--
--------------------------------------------------------------------------------
--IF HOST

-- No special things that have to be done on the host to run the test.

--ELSE

-- No action defined for the target execution as of now

--END IF
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
-- TESTED FILE ENVIRONMENT
--------------------------------------------------------------------------------

-- Environment of the file hdulibstm32f7xxhal.c

--ENVIRONMENT ENV_hdulibstm32f7xxhal_c

    --None

--END ENVIRONMENT -- hdulibstm32f7xxhal_c

--USE hdulibstm32f7xxhal_c

--------------------------------------------------------------------------------
--
-- SERVICES DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Declaration of the service HALGetTick
--------------------------------------------------------------------------------

SERVICE HALGetTick
SERVICE_TYPE extern

-- By function returned type declaration
#T_UINT32 ret_HALGetTick;

ENVIRONMENT ENV_HALGetTick

    VAR ret_HALGetTick,						init = 0,				ev = init
    
END ENVIRONMENT -- ENV_HALGetTick
    
USE ENV_HALGetTick

TEST 1
FAMILY nominal

	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhal-HALGetTick-DB-LLR-001]
	COMMENT The function returns the timer tick in milli seconds.
	COMMENT  Equivalence Class None
	COMMENT  </TD>

	ELEMENT
	
        COMMENT INPUT SECTION:
        
			--Temp variable added as there is no elements in 'HALGetTick' 				   		  
			VAR PTU_temp,					init=0,					ev=init
			
		COMMENT OUTPUT SECTION:
			
			--Return value of the function 
			VAR ret_HALGetTick,				init = 0,				ev = 1
			
		COMMENT INPUT/OUTPUT SECTION:
			
			--None
			
		--The function is called to increment Uw_tick
	      #HalIncTick();
	      
		-- Calling the unit under test	      
        #ret_HALGetTick = HALGetTick();
	END ELEMENT

END TEST -- TEST 1

END SERVICE -- HALGetTick

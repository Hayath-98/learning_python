HEADER hdudispfpdicheck,Source Code Ver : 1.16,TestScript Ver : 1.3
--------------------------------------------------------------------------------
-- Author Name         : Vignesh Sunil
--
-- File Name           : hdudispfpdicheck_1.ptu
--
-- Test Creation Date  : 15.10.2020
--
-- Tested Functions    : CheckConfig
--                       CheckCASParameters
--                       CheckA429Parameters
--                       CheckElogTrig
--                       CheckElogParam
--                       CheckAcdtParams
--                       CheckPageSettings
--                       CheckForegroundParameters
--                       CheckBarGraph
--                       CheckTextBox
--                       CheckText
--                       CheckMinMax
--                       CheckAxisMinMax
--                       CheckAxisMinMax2
--                       CheckDuResolution
--                       CheckFloatMinMax
--                       CheckString
--
-- Version History     :
--
-- TEST-VERSION        TEST-DATE               TESTER NAME          MODIFICATIONS
-- ------------        ---------               -----------          -------------
--     1.1             15.10.2020              Vignesh Sunil       Created the ptu file.  
--     1.2             22.10.2020              Vignesh Sunil       Updated as per #PR100317
--     1.3             29.04.2021              Vignesh Sunil       Updated as per #PR100338
--------------------------------------------------------------------------------
--
-- TESTED FILE INCLUDE DIRECTIVES 
--
--------------------------------------------------------------------------------

##include "hdudispfgrapp.h"   /* defines graphical applications */
##include "hdudispfpdidata.h" /* provides pdi declarations */
##include "hdudispfbargraphs.h" /* definitions for bar graphs */
##include "hdudispfrounddial.h" /* definitions for round dials */
##include "hdudispfbinascii.h" /* converts character to ascii */
##include "hdudispfpara.h"  /*builds faults, messages, sys info list and configures the top menu*/
##include "hdudispfnumbox.h"  /* definitions for number box */
##include "hdudispfcarrotgraph.h"  /* definitions for number box */
##include "hdudispfmenu.h"    /* contains prototype for menu module*/
##include "hdudispfa429.h"    /* contains definition of a429*/
##include "hdudispfconfig.h"   /* contains page and color config information*/
##include "hdudispfresource.h"  /* provides central location to use On Chip Peripherals*/
##include "hdudispfforeground.h"  /* provides coordinates for displaying redx on screen*/
##include "hdudispfpdicheck.h" /*contains pdi check*/
##include "hdudispfpanel.h"   /* Contains functions prototypes of panel.*/
##include "hdulibbasictypes.h" /* contains Define standard types  */
##include "hdudispfrterror.h"  /* Contains Error Types  */
##include "hdudispflookup.h"
##include "hdudispffonts.h"
--------------------------------------------------------------------------------
--
-- TESTED FILE DECLARATIONS 
--
--------------------------------------------------------------------------------

-- Declarations of the global variables of the tested file

    #extern T_BOOL CalStringParam(T_UINT8 * string_txt, T_UINT16 * max_width, T_UINT16 * line_count);
    #extern T_BOOL CheckDecimalFormat(T_FORMAT format);
    #extern T_UINT16 FindTotalDigits(T_UINT32 format);
    #extern T_UINT8 Label_size;
    #extern T_BOOL Global_check;
    #extern T_COLOR FindColorRange(T_UINT16 color);
--------------------------------------------------------------------------------

BEGIN

    COMMENT Author Name      :  Vignesh Sunil
    COMMENT
    COMMENT File Name        :  hdudispfpdicheck_1.ptu
    COMMENT
    COMMENT Tested Functions :  CheckConfig
    COMMENT 					CheckCASParameters
    COMMENT 					CheckA429Parameters
    COMMENT 					CheckElogTrig
    COMMENT 					CheckElogParam
    COMMENT 					CheckAcdtParams
    COMMENT 					CheckPageSettings
    COMMENT 					CheckForegroundParameters
    COMMENT 					CheckBarGraph
    COMMENT 					CheckTextBox
    COMMENT 					CheckText
    COMMENT 					CheckMinMax
    COMMENT 					CheckAxisMinMax
    COMMENT 					CheckAxisMinMax2
    COMMENT 					CheckDuResolution
    COMMENT 					CheckFloatMinMax
    COMMENT 					CheckString
    COMMENT 					
    COMMENT 					
   	COMMENT
    COMMENT Assumptions and Constraints		
    COMMENT <AC>
    COMMENT
    COMMENT Assumption(s):
    COMMENT None
    COMMENT
    COMMENT Constraint(s):
	COMMENT 1. In the function 'CheckRoundDial', 'for' loop cannot be covered for 0 and 1 times
	COMMENT	since it is controlled by the macro "ASSOCIALTED_LABEL".
	COMMENT 
	COMMENT 2. In the function 'CheckElogTrig', 'for' loop cannot be covered for 0 and 1 times
	COMMENT	since it is controlled by the macro "MAX_ELOG_EVENT".	
	COMMENT 
	COMMENT 3. In the function 'CheckElogParam', 'for' loop cannot be covered for 0 and 1 times
	COMMENT	since it is controlled by the macro "MAX_ELOG_EVENT".
    COMMENT
    COMMENT 4.The follwoing warnings are observed while execution
    COMMENT  i)enumerated type mixed with another type
    COMMENT
    COMMENT </AC>

	COMMENT Equivalence Class Description
	COMMENT <ECD>
	COMMENT 
	COMMENT Valid Class(es)
	COMMENT
	COMMENT Class 1
	COMMENT In function 'PdiDataCheck', Global_check is set to FALSE
	COMMENT
	COMMENT Class 2
	COMMENT In function 'PdiDataCheck', the function CheckConfig is called
	COMMENT
	COMMENT Class 3
	COMMENT In function 'PdiDataCheck', the function CheckCASParameters is called	
	COMMENT
	COMMENT Class 4
	COMMENT In function 'PdiDataCheck', the function CheckA429Parameters is called		
	COMMENT
	COMMENT Class 5
	COMMENT In function 'PdiDataCheck', the function CheckElogTrig is called	
	COMMENT
	COMMENT Class 6
	COMMENT In function 'PdiDataCheck', the function CheckElogParam is called	
	COMMENT
	COMMENT Class 7
	COMMENT In function 'PdiDataCheck', the function CheckAcdtParams is called		
	COMMENT
	COMMENT Class 8
	COMMENT In function 'CheckConfig', Pdi_error_count is less than MAX_ERROR_MSG	
	COMMENT
	COMMENT Class 9
	COMMENT In function 'CheckConfig', call function CheckString with parameters (config_name of Config_data and MAX_CONFIG_NAME) returns FALSE
	COMMENT
	COMMENT Class 10
	COMMENT In function 'CheckConfig', Pdi_error_count is equal and greater than to MAX_ERROR_MSG	
	COMMENT
	COMMENT Class 11
	COMMENT In function 'CheckConfig', call function CheckString with parameters (config_name of Config_data and MAX_CONFIG_NAME) returns TRUE	
	COMMENT
	COMMENT Class 12
	COMMENT In function 'CheckConfig', call function CheckString with parameters (config_version of Config_data and MAX_CONFIG_VERSION) returns FALSE
	COMMENT
	COMMENT Class 13
	COMMENT In function 'CheckConfig', call function CheckString with parameters (config_version of Config_data and MAX_CONFIG_VERSION) returns TRUE
	COMMENT
	COMMENT Class 14
	COMMENT In function 'CheckConfig', call function CheckDuResolution  returns TRUE
	COMMENT
	COMMENT Class 15
	COMMENT In function 'CheckConfig', call function CheckDuResolution  returns FALSE
	COMMENT
	COMMENT Class 16
	COMMENT In function 'CheckConfig', call function CheckString with parameters (config_engine of Config_data and MAX_CONFIG_ENGINE) returns FALSE	
	COMMENT
	COMMENT Class 17
	COMMENT In function 'CheckConfig', call function CheckString with parameters (config_engine of Config_data and MAX_CONFIG_ENGINE) returns TRUE		
	COMMENT
	COMMENT Class 18
	COMMENT In function 'CheckConfig', call function CheckMinMax with parameters (u16_x of channels of Config_data,  ZERO and ONE) returns FALSE 		
	COMMENT
	COMMENT Class 19
	COMMENT In function 'CheckConfig', call function CheckMinMax with parameters (u16_x of channels of Config_data,  ZERO and ONE) returns TRUE 	
	COMMENT
	COMMENT Class 20
	COMMENT In function 'CheckConfig', call function CheckMinMax with parameters  (u16_y of channels of Config_data, ZERO and ONE) returns FALSE		
	COMMENT
	COMMENT Class 21
	COMMENT In function 'CheckConfig', call function CheckMinMax with parameters  (u16_y of channels of Config_data, ZERO and ONE) returns TRUE	
	COMMENT
	COMMENT Class 22
	COMMENT In function 'CheckConfig', Pdi_error_count is not equal to ZERO.
	COMMENT
	COMMENT Class 23
	COMMENT In function 'CheckConfig', call function CheckMinMax with parameters (eng_sdi of Config_data, ZERO and ONE) returns FALSE		
	COMMENT
	COMMENT Class 24
	COMMENT In function 'CheckConfig', call function CheckMinMax with parameters (eng_sdi of Config_data, ZERO and ONE) returns TRUE		
	COMMENT
	COMMENT Class 25
	COMMENT In function 'CheckConfig', Pdi_error_count is not equal to ZERO.	
	COMMENT
	COMMENT Class 26
	COMMENT In function 'CheckDuResolution', Display_size is equal to E_7_INCH
	COMMENT
	COMMENT Class 27
	COMMENT In function 'CheckDuResolution', Display_size is equal to E_10_INCH		
	COMMENT
	COMMENT Class 28
	COMMENT In function 'CheckDuResolution', Display_size is not equal to E_10_INCH	and E_7_INCH		
	COMMENT
	COMMENT Class 29
	COMMENT In function 'CheckPageSettings', call function CheckMinMax with parameters (page_num of Page_settings, ZERO and MAX_PAGE_NUM) returns FALSE
	COMMENT
	COMMENT Class 30
	COMMENT In function 'CheckPageSettings', call function CheckMinMax with parameters (page_num of Page_settings, ZERO and MAX_PAGE_NUM) returns TRUE	
	COMMENT
	COMMENT Class 31
	COMMENT In function 'CheckPageSettings', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 32
	COMMENT In function 'CheckPageSettings', Pdi_error_count is greater than MAX_ERROR_MSG	
	COMMENT
	COMMENT Class 33
	COMMENT In function 'CheckPageSettings', call function CheckString with parameters (page_name of Page_settings and MAX_PAGE_NAME) returns FALSE
	COMMENT
	COMMENT Class 34
	COMMENT In function 'CheckPageSettings', call function CheckString with parameters (page_name of Page_settings and MAX_PAGE_NAME) returns TRUE	
	COMMENT
	COMMENT Class 35
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters (page_menu of Page_settings, ZERO,MAX_PAGE_MENU and MAX_PAGE_MENU_10INCH) returns FALSE
	COMMENT
	COMMENT Class 36
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters (page_menu of Page_settings, ZERO,MAX_PAGE_MENU and MAX_PAGE_MENU_10INCH) returns TRUE	
	COMMENT
	COMMENT Class 37
	COMMENT In function 'CheckPageSettings', call function CheckColor with parameter color value returns FALSE
	COMMENT
	COMMENT Class 38
	COMMENT In function 'CheckPageSettings', call function CheckColor with parameter color value returns TRUE	
	COMMENT
	COMMENT Class 39
	COMMENT In function 'CheckPageSettings', call function CheckFont with parameters (timer_font of Page_settings, E_TINY_FONT and E_LARGE_FONT) returns FALSE
	COMMENT
	COMMENT Class 40
	COMMENT In function 'CheckPageSettings', call function CheckFont with parameters (timer_font of Page_settings, E_TINY_FONT and E_LARGE_FONT) returns TRUE	
	COMMENT
	COMMENT Class 41
	COMMENT In function 'CheckPageSettings', Timer_flag is equal to TRUE
	COMMENT
	COMMENT Class 42
	COMMENT In function 'CheckPageSettings', Timer_flag is equal to FALSE		
	COMMENT
	COMMENT Class 43
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters u16_x of timer_axis of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE
	COMMENT
	COMMENT Class 44
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters u16_x of timer_axis of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH returns TRUE	
	COMMENT
	COMMENT Class 45
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters u16_y of timer_axis of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE
	COMMENT
	COMMENT Class 46
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters u16_y of timer_axis of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH returns TRUE		
	COMMENT
	COMMENT Class 47
	COMMENT In function 'CheckPageSettings', Acdt_flag is equal to TRUE
	COMMENT
	COMMENT Class 48
	COMMENT In function 'CheckPageSettings', Acdt_flag is equal to FALSE		
	COMMENT
	COMMENT Class 49
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns FALSE
	COMMENT
	COMMENT Class 50
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns TRUE
	COMMENT
	COMMENT Class 51
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns FALSE
	COMMENT
	COMMENT Class 52
	COMMENT In function 'CheckPageSettings', call function CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns TRUE	
	COMMENT
	COMMENT Class 53
	COMMENT In function 'CheckExceedParam', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 54
	COMMENT In function 'CheckExceedParam', Pdi_error_count is greater than MAX_ERROR_MSG	
	COMMENT
	COMMENT Class 55
	COMMENT In function 'CheckExceedParam', call function CheckMinMax with parameters (temporary Exceedance bit, MIN_START_BIT and MAX_START_BIT) returns FALSE
	COMMENT
	COMMENT Class 56
	COMMENT In function 'CheckExceedParam', call function CheckMinMax with parameters (temporary Exceedance bit, MIN_START_BIT and MAX_START_BIT) returns TRUE	
	COMMENT
	COMMENT Class 57
	COMMENT In function 'CheckExceedParam', call function CheckMinMax with parameters (label of Exceed_data with index exceed counter, ONE and MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 58
	COMMENT In function 'CheckExceedParam', call function CheckMinMax with parameters (label of Exceed_data with index exceed counter, ONE and MAX_LABEL) returns TRUE		
	COMMENT
	COMMENT Class 59
	COMMENT In function 'CheckExceedParam', call function CheckMinMax with parameters (sdi of Exceed_data with index as loop counter, ZERO and THREE) returns FALSE
	COMMENT
	COMMENT Class 60
	COMMENT In function 'CheckExceedParam', call function CheckMinMax with parameters (sdi of Exceed_data with index as loop counter, ZERO and THREE) returns TRUE	
	COMMENT
	COMMENT Class 61
	COMMENT In function 'CheckExceedParam', call function CheckMinMax with parameters (exceed_font of Exceed_data with index exceed counter, E_TINY_FONT and E_LARGE_FONT) returns FALSE
	COMMENT
	COMMENT Class 62
	COMMENT In function 'CheckExceedParam', call function CheckMinMax with parameters (exceed_font of Exceed_data with index exceed counter, E_TINY_FONT and E_LARGE_FONT) returns TRUE	
	COMMENT
	COMMENT Class 63
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 64
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 65
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 66
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE		
	COMMENT
	COMMENT Class 67
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter plus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 68
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter plus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE		
	COMMENT
	COMMENT Class 69
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter minus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 70
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter minus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 71
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter plus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 72
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter plus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE			
	COMMENT
	COMMENT Class 73
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter minus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 74
	COMMENT In function 'CheckExceedParam', call function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter minus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE	
	COMMENT
	COMMENT Class 75
	COMMENT In function 'CheckTextBox', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 76
	COMMENT In function 'CheckTextBox', Pdi_error_count is greater than MAX_ERROR_MSG		
	COMMENT
	COMMENT Class 77
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (label of Tb_settings with index TB counter-1 of Page_settings,1 and MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 78
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (label of Tb_settings with index TB counter-1 of Page_settings,1 and MAX_LABEL) returns TRUE		
	COMMENT
	COMMENT Class 79
	COMMENT In function 'CheckTextBox', call function heckString with parameters (tb_string of Tb_settings with index TB counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE
	COMMENT
	COMMENT Class 80
	COMMENT In function 'CheckTextBox', call function heckString with parameters (tb_string of Tb_settings with index TB counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns TRUE			
	COMMENT
	COMMENT Class 81
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (sdi of Tb_settings with index TB counter-1 of Page_settings, ZERO and THREE) returns FALSE
	COMMENT
	COMMENT Class 82
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (sdi of Tb_settings with index TB counter-1 of Page_settings, ZERO and THREE) returns TRUE		
	COMMENT
	COMMENT Class 83
	COMMENT In function 'CheckTextBox', eng_sdi of Config_data is equal to TRUE
	COMMENT
	COMMENT Class 84
	COMMENT In function 'CheckTextBox', eng_sdi of Config_data is equal to FALSE		
	COMMENT
	COMMENT Class 85
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of tb_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 86
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of tb_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE		
	COMMENT
	COMMENT Class 87
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (tb_width of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 88
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (tb_width of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE	
	COMMENT
	COMMENT Class 89
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (tb_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 90
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (tb_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE		
	COMMENT
	COMMENT Class 91
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_margin of Tb_settings with index TB counter-1 of Page_settings,ZERO and TWENTY) returns FALSE
	COMMENT
	COMMENT Class 92
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_margin of Tb_settings with index TB counter-1 of Page_settings,ZERO and TWENTY) returns TRUE
	COMMENT
	COMMENT Class 93
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_frame_width of Tb_settings with index TB counter-1 of Page_settings,ZERO and TWENTY) returns FALSE
	COMMENT
	COMMENT Class 94
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_frame_width of Tb_settings with index TB counter-1 of Page_settings,ZERO and TWENTY) returns TRUE	
	COMMENT
	COMMENT Class 95
	COMMENT In function 'CheckTextBox', call function CheckColor with parameter (tb_frame_color of Tb_settings with index TB counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 96
	COMMENT In function 'CheckTextBox', call function CheckColor with parameter (tb_frame_color of Tb_settings with index TB counter-1 of Page_settings) returns TRUE		
	COMMENT
	COMMENT Class 97
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_bit of Tb_settings with index TB counter-1 of Page_settings,MIN_START_BIT and MAX_START_BIT) returns FALSE
	COMMENT
	COMMENT Class 98
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_bit of Tb_settings with index TB counter-1 of Page_settings,MIN_START_BIT and MAX_START_BIT) returns TRUE		
	COMMENT
	COMMENT Class 99
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_cross_val_type of Tb_settings with index TB counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns FALSE 
	COMMENT
	COMMENT Class 100
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_cross_val_type of Tb_settings with index TB counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns TRUE 	
	COMMENT
	COMMENT Class 101
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_align of Tb_settings with index TB counter-1 of Page_settings,ALIGN_CENTER and ALIGN_LEFT) returns FALSE
	COMMENT
	COMMENT Class 102
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_align of Tb_settings with index TB counter-1 of Page_settings,ALIGN_CENTER and ALIGN_LEFT) returns TRUE	
	COMMENT
	COMMENT Class 103
	COMMENT In function 'CheckTextBox', call function CheckFont with parameters (tb_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 104
	COMMENT In function 'CheckTextBox', call function CheckFont with parameters (tb_font of Tb_settings with index TB counter-1 of Page_settings) returns TRUE	
	COMMENT
	COMMENT Class 105
	COMMENT In function 'CheckTextBox', call function CheckColor with parameter (tb_color of Tb_settings with index TB counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 106
	COMMENT In function 'CheckTextBox', call function CheckColor with parameter (tb_color of Tb_settings with index TB counter-1 of Page_settings) returns TRUE
	COMMENT
	COMMENT Class 107
	COMMENT In function 'CheckTextBox', Tb_parameter_occurrence with index Tb counter-1 is otherthan ZERO
	COMMENT
	COMMENT Class 108
	COMMENT In function 'CheckTextBox', Tb_parameter_occurrence with index Tb counter-1 is ZERO
	COMMENT
	COMMENT Class 109
	COMMENT In function 'CheckTextBox', tb_state of Tb_settings with index TB counter-1 of Page_settings is not equal to TXT_STATE_NORMA
	COMMENT
	COMMENT Class 110
	COMMENT In function 'CheckTextBox', tb_state of Tb_settings with index TB counter-1 of Page_settings is not equal to TXT_STATE_REVERSE
	COMMENT
	COMMENT Class 111
	COMMENT In function 'CheckTextBox', tb_state of Tb_settings with index TB counter-1 of Page_settings is not equal to TXT_STATE_REVERSE and TXT_STATE_NORMA	
	COMMENT
	COMMENT Class 112
	COMMENT In function 'CheckTextBox', tb_flash of Tb_settings with index TB counter-1 of Page_settings is not equal to TEXT_FLASH_ON
	COMMENT
	COMMENT Class 113
	COMMENT In function 'CheckTextBox', tb_flash of Tb_settings with index TB counter-1 of Page_settings is not equal to  TEXT_FLASH_OFF
	COMMENT
	COMMENT Class 114
	COMMENT In function 'CheckTextBox', tb_flash of Tb_settings with index TB counter-1 of Page_settings is not equal too TEXT_FLASH_ON and TEXT_FLASH_OFF	
	COMMENT
	COMMENT Class 115
	COMMENT In function 'CheckTextBox', call function CheckColor with parameter tb_flash_color of Tb_settings with index TB counter-1 of Page_settings returns FALSE
	COMMENT
	COMMENT Class 116
	COMMENT In function 'CheckTextBox', call function CheckColor with parameter tb_flash_color of Tb_settings with index TB counter-1 of Page_settings returns TRUE
	COMMENT
	COMMENT Class 117
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of tb_redx_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 118
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of tb_redx_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 119
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (tb_redx_width of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 120
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (tb_redx_width of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE
	COMMENT
	COMMENT Class 121
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings with index 
	COMMENT TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 122
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings with index 
	COMMENT TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT 
	COMMENT Class 123
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings
	COMMENT with index TB counter-1 of Page_settings by two and PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE
	COMMENT
	COMMENT Class 124
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings
	COMMENT with index TB counter-1 of Page_settings by two and PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns TRUE
	COMMENT
	COMMENT Class 125
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings with index 
	COMMENT TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 126
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings with index 
	COMMENT TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT 
	COMMENT Class 127
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings
	COMMENT with index TB counter-1 of Page_settings by two and PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE
	COMMENT
	COMMENT Class 128
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings
	COMMENT with index TB counter-1 of Page_settings by two and PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns TRUE
	COMMENT
	COMMENT Class 129
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (tb_redx_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 130
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (tb_redx_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 131
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax2 with parameters (u16_x of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 132
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax2 with parameters (u16_x of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 133
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax2 with parameters (u16_y of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings, -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
	COMMENT
	COMMENT Class 134
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax2 with parameters (u16_y of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings, -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE.
	COMMENT
	COMMENT Class 135
	COMMENT In function 'CheckTextBox', call function CheckFont with parameters (tb_redx_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 136
	COMMENT In function 'CheckTextBox', call function CheckFont with parameters (tb_redx_font of Tb_settings with index TB counter-1 of Page_settings) returns TRUE
	COMMENT
	COMMENT Class 137
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings,MAX_STRING_CHAR_TXT) returns FALSE
	COMMENT
	COMMENT Class 138
	COMMENT In function 'CheckTextBox', call function CheckMinMax with parameters (tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings,MAX_STRING_CHAR_TXT) returns TRUE	
	COMMENT
	COMMENT Class 139
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of 
	COMMENT txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 140
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of 
	COMMENT txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 141
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  
	COMMENT tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 142
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of 
	COMMENT tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 143
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of 
	COMMENT tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 144
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of 
	COMMENT tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE
	COMMENT
	COMMENT Class 145
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of 
	COMMENT tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE 
	COMMENT
	COMMENT Class 146
	COMMENT In function 'CheckTextBox', call function CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of 
	COMMENT tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE 	
	COMMENT 
	COMMENT Class 147
	COMMENT In function 'CheckText', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 148
	COMMENT In function 'CheckText', Pdi_error_count is greater than MAX_ERROR_MSG		
	COMMENT
	COMMENT Class 149
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (label of Text_settings with index text loop  counter-1 of Page_settings,1 and  MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 150
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (label of Text_settings with index text loop  counter-1 of Page_settings,1 and  MAX_LABEL) returns TRUE
	COMMENT
	COMMENT Class 151
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_string of Text_settings with index text loop  counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE
	COMMENT
	COMMENT Class 152
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_string of Text_settings with index text loop  counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns TRUE	
	COMMENT
	COMMENT Class 153
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (sdi of Text_settings with index text loop  counter-1 of Page_settings, ZERO and THREE) returns FALSE
	COMMENT
	COMMENT Class 154
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (sdi of Text_settings with index text loop  counter-1 of Page_settings, ZERO and THREE) returns TRUE	
	COMMENT
	COMMENT Class 155
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_align of Text_settings with index text loop  counter-1 of Page_settings,ALIGN_CENTER and ALIGN_LEFT) returns FALSE
	COMMENT
	COMMENT Class 156
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_align of Text_settings with index text loop  counter-1 of Page_settings,ALIGN_CENTER and ALIGN_LEFT) returns TRUE		
	COMMENT 
	COMMENT Class 157
	COMMENT In function 'CheckText', Text_parameter_occurrence with index text loop counter-1 is otherthan ZERO
	COMMENT
	COMMENT Class 158
	COMMENT In function 'CheckText', Text_parameter_occurrence with index text loop counter-1 is ZERO	
	COMMENT
	COMMENT Class 159
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_font of Text_settings with index text loop  counter-1 of Page_settings,E_TINY_FONT and E_LARGE_FONT) returns FALSE
	COMMENT
	COMMENT Class 160
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_font of Text_settings with index text loop  counter-1 of Page_settings,E_TINY_FONT and E_LARGE_FONT) returns TRUE		
	COMMENT 
	COMMENT Class 161
	COMMENT In function 'CheckText', eng_sdi of Config_data is equal to TRUE
	COMMENT
	COMMENT Class 162
	COMMENT In function 'CheckText', eng_sdi of Config_data is not equal to TRUE		
	COMMENT
	COMMENT Class 163
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_x of txt_axis of Tb_settings with index as text loop counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 164
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_x of txt_axis of Tb_settings with index as text loop counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 165
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_y of txt_axis of Tb_settings with index as text loop  counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
	COMMENT
	COMMENT Class 166
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_y of txt_axis of Tb_settings with index as text loop  counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE.		
	COMMENT 
	COMMENT Class 167
	COMMENT In function 'CheckText', txt_align of Text_settings with index text loop  counter-1 of Page_settings is equal to ALIGN_CENTER
	COMMENT
	COMMENT Class 168
	COMMENT In function 'CheckText', txt_align of Text_settings with index text loop  counter-1 of Page_settings is equal to ALIGN_CENTER_LEFT	
	COMMENT 
	COMMENT Class 169
	COMMENT In function 'CheckText', txt_align of Text_settings with index text loop  counter-1 of Page_settings is equal to ALIGN_RIGHT
	COMMENT
	COMMENT Class 170
	COMMENT In function 'CheckText', txt_align of Text_settings with index text loop  counter-1 of Page_settings is not equal to ALIGN_CENTER,ALIGN_CENTER_LEFT and ALIGN_RIGHT.		
	COMMENT
	COMMENT Class 171
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameter Text X axis plus max width,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE
	COMMENT
	COMMENT Class 172
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameter Text X axis plus max width,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns TRUE	
	COMMENT
	COMMENT Class 173
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameter line count plus Text Y axis,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE
	COMMENT
	COMMENT Class 174
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameter line count plus Text Y axis,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns TRUE		
	COMMENT
	COMMENT Class 173
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameter Text X axis,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE
	COMMENT
	COMMENT Class 174
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameter Text X axis,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns TRUE	
	COMMENT
	COMMENT Class 175
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameter Text Y axis ,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE
	COMMENT
	COMMENT Class 176
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameter Text Y axis ,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns TRUE	
	COMMENT
	COMMENT Class 177
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_bit of Text_settings with index text loop  counter-1 of Page_settings,MIN_START_BIT and MAX_START_BIT) returns FALSE 
	COMMENT
	COMMENT Class 178
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_bit of Text_settings with index text loop  counter-1 of Page_settings,MIN_START_BIT and MAX_START_BIT) returns TRUE 	
	COMMENT
	COMMENT Class 179
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_cross_val_type of Text_settings with index text loop  counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns FALSE
	COMMENT
	COMMENT Class 180
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_cross_val_type of Text_settings with index text loop  counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns TRUE		
	COMMENT
	COMMENT Class 181
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_cross_val of Text_settings with index text loop  counter-1 of Page_settings,MIN_RANGE and MAX_RANGE) returns FALSE
	COMMENT
	COMMENT Class 182
	COMMENT In function 'CheckText', call function CheckMinMax with parameters (txt_cross_val of Text_settings with index text loop  counter-1 of Page_settings,MIN_RANGE and MAX_RANGE) returns TRUE	
	COMMENT 
	COMMENT Class 183
	COMMENT In function 'CheckText', txt_flash of Text_settings with index text loop  counter-1 of Page_settings is equal to TEXT_FLASH_ON
	COMMENT
	COMMENT Class 184
	COMMENT In function 'CheckText', txt_flash of Text_settings with index text loop  counter-1 of Page_settings is equal to TEXT_FLASH_OFF
	COMMENT 
	COMMENT Class 185
	COMMENT In function 'CheckText', txt_flash of Text_settings with index text loop  counter-1 of Page_settings is not equal to TEXT_FLASH_ON and TEXT_FLASH_OFF	
	COMMENT
	COMMENT Class 186
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 187
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE
	COMMENT
	COMMENT Class 188
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 189
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE	
	COMMENT
	COMMENT Class 190
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 191
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 192
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 193
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE	
	COMMENT
	COMMENT Class 194
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,txt_redx_height of  Text_settings with index 
	COMMENT text loop  counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE 
	COMMENT
	COMMENT Class 195
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,txt_redx_height of  Text_settings with index 
	COMMENT text loop  counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE 
	COMMENT
	COMMENT Class 196
	COMMENT In function 'CheckText', call function  CheckAxisMinMax2 with parameters (u16_x of txt_redx_offset_axis OF Text_settings with index text loop  counter-1 of Page_settings 
	COMMENT ,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH ) returns FALSE
	COMMENT
	COMMENT Class 197
	COMMENT In function 'CheckText', call function  CheckAxisMinMax2 with parameters (u16_x of txt_redx_offset_axis OF Text_settings with index text loop  counter-1 of Page_settings 
	COMMENT ,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH ) returns FALSE
	COMMENT
	COMMENT Class 198
	COMMENT In function 'CheckText', call function CheckFont with parameters (txt_redx_font of Text_settings with index text loop  counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 199
	COMMENT In function 'CheckText', call function CheckFont with parameters (txt_redx_font of Text_settings with index text loop  counter-1 of Page_settings) returns TRUE	
	COMMENT
	COMMENT Class 200
	COMMENT In function 'CheckText', call function CheckString with parameters (txt_redx_font of Text_settings with index text loop  counter-1 of Page_settings and MAX_STRING_CHAR_TXT ) returns FALSE
	COMMENT
	COMMENT Class 201
	COMMENT In function 'CheckText', call function CheckString with parameters (txt_redx_font of Text_settings with index text loop  counter-1 of Page_settings and MAX_STRING_CHAR_TXT ) returns TRUE	
	COMMENT
	COMMENT Class 202
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
	COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 203
	COMMENT In function 'CheckText', call function CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
	COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 204
	COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
	COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
	COMMENT
	COMMENT Class 205
	COMMENT In function 'CheckText',CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
    COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE 
	COMMENT
	COMMENT Class 206
	COMMENT In function 'CheckText',CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
	COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 207
	COMMENT In function 'CheckText',CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
	COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 208
	COMMENT In function 'CheckText',CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
	COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 209
	COMMENT In function 'CheckText',CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
	COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE	
	COMMENT 
	COMMENT Class 210
	COMMENT In function 'CheckText', new line indication is TRUE 
	COMMENT 
	COMMENT Class 226
	COMMENT In function 'CheckCasLocationSett', CasLocationSet_parameters is equal to FALSE.
	COMMENT
	COMMENT Class 227
	COMMENT In function 'CheckCasLocationSett', CasLocationSet_parameters is equal to TRUE.	
	COMMENT
	COMMENT Class 228
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_x of cas_axis of Cas_loc_settings of Page_settings , ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns FALSE			
	COMMENT
	COMMENT Class 229
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_x of cas_axis of Cas_loc_settings of Page_settings , ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns TRUE	
	COMMENT
	COMMENT Class 230
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_num_rows of Cas_loc_settings of Page_settings, ONE and MAX_CAS_NUM_ROWS) returns FALSE		
	COMMENT
	COMMENT Class 231
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_num_rows of Cas_loc_settings of Page_settings, ONE and MAX_CAS_NUM_ROWS) returns TRUE
	COMMENT 
	COMMENT Class 232
	COMMENT In function 'CheckCasLocationSett', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 233
	COMMENT In function 'CheckCasLocationSett', Pdi_error_count is greater than MAX_ERROR_MSG		
	COMMENT
	COMMENT Class 233
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_num_column of Cas_loc_settings of Page_settings, ONE and MAX_CAS_COLUMNS) returns FALSE 	
	COMMENT
	COMMENT Class 234
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_num_column of Cas_loc_settings of Page_settings, ONE and MAX_CAS_COLUMNS) returns TRUE 
	COMMENT
	COMMENT Class 235
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (cas_row_height of Cas_loc_settings of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH ) returns FALSE	
	COMMENT
	COMMENT Class 236
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (cas_row_height of Cas_loc_settings of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH ) returns TRUE	
	COMMENT
	COMMENT Class 237
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (cas_col_width of Cas_loc_settings of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 238
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (cas_col_width of Cas_loc_settings of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE	
	COMMENT
	COMMENT Class 239
	COMMENT In function 'CheckCasLocationSett', call function CheckFont with parameters (cas_font of Cas_loc_settings of Page_settings, E_TINY_FONT and E_LARGE_FONT) returns FALSE
	COMMENT
	COMMENT Class 240
	COMMENT In function 'CheckCasLocationSett', call function CheckFont with parameters (cas_font of Cas_loc_settings of Page_settings, E_TINY_FONT and E_LARGE_FONT) returns TRUE	
	COMMENT
	COMMENT Class 241
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_y of cas_axis of Cas_loc_settings of Page_settings plus row value, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE 
	COMMENT
	COMMENT Class 242
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_y of cas_axis of Cas_loc_settings of Page_settings plus row value, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE 	
	COMMENT
	COMMENT Class 243
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_x of cas_axis of Cas_loc_settings of Page_settings plus column max width, ZERO,PANEL_HEIGHT minus DEC_SIX and PANEL_WIDTH minus DEC_SIX) returns FALSE
	COMMENT
	COMMENT Class 244
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_x of cas_axis of Cas_loc_settings of Page_settings plus column max width, ZERO,PANEL_HEIGHT minus DEC_SIX and PANEL_WIDTH minus DEC_SIX) returns TRUE	
	COMMENT
	COMMENT Class 245
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_y of cas_axis of Cas_loc_settings of Page_settings plus row value, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE 
	COMMENT
	COMMENT Class 246
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_y of cas_axis of Cas_loc_settings of Page_settings plus row value, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE 	
	COMMENT
	COMMENT Class 247
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_x of cas_axis of Cas_loc_settings of Page_settings plus column value, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 248
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_x of cas_axis of Cas_loc_settings of Page_settings plus column value, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 249
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_y of cas_axis of Cas_loc_settings of Page_settings plus string height, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 250
	COMMENT In function 'CheckCasLocationSett', call function CheckAxisMinMax with parameters (u16_y of cas_axis of Cas_loc_settings of Page_settings plus string height, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE		
	COMMENT
	COMMENT Class 251
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_adv_flash_timer of Cas_loc_settings of Page_settings, ONE and MAX_TIMER) returns FALSE
	COMMENT
	COMMENT Class 252
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_adv_flash_timer of Cas_loc_settings of Page_settings, ONE and MAX_TIMER) returns TRUE
	COMMENT
	COMMENT Class 253
	COMMENT In function 'CheckCasLocationSett', cas_adv_flash_timer of Cas_loc_settings of Page_settings is not equal to ZERO
	COMMENT
	COMMENT Class 254
	COMMENT In function 'CheckCasLocationSett', cas_adv_flash_timer of Cas_loc_settings of Page_settings is not equal to MAX_CAS_FLASH_TIMER_9999
	COMMENT
	COMMENT Class 255
	COMMENT In function 'CheckCasLocationSett', cas_adv_flash_timer of Cas_loc_settings of Page_settings is not equal to MAX_CAS_FLASH_TIMER
	COMMENT
	COMMENT Class 256
	COMMENT In function 'CheckCasLocationSett', cas_adv_flash_timer of Cas_loc_settings of Page_settings is equal to ZERO	
	COMMENT
	COMMENT Class 257
	COMMENT In function 'CheckCasLocationSett', cas_adv_flash_timer of Cas_loc_settings of Page_settings is equal to MAX_CAS_FLASH_TIMER_9999
	COMMENT
	COMMENT Class 258
	COMMENT In function 'CheckCasLocationSett', cas_adv_flash_timer of Cas_loc_settings of Page_settings is equal to MAX_CAS_FLASH_TIMER	
	COMMENT
	COMMENT Class 259
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_caut_flash_timer of Cas_loc_settings of Page_settings, ONE and MAX_TIMER) returns FALSE
	COMMENT
	COMMENT Class 260
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_caut_flash_timer of Cas_loc_settings of Page_settings, ONE and MAX_TIMER) returns TRUE
	COMMENT
	COMMENT Class 261
	COMMENT In function 'CheckCasLocationSett', cas_caut_flash_timer of Cas_loc_settings of Page_settings is not equal to ZERO
	COMMENT
	COMMENT Class 262
	COMMENT In function 'CheckCasLocationSett', cas_caut_flash_timer of Cas_loc_settings of Page_settings is not equal to MAX_CAS_FLASH_TIMER_9999
	COMMENT
	COMMENT Class 263
	COMMENT In function 'CheckCasLocationSett', cas_caut_flash_timer of Cas_loc_settings of Page_settings is not equal to MAX_CAS_FLASH_TIMER
	COMMENT
	COMMENT Class 264
	COMMENT In function 'CheckCasLocationSett', cas_caut_flash_timer of Cas_loc_settings of Page_settings is equal to ZERO	
	COMMENT
	COMMENT Class 265
	COMMENT In function 'CheckCasLocationSett', cas_caut_flash_timer of Cas_loc_settings of Page_settings is equal to MAX_CAS_FLASH_TIMER_9999
	COMMENT
	COMMENT Class 266
	COMMENT In function 'CheckCasLocationSett', cas_caut_flash_timer of Cas_loc_settings of Page_settings is equal to MAX_CAS_FLASH_TIMER		
	COMMENT
	COMMENT Class 267
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_warn_flash_timer of Cas_loc_settings of Page_settings, ONE and MAX_TIMER) returns FALSE
	COMMENT
	COMMENT Class 268
	COMMENT In function 'CheckCasLocationSett', call function CheckMinMax with parameters (cas_warn_flash_timer of Cas_loc_settings of Page_settings, ONE and MAX_TIMER) returns TRUE
	COMMENT
	COMMENT Class 269
	COMMENT In function 'CheckCasLocationSett', cas_warn_flash_timer of Cas_loc_settings of Page_settings is not equal to ZERO
	COMMENT
	COMMENT Class 270
	COMMENT In function 'CheckCasLocationSett', cas_warn_flash_timer of Cas_loc_settings of Page_settings is not equal to MAX_CAS_FLASH_TIMER_9999
	COMMENT
	COMMENT Class 271
	COMMENT In function 'CheckCasLocationSett', cas_warn_flash_timer of Cas_loc_settings of Page_settings is not equal to MAX_CAS_FLASH_TIMER
	COMMENT
	COMMENT Class 272
	COMMENT In function 'CheckCasLocationSett', cas_warn_flash_timer of Cas_loc_settings of Page_settings is equal to ZERO	
	COMMENT
	COMMENT Class 273
	COMMENT In function 'CheckCasLocationSett', cas_warn_flash_timer of Cas_loc_settings of Page_settings is equal to MAX_CAS_FLASH_TIMER_9999
	COMMENT
	COMMENT Class 274
	COMMENT In function 'CheckCasLocationSett', cas_warn_flash_timer of Cas_loc_settings of Page_settings is equal to MAX_CAS_FLASH_TIMER			
	COMMENT
	COMMENT Class 275
	COMMENT In function 'CheckCarrotGraph', call function OctToStringTrim with parameters label of Cg_settings with index CG counter-1 of Page_settings, size of label and label string.
	COMMENT
	COMMENT Class 276
	COMMENT In function 'CheckCarrotGraph', call function CheckMinMax with parameters (sdi of Cg_settings with index CG counter-1 of Page_settings, ZERO and THREE) returns FALSE 	
	COMMENT
	COMMENT Class 277
	COMMENT In function 'CheckCarrotGraph', call function CheckMinMax with parameters (sdi of Cg_settings with index CG counter-1 of Page_settings, ZERO and THREE) returns TRUE 		
	COMMENT
	COMMENT Class 278
	COMMENT In function 'CheckCarrotGraph', cg_orien of Cg_settings with index CG counter-1 of Page_settings is not equal to BG_VERTICAL,BG_HORIZONTAL
	COMMENT
	COMMENT Class 279
	COMMENT In function 'CheckCarrotGraph', cg_orien of Cg_settings with index CG counter-1 of Page_settings is equal to BG_VERTICAL,BG_HORIZONTAL	
	COMMENT
	COMMENT Class 280
	COMMENT In function 'CheckCarrotGraph', Pdi_error_count is less than MAX_ERROR_MSG then
	COMMENT
	COMMENT Class 281
	COMMENT In function 'CheckCarrotGraph', Pdi_error_count is greater than MAX_ERROR_MSG then	
	COMMENT
	COMMENT Class 282
	COMMENT In function 'CheckCarrotGraph', call function CheckMinMax with parameters (cg_lin_range with index counter j of Cg_settings with index CG counter-1 of Page_settings divided by ( product of ONE_HUNDRED and CalculatePower with parameter ONE and decimal extract)  , MIN_LIN_RANGE and MAX_LIN_RANGE) returns FALSE	
	COMMENT
	COMMENT Class 283
	COMMENT In function 'CheckCarrotGraph', call function CheckMinMax with parameters (cg_lin_range with index counter j of Cg_settings with index CG counter-1 of Page_settings divided by ( product of ONE_HUNDRED and CalculatePower with parameter ONE and decimal extract)  , MIN_LIN_RANGE and MAX_LIN_RANGE) returns TRUE		
	COMMENT
	COMMENT Class 284
	COMMENT In function 'CheckCarrotGraph', call function CheckAxisMinMax with parameters (ABS (cg_lin_offset with index counter j of Cg_settings with index CG counter-1 of Page_settings by four plus u16_y of cg_axis of Cg_settings with index CG counter-1 of Page_settings)  , ZERO, PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 285
	COMMENT In function 'CheckCarrotGraph', call function CheckAxisMinMax with parameters (ABS (cg_lin_offset with index counter j of Cg_settings with index CG counter-1 of Page_settings by four plus u16_y of cg_axis of Cg_settings with index CG counter-1 of Page_settings)  , ZERO, PANEL_WIDTH and PANEL_HEIGHT) returns TRUE			
	COMMENT
	COMMENT Class 286
	COMMENT In function 'CheckCarrotGraph', call function  CheckMinMax with parameter (cg_ptr_shape with index counter j of Cg_settings with index CG counter-1 of Page_settings,FG_CAPITAL_R_POINTER and FG_POINTER_SHAPE10)  returns FALSE
	COMMENT
	COMMENT Class 287
	COMMENT In function 'CheckCarrotGraph', call function  CheckMinMax with parameter (cg_ptr_shape with index counter j of Cg_settings with index CG counter-1 of Page_settings,FG_CAPITAL_R_POINTER and FG_POINTER_SHAPE10)  returns TRUE			
	COMMENT
	COMMENT Class 288
	COMMENT In function 'CheckCarrotGraph', call function  CheckColor with parameter cg_ptr_color with index counter j of Cg_settings with index CG counter-1 of Page_settings returns FALSE
	COMMENT
	COMMENT Class 289
	COMMENT In function 'CheckCarrotGraph', call function  CheckColor with parameter cg_ptr_color with index counter j of Cg_settings with index CG counter-1 of Page_settings returns TRUE	
	COMMENT
	COMMENT Class 290
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (cg_ptr_scale with indices counter j and ZERO of Cg_settings with index CG counter-1 of Page_settings, ZERO, PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 291
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (cg_ptr_scale with indices counter j and ZERO of Cg_settings with index CG counter-1 of Page_settings, ZERO, PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 292
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax2 with parameters (cg_ptr_scale_offset with indices counter j and ZERO of Cg_settings with index CG counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 293
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax2 with parameters (cg_ptr_scale_offset with indices counter j and ZERO of Cg_settings with index CG counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 294
	COMMENT In function 'CheckCarrotGraph', call function  CheckMinMax with parameters (cg_ptr_rot with index counter j of Cg_settings with index CG counter-1 of Page_settings, MIN_LIN_ANGLE and MAX_LIN_ANGLE) returns FALSE 
	COMMENT
	COMMENT Class 295
	COMMENT In function 'CheckCarrotGraph', call function  CheckMinMax with parameters (cg_ptr_rot with index counter j of Cg_settings with index CG counter-1 of Page_settings, MIN_LIN_ANGLE and MAX_LIN_ANGLE) returns TRUE 	
	COMMENT
	COMMENT Class 296
	COMMENT In function 'CheckCarrotGraph', call function  CheckMinMax with parameters (cg_lim_val_type with index counter j of Cg_settings with index CG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns FALSE
	COMMENT
	COMMENT Class 297
	COMMENT In function 'CheckCarrotGraph', call function  CheckMinMax with parameters (cg_lim_val_type with index counter j of Cg_settings with index CG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns TRUE
	COMMENT
	COMMENT Class 298
	COMMENT In function 'CheckCarrotGraph', cg_lim_color with index counter j of Cg_settings with index CG counter-1 of Page_settings is not equal to ZERO
	COMMENT
	COMMENT Class 299
	COMMENT In function 'CheckCarrotGraph', cg_lim_color with index counter j of Cg_settings with index CG counter-1 of Page_settings is equal to ZERO
	COMMENT
	COMMENT Class 300
	COMMENT In function 'CheckCarrotGraph', call function  CheckMinMax with parameter cg_lim_type with index counter j of Cg_settings with index CG counter-1 of Page_settings,TYPE_NORMAL and  TYPE_WARNING returns FALSE
	COMMENT
	COMMENT Class 301
	COMMENT In function 'CheckCarrotGraph', call function  CheckMinMax with parameter cg_lim_type with index counter j of Cg_settings with index CG counter-1 of Page_settings,TYPE_NORMAL and  TYPE_WARNING returns TRUE	
	COMMENT
	COMMENT Class 302
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 303
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 304
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (cg_redx_width of Cg_settings with index CG counter-1 of Page_settings , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 305
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (cg_redx_width of Cg_settings with index CG counter-1 of Page_settings , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 306
	COMMENT In function 'CheckCarrotGraph', Cg_parameter_occurrence with index CG counter-1 is equal to TRUE 
	COMMENT
	COMMENT Class 307
	COMMENT In function 'CheckCarrotGraph', Cg_parameter_occurrence with index CG counter-1 is equal to FALSE 
	COMMENT
	COMMENT Class 308
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (cg_redx_height of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE 
	COMMENT
	COMMENT Class 309
	COMMENT In function 'CheckCarrotGraph', call function CheckAxisMinMax with parameters (cg_redx_height of Cg_settings with index CG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE 	
	COMMENT
	COMMENT Class 310
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax2 with parameters (u16_x of cg_redx_offset_axis of Cg_settings with index CG counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 311
	COMMENT In function 'CheckCarrotGraph', call function CheckAxisMinMax2 with parameters (u16_x of cg_redx_offset_axis of Cg_settings with index CG counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 312
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, cg_redx_width of Cg_settings with index CG counter-1 of Page_settings divided by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 313
	COMMENT In function 'CheckCarrotGraph', call function CheckAxisMinMax with parameters (u16_x of cg_redx_axis of Cg_settings with index CG counter-1 of Page_settings, cg_redx_width of Cg_settings with index CG counter-1 of Page_settings divided by two ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE		
	COMMENT
	COMMENT Class 314
	COMMENT In function 'CheckCarrotGraph', call function  CheckFont with parameters (cg_redx_font of Cg_settings with index CG counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 315
	COMMENT In function 'CheckCarrotGraph', call function CheckFont with parameters (cg_redx_font of Cg_settings with index CG counter-1 of Page_settings) returns TRUE
	COMMENT
	COMMENT Class 316
	COMMENT In function 'CheckCarrotGraph', call function  CheckString with parameters (cg_redx_txt with index counter j of Cg_settings with index CG counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE
	COMMENT
	COMMENT Class 317
	COMMENT In function 'CheckCarrotGraph', call function CheckString with parameters (cg_redx_txt with index counter j of Cg_settings with index CG counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns TRUE
	COMMENT
	COMMENT Class 318
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 319
	COMMENT In function 'CheckCarrotGraph', call function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 320
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 321
	COMMENT In function 'CheckCarrotGraph', call function CheckAxisMinMax with parameters (u16_x of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_x of  txt_redx_axis of cg_settings with index CG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE		
	COMMENT
	COMMENT Class 322
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 323
	COMMENT In function 'CheckCarrotGraph', call function CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings with index CG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE		
	COMMENT
	COMMENT Class 324
	COMMENT In function 'CheckCarrotGraph', call function  CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 325
	COMMENT In function 'CheckCarrotGraph', call function CheckAxisMinMax with parameters (u16_y of  cg_redx_offset_axis of cg_settings with index CG counter-1 of Page_settings plus u16_y of  cg_redx_axis of cg_settings with index CG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE	
	COMMENT
	COMMENT Class 326
	COMMENT In function 'CheckCarrotGraph', Number box byte format is not equal to NUM_ONEB,NUM_TWOB,NUM_THREEB
	COMMENT
	COMMENT Class 327
	COMMENT In function 'CheckCarrotGraph', Number box byte format is equal to NUM_ONEB,NUM_TWOB,NUM_THREEB	
	COMMENT
	COMMENT Class 328
	COMMENT In function 'CheckCarrotGraph', function CheckDecimalFormat with parameter number box decimal format is FALSE And number box decimal format is not Zero
	COMMENT
	COMMENT Class 329
	COMMENT In function 'CheckCarrotGraph', function CheckDecimalFormat with parameter number box decimal format is FALSE And number box decimal format is Zero	
	COMMENT
	COMMENT Class 330
	COMMENT In function 'CheckCarrotGraph', function CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 331
	COMMENT In function 'CheckCarrotGraph', function CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns TRUE
	COMMENT
	COMMENT Class 332
	COMMENT In function 'CheckCarrotGraph', function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 333
	COMMENT In function 'CheckCarrotGraph', function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 334
	COMMENT In function 'CheckCarrotGraph', function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns FALSE
	COMMENT
	COMMENT Class 335
	COMMENT In function 'CheckCarrotGraph', function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns TRUE		
	COMMENT
	COMMENT Class 336
	COMMENT In function 'CheckCarrotGraph', function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 337
	COMMENT In function 'CheckCarrotGraph', function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE	
	COMMENT
	COMMENT Class 338
	COMMENT In function 'CheckCarrotGraph', function CheckMinMax with parameters (parameter cg_no_ptr ofCarrot graph of Cg_settings with index CG counter-1 of Page_settings, ONE and MAX_NO_PTR ) returns FALSE 
	COMMENT
	COMMENT Class 339
	COMMENT In function 'CheckCarrotGraph', function CheckMinMax with parameters (parameter cg_no_ptr ofCarrot graph of Cg_settings with index CG counter-1 of Page_settings, ONE and MAX_NO_PTR ) returns TRUE 		
	COMMENT
	COMMENT Class 340
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (label of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_LABEL) returns FALSE 
	COMMENT
	COMMENT Class 341
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (label of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_LABEL) returns TRUE 		
	COMMENT
	COMMENT Class 342
	COMMENT In function 'CheckBarGraph', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 343
	COMMENT In function 'CheckBarGraph', Pdi_error_count is greater than MAX_ERROR_MSG		
	COMMENT
	COMMENT Class 344
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (sdi of Bg_settings with index BG counter-1 of Page_settings, ZERO and THREE) returns FALSE
	COMMENT
	COMMENT Class 345
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (sdi of Bg_settings with index BG counter-1 of Page_settings, ZERO and THREE) returns TRUE
	COMMENT
	COMMENT Class 346
	COMMENT In function 'CheckBarGraph', bg_orien of Bg_settings with index BG counter-1 of Page_settings not equal to BG_HORIZONTAL,BG_VERTICAL
	COMMENT
	COMMENT Class 347
	COMMENT In function 'CheckBarGraph', bg_orien of Bg_settings with index BG counter-1 of Page_settings equal to BG_HORIZONTAL,BG_VERTICAL
	COMMENT
	COMMENT Class 348
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
	COMMENT
	COMMENT Class 349
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE 
	COMMENT
	COMMENT Class 350
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (bg_width of Bg_settings with index BG counter-1 of Page_settings , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 351
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (bg_width of Bg_settings with index BG counter-1 of Page_settings , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 352
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_y of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 353
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_y of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 354
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_no_lin of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_NO_LIN) returns FALSE 
	COMMENT
	COMMENT Class 355
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_no_lin of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_NO_LIN) returns TRUE 	
	COMMENT
	COMMENT Class 356
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_lin_range with index counter j of Bg_settings with index BG counter-1 of Page_settings divided by product of ( ten and CalculatePower with parameter 10 and decimal number), MIN_LIN_RANGE and MAX_LIN_RANGE) returns FALSE 
	COMMENT
	COMMENT Class 357
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_lin_range with index counter j of Bg_settings with index BG counter-1 of Page_settings divided by product of ( ten and CalculatePower with parameter 10 and decimal number), MIN_LIN_RANGE and MAX_LIN_RANGE) returns TRUE 	
	COMMENT
	COMMENT Class 358
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_NO_LIM) returns FALSE
	COMMENT
	COMMENT Class 359
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_NO_LIM) returns TRUE
	COMMENT
	COMMENT Class 360
	COMMENT In function 'CheckBarGraph', Bg_parameter_occurrence with index BG counter-1 is equal to TRUE
	COMMENT
	COMMENT Class 361
	COMMENT In function 'CheckBarGraph', Bg_parameter_occurrence with index BG counter-1 is not equal to TRUE	
	COMMENT
	COMMENT Class 362
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_lim_val_type with index counter j of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns FALSE
	COMMENT
	COMMENT Class 363
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_lim_val_type with index counter j of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns TRUE	
	COMMENT
	COMMENT Class 364
	COMMENT In function 'CheckBarGraph', function CheckColor with parameters (bg_lim_color of Bg_settings with index BG counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 365
	COMMENT In function 'CheckBarGraph', function CheckColor with parameters (bg_lim_color of Bg_settings with index BG counter-1 of Page_settings) returns TRUE	
	COMMENT
	COMMENT Class 366
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_lim_type with counter j as index of Bg_settings with index BG counter-1 of Page_settings,TYPE_NORMAL,TYPE_WARNING) returns FALSE
	COMMENT
	COMMENT Class 367
	COMMENT In function 'CheckBarGraph', function CheckMinMax with parameters (bg_lim_type with counter j as index of Bg_settings with index BG counter-1 of Page_settings,TYPE_NORMAL,TYPE_WARNING) returns TRUE	
	COMMENT
	COMMENT Class 368
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (bg_redx_width of Bg_settings with index BG counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 369
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (bg_redx_width of Bg_settings with index BG counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 370
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (bg_redx_height of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH,PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 371
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (bg_redx_height of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH,PANEL_HEIGHT) returns TRUE
	COMMENT
	COMMENT Class 372
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax2 with parameters (u16_x of bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO ,-PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 373
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax2 with parameters (u16_x of bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO ,-PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 374
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
	COMMENT
	COMMENT Class 375
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE 
	COMMENT
	COMMENT Class 376
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 377
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE 	
	COMMENT
	COMMENT Class 378
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 379
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE
	COMMENT
	COMMENT Class 380
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 381
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE		
	COMMENT
	COMMENT Class 382
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 383
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 384
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, bg_redx_width of Bg_settings with index BG counter-1 of Page_settings by two,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 385
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, bg_redx_width of Bg_settings with index BG counter-1 of Page_settings by two,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 386
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_y of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, bg_redx_height of Bg_settings with index BG counter-1 of Page_settings by two,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 387
	COMMENT In function 'CheckBarGraph', function CheckAxisMinMax with parameters (u16_y of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, bg_redx_height of Bg_settings with index BG counter-1 of Page_settings by two,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE		
	COMMENT
	COMMENT Class 388
	COMMENT In function 'CheckBarGraph', function  CheckFont with parameters (bg_redx_font of Bg_settings with index BG counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 389
	COMMENT In function 'CheckBarGraph', function  CheckFont with parameters (bg_redx_font of Bg_settings with index BG counter-1 of Page_settings) returns TRUE		
	COMMENT
	COMMENT Class 390
	COMMENT In function 'CheckBarGraph', function  CheckString with parameters (bg_redx_txt with index counter j-1 of Bg_settings with index BG counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE
	COMMENT
	COMMENT Class 391
	COMMENT In function 'CheckBarGraph', function  CheckString with parameters (bg_redx_txt with index counter j-1 of Bg_settings with index BG counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns TRUE		
	COMMENT
	COMMENT Class 392
	COMMENT In function 'CheckBarGraph', nb_lim_color with index counter j of Nb_settings with index NB counter-1 of Page_settings is not equal to ZERO
	COMMENT
	COMMENT Class 393
	COMMENT In function 'CheckBarGraph', nb_lim_color with index counter j of Nb_settings with index NB counter-1 of Page_settings is equal to ZERO	
	COMMENT
	COMMENT Class 394
	COMMENT In function 'CheckBarGraph', function  CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 395
	COMMENT In function 'CheckBarGraph', function  CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns TRUE		
	COMMENT
	COMMENT Class 396
	COMMENT In function 'CheckBarGraph', function  Number box byte format is not equal to NUM_ONEB, NUM_TWOB,NUM_THREEB , NUM_FOURB
	COMMENT
	COMMENT Class 397
	COMMENT In function 'CheckBarGraph', function  Number box byte format is equal to NUM_ONEB, NUM_TWOB,NUM_THREEB , NUM_FOURB
	COMMENT
	COMMENT Class 398
	COMMENT In function 'CheckBarGraph', function  CheckDecimalFormat with parameter (Number box decimal format ) returns FALSE
	COMMENT
	COMMENT Class 399
	COMMENT In function 'CheckBarGraph', function  CheckDecimalFormat with parameter (Number box decimal format ) returns TRUE
	COMMENT
	COMMENT Class 400
	COMMENT In function 'CheckBarGraph', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 401
	COMMENT In function 'CheckBarGraph', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 402
	COMMENT In function 'CheckBarGraph', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns FALSE
	COMMENT
	COMMENT Class 403
	COMMENT In function 'CheckBarGraph', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns TRUE
	COMMENT
	COMMENT Class 404
	COMMENT In function 'CheckBarGraph', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns FALSE
	COMMENT
	COMMENT Class 405
	COMMENT In function 'CheckBarGraph', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns TRUE
	COMMENT
	COMMENT Class 406
	COMMENT In function 'CheckBarGraph', function  CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 407
	COMMENT In function 'CheckBarGraph', function  CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE
	COMMENT
	COMMENT Class 408
	COMMENT In function 'CheckNumberBox', function  CheckMinMax with parameters (label of Nb_settings with index NB counter-1 of Page_settings, ONE and MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 409
	COMMENT In function 'CheckNumberBox', function  CheckMinMax with parameters (label of Nb_settings with index NB counter-1 of Page_settings, ONE and MAX_LABEL) returns TRUE
	COMMENT
	COMMENT Class 410
	COMMENT In function 'CheckNumberBox', Pdi_error_count is less than MAX_ERROR_MSG 
	COMMENT
	COMMENT Class 411
	COMMENT In function 'CheckNumberBox', Pdi_error_count is greater than MAX_ERROR_MSG 
	COMMENT
	COMMENT Class 412
	COMMENT In function 'CheckNumberBox', function  eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Nb_settings with index NB counter-1 of Page_settings, ZERO and THREE) returns FALSE
	COMMENT
	COMMENT Class 413
	COMMENT In function 'CheckNumberBox', function  eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Nb_settings with index NB counter-1 of Page_settings, ZERO and THREE) returns TRUE
	COMMENT
	COMMENT Class 414
	COMMENT In function 'CheckNumberBox', function  CheckDecimalFormat with parameter Number box decimal format is FALSE
	COMMENT
	COMMENT Class 415
	COMMENT In function 'CheckNumberBox', function  CheckDecimalFormat with parameter Number box decimal format is TRUE
	COMMENT
	COMMENT Class 416
	COMMENT In function 'CheckNumberBox', Number box byte format is not equal to NUM_ONEB ,NUM_TWOB ,NUM_THREEB, NUM_FOURB
	COMMENT
	COMMENT Class 417
	COMMENT In function 'CheckNumberBox',  Number box byte format is equal to NUM_ONEB ,NUM_TWOB ,NUM_THREEB, NUM_FOURB
	COMMENT
	COMMENT Class 418
	COMMENT In function 'CheckNumberBox', Nb_parameter_occurrence with index NB counter-1 is equal to TRUE
	COMMENT
	COMMENT Class 419
	COMMENT In function 'CheckNumberBox',  Nb_parameter_occurrence with index NB counter-1 is not equal to TRUE
	COMMENT
	COMMENT Class 420
	COMMENT In function 'CheckNumberBox', function  CheckMinMax with parameters (nb_no_lim of Number Box of Nb_settings with index NB counter-1 of Page_settings, ONE and MAX_NO_LIM Ranges ) returns FALSE
	COMMENT
	COMMENT Class 421
	COMMENT In function 'CheckNumberBox', function  CheckMinMax with parameters (nb_no_lim of Number Box of Nb_settings with index NB counter-1 of Page_settings, ONE and MAX_NO_LIM Ranges ) returns TRUE
	COMMENT
	COMMENT Class 422
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 423
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 424
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns FALSE
	COMMENT
	COMMENT Class 425
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns TRUE
	COMMENT
	COMMENT Class 426
	COMMENT In function 'CheckNumberBox', function  CheckMinMax with parameters (nb_lim_val_type with index counter j of Nb_settings with index NB counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns FALSE
	COMMENT
	COMMENT Class 427
	COMMENT In function 'CheckNumberBox', function  CheckMinMax with parameters (nb_lim_val_type with index counter j of Nb_settings with index NB counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns TRUE
	COMMENT
	COMMENT Class 428
	COMMENT In function 'CheckNumberBox',  nb_lim_color with index counter j of Nb_settings with loop index as NB counter - 1 of Page_settings is not equal
	COMMENT
	COMMENT Class 429
	COMMENT In function 'CheckNumberBox',  nb_lim_color with index counter j of Nb_settings with loop index as NB counter - 1 of Page_settings is equal
	COMMENT
	COMMENT Class 430
	COMMENT In function 'CheckNumberBox', function  CheckMinMax with parameter nb_lim_type with index counter j of Nb_settings with loop index as NB counter - 1 of Page_settings,TYPE_NORMAL and TYPE_WARNING returns FALSE
	COMMENT
	COMMENT Class 431
	COMMENT In function 'CheckNumberBox', function  CheckMinMax with parameter nb_lim_type with index counter j of Nb_settings with loop index as NB counter - 1 of Page_settings,TYPE_NORMAL and TYPE_WARNING returns TRUE
	COMMENT
	COMMENT Class 432
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 433
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 434
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 435
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 436
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_y of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings plus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 437
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_y of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings plus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE
	COMMENT
	COMMENT Class 438
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (nb_redx_width of Nb_settings with index NB counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 439
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (nb_redx_width of Nb_settings with index NB counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE
	COMMENT
	COMMENT Class 440
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (nb_redx_height of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 441
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (nb_redx_height of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE	
	COMMENT
	COMMENT Class 442
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax2 with parameters (u16_x of nb_redx_offset_axis of Nb_settings with index NB counter-1 of Page_settings, -PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 443
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax2 with parameters (u16_x of nb_redx_offset_axis of Nb_settings with index NB counter-1 of Page_settings, -PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE		
	COMMENT
	COMMENT Class 444
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings plus u16_x of nb_redx_offset_axis of Nb_settings with index NB counter-1 of Page_settings,string width by two,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 445
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_x of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings plus u16_x of nb_redx_offset_axis of Nb_settings with index NB counter-1 of Page_settings,string width by two,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE			
	COMMENT
	COMMENT Class 446
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_y of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings plus u16_y of nb_redx_offset_axis of Nb_settings with index NB counter-1 of Page_settings,string height by two,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 447
	COMMENT In function 'CheckNumberBox', function  CheckAxisMinMax with parameters (u16_y of nb_redx_axis of Nb_settings with index NB counter-1 of Page_settings plus u16_y of nb_redx_offset_axis of Nb_settings with index NB counter-1 of Page_settings,string height by two,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE
	COMMENT
	COMMENT Class 448
	COMMENT In function 'CheckNumberBox', function  CheckString with parameters (nb_redx_txt with index counter j of Nb_settings with index NB counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE
	COMMENT
	COMMENT Class 449
	COMMENT In function 'CheckNumberBox', function  CheckString with parameters (nb_redx_txt with index counter j of Nb_settings with index NB counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns TRUE	
	COMMENT
	COMMENT Class 450
	COMMENT In function 'CheckRoundDial', call function  OctToStringTrim with parameters label of Rd_settings with index RD counter-1 of Page_settings, size of label and label string.
	COMMENT
	COMMENT Class 451
	COMMENT In function 'CheckRoundDial', function  Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Rd_settings with index RD counter-1 of Page_settings, ZERO and THREE) returns FALSE
	COMMENT
	COMMENT Class 452
	COMMENT In function 'CheckRoundDial', function  Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Rd_settings with index RD counter-1 of Page_settings, ZERO and THREE) returns TRUE	
	COMMENT
	COMMENT Class 453
	COMMENT In function 'CheckRoundDial', assc_labels with index counter j of Rd_settings with index RD counter-1 of Page_settings not equal to ZERO
	COMMENT
	COMMENT Class 454
	COMMENT In function 'CheckRoundDial', assc_labels with index counter j of Rd_settings with index RD counter-1 of Page_settings equal to ZERO	
	COMMENT
	COMMENT Class 455
	COMMENT In function 'CheckRoundDial', Pdi_error_count is less than  MAX_ERROR_MSG then
	COMMENT
	COMMENT Class 456
	COMMENT In function 'CheckRoundDial', Pdi_error_count is greater than  MAX_ERROR_MSG then		
	COMMENT
	COMMENT Class 457
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of rd_axis of Rd_settings with index RD counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PALE_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 458
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of rd_axis of Rd_settings with index RD counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PALE_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 459
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_lin_range with index counter j of Rd_settings with index RD counter-1 of Page_settings divided by COND1,MIN_LIN_RANGE and MAX_LIN_RANGE) returns FALSE
	COMMENT
	COMMENT Class 460
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_lin_range with index counter j of Rd_settings with index RD counter-1 of Page_settings divided by COND1,MIN_LIN_RANGE and MAX_LIN_RANGE) returns TRUE	
	COMMENT
	COMMENT Class 461
	COMMENT In function 'CheckRoundDial', Rd_lin_angle_status with index RD counter-1  right shifted by loop counter minus one and with ONE is equal to ONE
	COMMENT
	COMMENT Class 462
	COMMENT In function 'CheckRoundDial', Rd_lin_angle_status with index RD counter-1  right shifted by loop counter minus one and with ONE is not equal to ONE		
	COMMENT
	COMMENT Class 463
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_ptr_shape with index counter j of Rd_settings with index RD counter-1 of Page_settings, FG_CAPITAL_R_POINTER, FG_MOVING_ROUND_DIAL)  returns FALSE
	COMMENT
	COMMENT Class 464
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_ptr_shape with index counter j of Rd_settings with index RD counter-1 of Page_settings, FG_CAPITAL_R_POINTER, FG_MOVING_ROUND_DIAL)  returns TRUE	
	COMMENT
	COMMENT Class 465
	COMMENT In function 'CheckRoundDial', function CheckColor with parameter rd_ptr_color with index counter j of Rd_settings with index RD counter-1 of Page_settings returns FALSE
	COMMENT
	COMMENT Class 466
	COMMENT In function 'CheckRoundDial', function CheckColor with parameter rd_ptr_color with index counter j of Rd_settings with index RD counter-1 of Page_settings returns TRUE		
	COMMENT
	COMMENT Class 467
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (rd_ptr_scale with indices counter j and ZERO of Rd_settings with index RD counter-1 of Page_settings, ZERO , PANEL_HEIGHT and  PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 468
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (rd_ptr_scale with indices counter j and ZERO of Rd_settings with index RD counter-1 of Page_settings, ZERO , PANEL_HEIGHT and  PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 469
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax2 with parameters (rd_ptr_scale_offset with indices counter j and ZERO of Rd_settings with index RD counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 470
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax2 with parameters (rd_ptr_scale_offset with indices counter j and ZERO of Rd_settings with index RD counter-1 of Page_settings, -PANEL_HEIGHT, -PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 471
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_ptr_rot with index counter j of Rd_settings with index RD counter-1 of Page_settings, MIN_LIN_ANGLE and MAX_LIN_ANGLE) returns FALSE
	COMMENT
	COMMENT Class 472
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_ptr_rot with index counter j of Rd_settings with index RD counter-1 of Page_settings, MIN_LIN_ANGLE and MAX_LIN_ANGLE) returns TRUE		
	COMMENT
	COMMENT Class 473
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_lim_val_type with index counter j of Rd_settings with index RD counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns FALSE
	COMMENT
	COMMENT Class 474
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_lim_val_type with index counter j of Rd_settings with index RD counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE) returns TRUE		
	COMMENT
	COMMENT Class 475
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_lim_val_type with index counter j of Rd_settings with index RD counter-1 of Page_settings,TYPE_NORMAL and TYPE_WARNING ) returns FALSE
	COMMENT
	COMMENT Class 476
	COMMENT In function 'CheckRoundDial', function CheckMinMax with parameters (rd_lim_val_type with index counter j of Rd_settings with index RD counter-1 of Page_settings,TYPE_NORMAL and TYPE_WARNING ) returns TRUE		
	COMMENT
	COMMENT Class 477
	COMMENT In function 'CheckRoundDial', rd_lim_color with index counter j of Rd_settings with index RD counter-1 of Page_settings is not equal to ZERO 
	COMMENT
	COMMENT Class 478
	COMMENT In function 'CheckRoundDial', rd_lim_color with index counter j of Rd_settings with index RD counter-1 of Page_settings is equal to ZERO 	
	COMMENT
	COMMENT Class 479
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 480
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 481
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (rd_redx_width of Rd_settings with index RD counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 482
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (rd_redx_width of Rd_settings with index RD counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE		
	COMMENT
	COMMENT Class 483
	COMMENT In function 'CheckRoundDial', Rd_parameter_occurrence with index RD counter-1 is equal to TRUE
	COMMENT
	COMMENT Class 484
	COMMENT In function 'CheckRoundDial', Rd_parameter_occurrence with index RD counter-1 is not equal to TRUE	
	COMMENT
	COMMENT Class 485
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (rd_redx_height of Rd_settings with index RD counter-1 of Page_settings , ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 486
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (rd_redx_height of Rd_settings with index RD counter-1 of Page_settings , ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE		
	COMMENT
	COMMENT Class 487
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax2 with parameters (u16_x of rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings, -PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH ) returns FALSE
	COMMENT
	COMMENT Class 488
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax2 with parameters (u16_x of rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings, -PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH ) returns TRUE		
	COMMENT
	COMMENT Class 489
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings,  rd_redx_width of Rd_settings with index RD counter-1 of Page_settings,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 490
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings,  rd_redx_width of Rd_settings with index RD counter-1 of Page_settings,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE		
	COMMENT
	COMMENT Class 491
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_y of rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings,  rd_redx_height of Rd_settings with index RD counter-1 of Page_settings,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 492
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_y of rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings,  rd_redx_height of Rd_settings with index RD counter-1 of Page_settings,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE		
	COMMENT
	COMMENT Class 493
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of  rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings plus u16_x of  txt_redx_axis of Rd_settings with index RD counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 494
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of  rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings plus u16_x of  txt_redx_axis of Rd_settings with index RD counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE	
	COMMENT
	COMMENT Class 495
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of  rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings plus u16_x of  rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 496
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_x of  rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings plus u16_x of  rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE		
	COMMENT
	COMMENT Class 497
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_y of  rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings plus u16_y of  rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE 
	COMMENT
	COMMENT Class 498
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_y of  rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings plus u16_y of  rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE 		
	COMMENT
	COMMENT Class 499
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_y of  rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings plus u16_y of  rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE
	COMMENT
	COMMENT Class 500
	COMMENT In function 'CheckRoundDial', function CheckAxisMinMax with parameters (u16_y of  rd_redx_offset_axis of Rd_settings with index RD counter-1 of Page_settings plus u16_y of  rd_redx_axis of Rd_settings with index RD counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE 		
	COMMENT
	COMMENT Class 501
	COMMENT In function 'CheckRoundDial', function CheckFont with parameters (rd_redx_font with index counter j of Rd_settings with index RD counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 502
	COMMENT In function 'CheckRoundDial', function CheckFont with parameters (rd_redx_font with index counter j of Rd_settings with index RD counter-1 of Page_settings) returns TRUE		
	COMMENT
	COMMENT Class 503
	COMMENT In function 'CheckRoundDial', function CheckString with parameters (rd_redx_txt with index counter j of Rd_settings with index RD counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE 
	COMMENT
	COMMENT Class 504
	COMMENT In function 'CheckRoundDial', function CheckString with parameters (rd_redx_txt with index counter j of Rd_settings with index RD counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns TRUE 		
	COMMENT
	COMMENT Class 505
	COMMENT In function 'CheckRoundDial', function  CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns FALSE
	COMMENT
	COMMENT Class 506
	COMMENT In function 'CheckRoundDial', function  CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns TRUE			
	COMMENT
	COMMENT Class 507
	COMMENT In function 'CheckRoundDial', Number box byte format is not equal to NUM_ONEB, NUM_TWOB,NUM_THREEB ,NUM_FOURB
	COMMENT
	COMMENT Class 508
	COMMENT In function 'CheckRoundDial', Number box byte format is equal to NUM_ONEB, NUM_TWOB,NUM_THREEB ,NUM_FOURB
	COMMENT
	COMMENT Class 509
	COMMENT In function 'CheckRoundDial', function  CheckDecimalFormat with parameter Number box decimal format returns FALSE
	COMMENT
	COMMENT Class 510
	COMMENT In function 'CheckRoundDial', function  CheckDecimalFormat with parameter Number box decimal format returns TRUE
	COMMENT
	COMMENT Class 511
	COMMENT In function 'CheckRoundDial', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
	COMMENT
	COMMENT Class 512
	COMMENT In function 'CheckRoundDial', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE 
	COMMENT
	COMMENT Class 513
	COMMENT In function 'CheckRoundDial', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false
	COMMENT
	COMMENT Class 514
	COMMENT In function 'CheckRoundDial', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false
	COMMENT
	COMMENT Class 515
	COMMENT In function 'CheckRoundDial', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
	COMMENT
	COMMENT Class 516
	COMMENT In function 'CheckRoundDial', function  CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE 	
	COMMENT
	COMMENT Class 517
	COMMENT In function 'CheckRoundDial', function  CheckMinMax with parameter poly_shape of Pg_settings with index counter minus one, FG_CAPITAL_R_POINTER and FG_POINTER_SHAPE12 is TRUE
	COMMENT
	COMMENT Class 518
	COMMENT In function 'CheckRoundDial', function  CheckMinMax with parameter poly_shape of Pg_settings with index counter minus one, FG_CAPITAL_R_POINTER and FG_POINTER_SHAPE12 is FALSE	
	COMMENT
	COMMENT Class 519
	COMMENT In function 'CheckRoundDial', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 520
	COMMENT In function 'CheckRoundDial', fPdi_error_count is greater than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 521
	COMMENT In function 'CheckRoundDial', function  CheckMinMax with parameter poly_no_pts of Pg_settings with index counter minus one,THREE and M_FOURTY_FIVE is TRUE
	COMMENT
	COMMENT Class 522
	COMMENT In function 'CheckRoundDial', function  CheckMinMax with parameter poly_no_pts of Pg_settings with index counter minus one,THREE and M_FOURTY_FIVE is FALSE
	COMMENT
	COMMENT Class 523
	COMMENT In function 'CheckRoundDial', function  CheckMinMax with parameter poly_inc_no_pts of Pg_settings with index counter minus one, THREE and M_FOURTY_FIVE is TRUE
	COMMENT
	COMMENT Class 524
	COMMENT In function 'CheckRoundDial', function  CheckMinMax with parameter poly_inc_no_pts of Pg_settings with index counter minus one, THREE and M_FOURTY_FIVE is FALSE
	COMMENT
	COMMENT Class 525
	COMMENT In function 'CheckRoundDial', function  CheckMinMax with parameter poly_inc_no_pts of Pg_settings with index counter minus one, THREE and M_FOURTY_FIVE is TRUE
	COMMENT
	COMMENT Class 526
	COMMENT In function 'CheckRoundDial', function  CheckMinMax with parameter poly_inc_no_pts of Pg_settings with index counter minus one, THREE and M_FOURTY_FIVE is FALSE
	COMMENT
	COMMENT Class 527
	COMMENT In function 'CheckRoundDial', function  CheckFloatMinMax with parameter( poly_pts with index [Counter Poly Points][1] of Pg_settings with index [Counter loop Poly minus one],-1.0 and 1.0) returns FALSE
	COMMENT
	COMMENT Class 528
	COMMENT In function 'CheckRoundDial', function  CheckFloatMinMax with parameter( poly_pts with index [Counter Poly Points][1] of Pg_settings with index [Counter loop Poly minus one],-1.0 and 1.0) returns TRUE
	COMMENT
	COMMENT Class 529
	COMMENT In function 'CheckCASParameters', function  CheckString with parameters (cas_string of Cas_messages with index counter-1 and (MAX_CAS_STRING_TXT minus ONE) returns FALSE
	COMMENT
	COMMENT Class 530
	COMMENT In function 'CheckCASParameters', function  CheckString with parameters (cas_string of Cas_messages with index counter-1 and (MAX_CAS_STRING_TXT minus ONE) returns TRUE
	COMMENT
	COMMENT Class 531
	COMMENT In function 'CheckCASParameters', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 532
	COMMENT In function 'CheckCASParameters', Pdi_error_count is greater than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 533
	COMMENT In function 'CheckCASParameters', function  CheckMinMax with parameters (label of Cas_messages with index counter-1, ONE and MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 534
	COMMENT In function 'CheckCASParameters', function  CheckMinMax with parameters (label of Cas_messages with index counter-1, ONE and MAX_LABEL) returns TRUE
	COMMENT
	COMMENT Class 535
	COMMENT In function 'CheckCASParameters', function   CheckMinMax with parameters (cas_start_bit of Cas_messages with index counter-1, MIN_CAS_START_BIT and MAX_CAS_START_BIT) returns FALSE 
	COMMENT
	COMMENT Class 536
	COMMENT In function 'CheckCASParameters', function   CheckMinMax with parameters (cas_start_bit of Cas_messages with index counter-1, MIN_CAS_START_BIT and MAX_CAS_START_BIT) returns TRUE 
	COMMENT
	COMMENT Class 537
	COMMENT In function 'CheckCASParameters', function   CheckMinMax with parameters (cas_priority of Cas_messages with index counter-1, ONE and MAX_CAS_PRIORITY) returns FALSE
	COMMENT
	COMMENT Class 538
	COMMENT In function 'CheckCASParameters', function   CheckMinMax with parameters (cas_priority of Cas_messages with index counter-1, ONE and MAX_CAS_PRIORITY) returns TRUE
	COMMENT
	COMMENT Class 539
	COMMENT In function 'CheckCASParameters', function   CheckCasType with parameter cas_type of Cas_messages with index loop count minus one returns FALSE
	COMMENT
	COMMENT Class 540
	COMMENT In function 'CheckCASParameters', function  CheckCasType with parameter cas_type of Cas_messages with index loop count minus one returns TRUE
	COMMENT
	COMMENT Class 541
	COMMENT In function 'CheckCASParameters', function   cas_type of Cas_messages with index loop count minus one is not equal to ZERO
	COMMENT
	COMMENT Class 542
	COMMENT In function 'CheckCASParameters', function   as_type of Cas_messages with index loop count minus one is equal to ZERO	
	COMMENT
	COMMENT Class 543
	COMMENT In function 'CheckCASParameters', function  CheckMinMax with parameters (cas id , ZERO and MAX_CAS_ID) returns FALSE
	COMMENT
	COMMENT Class 544
	COMMENT In function 'CheckCASParameters', function CheckMinMax with parameters (cas id , ZERO and MAX_CAS_ID) returns TRUE	
	COMMENT
	COMMENT Class 545
	COMMENT In function 'CheckA429Parameters', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 546
	COMMENT In function 'CheckA429Parameters', Pdi_error_count is greater than MAX_ERROR_MSG	
	COMMENT
	COMMENT Class 547
	COMMENT In function 'CheckA429Parameters', A429_port of A429_cfg_data with index counter-1 is equal to TWO
	COMMENT
	COMMENT Class 548
	COMMENT In function 'CheckA429Parameters', A429_port of A429_cfg_data with index counter-1 is not equal to TWO	
	COMMENT
	COMMENT Class 549
	COMMENT In function 'CheckA429Parameters', function CheckMinMax with parameters (A429_label of A429_cfg_data with index counter-1, ONE and MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 550
	COMMENT In function 'CheckA429Parameters', function CheckMinMax with parameters (A429_label of A429_cfg_data with index counter-1, ONE and MAX_LABEL) returns TRUE	
	COMMENT
	COMMENT Class 551
	COMMENT In function 'CheckA429Parameters', If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (A429_sdi of A429_cfg_data with index counter -1, ZERO and THREE) returns FALSE
	COMMENT
	COMMENT Class 552
	COMMENT In function 'CheckA429Parameters', If eng_sdi of Config_data is equal to FALSE AND function CheckMinMax with parameters (A429_sdi of A429_cfg_data with index counter -1, ZERO and THREE) returns TRUE	
	COMMENT
	COMMENT Class 553
	COMMENT In function 'CheckA429Parameters', A429_type of A429_cfg_data with index counter-1 is not equal to BNR and DDW 
	COMMENT
	COMMENT Class 554
	COMMENT In function 'CheckA429Parameters', A429_type of A429_cfg_data with index counter-1 is equal to BNR and DDW 	
	COMMENT
	COMMENT Class 555
	COMMENT In function 'CheckA429Parameters', CheckMinMax with parameters (A429_bnr_bits of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ONE and MAX_BNR_BITS) returns FALSE 
	COMMENT
	COMMENT Class 556
	COMMENT In function 'CheckA429Parameters', CheckMinMax with parameters (A429_bnr_bits of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ONE and MAX_BNR_BITS) returns TRUE 	
	COMMENT
	COMMENT Class 557
	COMMENT In function 'CheckA429Parameters', CheckMinMax with parameters (A429_bnr_start_bit of A429_bnr_data of label_data of A429_cfg_data with index counter-1, MIN_START_BIT and MAX_START_BIT) returns FALSE 
	COMMENT
	COMMENT Class 558
	COMMENT In function 'CheckA429Parameters', CheckMinMax with parameters (A429_bnr_start_bit of A429_bnr_data of label_data of A429_cfg_data with index counter-1, MIN_START_BIT and MAX_START_BIT) returns TRUE 	
	COMMENT
	COMMENT Class 559
	COMMENT In function 'CheckA429Parameters', A429_bnr_min of A429_bnr_data of label_data of A429_cfg_data with index counter-1 is less than MIN_BNR 
	COMMENT
	COMMENT Class 560
	COMMENT In function 'CheckA429Parameters', A429_bnr_min of A429_bnr_data of label_data of A429_cfg_data with index counter-1 is greater than MIN_BNR 	
	COMMENT
	COMMENT Class 561
	COMMENT In function 'CheckA429Parameters', function CheckMinMax with parameters (A429_bnr_offset of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ZERO and MAX_BNR_OFFSET) returns FALSE
	COMMENT
	COMMENT Class 562
	COMMENT In function 'CheckA429Parameters', function CheckMinMax with parameters (A429_bnr_offset of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ZERO and MAX_BNR_OFFSET) returns TRUE		
	COMMENT
	COMMENT Class 563
	COMMENT In function 'CheckA429Parameters', function CheckMinMax with parameters (A429_bnr_timeout of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ZERO and MAX_TIMEOUT) returns FALSE
	COMMENT
	COMMENT Class 564
	COMMENT In function 'CheckA429Parameters', function CheckMinMax with parameters (A429_bnr_timeout of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ZERO and MAX_TIMEOUT) returns TRUE		
	COMMENT
	COMMENT Class 565
	COMMENT In function 'CheckA429Parameters', function  CheckFloatMinMax  with parameters (A429_bnr_scale_fact of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ZERO and TWO) returns FALSE
	COMMENT
	COMMENT Class 566
	COMMENT In function 'CheckA429Parameters', function  CheckFloatMinMax  with parameters (A429_bnr_scale_fact of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ZERO and TWO) returns TRUE		
	COMMENT
	COMMENT Class 567
	COMMENT In function 'CheckA429Parameters', function  CheckMinMax with parameters (A429_ddw_timeout of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ZERO and MAX_TIMEOUT) returns FALSE
	COMMENT
	COMMENT Class 568
	COMMENT In function 'CheckA429Parameters', function  CheckMinMax with parameters (A429_ddw_timeout of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ZERO and MAX_TIMEOUT) returns TRUE		
	COMMENT
	COMMENT Class 569
	COMMENT In function 'CheckElogTrig', Elog_trig_bool is equal to FALSE.
	COMMENT
	COMMENT Class 570
	COMMENT In function 'CheckElogTrig', Elog_trig_bool is not equal to FALSE.	
	COMMENT
	COMMENT Class 571
	COMMENT In function 'CheckElogTrig', CheckMinMax with parameters (elog_trig_label with index as condition counter of Elog_trig with index Exceedence log counter, ONE and MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 572
	COMMENT In function 'CheckElogTrig', CheckMinMax with parameters (elog_trig_label with index as condition counter of Elog_trig with index Exceedence log counter, ONE and MAX_LABEL) returns TRUE	
	COMMENT
	COMMENT Class 573
	COMMENT In function 'CheckElogTrig', Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 574
	COMMENT In function 'CheckElogTrig', Pdi_error_count is greater than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 575
	COMMENT In function 'CheckElogTrig', eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (elog_trig_sdi with index as condition counter of Elog_trig with index Exceedence log counter , ZERO and THREE) returns FALSE
	COMMENT
	COMMENT Class 576
	COMMENT In function 'CheckElogTrig', eng_sdi of Config_data is equal to FALSE AND function CheckMinMax with parameters (elog_trig_sdi with index as condition counter of Elog_trig with index Exceedence log counter , ZERO and THREE) returns TRUE	
	COMMENT
	COMMENT Class 577
	COMMENT In function 'CheckElogTrig''elog_trig_start_type with index as condition counter of Elog_trig with index Exceedence log counter is not equal to ZERO
	COMMENT
	COMMENT Class 578
	COMMENT In function 'CheckElogTrig''elog_trig_start_type with index as condition counter of Elog_trig with index Exceedence log counter is equal to ZERO	
	COMMENT
	COMMENT Class 579
	COMMENT In function 'CheckElogTrig''elog_trig_cross_type with index as condition counter of Elog_trig with index Exceedence log counter is not equal to ZERO
	COMMENT
	COMMENT Class 580
	COMMENT In function 'CheckElogTrig''elog_trig_cross_type with index as condition counter of Elog_trig with index Exceedence log counter is equal to ZERO	
	COMMENT
	COMMENT Class 581
	COMMENT In function 'CheckElogTrig''elog_trig_cross_type with index as condition counter of Elog_trig with index Exceedence log counter is not equal to ZERO
	COMMENT
	COMMENT Class 582
	COMMENT In function 'CheckElogTrig''elog_trig_cross_type with index as condition counter of Elog_trig with index Exceedence log counter is equal to ZERO			
	COMMENT
	COMMENT Class 583
	COMMENT In function 'PdiDataCheck'' Global_check is TRUE
	COMMENT
	COMMENT Class 584
	COMMENT In function 'PdiDataCheck''Global_check is not TRUE	
	COMMENT
	COMMENT Class 585
	COMMENT In function 'PdiDataCheck'' Page_check of index Page_num is TRUE
	COMMENT
	COMMENT Class 586
	COMMENT In function 'PdiDataCheck''Page_check of index Page_num is not TRUE		
	COMMENT
	COMMENT Class 587
	COMMENT In function 'CheckDecimalFormat'' The function return TRUE if format is NUM_ONED,NUM_TWOD,NUM_THREED,NUM_FOURD,NUM_FIVED and NUM_SIXD.
	COMMENT
	COMMENT Class 588
	COMMENT In function 'CheckDecimalFormat''The function return FALSE if format is not NUM_ONED,NUM_TWOD,NUM_THREED,NUM_FOURD,NUM_FIVED and NUM_SIXD.		
	COMMENT
	COMMENT Class 589
	COMMENT In function 'FindColorRange'' color is set to BLACK.
	COMMENT
	COMMENT Class 590
	COMMENT In function 'FindColorRange'' color is set to DARK_RED	
	COMMENT
	COMMENT Class 591
	COMMENT In function 'FindColorRange'' color is set to RED.
	COMMENT
	COMMENT Class 592
	COMMENT In function 'FindColorRange'' color is set to CAS_REV_RED		
	COMMENT
	COMMENT Class 593
	COMMENT In function 'FindColorRange'' color is set to PINK.
	COMMENT
	COMMENT Class 594
	COMMENT In function 'FindColorRange'' color is set to TEAL	
	COMMENT
	COMMENT Class 595
	COMMENT In function 'FindColorRange'' color is set to GREEN.
	COMMENT
	COMMENT Class 596
	COMMENT In function 'FindColorRange'' color is set to BRIGHT_GREEN		
	COMMENT
	COMMENT Class 597
	COMMENT In function 'FindColorRange'' color is set to DARK_BLUE		
	COMMENT
	COMMENT Class 598
	COMMENT In function 'FindColorRange'' color is set to BLUE.
	COMMENT
	COMMENT Class 599
	COMMENT In function 'FindColorRange'' color is set to LIGHT_GRAY	
	COMMENT
	COMMENT Class 600
	COMMENT In function 'FindColorRange'' color is set to GRAY.
	COMMENT
	COMMENT Class 601
	COMMENT In function 'FindColorRange'' color is set to DARK_GRAY		
	COMMENT
	COMMENT Class 602
	COMMENT In function 'FindColorRange'' color is set to YELLOW.
	COMMENT
	COMMENT Class 603
	COMMENT In function 'FindColorRange'' color is set to ORANGE	
	COMMENT
	COMMENT Class 604
	COMMENT In function 'FindColorRange'' color is set to WHITE.
	COMMENT
	COMMENT Class 605
	COMMENT In function 'FindColorRange'' return COLOR_MAX if color is other than BLACK, RED, LIGHT_RED,
	COMMENT TEAL,GREEN,DARK_BLUE,BLUE, LIGHT_GRAY, YELLOW,TURQUOISE, VIOLETand WHITE
	COMMENT
	COMMENT Class 606
	COMMENT In function 'FindColorRange'' color is set to VIOLET	
	COMMENT
	COMMENT Class 607
	COMMENT In function 'FindColorRange'' color is set to TURQUOISE.		
	COMMENT
	COMMENT Class 608
	COMMENT In function 'CheckVerPos'' M_FP_COMPARE is greater than difference of pos and ZERO AND M_FP_COMPARE is greater than difference of ZERO and pos.
	COMMENT
	COMMENT Class 609
	COMMENT In function 'CheckVerPos'' - M_FP_COMPARE is greater than difference of pos and ONE AND M_FP_COMPARE is greater than difference of ONE and pos.
	COMMENT
	COMMENT Class 610
	COMMENT In function 'CheckVerPos'' - M_FP_COMPARE is greater than difference of pos and TEN AND M_FP_COMPARE is greater than difference of TEN and pos.
	COMMENT
	COMMENT Class 611
	COMMENT In function 'CheckVerPos'' - M_FP_COMPARE is greater than difference of pos and ONE_HUNDRED AND M_FP_COMPARE is greater than difference of ONE_HUNDRED and pos.		
	COMMENT
	COMMENT Class 612
	COMMENT In function 'CheckVerPos'' - M_FP_COMPARE is greater than difference of pos and 0.1f AND M_FP_COMPARE is greater than difference of 0.1f and pos.
	COMMENT
	COMMENT Class 613
	COMMENT In function 'CheckVerPos'' -- M_FP_COMPARE is greater than difference of pos and 0.01f AND M_FP_COMPARE is greater than difference of 0.01f and pos.		
	COMMENT
	COMMENT Class 614
	COMMENT In function 'CheckElogParam'' Elog_param is equal to FALSE.
	COMMENT
	COMMENT Class 615
	COMMENT In function 'CheckElogParam''Elog_param is not equal to FALSE.
	COMMENT
	COMMENT Class 616
	COMMENT In function 'CheckElogParam'' call function CheckMinMax with parameters (elog_label of Elog_label with index Exceedence log counter, ONE and MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 617
	COMMENT In function 'CheckElogParam'' call function CheckMinMax with parameters (elog_label of Elog_label with index Exceedence log counter, ONE and MAX_LABEL) returns TRUE	
	COMMENT
	COMMENT Class 618
	COMMENT In function 'CheckElogParam'' Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 619
	COMMENT In function 'CheckElogParam'' Pdi_error_count is greater than MAX_ERROR_MSG	
	COMMENT
	COMMENT Class 620
	COMMENT In function 'CheckElogParam'' call function CheckMinMax with parameters (elog_sdi of Elog_label with index Exceedence log counter , ZERO and THREE) returns FALSE
	COMMENT
	COMMENT Class 621
	COMMENT In function 'CheckElogParam'' call function CheckMinMax with parameters (elog_sdi of Elog_label with index Exceedence log counter , ZERO and THREE) returns TRUE		
	COMMENT
	COMMENT Class 622
	COMMENT In function 'CheckElogParam'' call function CheckMinMax with parameters (elog_bit_label with index as index_i counter of Elog_label with index Exceedence log counter, ONE and MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 623
	COMMENT In function 'CheckElogParam'' call function CheckMinMax with parameters (elog_bit_label with index as index_i counter of Elog_label with index Exceedence log counter, ONE and MAX_LABEL) returns TRUE	
	COMMENT
	COMMENT Class 624
	COMMENT In function 'CheckElogParam'' call function CheckString with parameters (address of elog_bit_param with index_i and index_j of Elog_label with index Exceedence log counter and MAX_ELOG_BIT_PARAM) returns FALSE
	COMMENT
	COMMENT Class 625
	COMMENT In function 'CheckElogParam'' call function CheckString with parameters (address of elog_bit_param with index_i and index_j of Elog_label with index Exceedence log counter and MAX_ELOG_BIT_PARAM) returns TRUE		
	COMMENT
	COMMENT Class 626
	COMMENT In function 'CheckAcdtParams'' Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 627
	COMMENT In function 'CheckAcdtParams'' Pdi_error_count is greater than MAX_ERROR_MSG	
	COMMENT
	COMMENT Class 628
	COMMENT In function 'CheckAcdtParams'' Acdt_parameters is equal to FALSE.
	COMMENT
	COMMENT Class 629
	COMMENT In function 'CheckAcdtParams'' Acdt_parameters is not equal to FALSE.	
	COMMENT
	COMMENT Class 630
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (label of Auto_cool_down_tmr, ONE and MAX_LABEL) returns FALSE
	COMMENT
	COMMENT Class 631
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (label of Auto_cool_down_tmr, ONE and MAX_LABEL) returns TRUE	
	COMMENT
	COMMENT Class 632
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (acdt_time of Auto_cool_down_tmr, ZERO and MAX_TIMER) returns FALSE 
	COMMENT
	COMMENT Class 633
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (acdt_time of Auto_cool_down_tmr, ZERO and MAX_TIMER) returns TRUE 	
	COMMENT
	COMMENT Class 634
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (wog_label of Auto_cool_down_tmr, ONE and MAX_LABEL) returns FALSE 
	COMMENT
	COMMENT Class 635
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (wog_label of Auto_cool_down_tmr, ONE and MAX_LABEL) returns TRUE		
	COMMENT
	COMMENT Class 636
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (wog_start_bit of Auto_cool_down_tmr, ELEVEN and MAX_WOG_START_BIT) returns FALSE
	COMMENT
	COMMENT Class 637
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (wog_start_bit of Auto_cool_down_tmr, ELEVEN and MAX_WOG_START_BIT) returns TRUE		
	COMMENT
	COMMENT Class 638
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (acdt_on_trigger of Auto_cool_down_tmr, ONE and SIX) returns FALSE
	COMMENT
	COMMENT Class 639
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (acdt_on_trigger of Auto_cool_down_tmr, ONE and SIX) returns TRUE	
	COMMENT
	COMMENT Class 640
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (acdt_on_cond of Auto_cool_down_tmr, ONE and SIX) returns FALSE
	COMMENT
	COMMENT Class 641
	COMMENT In function 'CheckAcdtParams'' CheckMinMax with parameters (acdt_on_cond of Auto_cool_down_tmr, ONE and SIX) returns TRUE	
	COMMENT
	COMMENT Class 642
	COMMENT In function 'CheckFont'' return TRUE if font is E_TINY_FONT,E_SMALL_FONT,E_NORMAL_FONT,E_LARGE_FONT and E_BEZEL_FONT.
	COMMENT
	COMMENT Class 643
	COMMENT In function 'CheckFont''return FALSE if font is other than E_TINY_FONT,E_SMALL_FONT,E_NORMAL_FONT,E_LARGE_FONT and E_BEZEL_FONT.	
	COMMENT
	COMMENT Class 644
	COMMENT In function 'CheckFont'' return TRUE if format is NUM_ONED,NUM_TWOD,NUM_THREED,NUM_FOURD,NUM_FIVED and NUM_SIXD.
	COMMENT
	COMMENT Class 645
	COMMENT In function 'CheckFont''return FALSE if format is other tha NUM_ONED,NUM_TWOD,NUM_THREED,NUM_FOURD,NUM_FIVED and NUM_SIXD.	
	COMMENT
	COMMENT Class 646
	COMMENT In function 'CheckRoundDial''CheckMinMax with parameters (assc_labels with index loop counter of Rd_settings with index 
	COMMENT RD counter minus one of Page_settings, ONE and  MAX_LABEL) returns FALSE	
	COMMENT
	COMMENT Class 647
	COMMENT In function 'CheckRoundDial''CheckMinMax with parameters (assc_labels with index loop counter of Rd_settings with index 
	COMMENT RD counter minus one of Page_settings, ONE and  MAX_LABEL) returns TRUE	
	COMMENT
	COMMENT Class 648
	COMMENT In function 'CheckExceedTimerSettings' Function OctToStringTrim is called 
	COMMENT 
	COMMENT Class 649
	COMMENT In function 'CheckExceedTimerSettings'CheckMinMax with parameters timer_label of Timer_settings 
    COMMENT with index loop timer count of Page_settings, ONE, MAX_LABEL returns FALSE
	COMMENT 
	COMMENT Class 650
	COMMENT In function 'CheckExceedTimerSettings'CheckMinMax with parameters timer_label of Timer_settings 
    COMMENT with index loop timer count of Page_settings, ONE, MAX_LABEL returns TRUE	
	COMMENT
	COMMENT Class 651
	COMMENT In function 'CheckExceedTimerSettings' engine sdi of configuration data is TRUE
	COMMENT
	COMMENT Class 652
	COMMENT In function 'CheckExceedTimerSettings' engine sdi of configuration data is FALSE
	COMMENT
	COMMENT Class 653
	COMMENT In function 'CheckExceedTimerSettings'CheckMinMax with
    COMMENT  parameters timer sdi of Timer_settings with index loop timer count of Page_settings,
    COMMENT  ZERO, THREE returns FALSE	
	COMMENT
	COMMENT Class 654
	COMMENT In function 'CheckExceedTimerSettings'CheckMinMax with
    COMMENT  parameters timer sdi of Timer_settings with index loop timer count of Page_settings,
    COMMENT  ZERO, THREE returns TRUE	
	COMMENT
	COMMENT Class 655
	COMMENT In function 'CheckExceedTimerSettings'CheckFont with timer_font of Timer_settings of index loop timer
    COMMENT  count of Page_settings as parameter returns FALSE
	COMMENT
	COMMENT Class 656
	COMMENT In function 'CheckExceedTimerSettings'CheckFont with timer_font of Timer_settings of index loop timer
    COMMENT  count of Page_settings as parameter returns TRUE	
	COMMENT
	COMMENT Class 657
	COMMENT In function 'CheckExceedTimerSettings'CheckAxisMinMax with parameters (u16_x of timer_axis of 
    COMMENT Timer_settings with index loop timer count of Page_settings, ZERO,PANEL_HEIGHT
    COMMENT  and PANEL_WIDTH) returns FALSE	
	COMMENT
	COMMENT Class 658
	COMMENT In function 'CheckExceedTimerSettings'CheckAxisMinMax with parameters (u16_x of timer_axis of 
    COMMENT Timer_settings with index loop timer count of Page_settings, ZERO,PANEL_HEIGHT
    COMMENT  and PANEL_WIDTH) returns FALSE	
	COMMENT
	COMMENT Class 659
	COMMENT In function 'CheckExceedTimerSettings'CheckAxisMinMax with parameters
    COMMENT  (u16_y of timer_axis of Timer_settings with index loop timer count of Page_settings)
    COMMENT  returns FALSE		
	COMMENT
	COMMENT Class 660
	COMMENT In function 'CheckExceedTimerSettings'CheckAxisMinMax with parameters
    COMMENT  (u16_y of timer_axis of Timer_settings with index loop timer count of Page_settings)
    COMMENT  returns TRUE	
	COMMENT
	COMMENT Class 661
	COMMENT In function 'CheckExceedTimerSettings'CheckAxisMinMax with parameters (u16_x of timer_axis of Timer_settings with 
    COMMENT index as loop timer counter of Page_settings plus string width by two , 
    COMMENT ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 662
	COMMENT In function 'CheckExceedTimerSettings'CheckAxisMinMax with parameters (u16_x of timer_axis of Timer_settings with 
    COMMENT index as loop timer counter of Page_settings plus string width by two , 
    COMMENT ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE	
	COMMENT
	COMMENT Class 663
	COMMENT In function 'CheckExceedTimerSettings'CheckAxisMinMax with parameters (u16_y of timer_axis of Timer_settings with 
    COMMENT index as loop timer counter of Page_settings plus string width by two , 
    COMMENT ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
	COMMENT
	COMMENT Class 664
	COMMENT In function 'CheckExceedTimerSettings'CheckAxisMinMax with parameters (u16_y of timer_axis of Timer_settings with 
    COMMENT index as loop timer counter of Page_settings plus string width by two , 
    COMMENT ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE	
	COMMENT
	COMMENT Class 665
	COMMENT In function 'CheckExceedTimerSettings' Pdi_error_count is less than MAX_ERROR_MSG
	COMMENT
	COMMENT Class 666
	COMMENT In function 'CheckExceedTimerSettings' Pdi_error_count is equal to MAX_ERROR_MSG
	COMMENT
	COMMENT Class 667
	COMMENT In function 'CheckExceedTimerSettings' function CheckMinMax with parameters timer_format of Timer_settings
    COMMENT  with index loop timer count of Page_settings, SECONDS, 
    COMMENT  HOUR_MIN_SEC returns FALSE	
	COMMENT
	COMMENT Class 668
	COMMENT In function 'CheckExceedTimerSettings' function CheckMinMax with parameters timer_format of Timer_settings
    COMMENT  with index loop timer count of Page_settings, SECONDS, 
    COMMENT  HOUR_MIN_SEC returns TRUE		
	COMMENT
	COMMENT Class 669
	COMMENT In function 'CheckA429Parameters'scu_enable of Config_data 
    COMMENT is equal to TRUE	
	COMMENT
	COMMENT Class 670
	COMMENT In function 'CheckA429Parameters'scu_enable of Config_data 
    COMMENT is equal to FALSE
	COMMENT
	COMMENT Class 671
	COMMENT In function 'CheckA429Parameters'scu label flag is not equal to SEVEN
	COMMENT
	COMMENT Class 672
	COMMENT In function 'CheckA429Parameters'scu label flag is equal to SEVEN	
	COMMENT
	COMMENT Class 673
	COMMENT In function 'CheckConfig'CheckMinMax with parameters (SCU_ENABLE of Config_data,
    COMMENT  ZERO and ONE) returns FALSE	
	COMMENT
	COMMENT Class 674
	COMMENT In function 'CheckConfig'CheckMinMax with parameters (SCU_ENABLE of Config_data,
    COMMENT  ZERO and ONE) returns TRUE	
	COMMENT 
	COMMENT Class 675
	COMMENT In function 'CheckA429Parameters', Pdi_error_count is equal to MAX_ERROR_MSG
	COMMENT 
	COMMENT Class 676
	COMMENT In function 'CheckExceedTimerSettings', Pdi_error_count is greater than MAX_ERROR_MSG
	COMMENT Invalid Class(es)
	COMMENT None
	COMMENT </ECD>	
--------------------------------------------------------------------------------
--
-- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
--
--------------------------------------------------------------------------------

    #T_UINT16 U16_message_words[3]; 
    #T_EXCEED_STRUCT Exceed_data[66]; 
    #T_UINT8 Exceed_cnt; 
    #T_BOOL Caslocationset_parameters; 
    #T_POLYGRAPH Pg_settings[30]; 
    #T_UINT8 Pg_cnt; 
    #T_UINT16 Text_parameter_occurrence[30]; 
    #T_UINT8 Text_cnt; 
    #T_UINT16 Tb_parameter_occurrence[50];
    #T_UINT8 Tb_cnt;
    #T_BOOL Cg_tracker[30][50]; 
    #T_UINT16 Cg_parameter_occurrence[30]; 
    #T_CARROTGRAPHDEF Ap_page2_carrot[30];
    #T_UINT8 Cg_cnt;
    #T_UINT16 Nb_parameter_occurrence[50];
    #T_BOOL Nb_tracker[30][50];
    #T_SNUMBOXDEF Page_num_boxes[50];
    #T_BOOL Rd_tracker[30][50];
    #T_UINT16 Rd_parameter_occurrence[30];
    #T_UINT32 Rd_lin_angle_status[30];
    #T_ROUNDDIALDEF Ap_page0_dials[30];
    #T_UINT8 Rd_cnt;
    #T_BOOL Bg_tracker[30][50]; 
    #T_UINT8 Nb_cnt;
    #T_UINT16 Bg_parameter_occurrence[30]; 
    #T_SBARGRAPHDEF Ap_page1_bar_graphs[30];
    #T_UINT8 Bg_cnt;
    #T_BOOL Acdt_flag;
    #T_BOOL Timer_flag;
    #T_EPAGE_NUM Page_num;
    #T_PAGE Page_settings; 
    #T_ACDT_STRUCT Auto_cool_down_tmr;
    #T_BOOL Acdt_parameters; 
    #T_ELOG_LABEL_STRUCT Elog_label[5]; 
    #T_BOOL Elog_param; 
    #T_ELOG_TRIG_STRUCT Elog_trig[5];
    #T_BOOL Elog_trig_bool;
    #T_A429_PARAMS A429_cfg_data[256]; 
    #T_UINT16 A429_settings_cnt;
    #T_CAS_MESSAGE_STRUCT Cas_messages[36]; 
    #T_UINT16 Cas_word_cnt;
    #T_CONFIG_STRUCT Config_data;
    #T_APPDATA_PANELSTRUCT *Appdata_appdata;
    #T_DISPLAYSIZE Display_size;
    #T_ELANDSCAPEORPORTRIAT E_orientation; 
    # volatile T_INT32 Itm_rx_buffer;
	#T_UINT8 *PTU_pu8_string;
	
    #T_UINT8 Scu_label_flag; 	
    #T_UINT8 Timer_cnt;	
	

DEFINE STUB hdudispfpdicheck_c
    #T_FLOAT CalculatePower(T_FLOAT  _in value, T_INT32  _in mul);
    #T_INT16 FontsGetFontHeight(T_ETXFONT  _in e_tx_font);
    #T_INT16 FontsGetStringWidth(T_UINT8  _no pu8_string, T_ETXFONT  _in e_tx_font)
	#{
	# pu8_string = PTU_pu8_string;
	#}
    #T_UINT16 StrLen(char  _in str[200]);
END DEFINE

--------------------------------------------------------------------------------
--
-- ENVIRONMENTS DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- TESTED FILE ENVIRONNEMENT
--------------------------------------------------------------------------------

-- Environment of the file E:\HDU_VIGNESH\EXECUTION_SVN_SRC\HDUDISPFPDICHECK\SRC\hdudispfpdicheck.c
ENVIRONMENT ENV_hdudispfpdicheck_c

  VAR Acdt_axis_error,		init = 0,		ev = init
  VAR Pdi_error_count,		init = 0,		ev = init
  VAR Timer_axis_error,		init = 0,		ev = init
  ARRAY Page_check,		init = { others => FALSE },		ev = init
  ARRAY Page_parameter_error,		init = { others => FALSE },		ev = init
  VAR Label_size,		init = 4,		ev = init
  VAR Global_parameter_error,		init = FALSE,		ev = init
  VAR Global_check,		init = FALSE,		ev = init
  VAR Cas_error,		init = 0,		ev = init
  VAR Exceed_error,		init = 0,		ev = init  
  VAR E_orientation,		init = 0,		ev = init  
  VAR Acdt_flag,		init = FALSE,		ev = init  
  VAR Timer_flag,		init = FALSE,		ev = init  
  VAR Timer_cnt,		init = 0,		ev = init  
  VAR Config_data.scu_enable,		init = 0,		ev = init  
  
END ENVIRONMENT -- ENV_hdudispfpdicheck_c
USE ENV_hdudispfpdicheck_c

--------------------------------------------------------------------------------
--
-- SERVICES DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Declaration of the service PdiDataCheck
--------------------------------------------------------------------------------
SERVICE PdiDataCheck
SERVICE_TYPE extern


    TEST 1
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-PdiDataCheck-DB-LLR-001]
        COMMENT The function shall do the following when Global_check is FALSE
		COMMENT 1. Set Global_check to TRUE.
		COMMENT 2. CheckConfig, CheckCASParameters, CheckA429Parameters, CheckElogTrig, CheckElogParam                                
		COMMENT      and CheckAcdtParams functions are called.
		COMMENT 3. Set error count to Pdi_error_count.
		COMMENT Equivalence Class 1,2,3,4,5,6,7
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-001]
        COMMENT If function CheckString with parameters (config_name of Config_data and MAX_CONFIG_NAME) returns FALSE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG then do the following
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_NAME, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,9
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-002]
        COMMENT If function CheckString with parameters (config_version of Config_data and MAX_CONFIG_VERSION) returns FALSE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_PN_VN, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,12
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-003]
        COMMENT If function CheckDuResolution  returns TRUE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string DU_RESOLUTION,NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,14
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-004]
        COMMENT If function CheckString with parameters (config_engine of Config_data and MAX_CONFIG_ENGINE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_ENGINE, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,16
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-005]
        COMMENT If function CheckMinMax with parameters (u16_x of channels of Config_data,  ZERO and ONE) returns FALSE OR with 
		COMMENT function CheckMinMax with parameters  (u16_y of channels of Config_data, ZERO and ONE) returns FALSE AND  Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CHANNEL, NULL characters, and ErrorMsgString with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 8,18
        COMMENT 
        COMMENT [hdudispfpdicheck-PdiDataCheck-DB-LLR-002]
        COMMENT If Pdi_error_count not equal to ZERO then Loops from ZERO to Pdi_error_count - 1 and do the following,(2 LOOP)
		COMMENT Set U16_message_words with index ONE to result of (SEVEN plus loop index left shifted by ONE) bit ORed with  U16_message_words of index ONE.
        COMMENT Equivalence Class None
        COMMENT 
        COMMENT hdudispfpdicheck-PdiDataCheck-DB-LLR-003
        COMMENT The function shall do the following when Pdi_error_count is not equal to ZERO.
		COMMENT - Set Global_parameter_error to TRUE when error count is not equal to ZERO  
		COMMENT - Set Page_parameter_error with index as Page_num to TRUE when Pdi_error_count is not equal to temporary pdi error.
        COMMENT Equivalence Class 22
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,	init = 0,							ev = init			
			VAR Appdata_appdata->panelHeight,	init = 0,							ev = init		
			
			VAR Config_data.config_name,				init = { others => 'A' },			ev = init			
			VAR Config_data.config_version,				init = { others => 'A' },			ev = init			
			VAR Config_data.config_engine,				init = { others => 'A' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 1,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 1,							ev = init			
			VAR Config_data.channels.u16_x,				init = 2,							ev = init
			VAR Config_data.channels.u16_y,				init = 2,							ev = init			
			VAR Config_data.eng_sdi,					init = 2,							ev = init						
			
			VAR Error_msg_string[0],			init = "CONFIG_NAME ",				ev = "CONFIG_NAME  "				
			VAR Error_msg_string[1],			init = "CONFIG_PN_VN ",				ev = "CONFIG_PN_VN  "				
			VAR Error_msg_string[2],			init = "DU_RESOLUTION ",			ev = "DU_RESOLUTION  "			
			VAR Error_msg_string[3],			init = "CONFIG_ENGINE ",			ev = "CONFIG_ENGINE  "			
			VAR Error_msg_string[4],			init = "CHANNEL ",					ev = "CHANNEL  "		
		
			VAR U16_message_words[1],			init = 0,							ev = 3968						
		
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,						ev = TRUE	
			VAR Global_parameter_error,			init = FALSE,						ev = TRUE			
			VAR Pdi_error_count,				init = 0,							ev = 5
			
			VAR Display_size,					init = E_7_INCH,					ev = init			
						
			VAR Cas_word_cnt,					init = 0,							ev = init			
			VAR A429_settings_cnt,				init = 0,							ev = init			
			VAR Elog_trig_bool,					init = FALSE,						ev = init			
			VAR Elog_param,						init = FALSE,						ev = init			
			VAR Acdt_parameters,				init = FALSE,						ev = init
			VAR Pg_cnt,							init = 32,							ev = init						
        
        COMMENT Stub Calls:
        SIMUL   
		
			--none
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 1
	
	
    TEST 2
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-001]
        COMMENT If function CheckString with parameters (config_name of Config_data and MAX_CONFIG_NAME) returns TRUE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG then do the following
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_NAME, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,11
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-002]
        COMMENT If function CheckString with parameters (config_version of Config_data and MAX_CONFIG_VERSION) returns TRUE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_PN_VN, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,13
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-003]
        COMMENT If function CheckDuResolution  returns TRUE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string DU_RESOLUTION,NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,15
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-004]
        COMMENT If function CheckString with parameters (config_engine of Config_data and MAX_CONFIG_ENGINE) returns TRUE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_ENGINE, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,17
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-005]
        COMMENT If function CheckMinMax with parameters (u16_x of channels of Config_data,  ZERO and ONE) returns TRUE OR with 
		COMMENT function CheckMinMax with parameters  (u16_y of channels of Config_data, ZERO and ONE) returns TRUE AND  Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CHANNEL, NULL characters, and ErrorMsgString with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 8,19
        COMMENT 
        COMMENT hdudispfpdicheck-CheckConfig-DB-LLR-006
		COMMENT If function CheckMinMax with parameters (eng_sdi of Config_data, ZERO and ONE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string ENG_SDI, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.  Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 8,23
        COMMENT 
        COMMENT [hdudispfpdicheck-PdiDataCheck-DB-LLR-002]
        COMMENT If Pdi_error_count not equal to ZERO then Loops from ZERO to Pdi_error_count - 1 and do the following,(1 LOOP)
		COMMENT Set U16_message_words with index ONE to result of (SEVEN plus loop index left shifted by ONE) bit ORed with  U16_message_words of index ONE.
        COMMENT Equivalence Class None
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,	init = 0,							ev = init			
			VAR Appdata_appdata->panelHeight,	init = 0,							ev = init		
			
			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 2,							ev = init
						
			
			VAR Error_msg_string[0],			init = "ENG_SDI ",					ev = "ENG_SDI  ME  "			
		
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			
		
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,						ev = TRUE	
			VAR Global_parameter_error,			init = FALSE,						ev = TRUE			
			VAR Pdi_error_count,				init = 0,							ev = 1
			
			VAR Display_size,					init = E_7_INCH,					ev = init			
			
			
			VAR Cas_word_cnt,					init = 0,							ev = init			
			VAR A429_settings_cnt,				init = 0,							ev = init			
			VAR Elog_trig_bool,					init = FALSE,						ev = init			
			VAR Elog_param,						init = FALSE,						ev = init			
			VAR Acdt_parameters,				init = FALSE,						ev = init
			VAR Pg_cnt,							init = 0,							ev = init			
			
        
        COMMENT Stub Calls:
        SIMUL   
		
			--none
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 2	
	
	
    TEST 3
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-PdiDataCheck-DB-LLR-001]
        COMMENT The function shall do the following when Global_check is FALSE
		COMMENT 1. Set Global_check to TRUE.
		COMMENT 2. CheckConfig, CheckCASParameters, CheckA429Parameters, CheckElogTrig, CheckElogParam                                
		COMMENT      and CheckAcdtParams functions are called.
		COMMENT 3. Set error count to Pdi_error_count.
		COMMENT Equivalence Class 1,2,3,4,5,6,7
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-001]
        COMMENT If function CheckString with parameters (config_name of Config_data and MAX_CONFIG_NAME) returns FALSE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG then do the following
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_NAME, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 10,9
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-002]
        COMMENT If function CheckString with parameters (config_version of Config_data and MAX_CONFIG_VERSION) returns FALSE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_PN_VN, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 10,12
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-003]
        COMMENT If function CheckDuResolution  returns TRUE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string DU_RESOLUTION,NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 10,14
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-004]
        COMMENT If function CheckString with parameters (config_engine of Config_data and MAX_CONFIG_ENGINE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_ENGINE, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 10,16
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-005]
        COMMENT If function CheckMinMax with parameters (u16_x of channels of Config_data,  ZERO and ONE) returns FALSE OR with 
		COMMENT function CheckMinMax with parameters  (u16_y of channels of Config_data, ZERO and ONE) returns FALSE AND  Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CHANNEL, NULL characters, and ErrorMsgString with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 10,18
        COMMENT 
        COMMENT 
        COMMENT hdudispfpdicheck-CheckConfig-DB-LLR-006
		COMMENT If function CheckMinMax with parameters (eng_sdi of Config_data, ZERO and ONE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string ENG_SDI, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.  Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 10,23
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,	init = 0,							ev = init			
			VAR Appdata_appdata->panelHeight,	init = 0,							ev = init		
			
			VAR Config_data.config_name,				init = { others => 'A' },			ev = init			
			VAR Config_data.config_version,				init = { others => 'A' },			ev = init			
			VAR Config_data.config_engine,				init = { others => 'A' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 1,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 1,							ev = init			
			VAR Config_data.channels.u16_x,				init = 2,							ev = init
			VAR Config_data.channels.u16_y,				init = 2,							ev = init			
			VAR Config_data.eng_sdi,					init = 2,							ev = init
						
			
		
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			
		
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,						ev = TRUE	
			VAR Global_parameter_error,			init = FALSE,						ev = TRUE			
			VAR Pdi_error_count,				init = 5,							ev = init
			
			VAR Display_size,					init = E_7_INCH,					ev = init			
			
			
			VAR Cas_word_cnt,					init = 0,							ev = init			
			VAR A429_settings_cnt,				init = 0,							ev = init			
			VAR Elog_trig_bool,					init = FALSE,						ev = init			
			VAR Elog_param,						init = FALSE,						ev = init			
			VAR Acdt_parameters,				init = FALSE,						ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
        
        COMMENT Stub Calls:
        SIMUL   
		
			--none
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 3	
	
	
    TEST 4
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-001]
        COMMENT If function CheckString with parameters (config_name of Config_data and MAX_CONFIG_NAME) returns TRUE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG then do the following
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_NAME, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,11
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-002]
        COMMENT If function CheckString with parameters (config_version of Config_data and MAX_CONFIG_VERSION) returns TRUE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_PN_VN, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,13
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-003]
        COMMENT If function CheckDuResolution  returns TRUE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string DU_RESOLUTION,NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,15
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-004]
        COMMENT If function CheckString with parameters (config_engine of Config_data and MAX_CONFIG_ENGINE) returns TRUE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_ENGINE, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,17
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-005]
        COMMENT If function CheckMinMax with parameters (u16_x of channels of Config_data,  ZERO and ONE) returns TRUE OR with 
		COMMENT function CheckMinMax with parameters  (u16_y of channels of Config_data, ZERO and ONE) returns TRUE AND  Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CHANNEL, NULL characters, and ErrorMsgString with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 8,20
        COMMENT 
        COMMENT hdudispfpdicheck-CheckConfig-DB-LLR-006
		COMMENT If function CheckMinMax with parameters (eng_sdi of Config_data, ZERO and ONE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string ENG_SDI, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.  Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 8,23
        COMMENT 
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,	init = 0,							ev = init			
			VAR Appdata_appdata->panelHeight,	init = 0,							ev = init		
			
			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 2,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
						
			
			VAR Error_msg_string[0],			init = "CHANNEL  ",					ev = init			
		
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			
		
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,						ev = TRUE	
			VAR Global_parameter_error,			init = FALSE,						ev = TRUE			
			VAR Pdi_error_count,				init = 0,							ev = 1
			
			VAR Display_size,					init = E_7_INCH,					ev = init			
			
			
			VAR Cas_word_cnt,					init = 0,							ev = init			
			VAR A429_settings_cnt,				init = 0,							ev = init			
			VAR Elog_trig_bool,					init = FALSE,						ev = init			
			VAR Elog_param,						init = FALSE,						ev = init			
			VAR Acdt_parameters,				init = FALSE,						ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
        
        COMMENT Stub Calls:
        SIMUL   
		
			--none
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 4	
	
    TEST 5
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-001]
        COMMENT If function CheckString with parameters (config_name of Config_data and MAX_CONFIG_NAME) returns TRUE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG then do the following
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_NAME, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,11
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-002]
        COMMENT If function CheckString with parameters (config_version of Config_data and MAX_CONFIG_VERSION) returns TRUE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_PN_VN, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,13
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-003]
        COMMENT If function CheckDuResolution  returns TRUE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string DU_RESOLUTION,NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,15
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-004]
        COMMENT If function CheckString with parameters (config_engine of Config_data and MAX_CONFIG_ENGINE) returns TRUE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_ENGINE, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,17
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-005]
        COMMENT If function CheckMinMax with parameters (u16_x of channels of Config_data,  ZERO and ONE) returns TRUE OR with 
		COMMENT function CheckMinMax with parameters  (u16_y of channels of Config_data, ZERO and ONE) returns TRUE AND  Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CHANNEL, NULL characters, and ErrorMsgString with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 8,19
        COMMENT 
        COMMENT hdudispfpdicheck-CheckConfig-DB-LLR-006
		COMMENT If function CheckMinMax with parameters (eng_sdi of Config_data, ZERO and ONE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string ENG_SDI, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.  Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 8,23
        COMMENT 
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,	init = 0,							ev = init			
			VAR Appdata_appdata->panelHeight,	init = 0,							ev = init		
			
			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 2,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
						
			
			VAR Error_msg_string[0],			init = "CHANNEL  ",					ev = init			
		
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			
		
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,						ev = TRUE	
			VAR Global_parameter_error,			init = FALSE,						ev = TRUE			
			VAR Pdi_error_count,				init = 0,							ev = 1
			
			VAR Display_size,					init = E_7_INCH,					ev = init			
			
			
			VAR Cas_word_cnt,					init = 0,							ev = init			
			VAR A429_settings_cnt,				init = 0,							ev = init			
			VAR Elog_trig_bool,					init = FALSE,						ev = init			
			VAR Elog_param,						init = FALSE,						ev = init			
			VAR Acdt_parameters,				init = FALSE,						ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
        
        COMMENT Stub Calls:
        SIMUL   
		
			--none
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 5	
	
    TEST 6
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-PdiDataCheck-DB-LLR-001]
        COMMENT The function shall do the following when Global_check is FALSE
		COMMENT 1. Set Global_check to TRUE.
		COMMENT 2. CheckConfig, CheckCASParameters, CheckA429Parameters, CheckElogTrig, CheckElogParam                                
		COMMENT      and CheckAcdtParams functions are called.
		COMMENT 3. Set error count to Pdi_error_count.
		COMMENT Equivalence Class 1,2,3,4,5,6,7
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-001]
        COMMENT If function CheckString with parameters (config_name of Config_data and MAX_CONFIG_NAME) returns FALSE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG then do the following
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_NAME, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,9
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-002]
        COMMENT If function CheckString with parameters (config_version of Config_data and MAX_CONFIG_VERSION) returns FALSE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_PN_VN, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,12
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-003]
        COMMENT If function CheckDuResolution  returns TRUE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string DU_RESOLUTION,NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,14
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-004]
        COMMENT If function CheckString with parameters (config_engine of Config_data and MAX_CONFIG_ENGINE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_ENGINE, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,16
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-005]
        COMMENT If function CheckMinMax with parameters (u16_x of channels of Config_data,  ZERO and ONE) returns FALSE OR with 
		COMMENT function CheckMinMax with parameters  (u16_y of channels of Config_data, ZERO and ONE) returns FALSE AND  Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CHANNEL, NULL characters, and ErrorMsgString with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 8,18
        COMMENT 
        COMMENT hdudispfpdicheck-CheckConfig-DB-LLR-006
		COMMENT If function CheckMinMax with parameters (eng_sdi of Config_data, ZERO and ONE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string ENG_SDI, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.  Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 10,23
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,	init = 0,							ev = init			
			VAR Appdata_appdata->panelHeight,	init = 0,							ev = init		
			
			VAR Config_data.config_name,				init = { others => 'A' },			ev = init			
			VAR Config_data.config_version,				init = { others => 'A' },			ev = init			
			VAR Config_data.config_engine,				init = { others => 'A' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 1,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 1,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 3,							ev = init			
			VAR Config_data.eng_sdi,					init = 2,							ev = init
						
		
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			
		
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,						ev = TRUE	
			VAR Global_parameter_error,			init = FALSE,						ev = TRUE			
			VAR Pdi_error_count,				init = 5,							ev = init
			
			VAR Display_size,					init = E_7_INCH,					ev = init			
			
			
			VAR Cas_word_cnt,					init = 0,							ev = init			
			VAR A429_settings_cnt,				init = 0,							ev = init			
			VAR Elog_trig_bool,					init = FALSE,						ev = init			
			VAR Elog_param,						init = FALSE,						ev = init			
			VAR Acdt_parameters,				init = FALSE,						ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
        
        COMMENT Stub Calls:
        SIMUL   
		
			--none
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 6
	
    TEST 7
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-PdiDataCheck-DB-LLR-001]
        COMMENT The function shall do the following when Global_check is FALSE
		COMMENT 1. Set Global_check to TRUE.
		COMMENT 2. CheckConfig, CheckCASParameters, CheckA429Parameters, CheckElogTrig, CheckElogParam                                
		COMMENT      and CheckAcdtParams functions are called.
		COMMENT 3. Set error count to Pdi_error_count.
		COMMENT Equivalence Class 1,2,3,4,5,6,7
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-001]
        COMMENT If function CheckString with parameters (config_name of Config_data and MAX_CONFIG_NAME) returns FALSE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG then do the following
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_NAME, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,9
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-002]
        COMMENT If function CheckString with parameters (config_version of Config_data and MAX_CONFIG_VERSION) returns FALSE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_PN_VN, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,12
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-003]
        COMMENT If function CheckDuResolution  returns TRUE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string DU_RESOLUTION,NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,14
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-004]
        COMMENT If function CheckString with parameters (config_engine of Config_data and MAX_CONFIG_ENGINE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_ENGINE, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,16
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-005]
        COMMENT If function CheckMinMax with parameters (u16_x of channels of Config_data,  ZERO and ONE) returns FALSE OR with 
		COMMENT function CheckMinMax with parameters  (u16_y of channels of Config_data, ZERO and ONE) returns FALSE AND  Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CHANNEL, NULL characters, and ErrorMsgString with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 8,18
        COMMENT 
        COMMENT hdudispfpdicheck-CheckConfig-DB-LLR-006
		COMMENT If function CheckMinMax with parameters (eng_sdi of Config_data, ZERO and ONE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string ENG_SDI, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.  Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 10,23
        COMMENT 
        COMMENT [hdudispfpdicheck-PdiDataCheck-DB-LLR-003]
        COMMENT The function shall do the following when Pdi_error_count is equal to ZERO.
		COMMENT - Set Global_parameter_error to TRUE when error count is not equal to ZERO  
		COMMENT - Set Page_parameter_error with index as Page_num to TRUE when Pdi_error_count is not equal to temporary pdi error.
        COMMENT Equivalence Class 25
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckDuResolution-DB-LLR-001]
        COMMENT 1.Do below if Display_size is equal to E_7_INCH.
		COMMENT - Return FALSE if u16_x of du_resolution of Config_data is equal to PANEL_HEIGHT and u16_y of du_resolution of Config_data is equal to PANEL_WIDTH else return TRUE.
        COMMENT Equivalence Class 26
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,	init = 0,							ev = init			
			VAR Appdata_appdata->panelHeight,	init = 0,							ev = init		
			
			VAR Config_data.config_name,				init = { others => 'A' },			ev = init			
			VAR Config_data.config_version,				init = { others => 'A' },			ev = init			
			VAR Config_data.config_engine,				init = { others => 'A' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 1,							ev = init			
			VAR Config_data.channels.u16_x,				init = -1,							ev = init
			VAR Config_data.channels.u16_y,				init = -1,							ev = init			
			VAR Config_data.eng_sdi,					init = -1,							ev = init
									

		
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			
		
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,						ev = TRUE	
			VAR Global_parameter_error,			init = FALSE,						ev = TRUE			
			VAR Pdi_error_count,				init = 5,							ev = init
			
			VAR Display_size,					init = E_7_INCH,					ev = init			
			
			
			VAR Cas_word_cnt,					init = 0,							ev = init			
			VAR A429_settings_cnt,				init = 0,							ev = init			
			VAR Elog_trig_bool,					init = FALSE,						ev = init			
			VAR Elog_param,						init = FALSE,						ev = init			
			VAR Acdt_parameters,				init = FALSE,						ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
        
        COMMENT Stub Calls:
        SIMUL   
		
			--none
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 7

    TEST 8
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-004]
        COMMENT If function CheckString with parameters (config_engine of Config_data and MAX_CONFIG_ENGINE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_ENGINE, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,16
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-005]
        COMMENT If function CheckMinMax with parameters (u16_x of channels of Config_data,  ZERO and ONE) returns FALSE OR with 
		COMMENT function CheckMinMax with parameters  (u16_y of channels of Config_data, ZERO and ONE) returns FALSE AND  Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CHANNEL, NULL characters, and ErrorMsgString with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 8,18
        COMMENT 
        COMMENT hdudispfpdicheck-CheckConfig-DB-LLR-006
		COMMENT If function CheckMinMax with parameters (eng_sdi of Config_data, ZERO and ONE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string ENG_SDI, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.  Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 10,23
        COMMENT 
        COMMENT [hdudispfpdicheck-PdiDataCheck-DB-LLR-003]
        COMMENT The function shall do the following when Pdi_error_count is equal to ZERO.
		COMMENT - Set Global_parameter_error to TRUE when error count is not equal to ZERO  
		COMMENT - Set Page_parameter_error with index as Page_num to TRUE when Pdi_error_count is not equal to temporary pdi error.
        COMMENT Equivalence Class 25
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckMinMax-DB-LLR-001]
        COMMENT If parameter is less than minimum or greater than maximum then function shall return FALSE.
        COMMENT Equivalence Class None
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckDuResolution-DB-LLR-001]
        COMMENT 2.Do below if Display_size is not equal to E_7_INCH and Display_size is equal to E_10_INCH 
		COMMENT - Return FALSE if u16_x of du_resolution of Config_data is equal to PANEL_HEIGHT and u16_y of du_resolution of Config_data is equal to PANEL_WIDTH else return TRUE
        COMMENT Equivalence Class 27
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,	init = 0,							ev = init			
			VAR Appdata_appdata->panelHeight,	init = 0,							ev = init		
			
			VAR Config_data.config_name,				init = { others => 'A' },			ev = init			
			VAR Config_data.config_version,				init = { others => 'A' },			ev = init			
			VAR Config_data.config_engine,				init = { others => 'A' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 1,							ev = init			
			VAR Config_data.channels.u16_x,				init = -1,							ev = init
			VAR Config_data.channels.u16_y,				init = -1,							ev = init			
			VAR Config_data.eng_sdi,					init = -1,							ev = init
						
		
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			
		
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,						ev = TRUE	
			VAR Global_parameter_error,			init = FALSE,						ev = TRUE			
			VAR Pdi_error_count,				init = 5,							ev = init
			
			VAR Display_size,					init = E_10_INCH,					ev = init			
			
			
			VAR Cas_word_cnt,					init = 0,							ev = init			
			VAR A429_settings_cnt,				init = 0,							ev = init			
			VAR Elog_trig_bool,					init = FALSE,						ev = init			
			VAR Elog_param,						init = FALSE,						ev = init			
			VAR Acdt_parameters,				init = FALSE,						ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
        
        COMMENT Stub Calls:
        SIMUL   
		
			--none
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 8
	
    TEST 9
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-004]
        COMMENT If function CheckString with parameters (config_engine of Config_data and MAX_CONFIG_ENGINE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CONFIG_ENGINE, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 8,16
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckConfig-DB-LLR-005]
        COMMENT If function CheckMinMax with parameters (u16_x of channels of Config_data,  ZERO and ONE) returns FALSE OR with 
		COMMENT function CheckMinMax with parameters  (u16_y of channels of Config_data, ZERO and ONE) returns FALSE AND  Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string CHANNEL, NULL characters, and ErrorMsgString with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 8,18
        COMMENT 
        COMMENT hdudispfpdicheck-CheckConfig-DB-LLR-006
		COMMENT If function CheckMinMax with parameters (eng_sdi of Config_data, ZERO and ONE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string ENG_SDI, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.  Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 10,23
        COMMENT 
        COMMENT [hdudispfpdicheck-PdiDataCheck-DB-LLR-003]
        COMMENT The function shall do the following when Pdi_error_count is equal to ZERO.
		COMMENT - Set Global_parameter_error to TRUE when error count is not equal to ZERO  
		COMMENT - Set Page_parameter_error with index as Page_num to TRUE when Pdi_error_count is not equal to temporary pdi error.
        COMMENT Equivalence Class 25
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckMinMax-DB-LLR-001]
        COMMENT If parameter is less than minimum or greater than maximum then function shall return FALSE.
        COMMENT Equivalence Class None
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckDuResolution-DB-LLR-001]
        COMMENT 2.Do below if Display_size is not equal to E_7_INCH and Display_size is equal to E_10_INCH 
		COMMENT - Return FALSE if u16_x of du_resolution of Config_data is equal to PANEL_HEIGHT and u16_y of du_resolution of Config_data is equal to PANEL_WIDTH else return TRUE
        COMMENT Equivalence Class 27
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,	init = 0,							ev = init			
			VAR Appdata_appdata->panelHeight,	init = 0,							ev = init		
			
			VAR Config_data.config_name,				init = { others => 'A' },			ev = init			
			VAR Config_data.config_version,				init = { others => 'A' },			ev = init			
			VAR Config_data.config_engine,				init = { others => 'A' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 1,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 1,							ev = init			
			VAR Config_data.channels.u16_x,				init = -1,							ev = init
			VAR Config_data.channels.u16_y,				init = -1,							ev = init			
			VAR Config_data.eng_sdi,					init = -1,							ev = init				

		
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			
		
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,						ev = TRUE	
			VAR Global_parameter_error,			init = FALSE,						ev = TRUE			
			VAR Pdi_error_count,				init = 5,							ev = init
			
			VAR Display_size,					init = E_10_INCH,					ev = init			
			
			
			VAR Cas_word_cnt,					init = 0,							ev = init			
			VAR A429_settings_cnt,				init = 0,							ev = init			
			VAR Elog_trig_bool,					init = FALSE,						ev = init			
			VAR Elog_param,						init = FALSE,						ev = init			
			VAR Acdt_parameters,				init = FALSE,						ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
        
        COMMENT Stub Calls:
        SIMUL   
		
			--none
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 9
	
    TEST 10
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT hdudispfpdicheck-CheckConfig-DB-LLR-006
		COMMENT If function CheckMinMax with parameters (eng_sdi of Config_data, ZERO and ONE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string ENG_SDI, NULL characters, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.  Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 10,23
        COMMENT 
        COMMENT [hdudispfpdicheck-PdiDataCheck-DB-LLR-003]
        COMMENT The function shall do the following when Pdi_error_count is equal to ZERO.
		COMMENT - Set Global_parameter_error to TRUE when error count is not equal to ZERO  
		COMMENT - Set Page_parameter_error with index as Page_num to TRUE when Pdi_error_count is not equal to temporary pdi error.
        COMMENT Equivalence Class 25
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckMinMax-DB-LLR-002]
        COMMENT The function shall return TRUE if parameter is in range. 
        COMMENT Equivalence Class None
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckDuResolution-DB-LLR-001]
        COMMENT 2.Do nothing if Display_size is not equal to E_7_INCH and Display_size is not equal to E_10_INCH 
        COMMENT Equivalence Class 28
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,	init = 0,							ev = init			
			VAR Appdata_appdata->panelHeight,	init = 0,							ev = init		
			
			VAR Config_data.config_name,				init = { others => 'A' },			ev = init			
			VAR Config_data.config_version,				init = { others => 'A' },			ev = init			
			VAR Config_data.config_engine,				init = { others => 'A' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 1,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = -1,							ev = init
			VAR Config_data.channels.u16_y,				init = -1,							ev = init			
			VAR Config_data.eng_sdi,					init = -1,							ev = init
										

		
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			
		
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,						ev = TRUE	
			VAR Global_parameter_error,			init = FALSE,						ev = TRUE			
			VAR Pdi_error_count,				init = 5,							ev = init
			
			VAR Display_size,					init = E_5_INCH,					ev = init			
			
			
			VAR Cas_word_cnt,					init = 0,							ev = init			
			VAR A429_settings_cnt,				init = 0,							ev = init			
			VAR Elog_trig_bool,					init = FALSE,						ev = init			
			VAR Elog_param,						init = FALSE,						ev = init			
			VAR Acdt_parameters,				init = FALSE,						ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
        
        COMMENT Stub Calls:
        SIMUL   
		
			--none
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 10	
	
	
    TEST 11
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-PdiDataCheck-DB-LLR-003]
        COMMENT The function shall do the following when Pdi_error_count is equal to ZERO.
		COMMENT - Set Global_parameter_error to TRUE when error count is not equal to ZERO  
		COMMENT - Set Page_parameter_error with index as Page_num to TRUE when Pdi_error_count is not equal to temporary pdi error.
        COMMENT Equivalence Class 25
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckMinMax-DB-LLR-002]
        COMMENT The function shall return TRUE if parameter is in range. 
        COMMENT Equivalence Class None
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckDuResolution-DB-LLR-001]
        COMMENT 2.Do nothing if Display_size is not equal to E_7_INCH and Display_size is not equal to E_10_INCH 
        COMMENT Equivalence Class 28
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,	init = 0,							ev = init			
			VAR Appdata_appdata->panelHeight,	init = 0,							ev = init		
			
			VAR Config_data.config_name,				init = { others => 'A' },			ev = init			
			VAR Config_data.config_version,				init = { others => 'A' },			ev = init			
			VAR Config_data.config_engine,				init = { others => 'A' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = -1,							ev = init
			VAR Config_data.channels.u16_y,				init = -1,							ev = init			
			VAR Config_data.eng_sdi,					init = -1,							ev = init
									

		
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			
		
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,						ev = TRUE	
			VAR Global_parameter_error,			init = FALSE,						ev = TRUE			
			VAR Pdi_error_count,				init = 5,							ev = init
			
			VAR Display_size,					init = E_10_INCH,					ev = init			
			
			
			VAR Cas_word_cnt,					init = 0,							ev = init			
			VAR A429_settings_cnt,				init = 0,							ev = init			
			VAR Elog_trig_bool,					init = FALSE,						ev = init			
			VAR Elog_param,						init = FALSE,						ev = init			
			VAR Acdt_parameters,				init = FALSE,						ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
        
        COMMENT Stub Calls:
        SIMUL   
		
			--none
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 11	
	
	
    TEST 12
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCASParameters-DB-LLR-001]
        COMMENT The function shall loop from ONE to Cas_word_cnt and do the following,
		COMMENT 1.	Call the function  OctToStringTrim with parameters label of Cas_messages with index counter-1, size of label and label string.
		COMMENT 2.	If max string is less than return value of StrLen with parameter cas_string of Cas_messages with index counter-1 do below:
		COMMENT  - Set Index_value to counter
		COMMENT - Set max string to return value of StrLen with parameter cas_string of Cas_messages with index counter-1 
		COMMENT 3.	If function CheckString with parameters (cas_string of Cas_messages with index counter-1 and (MAX_CAS_STRING_TXT minus ONE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT a)	Call the function BuildErrorMsg with parameters string element, label string, string CAS_STRING, Error_msg_string with array index Pdi_error_count.
		COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 531,529
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCASParameters-DB-LLR-002]
        COMMENT The function shall loop from ONE to Cas_word_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (label of Cas_messages with index counter-1, ONE and MAX_LABEL) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string LABEL, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 531,533
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCASParameters-DB-LLR-003]
        COMMENT The function shall loop from ONE to Cas_word_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (cas_start_bit of Cas_messages with index counter-1, MIN_CAS_START_BIT and MAX_CAS_START_BIT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string CAS_START_BIT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 531,535
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCASParameters-DB-LLR-004]
        COMMENT The function shall loop from ONE to Cas_word_cnt and do the following,
        COMMENT If function CheckMinMax with parameters (cas_priority of Cas_messages with index counter-1, ONE and MAX_CAS_PRIORITY) returns 
        COMMENT FALSE AND Pdi_error_count is less than MAX_ERROR_MSG the do the following
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string CAS_PRIORITY, Error_msg_string with
        COMMENT  array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 531,537
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
			
			
			
			VAR Cas_messages[0].cas_string,				init = { others => 'A' },			ev = init				
			VAR Cas_messages[0].label,					init = 0,							ev = init				
			VAR Cas_messages[0].cas_start_bit,			init = MAX_CAS_START_BIT+1,			ev = init				
			VAR Cas_messages[0].cas_priority,			init = 0,							ev = init				
			VAR Cas_messages[0].cas_type,				init = ADVISORY,					ev = init				
			VAR Cas_messages[0].cas_id,					init = MAX_CAS_ID+1,				ev = init	
			
			
			
			VAR Error_msg_string[0],			init = "CAS CAS_STRING",				ev = "CAS 0000 CAS_STRING"				
			--VAR Error_msg_string[1],			init = "CAS LABEL",						ev = "CAS  LABEL"						
			VAR Error_msg_string[2],			init = "CAS CAS_START_BIT",				ev = "CAS 0000 CAS_START_BIT"				
			VAR Error_msg_string[3],			init = "CAS CAS_PRIORITY",				ev = "CAS 0000 CAS_PRIORITY"				
			VAR Error_msg_string[4],			init = "CAS CAS_ID",					ev = "CAS 0000 CAS_ID"		
			
						
			
		
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,			ev = TRUE				
			--VAR Index_Value,					init = 1,				ev = init			
			VAR Pdi_error_count,				init = 0,				ev = 5
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				
			
			VAR Cas_word_cnt,					init = 1,					ev = init		
			
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB StrLen(Cas_messages[0].cas_string)32
			--STUB FindCasType(ADVISORY)CAS_ADVISORY
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 12
	
    TEST 13
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-CheckCASParameters-DB-LLR-001]
        COMMENT The function shall loop from ONE to Cas_word_cnt and do the following,
		COMMENT 1.	Call the function  OctToStringTrim with parameters label of Cas_messages with index counter-1, size of label and label string.
		COMMENT 2.	If max string is less than return value of StrLen with parameter cas_string of Cas_messages with index counter-1 do below:
		COMMENT  - Set Index_value to counter
		COMMENT - Set max string to return value of StrLen with parameter cas_string of Cas_messages with index counter-1 
		COMMENT 3.	If function CheckString with parameters (cas_string of Cas_messages with index counter-1 and (MAX_CAS_STRING_TXT minus ONE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT Equivalence Class 532,529
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCASParameters-DB-LLR-002]
        COMMENT The function shall loop from ONE to Cas_word_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (label of Cas_messages with index counter-1, ONE and MAX_LABEL) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT Equivalence Class 532,533
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCASParameters-DB-LLR-003]
        COMMENT The function shall loop from ONE to Cas_word_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (cas_start_bit of Cas_messages with index counter-1, MIN_CAS_START_BIT and MAX_CAS_START_BIT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT Equivalence Class 532,535
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCASParameters-DB-LLR-004]
        COMMENT The function shall loop from ONE to Cas_word_cnt and do the following,
        COMMENT If function CheckMinMax with parameters (cas_priority of Cas_messages with index counter-1, ONE and MAX_CAS_PRIORITY) returns 
        COMMENT FALSE AND Pdi_error_count is less than MAX_ERROR_MSG the do the following
        COMMENT Equivalence Class 532,537
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
			
			
			
			VAR Cas_messages[0].cas_string,				init = { others => 'A' },			ev = init				
			VAR Cas_messages[0].label,					init = 0,							ev = init				
			VAR Cas_messages[0].cas_start_bit,			init = MAX_CAS_START_BIT+1,			ev = init				
			VAR Cas_messages[0].cas_priority,			init = 0,							ev = init				
			VAR Cas_messages[0].cas_type,				init = ADVISORY,					ev = init				
			VAR Cas_messages[0].cas_id,					init = MAX_CAS_ID+1,				ev = init	
			
						
			
		
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,			ev = TRUE				
			--VAR Index_Value,					init = 1,				ev = init			
			VAR Pdi_error_count,				init = 5,				ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				
			
			VAR Cas_word_cnt,					init = 1,					ev = init		
			
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB StrLen(Cas_messages[0].cas_string)32
			--STUB FindCasType(ADVISORY)CAS_ADVISORY
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 13
	
    TEST 14
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCASParameters-DB-LLR-001]
        COMMENT The function shall loop from ONE to Cas_word_cnt and do the following,
		COMMENT 1.	Call the function  OctToStringTrim with parameters label of Cas_messages with index counter-1, size of label and label string.
		COMMENT 2.	If max string is less than return value of StrLen with parameter cas_string of Cas_messages with index counter-1 do below:
		COMMENT  - Set Index_value to counter
		COMMENT - Set max string to return value of StrLen with parameter cas_string of Cas_messages with index counter-1 
		COMMENT 3.	If function CheckString with parameters (cas_string of Cas_messages with index counter-1 and (MAX_CAS_STRING_TXT minus ONE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT Equivalence Class 532,530
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCASParameters-DB-LLR-002]
        COMMENT The function shall loop from ONE to Cas_word_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (label of Cas_messages with index counter-1, ONE and MAX_LABEL) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT Equivalence Class 532,534
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCASParameters-DB-LLR-003]
        COMMENT The function shall loop from ONE to Cas_word_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (cas_start_bit of Cas_messages with index counter-1, MIN_CAS_START_BIT and MAX_CAS_START_BIT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT Equivalence Class 532,536
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCASParameters-DB-LLR-004]
        COMMENT The function shall loop from ONE to Cas_word_cnt and do the following,
        COMMENT If function CheckMinMax with parameters (cas_priority of Cas_messages with index counter-1, ONE and MAX_CAS_PRIORITY) returns 
        COMMENT FALSE AND Pdi_error_count is less than MAX_ERROR_MSG the do the following
        COMMENT Equivalence Class 532,539,541
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
			
			
			
			VAR Cas_messages[0].cas_string,				init = { others => '\0' },			ev = init				
			VAR Cas_messages[0].label,					init = 1,							ev = init				
			VAR Cas_messages[0].cas_start_bit,			init = MAX_CAS_START_BIT,			ev = init				
			VAR Cas_messages[0].cas_priority,			init = 1,							ev = init				
			VAR Cas_messages[0].cas_type,				init = CAUTION,					ev = init				
			VAR Cas_messages[0].cas_id,					init = MAX_CAS_ID,					ev = init	
			
						
			
		
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = init				
			
			VAR Cas_word_cnt,					init = 1,					ev = init		
			
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			
			VAR U16_message_words[1],			init = 0,							ev = init
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB StrLen(Cas_messages[0].cas_string)32
			--STUB FindCasType(ADVISORY)CAS_ADVISORY
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 14
	
    TEST 15
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCASParameters-DB-LLR-004]
        COMMENT The function shall loop from ONE to Cas_word_cnt and do the following,
        COMMENT If function CheckMinMax with parameters (cas_priority of Cas_messages with index counter-1, ONE and MAX_CAS_PRIORITY) returns 
        COMMENT FALSE AND Pdi_error_count is less than MAX_ERROR_MSG the do the following
        COMMENT Equivalence Class 533,539,541
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
			
			
			
			VAR Cas_messages[0..1].cas_string,				init = { others => '\0' },			ev = init				
			VAR Cas_messages[0..1].label,					init = 1,							ev = init				
			VAR Cas_messages[0..1].cas_start_bit,			init = MAX_CAS_START_BIT,			ev = init				
			VAR Cas_messages[0..1].cas_priority,			init = 1,							ev = init				
			VAR Cas_messages[0..1].cas_type,				init = WARNING,					ev = init				
			VAR Cas_messages[0..1].cas_id,					init = MAX_CAS_ID,					ev = init	
			
						
			
		
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = init				
			
			VAR Cas_word_cnt,					init = 2,					ev = init		
			
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			
			VAR U16_message_words[1],			init = 0,							ev = 0
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB StrLen(Cas_messages[0].cas_string)32
			STUB StrLen(Cas_messages[1].cas_string)32
			--STUB FindCasType(ADVISORY)CAS_ADVISORY
			--STUB FindCasType(ADVISORY)CAS_ADVISORY
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 15

    TEST 16
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCASParameters-DB-LLR-005]
        COMMENT The function shall loop from ONE to Cas_word_cnt and do the following,
        COMMENT If function CheckMinMax with parameters (cas_priority of Cas_messages with index counter-1, ONE and MAX_CAS_PRIORITY) returns 
        COMMENT FALSE AND Pdi_error_count is less than MAX_ERROR_MSG the do the following
        COMMENT Equivalence Class 532,540,541
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCASParameters-DB-LLR-006]
        COMMENT The function shall loop from ONE to Cas_word_cnt and do the following,
        COMMENT - Set cas id to cas_id of Cas_messages with index counter-1
        COMMENT If function CheckMinMax with parameters (cas id , ZERO and MAX_CAS_ID) returns FALSE AND Pdi_error_count is 
        COMMENT less than MAX_ERROR_MSG then do the following.
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string CAS_ID, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 532,543
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
			
			
			
			VAR Cas_messages[0].cas_string,				init = { others => '\0' },			ev = init				
			VAR Cas_messages[0].label,					init = 1,							ev = init				
			VAR Cas_messages[0].cas_start_bit,			init = MAX_CAS_START_BIT,			ev = init				
			VAR Cas_messages[0].cas_priority,			init = 1,							ev = init				
			VAR Cas_messages[0].cas_type,				init = 4,					ev = init				
			VAR Cas_messages[0].cas_id,					init = MAX_CAS_ID,					ev = init	
			
						
			
		
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = 1
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				
			
			VAR Cas_word_cnt,					init = 1,					ev = init		
			
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			
			VAR U16_message_words[1],			init = 0,							ev = 128
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB StrLen(Cas_messages[0].cas_string)32
			--STUB FindCasType(4)4
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 16
	
	
    TEST 17
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckCASParameters-DB-LLR-005]
        COMMENT The function shall loop from ONE to Cas_word_cnt and do the following,
        COMMENT If function CheckMinMax with parameters (cas_priority of Cas_messages with index counter-1, ONE and MAX_CAS_PRIORITY) returns 
        COMMENT FALSE AND Pdi_error_count is less than MAX_ERROR_MSG the do the following
        COMMENT Equivalence Class 533,540,541
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCASParameters-DB-LLR-006]
        COMMENT The function shall loop from ONE to Cas_word_cnt and do the following,
        COMMENT - Set cas id to cas_id of Cas_messages with index counter-1
        COMMENT If function CheckMinMax with parameters (cas id , ZERO and MAX_CAS_ID) returns FALSE AND Pdi_error_count is 
        COMMENT less than MAX_ERROR_MSG then do the following.
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string CAS_ID, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 533,543
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
			
			
			
			VAR Cas_messages[0].cas_string,				init = { others => '\0' },			ev = init				
			VAR Cas_messages[0].label,					init = 1,							ev = init				
			VAR Cas_messages[0].cas_start_bit,			init = MAX_CAS_START_BIT,			ev = init				
			VAR Cas_messages[0].cas_priority,			init = 1,							ev = init				
			VAR Cas_messages[0].cas_type,				init = 4,					ev = init				
			VAR Cas_messages[0].cas_id,					init = MAX_CAS_ID,					ev = init	
			
						
			
		
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 5,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				
			
			VAR Cas_word_cnt,					init = 1,					ev = init		
			
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB StrLen(Cas_messages[0].cas_string)32
			--STUB FindCasType(4)4
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 17

    TEST 18
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckCASParameters-DB-LLR-005]
        COMMENT The function shall loop from ONE to Cas_word_cnt and do the following,
        COMMENT If function CheckMinMax with parameters (cas_priority of Cas_messages with index counter-1, ONE and MAX_CAS_PRIORITY) returns 
        COMMENT FALSE AND Pdi_error_count is less than MAX_ERROR_MSG the do the following
        COMMENT Equivalence Class 532,540,542
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
			
			
			
			VAR Cas_messages[0].cas_string,				init = { others => '\0' },			ev = init				
			VAR Cas_messages[0].label,					init = 1,							ev = init				
			VAR Cas_messages[0].cas_start_bit,			init = MAX_CAS_START_BIT,			ev = init				
			VAR Cas_messages[0].cas_priority,			init = 1,							ev = init				
			VAR Cas_messages[0].cas_type,				init = 0,					ev = init				
			VAR Cas_messages[0].cas_id,					init = MAX_CAS_ID,					ev = init	
			
						
			
		
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = init				
			
			VAR Cas_word_cnt,					init = 1,					ev = init		
			
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = init
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB StrLen(Cas_messages[0].cas_string)32
			--STUB FindCasType(0)4
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 18	
	
    TEST 19
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-001]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT 1.	Call the function OctToStringTrim with parameters A429_label of A429_cfg_data with index counter-1, size of label and label string.
        COMMENT 2.	If negated value of (A429_port of A429_cfg_data with index counter-1 is equal to ONE) AND negated value of (A429_port of A429_cfg_data
        COMMENT  with index counter-1 is equal to TWO) AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT a)	Call the function BuildErrorMsg with parameters string element, label string, string A429_PORT, Error_msg_string with array index Pdi_error_count.
        COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 545,547
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-002]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If function CheckMinMax with parameters (A429_label of A429_cfg_data with index counter-1, ONE and MAX_LABEL) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string LABEL, Error_msg_string with
        COMMENT  array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 545,549
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-012]
        COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (A429_sdi of A429_cfg_data with index counter -1, ZERO and THREE)
        COMMENT  returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string SDI, Error_msg_string with array index Pdi_error_count.
        COMMENT 2. Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 545,551
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-003]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If function A429_type of A429_cfg_data with index counter-1 is not equal to BNR and DDW AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string A429_TYPE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 545,553
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
	
	
			VAR A429_cfg_data[0].A429_label,			init = 0,							ev = init
			VAR A429_cfg_data[0].A429_port,				init = 3,							ev = init
			VAR A429_cfg_data[0].A429_sdi,				init = 4,							ev = init
			VAR A429_cfg_data[0].A429_type,				init = BCD,							ev = init
												

			VAR Error_msg_string[0],			init = "A429 0000 A429_PORT",				ev = init			
			VAR Error_msg_string[1],			init = "A429 0000 LABEL",					ev = init			
			VAR Error_msg_string[2],			init = "A429 0000 SDI",						ev = init			
			VAR Error_msg_string[3],			init = "A429 0000 A429_TYPE",				ev = init					
	
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = 4
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR A429_settings_cnt,				init = 2,					ev = init			
			
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 1920
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 19
	
	
    TEST 20
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-001]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT 1.	Call the function OctToStringTrim with parameters A429_label of A429_cfg_data with index counter-1, size of label and label string.
        COMMENT 2.	If negated value of (A429_port of A429_cfg_data with index counter-1 is equal to ONE) AND negated value of (A429_port of A429_cfg_data
        COMMENT  with index counter-1 is equal to TWO) AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT a)	Call the function BuildErrorMsg with parameters string element, label string, string A429_PORT, Error_msg_string with array index Pdi_error_count.
        COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 546,547
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-002]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If function CheckMinMax with parameters (A429_label of A429_cfg_data with index counter-1, ONE and MAX_LABEL) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string LABEL, Error_msg_string with
        COMMENT  array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 546,549
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-012]
        COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (A429_sdi of A429_cfg_data with index counter -1, ZERO and THREE)
        COMMENT  returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string SDI, Error_msg_string with array index Pdi_error_count.
        COMMENT 2. Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 546,551
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-003]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If function A429_type of A429_cfg_data with index counter-1 is not equal to BNR and DDW AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string A429_TYPE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 546,553
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
	
	
			VAR A429_cfg_data[0].A429_label,			init = 1,							ev = init
			VAR A429_cfg_data[0].A429_port,				init = 2,							ev = init
			VAR A429_cfg_data[0].A429_sdi,				init = 3,							ev = init
			VAR A429_cfg_data[0].A429_type,				init = BNR,							ev = init
			
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_bits,				init = 0,							ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_start_bit,			init = MAX_START_BIT+1,				ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_max,					init = MAX_BNR+1,					ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_min,					init = MAX_BNR-1,					ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_offset,				init = MAX_BNR_OFFSET+1,			ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_timeout,				init = MAX_TIMEOUT,					ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_scale_fact,			init = 2,							ev = init
												

			VAR Error_msg_string[0],			init = "A429 0001 A429_BNR_BITS",				ev = init			
			VAR Error_msg_string[1],			init = "A429 0001 A429_BNR_START_BIT",			ev = init			
			VAR Error_msg_string[2],			init = "A429 0001 A429_BNR_MAX",				ev = init			
			VAR Error_msg_string[3],			init = "A429 0001 A429_BNR_OFFSET",				ev = init			
			VAR Error_msg_string[4],			init = "A429 0001 A429_BNR_OFFSET",				ev = init			

	
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = 4
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR A429_settings_cnt,				init = 2,					ev = init			
			
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 1920
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 20
	
    TEST 21
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-001]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT 1.	Call the function OctToStringTrim with parameters A429_label of A429_cfg_data with index counter-1, size of label and label string.
        COMMENT 2.	If negated value of (A429_port of A429_cfg_data with index counter-1 is equal to ONE) AND negated value of (A429_port of A429_cfg_data
        COMMENT  with index counter-1 is equal to TWO) AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT Equivalence Class 545,548
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-002]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If function CheckMinMax with parameters (A429_label of A429_cfg_data with index counter-1, ONE and MAX_LABEL) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT Equivalence Class 545,550
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-012]
        COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (A429_sdi of A429_cfg_data with index counter -1, ZERO and THREE)
        COMMENT  returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT Equivalence Class 545,552
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-003]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If function A429_type of A429_cfg_data with index counter-1 is not equal to BNR and DDW AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT Equivalence Class 545,554
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 0,							ev = init
	
	
			VAR A429_cfg_data[0].A429_label,			init = 1,							ev = init
			VAR A429_cfg_data[0].A429_port,				init = 1,							ev = init
			VAR A429_cfg_data[0].A429_sdi,				init = 3,							ev = init
			VAR A429_cfg_data[0].A429_type,				init = BNR,							ev = init
			
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_bits,				init = 1,							ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_start_bit,			init = MAX_START_BIT,				ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_max,					init = MAX_BNR,						ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_min,					init = MAX_BNR,						ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_offset,				init = MAX_BNR_OFFSET,				ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_timeout,				init = MAX_TIMEOUT+1,				ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_scale_fact,			init = 3,							ev = init
												

			VAR Error_msg_string[0],			init = "A429 0001 A429_BNR_TIMEOUT",				ev = init			
			VAR Error_msg_string[1],			init = "A429 0001 A429_BNR_SCALE_FACTOR",			ev = init					

	
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = 2
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR A429_settings_cnt,				init = 2,					ev = init			
			
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 384
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 21
	
    TEST 22
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-004]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1 is equal to BNR then
        COMMENT If function CheckMinMax with parameters (A429_bnr_bits of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ONE and MAX_BNR_BITS) 
        COMMENT returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string A429_BNR_BITS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 545,555
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-005]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If function CheckMinMax with parameters (A429_bnr_start_bit of A429_bnr_data of label_data of A429_cfg_data with index counter-1, 
        COMMENT MIN_START_BIT and MAX_START_BIT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string A429_BNR_START_BIT, Error_msg_string 
        COMMENT with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 545,557
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-006]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If value of A429_bnr_max of A429_bnr_data of label_data of A429_cfg_data with index counter-1 is greater than 
        COMMENT MAX_BNR AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string A429_BNR_MAX, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 545,554
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 0,							ev = init
	
	
			VAR A429_cfg_data[0].A429_label,			init = 1,							ev = init
			VAR A429_cfg_data[0].A429_port,				init = 1,							ev = init
			VAR A429_cfg_data[0].A429_sdi,				init = 3,							ev = init
			VAR A429_cfg_data[0].A429_type,				init = BNR,							ev = init
			
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_bits,				init = 1,							ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_start_bit,			init = MAX_START_BIT,				ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_max,					init = MAX_BNR,						ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_min,					init = MAX_BNR,						ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_offset,				init = MAX_BNR_OFFSET,				ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_timeout,				init = MAX_TIMEOUT+1,				ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_scale_fact,			init = 3,							ev = init
																

	
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 5,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR A429_settings_cnt,				init = 2,					ev = init			
			
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 22
	
    TEST 23
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-004]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1 is equal to BNR then
        COMMENT If function CheckMinMax with parameters (A429_bnr_bits of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ONE and MAX_BNR_BITS) 
        COMMENT returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string A429_BNR_BITS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 545,555
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
	
	
			VAR A429_cfg_data[0].A429_label,			init = 1,							ev = init
			VAR A429_cfg_data[0].A429_port,				init = 2,							ev = init
			VAR A429_cfg_data[0].A429_sdi,				init = 3,							ev = init
			VAR A429_cfg_data[0].A429_type,				init = DDW,							ev = init
			
			VAR A429_cfg_data[0].label_data.A429_ddw_timeout,				init = MAX_TIMEOUT+1,						ev = init

			VAR Error_msg_string[0],			init = "A429 0001 A429_DDW_TIMEOUT",				ev = init				

	
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = 1
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR A429_settings_cnt,				init = 2,					ev = init			
			
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 128
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 23
	
    TEST 24
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-004]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1 is equal to BNR then
        COMMENT If function CheckMinMax with parameters (A429_bnr_bits of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ONE and MAX_BNR_BITS) 
        COMMENT returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string A429_BNR_BITS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 546,555
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-005]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If function CheckMinMax with parameters (A429_bnr_start_bit of A429_bnr_data of label_data of A429_cfg_data with index counter-1, 
        COMMENT MIN_START_BIT and MAX_START_BIT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string A429_BNR_START_BIT, Error_msg_string 
        COMMENT with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 546,557
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-006]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If value of A429_bnr_max of A429_bnr_data of label_data of A429_cfg_data with index counter-1 is greater than 
        COMMENT MAX_BNR AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string A429_BNR_MAX, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 546,554
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
	
	
			VAR A429_cfg_data[0].A429_label,			init = 1,							ev = init
			VAR A429_cfg_data[0].A429_port,				init = 2,							ev = init
			VAR A429_cfg_data[0].A429_sdi,				init = 3,							ev = init
			VAR A429_cfg_data[0].A429_type,				init = DDW,							ev = init
			
			VAR A429_cfg_data[0].label_data.A429_ddw_timeout,				init = MAX_TIMEOUT+1,						ev = init
			
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 5,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR A429_settings_cnt,				init = 2,					ev = init			
			
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 24
	
    TEST 25
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
		COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-004]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1 is equal to BNR then
        COMMENT If function CheckMinMax with parameters (A429_bnr_bits of A429_bnr_data of label_data of A429_cfg_data with index counter-1, ONE and MAX_BNR_BITS) 
        COMMENT returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT Equivalence Class 545,556
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-005]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If function CheckMinMax with parameters (A429_bnr_start_bit of A429_bnr_data of label_data of A429_cfg_data with index counter-1, 
        COMMENT MIN_START_BIT and MAX_START_BIT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT Equivalence Class 545,558
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-007]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If A429_bnr_min of A429_bnr_data of label_data of A429_cfg_data with index counter-1 is less than MIN_BNR 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string A429_BNR_MIN, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 545,554,559
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-008]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If function CheckMinMax with parameters (A429_bnr_offset of A429_bnr_data of label_data of A429_cfg_data with index counter-1,
        COMMENT  ZERO and MAX_BNR_OFFSET) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following 
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string A429_BNR_OFFSET, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 545,561
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
	
	
			VAR A429_cfg_data[0].A429_label,			init = 1,							ev = init
			VAR A429_cfg_data[0].A429_port,				init = 2,							ev = init
			VAR A429_cfg_data[0].A429_sdi,				init = 3,							ev = init
			VAR A429_cfg_data[0].A429_type,				init = DDW,							ev = init
			
			VAR A429_cfg_data[0].label_data.A429_ddw_timeout,				init = MAX_TIMEOUT,						ev = init
		
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = init				

			VAR A429_settings_cnt,				init = 2,					ev = init			
			
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = init
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 25
	
	
    TEST 26
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-007]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If A429_bnr_min of A429_bnr_data of label_data of A429_cfg_data with index counter-1 is less than MIN_BNR 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT Equivalence Class 546,554,559
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-008]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If function CheckMinMax with parameters (A429_bnr_offset of A429_bnr_data of label_data of A429_cfg_data with index counter-1,
        COMMENT  ZERO and MAX_BNR_OFFSET) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following 
        COMMENT Equivalence Class 546,561
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
	
	
			VAR A429_cfg_data[0].A429_label,			init = 0,							ev = init
			VAR A429_cfg_data[0].A429_port,				init = 3,							ev = init
			VAR A429_cfg_data[0].A429_sdi,				init = 4,							ev = init
			VAR A429_cfg_data[0].A429_type,				init = BCD,							ev = init
															
	
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 5,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR A429_settings_cnt,				init = 2,					ev = init			
			
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 26
	
	
    TEST 27
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-007]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If A429_bnr_min of A429_bnr_data of label_data of A429_cfg_data with index counter-1 is less than MIN_BNR 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
        COMMENT Equivalence Class 545,554,560
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-008]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If function CheckMinMax with parameters (A429_bnr_offset of A429_bnr_data of label_data of A429_cfg_data with index counter-1,
        COMMENT  ZERO and MAX_BNR_OFFSET) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following 
        COMMENT Equivalence Class 545,562
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-009]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If function CheckMinMax with parameters (A429_bnr_timeout of A429_bnr_data of label_data of A429_cfg_data with 
        COMMENT index counter-1, ZERO and MAX_TIMEOUT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string A429_BNR_TIMEOUT, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 545,563
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-010]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If function CheckFloatMinMax  with parameters (A429_bnr_scale_fact of A429_bnr_data of label_data of A429_cfg_data with index counter-1, 
        COMMENT ZERO and TWO) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string A429_BNR_SCALE_FACTOR, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 545,565
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-011]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1 is equal to DDW then
        COMMENT If function CheckMinMax with parameters (A429_ddw_timeout of A429_bnr_data of label_data of A429_cfg_data with index counter-1, 
        COMMENT ZERO and MAX_TIMEOUT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string A429_DDW_TIMEOUT, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 545,567
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
	
	
			VAR A429_cfg_data[0..1].A429_label,				init = 1,							ev = init
			VAR A429_cfg_data[0..1].A429_port,				init = 2,							ev = init
			VAR A429_cfg_data[0..1].A429_sdi,				init = 3,							ev = init
			VAR A429_cfg_data[0..1].A429_type,				init = DDW,							ev = init
			
			VAR A429_cfg_data[0..1].label_data.A429_ddw_timeout,				init = MAX_TIMEOUT,						ev = init
		
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = init				

			VAR A429_settings_cnt,				init = 2,					ev = init			
			
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = init
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 27	
	
    TEST 28
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-009]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If function CheckMinMax with parameters (A429_bnr_timeout of A429_bnr_data of label_data of A429_cfg_data with 
        COMMENT index counter-1, ZERO and MAX_TIMEOUT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT Equivalence Class 546,563
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-010]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If function CheckFloatMinMax  with parameters (A429_bnr_scale_fact of A429_bnr_data of label_data of A429_cfg_data with index counter-1, 
        COMMENT ZERO and TWO) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT Equivalence Class 546,565
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-011]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1 is equal to DDW then
        COMMENT If function CheckMinMax with parameters (A429_ddw_timeout of A429_bnr_data of label_data of A429_cfg_data with index counter-1, 
        COMMENT ZERO and MAX_TIMEOUT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT Equivalence Class 546,567
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 0,							ev = init
	
	
			VAR A429_cfg_data[0].A429_label,			init = 1,							ev = init
			VAR A429_cfg_data[0].A429_port,				init = 1,							ev = init
			VAR A429_cfg_data[0].A429_sdi,				init = 3,							ev = init
			VAR A429_cfg_data[0].A429_type,				init = BNR,							ev = init
			
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_bits,				init = 0,							ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_start_bit,			init = MAX_START_BIT+1,				ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_max,					init = MAX_BNR+1,						ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_min,					init = MIN_BNR-1,						ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_offset,				init = MAX_BNR_OFFSET+1,				ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_timeout,				init = MAX_TIMEOUT+1,				ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_scale_fact,			init = 3,							ev = init
												
	
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 5,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR A429_settings_cnt,				init = 2,					ev = init			
			
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 28

    TEST 29
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-009]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If function CheckMinMax with parameters (A429_bnr_timeout of A429_bnr_data of label_data of A429_cfg_data with 
        COMMENT index counter-1, ZERO and MAX_TIMEOUT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string A429_BNR_TIMEOUT, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 545,563
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-010]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If function CheckFloatMinMax  with parameters (A429_bnr_scale_fact of A429_bnr_data of label_data of A429_cfg_data with index counter-1, 
        COMMENT ZERO and TWO) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string A429_BNR_SCALE_FACTOR, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 545,565
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-011]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1 is equal to DDW then
        COMMENT If function CheckMinMax with parameters (A429_ddw_timeout of A429_bnr_data of label_data of A429_cfg_data with index counter-1, 
        COMMENT ZERO and MAX_TIMEOUT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string A429_DDW_TIMEOUT, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 545,567
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 0,							ev = init
	
	
			VAR A429_cfg_data[0].A429_label,			init = 1,							ev = init
			VAR A429_cfg_data[0].A429_port,				init = 1,							ev = init
			VAR A429_cfg_data[0].A429_sdi,				init = 3,							ev = init
			VAR A429_cfg_data[0].A429_type,				init = BNR,							ev = init
			
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_bits,				init = 1,							ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_start_bit,			init = MAX_START_BIT,				ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_max,					init = MAX_BNR,						ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_min,					init = MIN_BNR-1,						ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_offset,				init = MAX_BNR_OFFSET,				ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_timeout,				init = MAX_TIMEOUT+1,				ev = init
			VAR A429_cfg_data[0].label_data.A429_bnr_data.A429_bnr_scale_fact,			init = 3,							ev = init
																

	
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = 3
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR A429_settings_cnt,				init = 2,					ev = init			
			
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 896
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 29

    TEST 30
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-009]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If function CheckMinMax with parameters (A429_bnr_timeout of A429_bnr_data of label_data of A429_cfg_data with 
        COMMENT index counter-1, ZERO and MAX_TIMEOUT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT Equivalence Class 545,564
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-010]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1is equal to BNR then
        COMMENT If function CheckFloatMinMax  with parameters (A429_bnr_scale_fact of A429_bnr_data of label_data of A429_cfg_data with index counter-1, 
        COMMENT ZERO and TWO) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT Equivalence Class 545,566
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckA429Parameters-DB-LLR-011]
        COMMENT The function shall loop from ONE to A429_settings_cnt -1 and do the following,
        COMMENT If A429_type of A429_cfg_data with index counter-1 is equal to DDW then
        COMMENT If function CheckMinMax with parameters (A429_ddw_timeout of A429_bnr_data of label_data of A429_cfg_data with index counter-1, 
        COMMENT ZERO and MAX_TIMEOUT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT Equivalence Class 545,568
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
	
	
			VAR A429_cfg_data[0].A429_label,			init = 0,							ev = init
			VAR A429_cfg_data[0].A429_port,				init = 3,							ev = init
			VAR A429_cfg_data[0].A429_sdi,				init = 4,							ev = init
			VAR A429_cfg_data[0].A429_type,				init = BCD,							ev = init
															
	
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 5,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR A429_settings_cnt,				init = 3,					ev = init			
			
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR Elog_trig_bool,					init = FALSE,				ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 30	
	
    TEST 31
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-CheckElogTrig-DB-LLR-001]
        COMMENT The function shall return if Elog_trig_bool is equal to FALSE.
        COMMENT Equivalence Class 570		
        COMMENT
        COMMENT [hdudispfpdicheck-CheckElogTrig-DB-LLR-002]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENT-1 and do the following,
        COMMENT  Loop from ZERO to MAX_ELOG_TRIG_COND-1 and do the following
        COMMENT 1.	Call the function OctTostringTRIM with parameters elog_trig_label with index as condition counter of Elog_trig with 
        COMMENT index Exceedence log counter, size of label and label string.
        COMMENT 2.	If function CheckMinMax with parameters (elog_trig_label with index as condition counter of Elog_trig with index 
        COMMENT Exceedence log counter, ONE and MAX_LABEL) returns FALSE AND elog_trig_label with index as condition counter of 
        COMMENT Elog_trig with index Exceedence log counter is not equal to ZERO AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT a)	Call the function BuildErrorMsg with parameters string element, label string, string ELOG_TRIG_LABEL,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 573,571	
        COMMENT
        COMMENT [hdudispfpdicheck-CheckElogTrig-DB-LLR-006]
        COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (elog_trig_sdi with index as condition counter 
        COMMENT of Elog_trig with index Exceedence log counter , ZERO and THREE) returns FALSE AND Pdi_error_count is less than  MAX_ERROR_MSG then do the following.
        COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string ELOG_TRIG_SDI, Error_msg_string with array index Pdi_error_count.
        COMMENT 2. Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 573,575	
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
			
			
			VAR Elog_trig[0..4].elog_trig_label[0..4],					init = 0,							ev = init		
			VAR Elog_trig[0..4].elog_trig_sdi[0..4],					init = 4,							ev = init		
			VAR Elog_trig[0..4].elog_trig_start_type[0..4],				init = MAX_SYMBOL_VAL+1,							ev = init		
			VAR Elog_trig[0..4].elog_trig_start_val[0..4],				init = MAX_RANGE+1,									ev = init		
			VAR Elog_trig[0..4].elog_trig_cross_type[0..4],				init = 7,											ev = init		
			VAR Elog_trig[0..4].elog_trig_cross_val[0..4],				init = MAX_RANGE+1,									ev = init		
			VAR Elog_trig[0..4].elog_trig_time[0..4],					init = EXCEEDANCE_LOG_TRIG_TIME+1,					ev = init		
			
					
			VAR Error_msg_string[0],			init = "ELOG_TRIG 0000 ELOG_TRIG_SDI",						ev = init			
			VAR Error_msg_string[1],			init = "ELOG_TRIG 0000 ELOG_TRIG_STRT_VAL",					ev = init			
			VAR Error_msg_string[2],			init = "ELOG_TRIG 0000 ELOG_TRIG_STRT_VAL",				ev = init			
			VAR Error_msg_string[3],			init = "ELOG_TRIG 0000 ELOG_TRIG_CROSS_VAL",						ev = init			
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = 5
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR Elog_trig_bool,					init = TRUE,				ev = init	
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 31	
	
    TEST 32
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
		COMMENT [hdudispfpdicheck-CheckElogTrig-DB-LLR-001]
        COMMENT The function shall return if Elog_trig_bool is equal to FALSE.
        COMMENT Equivalence Class 570		
        COMMENT
        COMMENT [hdudispfpdicheck-CheckElogTrig-DB-LLR-002]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENT-1 and do the following,
        COMMENT  Loop from ZERO to MAX_ELOG_TRIG_COND-1 and do the following
        COMMENT 1.	Call the function OctTostringTRIM with parameters elog_trig_label with index as condition counter of Elog_trig with 
        COMMENT index Exceedence log counter, size of label and label string.
        COMMENT 2.	If function CheckMinMax with parameters (elog_trig_label with index as condition counter of Elog_trig with index 
        COMMENT Exceedence log counter, ONE and MAX_LABEL) returns FALSE AND elog_trig_label with index as condition counter of 
        COMMENT Elog_trig with index Exceedence log counter is not equal to ZERO AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT Equivalence Class 574,571	
        COMMENT
        COMMENT [hdudispfpdicheck-CheckElogTrig-DB-LLR-006]
        COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (elog_trig_sdi with index as condition counter 
        COMMENT of Elog_trig with index Exceedence log counter , ZERO and THREE) returns FALSE AND Pdi_error_count is less than  MAX_ERROR_MSG then do the following.
        COMMENT Equivalence Class 574,575	
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
			
			
			VAR Elog_trig[0..4].elog_trig_label[0..4],					init = 0,							ev = init		
			VAR Elog_trig[0..4].elog_trig_sdi[0..4],					init = 4,							ev = init		
			VAR Elog_trig[0..4].elog_trig_start_type[0..4],				init = MAX_SYMBOL_VAL+1,							ev = init		
			VAR Elog_trig[0..4].elog_trig_start_val[0..4],				init = MAX_RANGE+1,									ev = init		
			VAR Elog_trig[0..4].elog_trig_cross_type[0..4],				init = 7,											ev = init		
			VAR Elog_trig[0..4].elog_trig_cross_val[0..4],				init = MAX_RANGE+1,									ev = init		
			VAR Elog_trig[0..4].elog_trig_time[0..4],					init = EXCEEDANCE_LOG_TRIG_TIME+1,					ev = init		
			
					
			VAR Error_msg_string[0],			init = "ELOG_TRIG  ELOG_TRIG_SDI",						ev = init			
			VAR Error_msg_string[1],			init = "ELOG_TRIG  ELOG_TRIG_STRT_VAL",					ev = init			
			VAR Error_msg_string[2],			init = "ELOG_TRIG  ELOG_TRIG_CROSS_VAL",				ev = init			
			VAR Error_msg_string[3],			init = "ELOG_TRIG  ELOG_TRIG_TIME",						ev = init			
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 5,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR Elog_trig_bool,					init = TRUE,				ev = init	
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 32	
	
    TEST 33
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-CheckElogTrig-DB-LLR-001]
        COMMENT The function shall return if Elog_trig_bool is equal to FALSE.
        COMMENT Equivalence Class 570		
        COMMENT
        COMMENT [hdudispfpdicheck-CheckElogTrig-DB-LLR-002]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENT-1 and do the following,
        COMMENT  Loop from ZERO to MAX_ELOG_TRIG_COND-1 and do the following
        COMMENT 1.	Call the function OctTostringTRIM with parameters elog_trig_label with index as condition counter of Elog_trig with 
        COMMENT index Exceedence log counter, size of label and label string.
        COMMENT 2.	If function CheckMinMax with parameters (elog_trig_label with index as condition counter of Elog_trig with index 
        COMMENT Exceedence log counter, ONE and MAX_LABEL) returns FALSE AND elog_trig_label with index as condition counter of 
        COMMENT Elog_trig with index Exceedence log counter is not equal to ZERO AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT a)	Call the function BuildErrorMsg with parameters string element, label string, string ELOG_TRIG_LABEL,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 573,572	
        COMMENT
        COMMENT [hdudispfpdicheck-CheckElogTrig-DB-LLR-006]
        COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (elog_trig_sdi with index as condition counter 
        COMMENT of Elog_trig with index Exceedence log counter , ZERO and THREE) returns FALSE AND Pdi_error_count is less than  MAX_ERROR_MSG then do the following.
        COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string ELOG_TRIG_SDI, Error_msg_string with array index Pdi_error_count.
        COMMENT 2. Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 573,576	
        COMMENT 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckElogTrig-DB-LLR-003]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENT-1 and do the following,
        COMMENT Loop from ZERO to MAX_ELOG_TRIG_COND-1 and do the following:
        COMMENT - If elog_trig_start_type with index as condition counter of Elog_trig with index Exceedence log counter is not equal to ZERO) AND 
        COMMENT CheckMinMax with parameters (elog_trig_start_type with index as condition counter of Elog_trig with index Exceedence log counter, 
        COMMENT ONE and MAX_SYMBOL_VAL) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ELOG_TRIG_STRT_VAL, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 573,577 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckElogTrig-DB-LLR-004]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENT-1 and do the following,
        COMMENT  Loop from ZERO to MAX_ELOG_TRIG_COND-1 and do the following:
        COMMENT - If elog_trig_cross_type with index as condition counter of Elog_trig with index Exceedence log counter is not equal to 
        COMMENT ZERO AND function CheckMinMax with parameters (elog_trig_cross_type with index as condition counter of Elog_trig with 
        COMMENT index Exceedence log counter, ONE and SIX) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ELOG_TRIG_CROSS_VAL, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 573,579
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
			
			
			VAR Elog_trig[0..4].elog_trig_label[0..4],					init = 0,							ev = init		
			VAR Elog_trig[0..4].elog_trig_sdi[0..4],					init = 1,							ev = init		
			VAR Elog_trig[0..4].elog_trig_start_type[0..4],				init = MAX_SYMBOL_VAL+1,							ev = init		
			VAR Elog_trig[0..4].elog_trig_start_val[0..4],				init = MAX_RANGE+1,									ev = init		
			VAR Elog_trig[0..4].elog_trig_cross_type[0..4],				init = 7,											ev = init		
			VAR Elog_trig[0..4].elog_trig_cross_val[0..4],				init = MAX_RANGE+1,									ev = init		
			VAR Elog_trig[0..4].elog_trig_time[0..4],					init = EXCEEDANCE_LOG_TRIG_TIME+1,					ev = init		
			
					
			VAR Error_msg_string[0],			init = "ELOG_TRIG 0000 ELOG_TRIG_STRT_VAL",						ev = init			
			VAR Error_msg_string[1],			init = "ELOG_TRIG 0000 ELOG_TRIG_STRT_VAL",					ev = init			
			VAR Error_msg_string[2],			init = "ELOG_TRIG 0000 ELOG_TRIG_CROSS_VAL",				ev = init			
			VAR Error_msg_string[3],			init = "ELOG_TRIG 0000 ELOG_TRIG_CROSS_VAL",						ev = init			
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = 5
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR Elog_trig_bool,					init = TRUE,				ev = init	
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 33	
	
	
    TEST 34
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-CheckElogTrig-DB-LLR-003]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENT-1 and do the following,
        COMMENT Loop from ZERO to MAX_ELOG_TRIG_COND-1 and do the following:
        COMMENT - If elog_trig_start_type with index as condition counter of Elog_trig with index Exceedence log counter is not equal to ZERO) AND 
        COMMENT CheckMinMax with parameters (elog_trig_start_type with index as condition counter of Elog_trig with index Exceedence log counter, 
        COMMENT ONE and MAX_SYMBOL_VAL) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ELOG_TRIG_STRT_VAL, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 574,577 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckElogTrig-DB-LLR-004]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENT-1 and do the following,
        COMMENT  Loop from ZERO to MAX_ELOG_TRIG_COND-1 and do the following:
        COMMENT - If elog_trig_cross_type with index as condition counter of Elog_trig with index Exceedence log counter is not equal to 
        COMMENT ZERO AND function CheckMinMax with parameters (elog_trig_cross_type with index as condition counter of Elog_trig with 
        COMMENT index Exceedence log counter, ONE and SIX) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ELOG_TRIG_CROSS_VAL, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 574,579
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
			
			
			VAR Elog_trig[0..4].elog_trig_label[0..4],					init = 1,							ev = init		
			VAR Elog_trig[0..4].elog_trig_sdi[0..4],					init = 2,							ev = init		
			VAR Elog_trig[0..4].elog_trig_start_type[0..4],				init = MAX_SYMBOL_VAL+1,							ev = init		
			VAR Elog_trig[0..4].elog_trig_start_val[0..4],				init = 0,											ev = init		
			VAR Elog_trig[0..4].elog_trig_cross_type[0..4],				init = 7,											ev = init		
			VAR Elog_trig[0..4].elog_trig_cross_val[0..4],				init = 0,											ev = init		
			VAR Elog_trig[0..4].elog_trig_time[0..4],					init = EXCEEDANCE_LOG_TRIG_TIME,					ev = init		
			
							
			VAR Error_msg_string[0],			init = "ELOG_TRIG 0001 ELOG_TRIG_STRT_VAL",					ev = init			
			VAR Error_msg_string[1],			init = "ELOG_TRIG 0001 ELOG_TRIG_CROSS_VAL",				ev = init					
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = 5
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR Elog_trig_bool,					init = TRUE,				ev = init	
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 34
	
    TEST 35
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckElogTrig-DB-LLR-003]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENT-1 and do the following,
        COMMENT Loop from ZERO to MAX_ELOG_TRIG_COND-1 and do the following:
        COMMENT - If elog_trig_start_type with index as condition counter of Elog_trig with index Exceedence log counter is not equal to ZERO) AND 
        COMMENT CheckMinMax with parameters (elog_trig_start_type with index as condition counter of Elog_trig with index Exceedence log counter, 
        COMMENT ONE and MAX_SYMBOL_VAL) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT Equivalence Class 573,578
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckElogTrig-DB-LLR-004]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENT-1 and do the following,
        COMMENT  Loop from ZERO to MAX_ELOG_TRIG_COND-1 and do the following:
        COMMENT - If elog_trig_cross_type with index as condition counter of Elog_trig with index Exceedence log counter is not equal to 
        COMMENT ZERO AND function CheckMinMax with parameters (elog_trig_cross_type with index as condition counter of Elog_trig with 
        COMMENT index Exceedence log counter, ONE and SIX) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT Equivalence Class 573,580
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckElogTrig-DB-LLR-005]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENT-1 and do the following,
        COMMENT  Loop from ZERO to MAX_ELOG_TRIG_COND-1 and do the following
        COMMENT If function CheckMinMax with parameters (elog_trig_time with index as condition counter of Elog_trig with index Exceedence log counter, 
        COMMENT ZERO and EXCEEDANCE_LOG_TRIG_TIME) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ELOG_TRIG_TIME, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 573,581
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
			
			
			VAR Elog_trig[0..4].elog_trig_label[0..4],					init = 1,							ev = init		
			VAR Elog_trig[0..4].elog_trig_sdi[0..4],					init = 2,							ev = init		
			VAR Elog_trig[0..4].elog_trig_start_type[0..4],				init = MAX_SYMBOL_VAL+1,							ev = init		
			VAR Elog_trig[0..4].elog_trig_start_val[0..4],				init = 0,											ev = init		
			VAR Elog_trig[0..4].elog_trig_cross_type[0..4],				init = 7,											ev = init		
			VAR Elog_trig[0..4].elog_trig_cross_val[0..4],				init = 0,											ev = init		
			VAR Elog_trig[0..4].elog_trig_time[0..4],					init = EXCEEDANCE_LOG_TRIG_TIME,					ev = init		
							
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 5,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR Elog_trig_bool,					init = TRUE,				ev = init	
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 35	
	
    TEST 36
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-CheckElogTrig-DB-LLR-005]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENT-1 and do the following,
        COMMENT  Loop from ZERO to MAX_ELOG_TRIG_COND-1 and do the following
        COMMENT If function CheckMinMax with parameters (elog_trig_time with index as condition counter of Elog_trig with index Exceedence log counter, 
        COMMENT ZERO and EXCEEDANCE_LOG_TRIG_TIME) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ELOG_TRIG_TIME, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 574,581
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
			
			
			VAR Elog_trig[0..4].elog_trig_label[0..4],					init = 1,							ev = init		
			VAR Elog_trig[0..4].elog_trig_sdi[0..4],					init = 2,							ev = init		
			VAR Elog_trig[0..4].elog_trig_start_type[0..4],				init = MAX_SYMBOL_VAL,								ev = init		
			VAR Elog_trig[0..4].elog_trig_start_val[0..4],				init = 0,											ev = init		
			VAR Elog_trig[0..4].elog_trig_cross_type[0..4],				init = 6,											ev = init		
			VAR Elog_trig[0..4].elog_trig_cross_val[0..4],				init = 0,											ev = init		
			VAR Elog_trig[0..4].elog_trig_time[0..4],					init = EXCEEDANCE_LOG_TRIG_TIME,					ev = init		
			
											
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = init				

			VAR Elog_trig_bool,					init = TRUE,				ev = init	
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = init
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 36
	
    TEST 37
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckElogTrig-DB-LLR-005]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENT-1 and do the following,
        COMMENT  Loop from ZERO to MAX_ELOG_TRIG_COND-1 and do the following
        COMMENT If function CheckMinMax with parameters (elog_trig_time with index as condition counter of Elog_trig with index Exceedence log counter, 
        COMMENT ZERO and EXCEEDANCE_LOG_TRIG_TIME) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following
        COMMENT Equivalence Class 574,582
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 0,							ev = init
			
			
			VAR Elog_trig[0..4].elog_trig_label[0..4],					init = 1,							ev = init		
			VAR Elog_trig[0..4].elog_trig_sdi[0..4],					init = 2,							ev = init		
			VAR Elog_trig[0..4].elog_trig_start_type[0..4],				init = 0,											ev = init		
			VAR Elog_trig[0..4].elog_trig_start_val[0..4],				init = 0,											ev = init		
			VAR Elog_trig[0..4].elog_trig_cross_type[0..4],				init = 0,											ev = init		
			VAR Elog_trig[0..4].elog_trig_cross_val[0..4],				init = 0,											ev = init		
			VAR Elog_trig[0..4].elog_trig_time[0..4],					init = EXCEEDANCE_LOG_TRIG_TIME,					ev = init		
			
											
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = init				

			VAR Elog_trig_bool,					init = TRUE,				ev = init	
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_param,						init = FALSE,				ev = init			
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = init
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 37	
	
	
	
    TEST 38
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckElogParam-DB-LLR-001]
        COMMENT The function shall return if  Elog_param is equal to FALSE.
        COMMENT Equivalence Class 615
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckElogParam-DB-LLR-002]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENT-1 and do the following,
        COMMENT 1.	Call the function OctToStringTrim with parameters elog_label of Elog_label with index Exceedence log counter, size of label and label string.
        COMMENT 2.	If function CheckMinMax with parameters (elog_label of Elog_label with index Exceedence log counter, ONE and MAX_LABEL) returns FALSE 
        COMMENT AND elog_label of Elog_label with index Exceedence log counter is not equal to ZERO and Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT a)	Call the function BuildErrorMsg with parameters string element, label string, string ELOG_LABEL, Error_msg_string with array index Pdi_error_count.
        COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 618,616
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckElogParam-DB-LLR-005]
        COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (elog_sdi of Elog_label with index Exceedence
        COMMENT  log counter , ZERO and THREE) returns FALSE AND Pdi_error_count is less than  MAX_ERROR_MSG then do the following.
        COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string ELOG_SDI, Error_msg_string
        COMMENT  with array index Pdi_error_count.
        COMMENT 2. Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 618,620
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
			
			
			VAR Elog_label[0..4].elog_label,			init = 0,							ev = init			
			VAR Elog_label[0..4].elog_sdi,				init = 4,							ev = init			
			VAR Elog_label[0..4].elog_bit_label[0..17],				init = 0,							ev = init			
			VAR Elog_label[0..4].elog_bit_param[0..17],		init = { others => 'a' },				ev = init			
									
			VAR Error_msg_string[0],			init = "ELOG 0000 ELOG_SDI",					ev = init									
			VAR Error_msg_string[1],			init = "ELOG 0000 ELOG_BIT_PARAM",				ev = init					
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init =0,					ev = 5
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR Elog_param,						init = TRUE,				ev = init				
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init		
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 38	
	
    TEST 39
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-CheckElogParam-DB-LLR-001]
        COMMENT The function shall return if  Elog_param is equal to FALSE.
        COMMENT Equivalence Class 615
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckElogParam-DB-LLR-002]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENT-1 and do the following,
        COMMENT 1.	Call the function OctToStringTrim with parameters elog_label of Elog_label with index Exceedence log counter, size of label and label string.
        COMMENT 2.	If function CheckMinMax with parameters (elog_label of Elog_label with index Exceedence log counter, ONE and MAX_LABEL) returns FALSE 
        COMMENT AND elog_label of Elog_label with index Exceedence log counter is not equal to ZERO and Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT a)	Call the function BuildErrorMsg with parameters string element, label string, string ELOG_LABEL, Error_msg_string with array index Pdi_error_count.
        COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 619,616
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckElogParam-DB-LLR-005]
        COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (elog_sdi of Elog_label with index Exceedence
        COMMENT  log counter , ZERO and THREE) returns FALSE AND Pdi_error_count is less than  MAX_ERROR_MSG then do the following.
        COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string ELOG_SDI, Error_msg_string
        COMMENT  with array index Pdi_error_count.
        COMMENT 2. Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 619,620
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
			
			
			VAR Elog_label[0..4].elog_label,			init = 0,							ev = init			
			VAR Elog_label[0..4].elog_sdi,				init = 4,							ev = init			
			VAR Elog_label[0..4].elog_bit_label[0..17],				init = 0,							ev = init			
			VAR Elog_label[0..4].elog_bit_param[0..17],		init = { others => 'a' },				ev = init			
													
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 5,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR Elog_param,						init = TRUE,				ev = init				
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init		
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 39	
	
	
    TEST 40
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-CheckElogParam-DB-LLR-002]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENT-1 and do the following,
        COMMENT 1.	Call the function OctToStringTrim with parameters elog_label of Elog_label with index Exceedence log counter, size of label and label string.
        COMMENT 2.	If function CheckMinMax with parameters (elog_label of Elog_label with index Exceedence log counter, ONE and MAX_LABEL) returns FALSE 
        COMMENT AND elog_label of Elog_label with index Exceedence log counter is not equal to ZERO and Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT a)	Call the function BuildErrorMsg with parameters string element, label string, string ELOG_LABEL, Error_msg_string with array index Pdi_error_count.
        COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 619,617
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckElogParam-DB-LLR-005]
        COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (elog_sdi of Elog_label with index Exceedence
        COMMENT  log counter , ZERO and THREE) returns FALSE AND Pdi_error_count is less than  MAX_ERROR_MSG then do the following.
        COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string ELOG_SDI, Error_msg_string
        COMMENT  with array index Pdi_error_count.
        COMMENT 2. Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 619,621
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckElogParam-DB-LLR-003]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENTand do the following,
        COMMENT Loop from ZERO to MAX_ELOG_PARAM and do the following
        COMMENT 
        COMMENT If function CheckMinMax with parameters (elog_bit_label with index as index_i counter of Elog_label with
        COMMENT  index Exceedence log counter, ONE and MAX_LABEL) returns FALSE AND elog_bit_label with index as index_i 
        COMMENT  counter of Elog_label with index Exceedence log counter is not equal to ZERO AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ELOG_BIT_LABEL,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 618,622
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckElogParam-DB-LLR-004]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENT-1 and do the following,
        COMMENT Loop from ZERO to MAX_LEN_EXCE and do the following
        COMMENT Loop from ZERO to MAX_ELOG_PARAM_SIZE+2 and do the following
        COMMENT If function CheckString with parameters (address of elog_bit_param with index_i and 
        COMMENT index_j of Elog_label with index Exceedence log counter and MAX_ELOG_BIT_PARAM) returns
        COMMENT  FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string
        COMMENT  ELOG_BIT_PARAM, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 618,624
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
			
			
			VAR Elog_label[0..4].elog_label,			init = 1,							ev = init			
			VAR Elog_label[0..4].elog_sdi,				init = 3,							ev = init			
			VAR Elog_label[0..4].elog_bit_label[0..17],				init = 0,									ev = init			
			VAR Elog_label[0..4].elog_bit_param[0..17][0..5],		init = { others => '\0' },					ev = init			
															
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init =0,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = init				

			VAR Elog_param,						init = TRUE,				ev = init				
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init		
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = init
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 40	
	
    TEST 41
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckElogParam-DB-LLR-003]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENTand do the following,
        COMMENT Loop from ZERO to MAX_ELOG_PARAM and do the following
        COMMENT 
        COMMENT If function CheckMinMax with parameters (elog_bit_label with index as index_i counter of Elog_label with
        COMMENT  index Exceedence log counter, ONE and MAX_LABEL) returns FALSE AND elog_bit_label with index as index_i 
        COMMENT  counter of Elog_label with index Exceedence log counter is not equal to ZERO AND Pdi_error_count is less 
        COMMENT  than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ELOG_BIT_LABEL,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 619,622
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckElogParam-DB-LLR-004]
        COMMENT The function shall loop from ZERO to MAX_ELOG_EVENT-1 and do the following,
        COMMENT Loop from ZERO to MAX_LEN_EXCE and do the following
        COMMENT Loop from ZERO to MAX_ELOG_PARAM_SIZE+2 and do the following
        COMMENT If function CheckString with parameters (address of elog_bit_param with index_i and 
        COMMENT index_j of Elog_label with index Exceedence log counter and MAX_ELOG_BIT_PARAM) returns
        COMMENT  FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string
        COMMENT  ELOG_BIT_PARAM, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 619,624
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 0,							ev = init
			
			
			VAR Elog_label[0..4].elog_label,			init = 1,							ev = init			
			VAR Elog_label[0..4].elog_sdi,				init = 3,							ev = init			
			VAR Elog_label[0..4].elog_bit_label[0..17],				init = 1,									ev = init			
			VAR Elog_label[0..4].elog_bit_param[0..17][0..5],		init = { others => '\0' },					ev = init			
															
	
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init =0,					ev = 5
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR Elog_param,						init = TRUE,				ev = init				
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init		
			VAR Acdt_parameters,				init = FALSE,				ev = init
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 41	
	

	
	
    TEST 42
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
		COMMENT [hdudispfpdicheck-CheckAcdtParams-DB-LLR-001]
        COMMENT The function shall return if Acdt_parameters is equal to FALSE.
        COMMENT Equivalence Class 628
        COMMENT 
        COMMENT [[hdudispfpdicheck-CheckAcdtParams-DB-LLR-002]]
        COMMENT 1.	Function shall call OctToStringTrim with parameters label of Auto_cool_down_tmr, size of label and label string.
        COMMENT 2.	If function CheckMinMax with parameters (label of Auto_cool_down_tmr, ONE and MAX_LABEL) returns FALSE
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT a)	Call the function BuildErrorMsg with parameters string element, label string, string LABEL, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 626,630
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckAcdtParams-DB-LLR-003]
        COMMENT If function CheckMinMax with parameters (acdt_time of Auto_cool_down_tmr, ZERO and MAX_TIMER) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ACDT_TIME,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 626,632
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckAcdtParams-DB-LLR-004]
        COMMENT If function CheckMinMax with parameters (wog_label of Auto_cool_down_tmr, ONE and MAX_LABEL) returns FALSE
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string WOG_LABEL,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 626,634
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
	
	
			VAR Auto_cool_down_tmr.label,							init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_time,						init = MAX_TIMER+1,					ev = init
			VAR Auto_cool_down_tmr.wog_label,						init = 0,							ev = init
			VAR Auto_cool_down_tmr.wog_start_bit,					init = MAX_WOG_START_BIT+1,			ev = init
			VAR Auto_cool_down_tmr.acdt_on_trigger,					init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_trigger_value,			init = MAX_ACDT_TIMER+1,			ev = init
			VAR Auto_cool_down_tmr.acdt_on_cond,				init = 0,			ev = init
			VAR Auto_cool_down_tmr.acdt_on_cond_value,			init = 0,			ev = init
			VAR Auto_cool_down_tmr.acdt_off_condition,			init = 0,			ev = init
			VAR Auto_cool_down_tmr.acdt_off_condition_value,	init = 0,			ev = init
							
			VAR Error_msg_string[0],			init = "ACDT 0000 LABEL",						ev = init					
			VAR Error_msg_string[1],			init = "ACDT 0000 ACDT_TIME",					ev = init					
			VAR Error_msg_string[2],			init = "ACDT 0000 WOG_LABEL",					ev = init					
			VAR Error_msg_string[3],			init = "ACDT 0000 WOG_START_BIT",				ev = init					
			VAR Error_msg_string[4],			init = "ACDT 0000 ACDT_ON_TRIGGER",				ev = init					
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = 5
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR Acdt_parameters,						init = TRUE,				ev = init				
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init	
			VAR Elog_param,						init = FALSE,				ev = init				
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 42	
	
    TEST 43
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [[hdudispfpdicheck-CheckAcdtParams-DB-LLR-002]]
        COMMENT 1.	Function shall call OctToStringTrim with parameters label of Auto_cool_down_tmr, size of label and label string.
        COMMENT 2.	If function CheckMinMax with parameters (label of Auto_cool_down_tmr, ONE and MAX_LABEL) returns FALSE
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 627,630
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckAcdtParams-DB-LLR-003]
        COMMENT If function CheckMinMax with parameters (acdt_time of Auto_cool_down_tmr, ZERO and MAX_TIMER) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 627,632
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckAcdtParams-DB-LLR-004]
        COMMENT If function CheckMinMax with parameters (wog_label of Auto_cool_down_tmr, ONE and MAX_LABEL) returns FALSE
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 627,634
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
	
	
			VAR Auto_cool_down_tmr.label,							init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_time,						init = MAX_TIMER+1,					ev = init
			VAR Auto_cool_down_tmr.wog_label,						init = 0,							ev = init
			VAR Auto_cool_down_tmr.wog_start_bit,					init = MAX_WOG_START_BIT+1,			ev = init
			VAR Auto_cool_down_tmr.acdt_on_trigger,					init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_trigger_value,			init = MAX_ACDT_TIMER,			ev = init
			VAR Auto_cool_down_tmr.acdt_on_cond,				init = 1,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_cond_value,			init = MAX_ACDT_TIMER+1,			ev = init
			VAR Auto_cool_down_tmr.acdt_off_condition,			init = 1,							ev = init
			VAR Auto_cool_down_tmr.acdt_off_condition_value,	init = MAX_ACDT_TIMER+1,			ev = init
							
			VAR Error_msg_string[0],			init = "ACDT 0000 LABEL",						ev = init					
			VAR Error_msg_string[1],			init = "ACDT 0000 ACDT_TIME",					ev = init					
			VAR Error_msg_string[2],			init = "ACDT 0000 WOG_LABEL",					ev = init					
			VAR Error_msg_string[3],			init = "ACDT 0000 WOG_START_BIT",				ev = init					
			VAR Error_msg_string[4],			init = "ACDT 0000 ACDT_ON_TRIGGER",				ev = init					
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = 5
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR Acdt_parameters,						init = TRUE,				ev = init				
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init	
			VAR Elog_param,						init = FALSE,				ev = init				
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 43	
	
    TEST 44
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [[hdudispfpdicheck-CheckAcdtParams-DB-LLR-002]]
        COMMENT 1.	Function shall call OctToStringTrim with parameters label of Auto_cool_down_tmr, size of label and label string.
        COMMENT 2.	If function CheckMinMax with parameters (label of Auto_cool_down_tmr, ONE and MAX_LABEL) returns FALSE
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT a)	Call the function BuildErrorMsg with parameters string element, label string, string LABEL, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 626,631
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckAcdtParams-DB-LLR-003]
        COMMENT If function CheckMinMax with parameters (acdt_time of Auto_cool_down_tmr, ZERO and MAX_TIMER) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ACDT_TIME,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 626,633
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckAcdtParams-DB-LLR-004]
        COMMENT If function CheckMinMax with parameters (wog_label of Auto_cool_down_tmr, ONE and MAX_LABEL) returns FALSE
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string WOG_LABEL,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 626,635
        COMMENT 
        COMMENT [ hdudispfpdicheck-CheckAcdtParams-DB-LLR-005]
        COMMENT If function CheckMinMax with parameters (wog_start_bit of Auto_cool_down_tmr, ELEVEN and MAX_WOG_START_BIT) returns
        COMMENT  FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string WOG_START_BIT, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 626,636
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckAcdtParams-DB-LLR-006]
        COMMENT If function CheckMinMax with parameters (acdt_on_trigger of Auto_cool_down_tmr, ONE and SIX) returns FALSE 
        COMMENT OR function CheckFloatMinMax with parameters (acdt_on_trigger_value of Auto_cool_down_tmr, ZERO and MAX_ACDT_TIMER)
        COMMENT  returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ACDT_ON_TRIGGER,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 626,638
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
	
	
			VAR Auto_cool_down_tmr.label,							init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_time,						init = MAX_TIMER+1,					ev = init
			VAR Auto_cool_down_tmr.wog_label,						init = 0,							ev = init
			VAR Auto_cool_down_tmr.wog_start_bit,					init = MAX_WOG_START_BIT+1,			ev = init
			VAR Auto_cool_down_tmr.acdt_on_trigger,					init = 1,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_trigger_value,			init = MAX_ACDT_TIMER+1,			ev = init
			VAR Auto_cool_down_tmr.acdt_on_cond,				init = 1,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_cond_value,			init = MAX_ACDT_TIMER,				ev = init
			VAR Auto_cool_down_tmr.acdt_off_condition,			init = 1,							ev = init
			VAR Auto_cool_down_tmr.acdt_off_condition_value,	init = MAX_ACDT_TIMER,				ev = init
							
			VAR Error_msg_string[0],			init = "ACDT 0000 LABEL",						ev = init					
			VAR Error_msg_string[1],			init = "ACDT 0000 ACDT_TIME",					ev = init					
			VAR Error_msg_string[2],			init = "ACDT 0000 WOG_LABEL",					ev = init					
			VAR Error_msg_string[3],			init = "ACDT 0000 WOG_START_BIT",				ev = init					
			VAR Error_msg_string[4],			init = "ACDT 0000 ACDT_ON_TRIGGER",				ev = init					
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = 5
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR Acdt_parameters,						init = TRUE,				ev = init				
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init	
			VAR Elog_param,						init = FALSE,				ev = init				
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 44	
	
    TEST 45
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [ hdudispfpdicheck-CheckAcdtParams-DB-LLR-005]
        COMMENT If function CheckMinMax with parameters (wog_start_bit of Auto_cool_down_tmr, ELEVEN and MAX_WOG_START_BIT) returns
        COMMENT  FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string WOG_START_BIT, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 627,636
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckAcdtParams-DB-LLR-006]
        COMMENT If function CheckMinMax with parameters (acdt_on_trigger of Auto_cool_down_tmr, ONE and SIX) returns FALSE 
        COMMENT OR function CheckFloatMinMax with parameters (acdt_on_trigger_value of Auto_cool_down_tmr, ZERO and MAX_ACDT_TIMER)
        COMMENT  returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ACDT_ON_TRIGGER,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 627,638
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
	
	
			VAR Auto_cool_down_tmr.label,							init = 1,							ev = init
			VAR Auto_cool_down_tmr.acdt_time,						init = 0,							ev = init
			VAR Auto_cool_down_tmr.wog_label,						init = 1,							ev = init
			VAR Auto_cool_down_tmr.wog_start_bit,					init = 11,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_trigger,					init = 1,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_trigger_value,			init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_cond,				init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_cond_value,			init = MAX_ACDT_TIMER+1,			ev = init
			VAR Auto_cool_down_tmr.acdt_off_condition,			init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_off_condition_value,	init = MAX_ACDT_TIMER+1,			ev = init
							
			VAR Error_msg_string[0],			init = "ACDT 0001 ACDT_ON_COND",						ev = init					
			VAR Error_msg_string[1],			init = "ACDT 0001 ACDT_OFF_CONDITION",					ev = init					
			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = 2
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR Acdt_parameters,						init = TRUE,				ev = init				
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init	
			VAR Elog_param,						init = FALSE,				ev = init				
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 384
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 45
	
    TEST 46
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT
        COMMENT [ hdudispfpdicheck-CheckAcdtParams-DB-LLR-005]
        COMMENT If function CheckMinMax with parameters (wog_start_bit of Auto_cool_down_tmr, ELEVEN and MAX_WOG_START_BIT) returns
        COMMENT  FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string WOG_START_BIT, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 626,636
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckAcdtParams-DB-LLR-006]
        COMMENT If function CheckMinMax with parameters (acdt_on_trigger of Auto_cool_down_tmr, ONE and SIX) returns FALSE 
        COMMENT OR function CheckFloatMinMax with parameters (acdt_on_trigger_value of Auto_cool_down_tmr, ZERO and MAX_ACDT_TIMER)
        COMMENT  returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ACDT_ON_TRIGGER,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 626,638
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
	
	
			VAR Auto_cool_down_tmr.label,							init = 1,							ev = init
			VAR Auto_cool_down_tmr.acdt_time,						init = 0,							ev = init
			VAR Auto_cool_down_tmr.wog_label,						init = 1,							ev = init
			VAR Auto_cool_down_tmr.wog_start_bit,					init = 11,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_trigger,					init = 1,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_trigger_value,			init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_cond,				init = 1,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_cond_value,			init = MAX_ACDT_TIMER+1,			ev = init
			VAR Auto_cool_down_tmr.acdt_off_condition,			init = 1,							ev = init
			VAR Auto_cool_down_tmr.acdt_off_condition_value,	init = MAX_ACDT_TIMER+1,			ev = init
							
			VAR Error_msg_string[0],			init = "ACDT 0001 ACDT_ON_COND",						ev = init					
			VAR Error_msg_string[1],			init = "ACDT 0001 ACDT_OFF_CONDITION",					ev = init					
			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = 2
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR Acdt_parameters,						init = TRUE,				ev = init				
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init	
			VAR Elog_param,						init = FALSE,				ev = init				
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 384
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 46	
	
    TEST 47
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [ hdudispfpdicheck-CheckAcdtParams-DB-LLR-005]
        COMMENT If function CheckMinMax with parameters (wog_start_bit of Auto_cool_down_tmr, ELEVEN and MAX_WOG_START_BIT) returns
        COMMENT  FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 627,636
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckAcdtParams-DB-LLR-006]
        COMMENT If function CheckMinMax with parameters (acdt_on_trigger of Auto_cool_down_tmr, ONE and SIX) returns FALSE 
        COMMENT OR function CheckFloatMinMax with parameters (acdt_on_trigger_value of Auto_cool_down_tmr, ZERO and MAX_ACDT_TIMER)
        COMMENT  returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 627,638
        COMMENT 
        COMMENT 
        COMMENT 
        COMMENT 
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
	
	
			VAR Auto_cool_down_tmr.label,							init = 1,							ev = init
			VAR Auto_cool_down_tmr.acdt_time,						init = 0,							ev = init
			VAR Auto_cool_down_tmr.wog_label,						init = 1,							ev = init
			VAR Auto_cool_down_tmr.wog_start_bit,					init = 11,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_trigger,					init = 1,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_trigger_value,			init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_cond,				init = 1,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_cond_value,			init = MAX_ACDT_TIMER,				ev = init
			VAR Auto_cool_down_tmr.acdt_off_condition,			init = 1,							ev = init
			VAR Auto_cool_down_tmr.acdt_off_condition_value,	init = MAX_ACDT_TIMER,				ev = init
							
			VAR Error_msg_string[0],			init = "ACDT 0001 ACDT_ON_COND",						ev = init					
			VAR Error_msg_string[1],			init = "ACDT 0001 ACDT_OFF_CONDITION",					ev = init					
			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 0,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = init				

			VAR Acdt_parameters,						init = TRUE,				ev = init				
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init	
			VAR Elog_param,						init = FALSE,				ev = init				
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = init
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 47	
	
    TEST 48
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [ hdudispfpdicheck-CheckAcdtParams-DB-LLR-005]
        COMMENT If function CheckMinMax with parameters (wog_start_bit of Auto_cool_down_tmr, ELEVEN and MAX_WOG_START_BIT) returns
        COMMENT  FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string WOG_START_BIT, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 626,637
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckAcdtParams-DB-LLR-006]
        COMMENT If function CheckMinMax with parameters (acdt_on_trigger of Auto_cool_down_tmr, ONE and SIX) returns FALSE 
        COMMENT OR function CheckFloatMinMax with parameters (acdt_on_trigger_value of Auto_cool_down_tmr, ZERO and MAX_ACDT_TIMER)
        COMMENT  returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ACDT_ON_TRIGGER,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 626,639
        COMMENT 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckAcdtParams-DB-LLR-007]
        COMMENT If function CheckMinMax with parameters (acdt_on_cond of Auto_cool_down_tmr, ONE and SIX) returns FALSE OR
        COMMENT   function CheckFloatMinMax  with parameters (acdt_on_cond_value of Auto_cool_down_tmr, ZERO and MAX_ACDT_TIMER) 
        COMMENT   returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ACDT_ON_COND,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 626,640
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckAcdtParams-DB-LLR-008]
        COMMENT If function CheckMinMax with parameters (acdt_off_condition of Auto_cool_down_tmr, ONE and SIX) returns FALSE OR AND
        COMMENT  function CheckFloatMinMax  with parameters (acdt_off_condition_value of Auto_cool_down_tmr, ZERO and MAX_ACDT_TIMER)
        COMMENT  returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ACDT_OFF_CONDITION,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT       2.   Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 626,634
        COMMENT 
        COMMENT 
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
	
	
			VAR Auto_cool_down_tmr.label,							init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_time,						init = MAX_TIMER+1,					ev = init
			VAR Auto_cool_down_tmr.wog_label,						init = 0,							ev = init
			VAR Auto_cool_down_tmr.wog_start_bit,					init = MAX_WOG_START_BIT+1,			ev = init
			VAR Auto_cool_down_tmr.acdt_on_trigger,					init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_trigger_value,			init = MAX_ACDT_TIMER+1,			ev = init
			VAR Auto_cool_down_tmr.acdt_on_cond,				init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_cond_value,			init = MAX_ACDT_TIMER+1,			ev = init
			VAR Auto_cool_down_tmr.acdt_off_condition,			init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_off_condition_value,	init = MAX_ACDT_TIMER+1,			ev = init
											
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 5,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR Acdt_parameters,						init = TRUE,				ev = init				
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init	
			VAR Elog_param,						init = FALSE,				ev = init				
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 48	
	
    TEST 49
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-CheckAcdtParams-DB-LLR-007]
        COMMENT If function CheckMinMax with parameters (acdt_on_cond of Auto_cool_down_tmr, ONE and SIX) returns FALSE OR
        COMMENT   function CheckFloatMinMax  with parameters (acdt_on_cond_value of Auto_cool_down_tmr, ZERO and MAX_ACDT_TIMER) 
        COMMENT   returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ACDT_ON_COND,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 627,640
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckAcdtParams-DB-LLR-008]
        COMMENT If function CheckMinMax with parameters (acdt_off_condition of Auto_cool_down_tmr, ONE and SIX) returns FALSE OR AND
        COMMENT  function CheckFloatMinMax  with parameters (acdt_off_condition_value of Auto_cool_down_tmr, ZERO and MAX_ACDT_TIMER)
        COMMENT  returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ACDT_OFF_CONDITION,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT       2.   Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 627,634
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
	
	
			VAR Auto_cool_down_tmr.label,							init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_time,						init = MAX_TIMER+1,					ev = init
			VAR Auto_cool_down_tmr.wog_label,						init = 0,							ev = init
			VAR Auto_cool_down_tmr.wog_start_bit,					init = MAX_WOG_START_BIT+1,			ev = init
			VAR Auto_cool_down_tmr.acdt_on_trigger,					init = 1,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_trigger_value,			init = MAX_ACDT_TIMER+1,			ev = init
			VAR Auto_cool_down_tmr.acdt_on_cond,				init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_cond_value,			init = MAX_ACDT_TIMER+1,			ev = init
			VAR Auto_cool_down_tmr.acdt_off_condition,			init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_off_condition_value,	init = MAX_ACDT_TIMER+1,			ev = init
											
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 5,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR Acdt_parameters,						init = TRUE,				ev = init				
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init	
			VAR Elog_param,						init = FALSE,				ev = init				
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 49	
	
    TEST 50
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-CheckAcdtParams-DB-LLR-007]
        COMMENT If function CheckMinMax with parameters (acdt_on_cond of Auto_cool_down_tmr, ONE and SIX) returns FALSE OR
        COMMENT   function CheckFloatMinMax  with parameters (acdt_on_cond_value of Auto_cool_down_tmr, ZERO and MAX_ACDT_TIMER) 
        COMMENT   returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ACDT_ON_COND,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 627,641
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckAcdtParams-DB-LLR-008]
        COMMENT If function CheckMinMax with parameters (acdt_off_condition of Auto_cool_down_tmr, ONE and SIX) returns FALSE OR AND
        COMMENT  function CheckFloatMinMax  with parameters (acdt_off_condition_value of Auto_cool_down_tmr, ZERO and MAX_ACDT_TIMER)
        COMMENT  returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, label string, string ACDT_OFF_CONDITION,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT       2.   Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 627,635
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		


			VAR Config_data.config_name,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_version,				init = { others => '\0' },			ev = init			
			VAR Config_data.config_engine,				init = { others => '\0' },			ev = init			
			VAR Config_data.du_resolution.u16_x,		init = 0,							ev = init
			VAR Config_data.du_resolution.u16_y,		init = 0,							ev = init			
			VAR Config_data.channels.u16_x,				init = 1,							ev = init
			VAR Config_data.channels.u16_y,				init = 1,							ev = init			
			VAR Config_data.eng_sdi,					init = 1,							ev = init
	
	
			VAR Auto_cool_down_tmr.label,							init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_time,						init = MAX_TIMER+1,					ev = init
			VAR Auto_cool_down_tmr.wog_label,						init = 0,							ev = init
			VAR Auto_cool_down_tmr.wog_start_bit,					init = MAX_WOG_START_BIT+1,			ev = init
			VAR Auto_cool_down_tmr.acdt_on_trigger,					init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_trigger_value,			init = MAX_ACDT_TIMER,				ev = init
			VAR Auto_cool_down_tmr.acdt_on_cond,				init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_on_cond_value,			init = MAX_ACDT_TIMER+1,			ev = init
			VAR Auto_cool_down_tmr.acdt_off_condition,			init = 0,							ev = init
			VAR Auto_cool_down_tmr.acdt_off_condition_value,	init = MAX_ACDT_TIMER+1,			ev = init
											
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = FALSE,				ev = TRUE				
			--VAR Index_Value,					init = 1,					ev = init			
			VAR Pdi_error_count,				init = 5,					ev = init
			VAR Global_parameter_error,			init = FALSE,				ev = TRUE				

			VAR Acdt_parameters,						init = TRUE,				ev = init				
					
			VAR Cas_word_cnt,					init = 0,					ev = init				
			VAR A429_settings_cnt,				init = 0,					ev = init			
			VAR Elog_trig_bool,					init = FALSE,				ev = init	
			VAR Elog_param,						init = FALSE,				ev = init				
			VAR Pg_cnt,							init = 0,							ev = init	
			
			VAR U16_message_words[1],			init = 0,							ev = 3968
			

        
        COMMENT Stub Calls:
        SIMUL   
		
			--None
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 50	
	
	
	
    TEST 51
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-001]
        COMMENT 1.	Call the function IntToStringTrim with parameters page_num of Page_settings, size of page and page string.
		COMMENT 2.	Call the function CheckMinMax with parameters (page_num of Page_settings, ZERO and MAX_PAGE_NUM) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT a)	Call the function BuildErrorMsg with parameters string element, page string, string PAGE_NUM, Error_msg_string with array index Pdi_error_count.
		COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 31,29
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-002]
        COMMENT The function shall do the following
		COMMENT If function CheckString with parameters (page_name of Page_settings and MAX_PAGE_NAME) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string PAGE_NAME, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 31,33
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-003]
        COMMENT The function shall do the following
		COMMENT If function CheckAxisMinMax with parameters (page_menu of Page_settings, ZERO,MAX_PAGE_MENU and MAX_PAGE_MENU_10INCH) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string PAGE_MENU, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class  31,35
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-004]
        COMMENT The function shall do the following
		COMMENT 1.	Call the function FindColorRange with parameters menu_color of Page_settings and returned value is assigned to color value.
		COMMENT 2.	If function CheckColor with parameter color value returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT a)	Call the function BuildErrorMsg with parameters string element, page string, string MENU_COLOR, Error_msg_string with array index Pdi_error_count.
		COMMENT b)	menu_color of Page_settings to BLUE
		COMMENT c)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 31,37
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-005]
        COMMENT The function shall do the following
		COMMENT 1.	Call the function FindColorRange with parameters action_color of Page_settings and returned value is assigned to color value.
		COMMENT 2.	If function CheckColor with parameter color value returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT a)	Call the function BuildErrorMsg with parameters string element, page string, string ACTION_COLOR, Error_msg_string with array index Pdi_error_count.
		COMMENT b)	action_color of Page_settings is set to DARK_BLUE
		COMMENT c)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 31,37
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-006]
        COMMENT 1.	Call the function FindColorRange with parameters menu_txt_color of Page_settings and returned value is assigned to color value.
		COMMENT 2.	If function CheckColor with parameter color value returns FALSE AND Pdi_error_count is greater than MAX_ERROR_MSG 
        COMMENT Equivalence Class 32,37
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-008]
        COMMENT If function CheckFont with parameters (timer_font of Page_settings, E_TINY_FONT and E_LARGE_FONT) returns FALSE AND timer_font of Page_settings not equal to ZERO
		COMMENT AND Pdi_error_count is greater than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 32
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 20,							ev = init			
			VAR Page_settings.page_name,				init = { others => 'A' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU+1,				ev = init			
			VAR Page_settings.menu_color,				init = COLOR_MAX,					ev = 15			
			VAR Page_settings.action_color,				init = COLOR_MAX,					ev = 10			
			VAR Page_settings.menu_txt_color,			init = BLACK,						ev = init			
			VAR Page_settings.timer_font,				init = E_TINY_FONT,					ev = init			
			VAR Page_settings.timer_axis.u16_x,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.timer_axis.u16_y,				init = PANEL_HEIGHT,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.acdt_axis.u16_y,				init = PANEL_HEIGHT,					ev = init			

			VAR Error_msg_string[0],			init = "PG 0020 PAGE_NUM",					ev = init											
			VAR Error_msg_string[1],			init = "PG 0020 PAGE_NAME",					ev = init											
			VAR Error_msg_string[2],			init = "PG 0020 PAGE_MENU",					ev = init											
			VAR Error_msg_string[3],			init = "PG 0020 MENU_COLOR",					ev = init											
			VAR Error_msg_string[4],			init = "PG 0020 ACTION_COLOR",					ev = init											
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR E_orientation,					init = 0,						ev = init	
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init
						
			
			VAR PTU_pu8_string,		init = "PG",     ev =init
		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(350)2
			STUB FontsGetFontHeight(350)2		
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 51	
	
    TEST 52
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-001]
        COMMENT 1.	Call the function IntToStringTrim with parameters page_num of Page_settings, size of page and page string.
		COMMENT 2.	Call the function CheckMinMax with parameters (page_num of Page_settings, ZERO and MAX_PAGE_NUM) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT a)	Call the function BuildErrorMsg with parameters string element, page string, string PAGE_NUM, Error_msg_string with array index Pdi_error_count.
		COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 32 ,30
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-002]
        COMMENT The function shall do the following
		COMMENT If function CheckString with parameters (page_name of Page_settings and MAX_PAGE_NAME) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string PAGE_NAME, and Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 32 ,34
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-003]
        COMMENT The function shall do the following
		COMMENT If function CheckAxisMinMax with parameters (page_menu of Page_settings, ZERO,MAX_PAGE_MENU and MAX_PAGE_MENU_10INCH) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string PAGE_MENU, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class  32 ,36
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-004]
        COMMENT The function shall do the following
		COMMENT 1.	Call the function FindColorRange with parameters menu_color of Page_settings and returned value is assigned to color value.
		COMMENT 2.	If function CheckColor with parameter color value returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT a)	Call the function BuildErrorMsg with parameters string element, page string, string MENU_COLOR, Error_msg_string with array index Pdi_error_count.
		COMMENT b)	menu_color of Page_settings to BLUE
		COMMENT c)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 32 ,38
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-005]
        COMMENT The function shall do the following
		COMMENT 1.	Call the function FindColorRange with parameters action_color of Page_settings and returned value is assigned to color value.
		COMMENT 2.	If function CheckColor with parameter color value returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT a)	Call the function BuildErrorMsg with parameters string element, page string, string ACTION_COLOR, Error_msg_string with array index Pdi_error_count.
		COMMENT b)	action_color of Page_settings is set to DARK_BLUE
		COMMENT c)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 32 ,39
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 20,							ev = init			
			VAR Page_settings.page_name,				init = { others => 'A' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU+1,				ev = init			
			VAR Page_settings.menu_color,				init = COLOR_MAX,					ev = init			
			VAR Page_settings.action_color,				init = COLOR_MAX,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,						ev = init			
			VAR Page_settings.timer_font,				init = E_TINY_FONT,					ev = init			
			VAR Page_settings.timer_axis.u16_x,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.timer_axis.u16_y,				init = PANEL_HEIGHT,					ev = init			
			--VAR Page_settings.timer_font,					init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.acdt_axis.u16_y,				init = PANEL_HEIGHT,					ev = init			
								
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init			
			
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init
						
		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(350)2
			STUB FontsGetFontHeight(350)2			
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 52		
	
	
    TEST 53
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-006]
        COMMENT 1.	Call the function FindColorRange with parameters menu_txt_color of Page_settings and returned value is assigned to color value.
		COMMENT 2.	If function CheckColor with parameter color value returns FALSE AND Pdi_error_count is greater than MAX_ERROR_MSG 
        COMMENT Equivalence Class 31,37
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-008]
        COMMENT If function CheckFont with parameters (timer_font of Page_settings, E_TINY_FONT and E_LARGE_FONT) returns FALSE AND timer_font of Page_settings not equal to ZERO
		COMMENT AND Pdi_error_count is greater than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 31,41
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-007]
        COMMENT The function shall do the following when Timer_flag is equal to TRUE And function CheckAxisMinMax with parameters u16_x of timer_axis of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR function CheckAxisMinMax with parameters u16_y of timer_axis of Page_settings, ZERO ,PANEL_WIDTH and PANEL_HEIGHT returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT      3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 31,42,43
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 31,42,43
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-009]
        COMMENT The function shall do the following
		COMMENT when Acdt_flag is equal to TRUE and function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns FALSE  OR CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string ACDT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Acdt_axis_error is set to One left shifted with Page_num bitwise or with Acdt_axis_error
        COMMENT Equivalence Class 31,47,49
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckFont-DB-LLR-001]
        COMMENT The function shall return TRUE if font is E_TINY_FONT,E_SMALL_FONT,E_NORMAL_FONT,E_LARGE_FONT and E_BEZEL_FONT.
        COMMENT Equivalence Class 642
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = COLOR_MAX,				ev = init			
			VAR Page_settings.timer_font,				init = COLOR_MAX,				ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,		ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init			

			VAR Error_msg_string[0],			init = "PG 0000 MENU_TXT_COLOR",					ev = init											
			VAR Error_msg_string[1],			init = "PG 0000 TIMER_FONT",					ev = init			

			VAR Acdt_axis_error,			init = FALSE,						ev = TRUE																					
			VAR Timer_axis_error,			init = FALSE,						ev = TRUE																		
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init						
			
		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(339)2
			STUB FontsGetFontHeight(339)2	
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 53	
	
    TEST 54
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-006]
        COMMENT 1.	Call the function FindColorRange with parameters menu_txt_color of Page_settings and returned value is assigned to color value.
		COMMENT 2.	If function CheckColor with parameter color value returns FALSE AND Pdi_error_count is greater than MAX_ERROR_MSG 
        COMMENT Equivalence Class 32,37
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-008]
        COMMENT If function CheckFont with parameters (timer_font of Page_settings, E_TINY_FONT and E_LARGE_FONT) returns FALSE AND timer_font of Page_settings not equal to ZERO
		COMMENT AND Pdi_error_count is greater than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 31,41
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-007]
        COMMENT The function shall do the following when Timer_flag is equal to TRUE And function CheckAxisMinMax with parameters u16_x of timer_axis of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR function CheckAxisMinMax with parameters u16_y of timer_axis of Page_settings, ZERO ,PANEL_WIDTH and PANEL_HEIGHT returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT      3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 32,42,43
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 32,42,43
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-009]
        COMMENT The function shall do the following
		COMMENT when Acdt_flag is equal to TRUE and function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns FALSE  OR CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string ACDT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Acdt_axis_error is set to One left shifted with Page_num bitwise or with Acdt_axis_error
        COMMENT Equivalence Class 32,47,49
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = COLOR_MAX,				ev = init			
			VAR Page_settings.timer_font,				init = COLOR_MAX,				ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,		ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init			
																					
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init						
			
		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(339)2
			STUB FontsGetFontHeight(339)2		
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 54		
	
	
    TEST 55
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 31,42,45
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-009]
        COMMENT The function shall do the following
		COMMENT when Acdt_flag is equal to TRUE and function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns FALSE  OR CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string ACDT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Acdt_axis_error is set to One left shifted with Page_num bitwise or with Acdt_axis_error
        COMMENT Equivalence Class 31,47,51
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckFont-DB-LLR-002]
        COMMENT The function shall return FALSE if font is other than E_TINY_FONT,E_SMALL_FONT,E_NORMAL_FONT,E_LARGE_FONT and E_BEZEL_FONT.
        COMMENT Equivalence Class 643 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,				ev = init			
			VAR Page_settings.timer_font,				init = BLACK,				ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,		ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init			

			VAR Error_msg_string[0],			init = "PG 0000 PAGE_MENUS",					ev = init											
			VAR Error_msg_string[1],			init = "PG 0000 TIMER_AXIS",					ev = init																					
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init

			VAR Acdt_axis_error,			init = FALSE,						ev = TRUE																					
			VAR Timer_axis_error,			init = FALSE,						ev = TRUE			
			

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)2
			STUB FontsGetFontHeight(0)2	
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 55	
	
    TEST 56
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 32,42,45
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-009]
        COMMENT The function shall do the following
		COMMENT when Acdt_flag is equal to TRUE and function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns FALSE  OR CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string ACDT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Acdt_axis_error is set to One left shifted with Page_num bitwise or with Acdt_axis_error
        COMMENT Equivalence Class 32,47,51
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,				ev = init			
			VAR Page_settings.timer_font,				init = BLACK,				ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,		ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,					ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init			
																				
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
						

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)2
			STUB FontsGetFontHeight(0)2		
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 56		
	
	
    TEST 57
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT CheckPageSettings
		COMMENT
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 31,42,43
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-009]
        COMMENT The function shall do the following
		COMMENT when Acdt_flag is equal to TRUE and function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns FALSE  OR CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string ACDT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Acdt_axis_error is set to One left shifted with Page_num bitwise or with Acdt_axis_error
        COMMENT Equivalence Class 31,47,50
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = PANEL_WIDTH+1,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = PANEL_WIDTH+1,					ev = init			

			VAR Error_msg_string[0],			init = "PG 0000 PAGE_MENUS",					ev = init											
			VAR Error_msg_string[1],			init = "PG 0000 TIMER_AXIS",					ev = init																					
			VAR Error_msg_string[2],			init = "PG 0000 TIMER_AXIS",						ev = init																					
			VAR Error_msg_string[3],			init = "PG 0000 ACDT_AXIS",						ev = init		

			VAR Acdt_axis_error,			init = FALSE,						ev = TRUE																					
			VAR Timer_axis_error,			init = FALSE,						ev = TRUE																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
						
			

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 57	
	
	
    TEST 58
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 32,42,43
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-009]
        COMMENT The function shall do the following
		COMMENT when Acdt_flag is equal to TRUE and function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns FALSE  OR CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string ACDT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Acdt_axis_error is set to One left shifted with Page_num bitwise or with Acdt_axis_error
        COMMENT Equivalence Class 32,47,50
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = PANEL_WIDTH+1,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = PANEL_WIDTH+1,					ev = init			

			VAR Error_msg_string[0],			init = "PG 0000 TIMER_AXIS",					ev = init											
			VAR Error_msg_string[1],			init = "PG 0000 TIMER_AXIS",					ev = init																					
			VAR Error_msg_string[2],			init = "PG 0000 ACDT_AXIS",						ev = init																					
			VAR Error_msg_string[3],			init = "PG 0000 ACDT_AXIS",						ev = init																					
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init		

			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init			
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
						
			

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 58		
	
    TEST 59
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-001]
        COMMENT 1.	Call the function IntToStringTrim with parameters page_num of Page_settings, size of page and page string.
		COMMENT 2.	Call the function CheckMinMax with parameters (page_num of Page_settings, ZERO and MAX_PAGE_NUM) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT a)	Call the function BuildErrorMsg with parameters string element, page string, string PAGE_NUM, Error_msg_string with array index Pdi_error_count.
		COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 31 ,30
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 32,42,43
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,								ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,								ev = init			

			VAR Error_msg_string[0],			init = "PG 0000 PAGE_MENUS",					ev = init																															
			VAR Error_msg_string[1],			init = "PG 0000 TIMER_AXIS",						ev = init		

			VAR Acdt_axis_error,			init = FALSE,						ev = TRUE																					
			VAR Timer_axis_error,			init = FALSE,						ev = TRUE																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
						
			

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 59		
	
    TEST 60
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT CheckPageSettings
		COMMENT
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-001]
        COMMENT 1.	Call the function IntToStringTrim with parameters page_num of Page_settings, size of page and page string.
		COMMENT 2.	Call the function CheckMinMax with parameters (page_num of Page_settings, ZERO and MAX_PAGE_NUM) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT a)	Call the function BuildErrorMsg with parameters string element, page string, string PAGE_NUM, Error_msg_string with array index Pdi_error_count.
		COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 32 ,30
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 32,42,44
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,								ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,								ev = init			
																					
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
						
			

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 60		
	
    TEST 61
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT CheckPageSettings
		COMMENT
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-001]
        COMMENT 1.	Call the function IntToStringTrim with parameters page_num of Page_settings, size of page and page string.
		COMMENT 2.	Call the function CheckMinMax with parameters (page_num of Page_settings, ZERO and MAX_PAGE_NUM) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT a)	Call the function BuildErrorMsg with parameters string element, page string, string PAGE_NUM, Error_msg_string with array index Pdi_error_count.
		COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 31 ,30
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 31,42,45
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = PANEL_WIDTH+1,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = PANEL_WIDTH+1,					ev = init			

			VAR Error_msg_string[0],			init = "PG 0000 PAGE_MENUS",					ev = init																														
			VAR Error_msg_string[1],			init = "PG 0000 TIMER_AXIS",						ev = init	

			VAR Acdt_axis_error,			init = FALSE,						ev = TRUE																					
			VAR Timer_axis_error,			init = FALSE,						ev = TRUE																				
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
						

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 61	

    TEST 62
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-001]
        COMMENT 1.	Call the function IntToStringTrim with parameters page_num of Page_settings, size of page and page string.
		COMMENT 2.	Call the function CheckMinMax with parameters (page_num of Page_settings, ZERO and MAX_PAGE_NUM) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT a)	Call the function BuildErrorMsg with parameters string element, page string, string PAGE_NUM, Error_msg_string with array index Pdi_error_count.
		COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 32 ,30
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 32,42,45
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = PANEL_WIDTH+1,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = PANEL_WIDTH+1,					ev = init			
																					
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
						
			

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 62		
	
	
	TEST 63
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT CheckPageSettings
		COMMENT
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-001]
        COMMENT 1.	Call the function IntToStringTrim with parameters page_num of Page_settings, size of page and page string.
		COMMENT 2.	Call the function CheckMinMax with parameters (page_num of Page_settings, ZERO and MAX_PAGE_NUM) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT a)	Call the function BuildErrorMsg with parameters string element, page string, string PAGE_NUM, Error_msg_string with array index Pdi_error_count.
		COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 32 ,30
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 32,42,45
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = PANEL_WIDTH+1,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = PANEL_WIDTH+1,					ev = init			
																				
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
						
			

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 63	
	
    TEST 64
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-007]
        COMMENT The function shall do the following when Timer_flag is equal to TRUE And function CheckAxisMinMax with parameters u16_x of timer_axis of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR function CheckAxisMinMax with parameters u16_y of timer_axis of Page_settings, ZERO ,PANEL_WIDTH and PANEL_HEIGHT returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT      3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 31,42,43
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 31,42,43
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = PANEL_WIDTH+1,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = PANEL_WIDTH,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = PANEL_WIDTH+1,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = PANEL_WIDTH,					ev = init			

			VAR Error_msg_string[0],			init = "PG 0000 TIMER_AXIS",					ev = init																														
			VAR Error_msg_string[1],			init = "PG 0000 TIMER_AXIS",						ev = init		

			VAR Acdt_axis_error,			init = FALSE,						ev = TRUE																					
			VAR Timer_axis_error,			init = FALSE,						ev = TRUE																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
						
			

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1				
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 64	
	
	
    TEST 65
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-007]
        COMMENT The function shall do the following when Timer_flag is equal to TRUE And function CheckAxisMinMax with parameters u16_x of timer_axis of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR function CheckAxisMinMax with parameters u16_y of timer_axis of Page_settings, ZERO ,PANEL_WIDTH and PANEL_HEIGHT returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT      3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 32,42,43
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 32,42,43
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = PANEL_WIDTH+1,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = PANEL_WIDTH,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = PANEL_WIDTH+1,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = PANEL_WIDTH,					ev = init			

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
						


			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1				
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 65	
	
    TEST 66
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-007]
        COMMENT The function shall do the following when Timer_flag is equal to TRUE And function CheckAxisMinMax with parameters u16_x of timer_axis of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR function CheckAxisMinMax with parameters u16_y of timer_axis of Page_settings, ZERO ,PANEL_WIDTH and PANEL_HEIGHT returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT      3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 31,41,43
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 31,42,43
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-009]
        COMMENT The function shall do the following
		COMMENT when Acdt_flag is equal to TRUE and function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns FALSE  OR CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string ACDT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Acdt_axis_error is set to One left shifted with Page_num bitwise or with Acdt_axis_error
        COMMENT Equivalence Class 31,47,49
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = 1,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 1,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 1,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 1,					ev = init			

			VAR Error_msg_string[0],			init = "PG 0000 TIMER_AXIS",					ev = init																														
			VAR Error_msg_string[1],			init = "PG 0000 ACDT_AXIS",						ev = init		

			VAR Acdt_axis_error,			init = FALSE,						ev = TRUE																					
			VAR Timer_axis_error,			init = FALSE,						ev = TRUE																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
						


			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)4
			STUB FontsGetFontHeight(0)1				
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 66	
	
	
    TEST 67
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT CheckPageSettings
		COMMENT
        COMMENT 
        COMMENT 
        COMMENT hdudispfpdicheck-PdiDataCheck-DB-LLR-001
        COMMENT if(T)
        COMMENT hdudispfpdicheck-CheckElogParam-DB-LLR-001(F)
        COMMENT 
        COMMENT hdudispfpdicheck-CheckElogParam-DB-LLR-002 (TTF)
        COMMENT hdudispfpdicheck-CheckElogParam-DB-LLR-005 (TTF)
        COMMENT hdudispfpdicheck-CheckElogParam-DB-LLR-003 (TTF)
        COMMENT hdudispfpdicheck-CheckElogParam-DB-LLR-004 (TF)
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = 1,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 1,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 1,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 1,					ev = init			
																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
						
			

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)4
			STUB FontsGetFontHeight(0)1
							
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 67	
	
	
    TEST 68
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-007]
        COMMENT The function shall do the following when Timer_flag is equal to TRUE And function CheckAxisMinMax with parameters u16_x of timer_axis of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR function CheckAxisMinMax with parameters u16_y of timer_axis of Page_settings, ZERO ,PANEL_WIDTH and PANEL_HEIGHT returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT      3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 31,41,43
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 31,42,43
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-009]
        COMMENT The function shall do the following
		COMMENT when Acdt_flag is equal to TRUE and function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns FALSE  OR CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string ACDT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Acdt_axis_error is set to One left shifted with Page_num bitwise or with Acdt_axis_error
        COMMENT Equivalence Class 31,47,51
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = 1,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = PANEL_HEIGHT+1,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 1,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = PANEL_HEIGHT+1,					ev = init			

			VAR Error_msg_string[0],			init = "PG 0000 TIMER_AXIS",					ev = init																														
			VAR Error_msg_string[1],			init = "PG 0000 TIMER_AXIS",						ev = init	

			VAR Acdt_axis_error,			init = FALSE,						ev = TRUE																					
			VAR Timer_axis_error,			init = FALSE,						ev = TRUE																				
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
						
			
			--VAR PTU_timer,			init = "0:00:00",							ev = init
			--VAR PTU_acdt_timer,		init = "00:00",								ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1				
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 68	
	
	
    TEST 69
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-007]
        COMMENT The function shall do the following when Timer_flag is equal to TRUE And function CheckAxisMinMax with parameters u16_x of timer_axis of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR function CheckAxisMinMax with parameters u16_y of timer_axis of Page_settings, ZERO ,PANEL_WIDTH and PANEL_HEIGHT returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT      3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 31,41,43
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 31,42,43
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-009]
        COMMENT The function shall do the following
		COMMENT when Acdt_flag is equal to TRUE and function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns FALSE  OR CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string ACDT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Acdt_axis_error is set to One left shifted with Page_num bitwise or with Acdt_axis_error
        COMMENT Equivalence Class 31,47,51
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = 1,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = PANEL_HEIGHT+1,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 1,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = PANEL_HEIGHT+1,					ev = init			
																					
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
						
			
			--VAR PTU_timer,			init = "0:00:00",							ev = init
			--VAR PTU_acdt_timer,		init = "00:00",								ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 69	
	
	
    TEST 70
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 31,42,45
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-009]
        COMMENT The function shall do the following
		COMMENT when Acdt_flag is equal to TRUE and function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns FALSE  OR CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string ACDT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Acdt_axis_error is set to One left shifted with Page_num bitwise or with Acdt_axis_error
        COMMENT Equivalence Class 31,47,51
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = 1,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 1,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 1,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 1,					ev = init			

			VAR Error_msg_string[0],			init = "PG 0000 TIMER_AXIS",					ev = init																														
			VAR Error_msg_string[1],			init = "PG 0000 ACDT_AXIS",						ev = init			
			
			VAR Acdt_axis_error,			init = FALSE,						ev = TRUE																					
			VAR Timer_axis_error,			init = FALSE,						ev = TRUE																					
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
						
			
			--VAR PTU_timer,			init = "0:00:00",							ev = init
			--VAR PTU_acdt_timer,		init = "00:00",								ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)0
			STUB FontsGetFontHeight(0)4
				
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 70
	
    TEST 71
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 32,42,43
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-009]
        COMMENT The function shall do the following
		COMMENT when Acdt_flag is equal to TRUE and function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns FALSE  OR CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string ACDT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Acdt_axis_error is set to One left shifted with Page_num bitwise or with Acdt_axis_error
        COMMENT Equivalence Class 32,47,51
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = 1,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 1,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 1,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 1,					ev = init			
																				
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
						
			
			--VAR PTU_timer,			init = "0:00:00",							ev = init
			--VAR PTU_acdt_timer,		init = "00:00",								ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)4
				
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 71
	
	
    TEST 72
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 31,42,45
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-009]
        COMMENT The function shall do the following
		COMMENT when Acdt_flag is equal to TRUE and function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns FALSE  OR CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string ACDT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Acdt_axis_error is set to One left shifted with Page_num bitwise or with Acdt_axis_error
        COMMENT Equivalence Class 31,47,51
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init			
																				
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
						
			VAR Acdt_axis_error,			init = FALSE,						ev = TRUE																					
			VAR Timer_axis_error,			init = FALSE,						ev = TRUE
						
			--VAR PTU_timer,			init = "0:00:00",							ev = init
			--VAR PTU_acdt_timer,		init = "00:00",								ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 72
	
	
    TEST 73
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT  
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-009]
        COMMENT The function shall do the following
		COMMENT when Acdt_flag is equal to TRUE and function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns FALSE  OR CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string ACDT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Acdt_axis_error is set to One left shifted with Page_num bitwise or with Acdt_axis_error
        COMMENT Equivalence Class 31,47,49
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = 1,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 1,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init			
																				
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
			VAR Acdt_axis_error,			init = FALSE,						ev = TRUE							
			
			--VAR PTU_timer,			init = "0:00:00",							ev = init
			--VAR PTU_acdt_timer,		init = "00:00",								ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
				
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 73	
	
    TEST 74
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-009]
        COMMENT The function shall do the following
		COMMENT when Acdt_flag is equal to TRUE and function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns FALSE  OR CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string ACDT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Acdt_axis_error is set to One left shifted with Page_num bitwise or with Acdt_axis_error
        COMMENT Equivalence Class 31,47,51
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = 1,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 1,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 1,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 1,					ev = init																								
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
			VAR Acdt_axis_error,			init = FALSE,						ev = TRUE							
			
			--VAR PTU_timer,			init = "0:00:00",							ev = init
			--VAR PTU_acdt_timer,		init = "00:00",								ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)0
			STUB FontsGetFontHeight(0)0				
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 74
	
    TEST 75
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-009]
        COMMENT The function shall do the following
		COMMENT when Acdt_flag is equal to TRUE and function CheckAxisMinMax with parameters u16_x of acdt_axis of Page_settings, ACDT_X_AXIS,PANEL_HEIGHT minus ACDT_X_AXIS and PANEL_WIDTH minus ACDT_X_AXIS returns FALSE  OR CheckAxisMinMax with parameters u16_y of acdt_axis of Page_settings,ACDT_Y_AXIS,PANEL_WIDTH minus ACDT_Y_AXIS and PANEL_HEIGHT minus ACDT_Y_AXISreturns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string ACDT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Acdt_axis_error is set to One left shifted with Page_num bitwise or with Acdt_axis_error
        COMMENT Equivalence Class 31,47,49
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 30,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 30,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = 1,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 1,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 1,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 1,					ev = init																								
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init
			VAR Acdt_axis_error,			init = FALSE,						ev = TRUE							
			
			--VAR PTU_timer,			init = "0:00:00",							ev = init
			--VAR PTU_acdt_timer,		init = "00:00",								ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)0
			STUB FontsGetFontHeight(0)0			
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 75		
		
	
	
    TEST 76
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-001]
        COMMENT The function shall do the following
		COMMENT - Set Exceed_error to FALSE.	
		COMMENT -    Loop from ZERO to Exceed_cnt -1 and do the following,	 
		COMMENT 1.	Set the temporary exceedance bit to (exceed_bit of Exceed_data with index exceed counter) plus TEN.
		COMMENT 2.	Call the function IntToStringTrim with parameters temporary Exceedance bit, Bit size and Bit string.
		COMMENT 3.	If function CheckMinMax with parameters (temporary Exceedance bit, MIN_START_BIT and MAX_START_BIT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT a)	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_BIT, Error_msg_string with array index Pdi_error_count.
		COMMENT b)	Increment Pdi_error_count by ONE.
		COMMENT c)	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
		COMMENT Equivalence Class 53,55
        COMMENT
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-002]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	 
		COMMENT If function CheckMinMax with parameters (label of Exceed_data with index exceed counter, ONE and MAX_LABEL) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string LABEL, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT .	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 53,57
        COMMENT
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-005]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	 
		COMMENT If eng_sdi of Config_data is true and function CheckMinMax with parameters (sdi of Exceed_data with index as loop counter, ZERO and THREE) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "SDI", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 53,59
        COMMENT
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-004]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	 
		COMMENT If function CheckMinMax with parameters (exceed_font of Exceed_data with index exceed counter, E_TINY_FONT and E_LARGE_FONT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 53,61
        COMMENT
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-003]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - If function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 53,63
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init			
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
						
			VAR Config_data.eng_sdi,			init = TRUE,					ev = init			
			
			VAR Exceed_data[0].exceed_bit,			init = 0,							ev = init			
			VAR Exceed_data[0].label,				init = 0,							ev = init			
			VAR Exceed_data[0].sdi,					init = 4,							ev = init			
			VAR Exceed_data[0].exceed_font,			init = E_NO_FONT,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_x,			init = PANEL_WIDTH+1,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_y,			init = PANEL_HEIGHT+1,					ev = init			

			VAR Error_msg_string[0],			init = "EXCEED 10 EXCEED_BIT",					ev = init																																																		
			VAR Error_msg_string[1],			init = "EXCEED 10 LABEL",						ev = init																																																		
			VAR Error_msg_string[2],			init = "EXCEED 10 SDI",							ev = init																																																		
			VAR Error_msg_string[3],			init = "EXCEED 10 EXCEED_FONT",					ev = init																																																		
			VAR Error_msg_string[4],			init = "EXCEED 10 EXCEED_AXIS",					ev = init																																																		
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE					

			VAR Exceed_error,		init = FALSE,				ev = TRUE				
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
						

			VAR Exceed_cnt,		init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1				
			
			STUB FontsGetStringWidth(0)0
			STUB FontsGetFontHeight(0)0
	
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 76	
	
    TEST 77
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-001]
        COMMENT The function shall do the following
		COMMENT - Set Exceed_error to FALSE.	
		COMMENT -    Loop from ZERO to Exceed_cnt -1 and do the following,	 
		COMMENT 1.	Set the temporary exceedance bit to (exceed_bit of Exceed_data with index exceed counter) plus TEN.
		COMMENT 2.	Call the function IntToStringTrim with parameters temporary Exceedance bit, Bit size and Bit string.
		COMMENT 3.	If function CheckMinMax with parameters (temporary Exceedance bit, MIN_START_BIT and MAX_START_BIT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT a)	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_BIT, Error_msg_string with array index Pdi_error_count.
		COMMENT b)	Increment Pdi_error_count by ONE.
		COMMENT c)	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
		COMMENT Equivalence Class 54,55
        COMMENT
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-002]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	 
		COMMENT If function CheckMinMax with parameters (label of Exceed_data with index exceed counter, ONE and MAX_LABEL) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string LABEL, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT .	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 54,57
        COMMENT
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-005]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	 
		COMMENT If eng_sdi of Config_data is true and function CheckMinMax with parameters (sdi of Exceed_data with index as loop counter, ZERO and THREE) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "SDI", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 54,59
        COMMENT
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-004]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	 
		COMMENT If function CheckMinMax with parameters (exceed_font of Exceed_data with index exceed counter, E_TINY_FONT and E_LARGE_FONT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 54,61
        COMMENT
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-003]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - If function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 54,63
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init
			
						
			VAR Config_data.eng_sdi,			init = TRUE,					ev = init			
			
			VAR Exceed_data[0].exceed_bit,			init = 0,							ev = init			
			VAR Exceed_data[0].label,				init = 0,							ev = init			
			VAR Exceed_data[0].sdi,					init = 4,							ev = init			
			VAR Exceed_data[0].exceed_font,			init = E_NO_FONT,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_x,			init = PANEL_WIDTH+1,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_y,			init = PANEL_HEIGHT+1,					ev = init			
																																																	
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
						

			VAR Exceed_cnt,		init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1				
			
			STUB FontsGetStringWidth(0)0
			STUB FontsGetFontHeight(0)0
		
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 77	
	
    TEST 78
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-003]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - If function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 53,63
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-006]
		COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - Set string width to FontsGetStringWidth with parameter 	Letter(E) and exceed_font of Exceed_data with index as loop counter.
		COMMENT - Set string height to FontsGetFontHeight with parameter exceed_font of Exceed_data with index as loop counter.
		COMMENT - Increment string width by one if string width bitwise and with one is equal to One.
		COMMENT - If function 
		COMMENT ( CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter plus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter minus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter plus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT  CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter minus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE )
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 53,67
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
						
			VAR Config_data.eng_sdi,			init = TRUE,					ev = init			
			
			VAR Exceed_data[0].exceed_bit,			init = 1,					ev = init			
			VAR Exceed_data[0].label,				init = 1,					ev = init			
			VAR Exceed_data[0].sdi,					init = 3,					ev = init			
			VAR Exceed_data[0].exceed_font,			init = E_BEZEL_FONT,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_x,			init = PANEL_WIDTH,				ev = init			
			VAR Exceed_data[0].exceed_axis.u16_y,			init = PANEL_HEIGHT+1,					ev = init			

			VAR Error_msg_string[0],			init = "EXCEED 11 EXCEED_AXIS",					ev = init																																																		
			VAR Error_msg_string[1],			init = "EXCEED 11 EXCEED_AXIS",							ev = init																																																																																																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE						

			VAR Exceed_error,		init = FALSE,				ev = TRUE			
						
			VAR U16_message_words[1],			init = 0,							ev = 384
						

			VAR Exceed_cnt,		init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(356)2
			STUB FontsGetFontHeight(356)0
		
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 78	
	
    TEST 79
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-001]
        COMMENT The function shall do the following
		COMMENT - Set Exceed_error to FALSE.	
		COMMENT -    Loop from ZERO to Exceed_cnt -1 and do the following,	 
		COMMENT 1.	Set the temporary exceedance bit to (exceed_bit of Exceed_data with index exceed counter) plus TEN.
		COMMENT 2.	Call the function IntToStringTrim with parameters temporary Exceedance bit, Bit size and Bit string.
		COMMENT 3.	If function CheckMinMax with parameters (temporary Exceedance bit, MIN_START_BIT and MAX_START_BIT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT a)	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_BIT, Error_msg_string with array index Pdi_error_count.
		COMMENT b)	Increment Pdi_error_count by ONE.
		COMMENT c)	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
		COMMENT Equivalence Class 54,56
        COMMENT
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-002]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	 
		COMMENT If function CheckMinMax with parameters (label of Exceed_data with index exceed counter, ONE and MAX_LABEL) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string LABEL, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT .	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 54,58
        COMMENT
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-005]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	 
		COMMENT If eng_sdi of Config_data is true and function CheckMinMax with parameters (sdi of Exceed_data with index as loop counter, ZERO and THREE) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "SDI", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 54,60
        COMMENT
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-004]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	 
		COMMENT If function CheckMinMax with parameters (exceed_font of Exceed_data with index exceed counter, E_TINY_FONT and E_LARGE_FONT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 54,62
        COMMENT
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-003]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - If function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 54,64
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init		
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
						
			VAR Config_data.eng_sdi,			init = TRUE,					ev = init			
			
			VAR Exceed_data[0].exceed_bit,			init = 1,					ev = init			
			VAR Exceed_data[0].label,				init = 1,					ev = init			
			VAR Exceed_data[0].sdi,					init = 3,					ev = init			
			VAR Exceed_data[0].exceed_font,			init = E_BEZEL_FONT,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_x,			init = PANEL_WIDTH,				ev = init			
			VAR Exceed_data[0].exceed_axis.u16_y,			init = PANEL_HEIGHT+1,					ev = init			
																																																																																																		
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
						

			VAR Exceed_cnt,		init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		
			
			STUB FontsGetStringWidth(356)2
			STUB FontsGetFontHeight(356)0
		
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 79		
	
    TEST 80
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-003]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - If function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 53,63
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-006]
		COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - Set string width to FontsGetStringWidth with parameter 	Letter(E) and exceed_font of Exceed_data with index as loop counter.
		COMMENT - Set string height to FontsGetFontHeight with parameter exceed_font of Exceed_data with index as loop counter.
		COMMENT - Increment string width by one if string width bitwise and with one is equal to One.
		COMMENT - If function 
		COMMENT ( CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter plus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter minus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter plus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT  CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter minus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE )
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 53,69
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
						
			VAR Config_data.eng_sdi,			init = FALSE,					ev = init			
			
			VAR Exceed_data[0].exceed_bit,			init = 1,					ev = init			
			VAR Exceed_data[0].label,				init = 1,					ev = init			
			VAR Exceed_data[0].sdi,					init = 3,					ev = init			
			VAR Exceed_data[0].exceed_font,			init = E_BEZEL_FONT,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_x,			init = PANEL_WIDTH+1,				ev = init			
			VAR Exceed_data[0].exceed_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			

			VAR Error_msg_string[0],			init = "EXCEED 11 EXCEED_AXIS",					ev = init																																																		
			VAR Error_msg_string[1],			init = "EXCEED 11 EXCEED_AXIS",							ev = init																																																																																																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE			

			VAR Exceed_error,		init = FALSE,				ev = TRUE						
						
			VAR U16_message_words[1],			init = 0,							ev = 384
						

			VAR Exceed_cnt,		init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		
			
			STUB FontsGetStringWidth(356)0
			STUB FontsGetFontHeight(356)2		

        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 80	

    TEST 81
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT CheckExceedParam
		COMMENT
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-003]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - If function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 53,65
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
						
			VAR Config_data.eng_sdi,			init = FALSE,					ev = init			
			
			VAR Exceed_data[0].exceed_bit,			init = 1,					ev = init			
			VAR Exceed_data[0].label,				init = 1,					ev = init			
			VAR Exceed_data[0].sdi,					init = 3,					ev = init			
			VAR Exceed_data[0].exceed_font,			init = E_BEZEL_FONT,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_x,			init = PANEL_WIDTH,				ev = init			
			VAR Exceed_data[0].exceed_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
																																																	
			VAR Error_msg_string[1],			init = "EXCEED 11 EXCEED_AXIS",							ev = init																																																																																																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE					

			VAR Exceed_error,		init = FALSE,				ev = TRUE				
						
			VAR U16_message_words[1],			init = 0,							ev = 128
						

			VAR Exceed_cnt,		init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		
			
			STUB FontsGetStringWidth(356)2
			STUB FontsGetFontHeight(356)0	
	
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 81	
	
    TEST 82
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-001]
        COMMENT The function shall do the following
		COMMENT - Set Exceed_error to FALSE.	
		COMMENT -    Loop from ZERO to Exceed_cnt -1 and do the following,	 
		COMMENT 1.	Set the temporary exceedance bit to (exceed_bit of Exceed_data with index exceed counter) plus TEN.
		COMMENT 2.	Call the function IntToStringTrim with parameters temporary Exceedance bit, Bit size and Bit string.
		COMMENT 3.	If function CheckMinMax with parameters (temporary Exceedance bit, MIN_START_BIT and MAX_START_BIT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT a)	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_BIT, Error_msg_string with array index Pdi_error_count.
		COMMENT b)	Increment Pdi_error_count by ONE.
		COMMENT c)	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
		COMMENT Equivalence Class 53,56
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
						
			VAR Config_data.eng_sdi,			init = FALSE,					ev = init			
			
			VAR Exceed_data[0].exceed_bit,			init = 1,					ev = init			
			VAR Exceed_data[0].label,				init = 1,					ev = init			
			VAR Exceed_data[0].sdi,					init = 3,					ev = init			
			VAR Exceed_data[0].exceed_font,			init = E_BEZEL_FONT,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_x,			init = PANEL_WIDTH,				ev = init			
			VAR Exceed_data[0].exceed_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
																																																	
			VAR Error_msg_string[1],			init = "EXCEED 11 EXCEED_AXIS",							ev = init																																																																																																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
		
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE					

			VAR Exceed_error,		init = FALSE,				ev = TRUE				
						
			VAR U16_message_words[1],			init = 0,							ev = 128
						

			VAR Exceed_cnt,		init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		
			
			STUB FontsGetStringWidth(356)0
			STUB FontsGetFontHeight(356)2	

        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 82	
	
	
    TEST 83
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-006]
		COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - Set string width to FontsGetStringWidth with parameter 	Letter(E) and exceed_font of Exceed_data with index as loop counter.
		COMMENT - Set string height to FontsGetFontHeight with parameter exceed_font of Exceed_data with index as loop counter.
		COMMENT - Increment string width by one if string width bitwise and with one is equal to One.
		COMMENT - If function 
		COMMENT ( CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter plus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter minus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter plus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT  CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter minus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE )
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 53,71
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init		
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
						
			VAR Config_data.eng_sdi,			init = FALSE,					ev = init			
			
			VAR Exceed_data[0].exceed_bit,			init = 1,					ev = init			
			VAR Exceed_data[0].label,				init = 1,					ev = init			
			VAR Exceed_data[0].sdi,					init = 3,					ev = init			
			VAR Exceed_data[0].exceed_font,			init = E_BEZEL_FONT,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_x,			init = PANEL_WIDTH,				ev = init			
			VAR Exceed_data[0].exceed_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
																																																	
			VAR Error_msg_string[1],			init = "EXCEED 11 EXCEED_AXIS",							ev = init																																																																																																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE				

			VAR Exceed_error,		init = FALSE,				ev = TRUE					
						
			VAR U16_message_words[1],			init = 0,							ev = 128
						

			VAR Exceed_cnt,		init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		
			
			STUB FontsGetStringWidth(356)0
			STUB FontsGetFontHeight(356)2

        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 83	
	
	
    TEST 84
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-006]
		COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - Set string width to FontsGetStringWidth with parameter 	Letter(E) and exceed_font of Exceed_data with index as loop counter.
		COMMENT - Set string height to FontsGetFontHeight with parameter exceed_font of Exceed_data with index as loop counter.
		COMMENT - Increment string width by one if string width bitwise and with one is equal to One.
		COMMENT - If function 
		COMMENT ( CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter plus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter minus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter plus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT  CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter minus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE )
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 53,73
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
						
			VAR Config_data.eng_sdi,			init = FALSE,					ev = init			
			
			VAR Exceed_data[0].exceed_bit,			init = 1,					ev = init			
			VAR Exceed_data[0].label,				init = 1,					ev = init			
			VAR Exceed_data[0].sdi,					init = 3,					ev = init			
			VAR Exceed_data[0].exceed_font,			init = E_BEZEL_FONT,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_x,			init = 0,				ev = init			
			VAR Exceed_data[0].exceed_axis.u16_y,			init = 0,					ev = init			
																																																	
			VAR Error_msg_string[1],			init = "EXCEED 11 EXCEED_AXIS",							ev = init																																																																																																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE					

			VAR Exceed_error,		init = FALSE,				ev = TRUE				
						
			VAR U16_message_words[1],			init = 0,							ev = 128
						

			VAR Exceed_cnt,		init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
--			STUB FontsGetStringWidth(350)1
--			STUB FontsGetFontHeight(350)1		
--			
--			STUB FontsGetStringWidth(350)1
--			STUB FontsGetFontHeight(350)1			
			
			STUB FontsGetStringWidth(356)0
			STUB FontsGetFontHeight(356)2	

        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 84
	
    TEST 85
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-006]
		COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - Set string width to FontsGetStringWidth with parameter 	Letter(E) and exceed_font of Exceed_data with index as loop counter.
		COMMENT - Set string height to FontsGetFontHeight with parameter exceed_font of Exceed_data with index as loop counter.
		COMMENT - Increment string width by one if string width bitwise and with one is equal to One.
		COMMENT - If function 
		COMMENT ( CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter plus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter minus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter plus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT  CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter minus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE )
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 53,69
        COMMENT 
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
						
			VAR Config_data.eng_sdi,			init = FALSE,					ev = init			
			
			VAR Exceed_data[0].exceed_bit,			init = 1,					ev = init			
			VAR Exceed_data[0].label,				init = 1,					ev = init			
			VAR Exceed_data[0].sdi,					init = 3,					ev = init			
			VAR Exceed_data[0].exceed_font,			init = E_BEZEL_FONT,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_x,			init = 0,				ev = init			
			VAR Exceed_data[0].exceed_axis.u16_y,			init = 0,					ev = init			
																																																	
			VAR Error_msg_string[1],			init = "EXCEED 11 EXCEED_AXIS",							ev = init																																																																																																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE		

			VAR Exceed_error,		init = FALSE,				ev = TRUE						
						
			VAR U16_message_words[1],			init = 0,							ev = 128
						

			VAR Exceed_cnt,		init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			
			
			STUB FontsGetStringWidth(356)2
			STUB FontsGetFontHeight(356)0

        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 85	
	

    TEST 86
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-006]
		COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - Set string width to FontsGetStringWidth with parameter 	Letter(E) and exceed_font of Exceed_data with index as loop counter.
		COMMENT - Set string height to FontsGetFontHeight with parameter exceed_font of Exceed_data with index as loop counter.
		COMMENT - Increment string width by one if string width bitwise and with one is equal to One.
		COMMENT - If function 
		COMMENT ( CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter plus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE OR
		COMMENT CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter minus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE OR
		COMMENT CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter plus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE OR
		COMMENT  CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter minus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE )
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 53,68,70,72,74
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			---VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init		
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
						
			VAR Config_data.eng_sdi,			init = FALSE,					ev = init			
			
			VAR Exceed_data[0].exceed_bit,			init = 1,					ev = init			
			VAR Exceed_data[0].label,				init = 1,					ev = init			
			VAR Exceed_data[0].sdi,					init = 3,					ev = init			
			VAR Exceed_data[0].exceed_font,			init = E_BEZEL_FONT,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_x,			init = 1,				ev = init			
			VAR Exceed_data[0].exceed_axis.u16_y,			init = 1,					ev = init			
																																																																																																																																																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 0
						

			VAR Exceed_cnt,		init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			
			
			STUB FontsGetStringWidth(356)2
			STUB FontsGetFontHeight(356)0

        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 86

    TEST 87
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-003]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - If function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 54,63
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-006]
		COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - Set string width to FontsGetStringWidth with parameter 	Letter(E) and exceed_font of Exceed_data with index as loop counter.
		COMMENT - Set string height to FontsGetFontHeight with parameter exceed_font of Exceed_data with index as loop counter.
		COMMENT - Increment string width by one if string width bitwise and with one is equal to One.
		COMMENT - If function 
		COMMENT ( CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter plus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter minus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter plus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT  CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter minus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE )
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 54,67
        COMMENT 
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
						
			VAR Config_data.eng_sdi,			init = FALSE,					ev = init			
			
			VAR Exceed_data[0].exceed_bit,			init = 1,					ev = init			
			VAR Exceed_data[0].label,				init = 1,					ev = init			
			VAR Exceed_data[0].sdi,					init = 3,					ev = init			
			VAR Exceed_data[0].exceed_font,			init = E_BEZEL_FONT,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_x,			init = PANEL_WIDTH,				ev = init			
			VAR Exceed_data[0].exceed_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
																																																																																																																																																				
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
						

			VAR Exceed_cnt,		init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			
			
			STUB FontsGetStringWidth(356)0
			STUB FontsGetFontHeight(356)2	
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 87
	
	
    TEST 88
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-003]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - If function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 54,63
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-006]
		COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - Set string width to FontsGetStringWidth with parameter 	Letter(E) and exceed_font of Exceed_data with index as loop counter.
		COMMENT - Set string height to FontsGetFontHeight with parameter exceed_font of Exceed_data with index as loop counter.
		COMMENT - Increment string width by one if string width bitwise and with one is equal to One.
		COMMENT - If function 
		COMMENT ( CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter plus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter minus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter plus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT  CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter minus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE )
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 54,69
        COMMENT 
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
			
						
			VAR Config_data.eng_sdi,			init = FALSE,					ev = init			
			
			VAR Exceed_data[0].exceed_bit,			init = 1,					ev = init			
			VAR Exceed_data[0].label,				init = 1,					ev = init			
			VAR Exceed_data[0].sdi,					init = 3,					ev = init			
			VAR Exceed_data[0].exceed_font,			init = E_BEZEL_FONT,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_x,			init = PANEL_WIDTH,				ev = init			
			VAR Exceed_data[0].exceed_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
																																																																																																		
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
						

			VAR Exceed_cnt,		init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		
			
			STUB FontsGetStringWidth(356)0
			STUB FontsGetFontHeight(356)2

        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 88	
	
	
    TEST 89
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-003]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - If function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 54,63
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-006]
		COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - Set string width to FontsGetStringWidth with parameter 	Letter(E) and exceed_font of Exceed_data with index as loop counter.
		COMMENT - Set string height to FontsGetFontHeight with parameter exceed_font of Exceed_data with index as loop counter.
		COMMENT - Increment string width by one if string width bitwise and with one is equal to One.
		COMMENT - If function 
		COMMENT ( CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter plus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter minus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter plus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT  CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter minus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE )
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 54,70
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
						
			VAR Config_data.eng_sdi,			init = FALSE,					ev = init			
			
			VAR Exceed_data[0].exceed_bit,			init = 1,					ev = init			
			VAR Exceed_data[0].label,				init = 1,					ev = init			
			VAR Exceed_data[0].sdi,					init = 3,					ev = init			
			VAR Exceed_data[0].exceed_font,			init = E_BEZEL_FONT,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_x,			init = 0,				ev = init			
			VAR Exceed_data[0].exceed_axis.u16_y,			init = 0,					ev = init			
																																																																																																		
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
						

			VAR Exceed_cnt,		init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			
			
			STUB FontsGetStringWidth(356)0
			STUB FontsGetFontHeight(356)2	

        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 89
	
    TEST 90
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT CheckExceedParam
		COMMENT
        COMMENT 
        COMMENT 
        COMMENT hdudispfpdicheck-PdiDataCheck-DB-LLR-001
        COMMENT if(T)
        COMMENT hdudispfpdicheck-CheckElogParam-DB-LLR-001(F)
        COMMENT 
        COMMENT hdudispfpdicheck-CheckElogParam-DB-LLR-002 (TTF)
        COMMENT hdudispfpdicheck-CheckElogParam-DB-LLR-005 (TTF)
        COMMENT hdudispfpdicheck-CheckElogParam-DB-LLR-003 (TTF)
        COMMENT hdudispfpdicheck-CheckElogParam-DB-LLR-004 (TF)
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
						
			VAR Config_data.eng_sdi,			init = FALSE,					ev = init			
			
			VAR Exceed_data[0].exceed_bit,			init = 1,					ev = init			
			VAR Exceed_data[0].label,				init = 1,					ev = init			
			VAR Exceed_data[0].sdi,					init = 3,					ev = init			
			VAR Exceed_data[0].exceed_font,			init = E_BEZEL_FONT,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_x,			init = 0,				ev = init			
			VAR Exceed_data[0].exceed_axis.u16_y,			init = 0,					ev = init			
																																																	
			VAR Error_msg_string[1],			init = "EXCEED 10 EXCEED_AXIS",							ev = init																																																																																																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
						

			VAR Exceed_cnt,		init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			
			
			STUB FontsGetStringWidth(356)2
			STUB FontsGetFontHeight(356)0

        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 90

	
    TEST 91
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT 
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-003]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - If function CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 54,65
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-006]
		COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	
		COMMENT - Set string width to FontsGetStringWidth with parameter 	Letter(E) and exceed_font of Exceed_data with index as loop counter.
		COMMENT - Set string height to FontsGetFontHeight with parameter exceed_font of Exceed_data with index as loop counter.
		COMMENT - Increment string width by one if string width bitwise and with one is equal to One.
		COMMENT - If function 
		COMMENT ( CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter plus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT CheckAxisMinMax with parameters (u16_x of exceed_axis of Exceed_data with index exceed counter minus string width by two , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter plus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT  CheckAxisMinMax with parameters (u16_y of exceed_axis of Exceed_data with index exceed counter minus string height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE )
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 54,70
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
						
			VAR Config_data.eng_sdi,			init = FALSE,					ev = init			
			
			VAR Exceed_data[0].exceed_bit,			init = 1,					ev = init			
			VAR Exceed_data[0].label,				init = 1,					ev = init			
			VAR Exceed_data[0].sdi,					init = 3,					ev = init			
			VAR Exceed_data[0].exceed_font,			init = E_BEZEL_FONT,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_x,			init = 0,				ev = init			
			VAR Exceed_data[0].exceed_axis.u16_y,			init = 0,					ev = init			
																																																	
			VAR Error_msg_string[1],			init = "EXCEED 10 EXCEED_AXIS",							ev = init																																																																																																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
						

			VAR Exceed_cnt,		init = 2,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		
			
			STUB FontsGetStringWidth(356)2
			STUB FontsGetFontHeight(356)0

			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 91	

    TEST 92
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckExceedParam-DB-LLR-004]
        COMMENT The function shall loop from ZERO to Exceed_cnt -1 and do the following, 	 
		COMMENT If function CheckMinMax with parameters (exceed_font of Exceed_data with index exceed counter, E_TINY_FONT and E_LARGE_FONT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string EXCEED_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT 3.	Set Exceed_error to ONE left shifted by Page_num bitwise OR with Exceed_error.
        COMMENT Equivalence Class 53,61
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
						
			VAR Config_data.eng_sdi,			init = FALSE,					ev = init			
			
			VAR Exceed_data[0].exceed_bit,			init = 1,					ev = init			
			VAR Exceed_data[0].label,				init = 1,					ev = init			
			VAR Exceed_data[0].sdi,					init = 3,					ev = init			
			VAR Exceed_data[0].exceed_font,			init = E_BEZEL_FONT,					ev = init			
			VAR Exceed_data[0].exceed_axis.u16_x,			init = 0,				ev = init			
			VAR Exceed_data[0].exceed_axis.u16_y,			init = 0,					ev = init			
																																																																																																		
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
						

			VAR Exceed_cnt,		init = 1,							ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
  			VAR Exceed_error,		init = 1,		ev = init  
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			
			
			STUB FontsGetStringWidth(356)0
			STUB FontsGetFontHeight(356)2	

        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 92
	
    TEST 93
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD>  
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-003]
        COMMENT The function shall do the following
		COMMENT If function CheckAxisMinMax with parameters (page_menu of Page_settings, ZERO,MAX_PAGE_MENU and MAX_PAGE_MENU_10INCH) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string PAGE_MENU, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class  32,35
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 32,42,43
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 100,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 100,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = PANEL_WIDTH,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = ACDT_X_AXIS,					ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = PANEL_HEIGHT+1,					ev = init			

			VAR Error_msg_string[0],			init = "PG 0000 PAGE_MENUS",					ev = init											
			VAR Error_msg_string[1],			init = "PG 0000 TIMER_AXIS",					ev = init																					
			VAR Error_msg_string[2],			init = "PG 0000 ACDT_AXIS",						ev = init																					
			VAR Error_msg_string[3],			init = "PG 0000 ACDT_AXIS",						ev = init		

			VAR Acdt_axis_error,			init = FALSE,						ev = TRUE																					
			VAR Timer_axis_error,			init = FALSE,						ev = TRUE																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 93
	
    TEST 94
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-003]
        COMMENT The function shall do the following
		COMMENT If function CheckAxisMinMax with parameters (page_menu of Page_settings, ZERO,MAX_PAGE_MENU and MAX_PAGE_MENU_10INCH) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string PAGE_MENU, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class  32,35
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 32,42,43
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 100,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 100,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = PANEL_WIDTH,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = ACDT_X_AXIS,					ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = PANEL_HEIGHT+1,					ev = init			

			VAR Error_msg_string[0],			init = "PG 0000 PAGE_MENUS",					ev = init											
			VAR Error_msg_string[1],			init = "PG 0000 TIMER_AXIS",					ev = init																					
			VAR Error_msg_string[2],			init = "PG 0000 TIMER_AXIS",						ev = init																					
			VAR Error_msg_string[3],			init = "PG 0000 ACDT_AXIS",						ev = init		

			VAR Acdt_axis_error,			init = FALSE,						ev = init																					
			VAR Timer_axis_error,			init = FALSE,						ev = init																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 94
	
    TEST 95
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT CheckPageSettings
		COMMENT
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-003]
        COMMENT The function shall do the following
		COMMENT If function CheckAxisMinMax with parameters (page_menu of Page_settings, ZERO,MAX_PAGE_MENU and MAX_PAGE_MENU_10INCH) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string PAGE_MENU, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class  31,35
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 31,42,45
        COMMENT 
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 100,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 100,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = PANEL_WIDTH,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = ACDT_X_AXIS,					ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = ACDT_Y_AXIS,					ev = init			

			VAR Error_msg_string[0],			init = "PG 0000 PAGE_MENUS",					ev = init											
			VAR Error_msg_string[1],			init = "PG 0000 TIMER_AXIS",					ev = init																					
			VAR Error_msg_string[2],			init = "PG 0000 TIMER_AXIS",						ev = init																					
			VAR Error_msg_string[3],			init = "PG 0000 ACDT_AXIS",						ev = init		

			VAR Acdt_axis_error,			init = FALSE,						ev = init																					
			VAR Timer_axis_error,			init = FALSE,						ev = TRUE																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = TRUE,						ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
		
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 95
	
    TEST 96
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-003]
        COMMENT The function shall do the following
		COMMENT If function CheckAxisMinMax with parameters (page_menu of Page_settings, ZERO,MAX_PAGE_MENU and MAX_PAGE_MENU_10INCH) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string PAGE_MENU, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class  31,35
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckPageSettings-DB-LLR-010]
        COMMENT The function shall do the following
		COMMENT - Set string width to return value of FontsGetStringWidth with parameter Timer(0:00:00) and timer_font of Page_settings
		COMMENT - Set string height to return value of FontsGetFontHeight with parameter timer_font of Page_settings
		COMMENT -  Increment string width by one if string width bitwise and with one is equal to ONE.
		COMMENT when  Timer_flag is equal to TRUE and (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings plus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR  
		COMMENT (CheckAxisMinMax with parameters (u16_x of timer_axis of Page_settings minus string width by two, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings plus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE OR
		COMMENT (CheckAxisMinMax with parameters (u16_y of timer_axis of Page_settings minus string height by two, ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, page string, string TIMER_AXIS, Error_msg_string with array index Pdi_error_count.2.
		COMMENT       2. Increment Pdi_error_count by ONE.
		COMMENT       3.  Timer_axis_error is set to One left shifted with Page_num bitwise or with Timer_axis_error.
        COMMENT Equivalence Class 31,42,45
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 100,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 100,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init	
			
			VAR Page_settings.timer_axis.u16_x,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = PANEL_WIDTH,					ev = init			
			--VAR Page_settings.timer_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.acdt_axis.u16_x,			init = ACDT_X_AXIS,					ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = ACDT_Y_AXIS,					ev = init			

			VAR Error_msg_string[0],			init = "PG 0000 PAGE_MENUS",					ev = init											
			VAR Error_msg_string[1],			init = "PG 0000 TIMER_AXIS",					ev = init																					
			VAR Error_msg_string[2],			init = "PG 0000 TIMER_AXIS",						ev = init																					
			VAR Error_msg_string[3],			init = "PG 0000 ACDT_AXIS",						ev = init		

			VAR Acdt_axis_error,			init = FALSE,						ev = init																					
			VAR Timer_axis_error,			init = FALSE,						ev = TRUE																			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Timer_flag,					init = TRUE,						ev = init	
			VAR Acdt_flag,					init = FALSE,						ev = init

			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
					
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 96	
	
    TEST 97
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-001]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT 1.	Call the function OctToStringTrim with parameters label of Bg_settings with index BG counter-1, size of label and label string
        COMMENT 2.	If function CheckMinMax with parameters (label of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_LABEL) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT a)	Call the function BuildErrorMsg with parameters string element, Label string, string LABEL, Error_msg_string with array index Pdi_error_count.
        COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,340
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-023]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Bg_settings with index BG counter-1 of 
        COMMENT Page_settings, ZERO and THREE) returns FALSE AND Pdi_error_count is less than  MAX_ERROR_MSG then do the following.
        COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string SDI, Error_msg_string with array index Pdi_error_count.
        COMMENT 2. Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,344
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-002]
        COMMENT do nothing when
        COMMENT bg_orien of Bg_settings with index BG counter-1 of Page_settings equal to BG_VERTICAL
        COMMENT Equivalence Class 342,347
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-007]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT - Do the below when bg_orien of Bg_settings with index BG counter-1 of Page_settings is equal to BG_VERTICAL 
        COMMENT a.If function CheckAxisMinMax with parameters (u16_x of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT )
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,348
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-005]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT - Do the below when bg_orien of Bg_settings with index BG counter-1 of Page_settings is equal to BG_VERTICAL 
        COMMENT a. If function CheckAxisMinMax with parameters (bg_width of Bg_settings with index BG counter-1 of Page_settings , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns
        COMMENT  FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_WIDTH, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,350
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 4,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = PANEL_WIDTH+1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = PANEL_HEIGHT+1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = PANEL_WIDTH+1,								ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_VERTICAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init			
			
			
																																																						

			VAR Error_msg_string[0],			init = "BG 0000 LABEL",						ev = init
			VAR Error_msg_string[1],			init = "BG 0000 SDI",						ev = init
			VAR Error_msg_string[2],			init = "BG 0000 BG_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "BG 0000 BG_WIDTH",					ev = init
			VAR Error_msg_string[4],			init = "BG 0000 BG_WIDTH",					ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
							
			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 97
	
	
    TEST 98
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-001]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT 1.	Call the function OctToStringTrim with parameters label of Bg_settings with index BG counter-1, size of label and label string
        COMMENT 2.	If function CheckMinMax with parameters (label of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_LABEL) returns FALSE AND Pdi_error_count is greater than MAX_ERROR_MSG then,
        COMMENT a)	Call the function BuildErrorMsg with parameters string element, Label string, string LABEL, Error_msg_string with array index Pdi_error_count.
        COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,340
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-023]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Bg_settings with index BG counter-1 of 
        COMMENT Page_settings, ZERO and THREE) returns FALSE AND Pdi_error_count is greater than  MAX_ERROR_MSG then do the following.
        COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string SDI, Error_msg_string with array index Pdi_error_count.
        COMMENT 2. Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,344
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-002]
        COMMENT do nothing when
        COMMENT bg_orien of Bg_settings with index BG counter-1 of Page_settings equal to BG_VERTICAL
        COMMENT Equivalence Class 343,347
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-007]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT - Do the below when bg_orien of Bg_settings with index BG counter-1 of Page_settings is equal to BG_VERTICAL 
        COMMENT a.If function CheckAxisMinMax with parameters (u16_x of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT )
        COMMENT  returns false AND Pdi_error_count is greater than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,348
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-005]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT - Do the below when bg_orien of Bg_settings with index BG counter-1 of Page_settings is equal to BG_VERTICAL 
        COMMENT a. If function CheckAxisMinMax with parameters (bg_width of Bg_settings with index BG counter-1 of Page_settings , ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns
        COMMENT  FALSE AND Pdi_error_count is greater than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 343,350
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 4,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = PANEL_WIDTH+1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = PANEL_HEIGHT+1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = PANEL_WIDTH+1,								ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_VERTICAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init			
			
			
																																																						

			VAR Error_msg_string[0],			init = "BG 0000 LABEL",						ev = init
			VAR Error_msg_string[1],			init = "BG 0000 SDI",						ev = init
			VAR Error_msg_string[2],			init = "BG 0000 BG_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "BG 0000 BG_NO_LIN",					ev = init
			VAR Error_msg_string[4],			init = "BG 0000 BG_WIDTH",					ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
							
			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 98	
	
	
    TEST 99
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-006]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT - Do the below when bg_orien of Bg_settings with index BG counter-1 of Page_settings is equal to BG_HORIZONTAL 
        COMMENT a.If function CheckAxisMinMax with parameters (u16_y of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false 
        COMMENT OR function CheckAxisMinMax with parameters (u16_x of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT ) returns false 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,352
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-003]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckMinMax with parameters (bg_no_lin of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_NO_LIN) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NO_LIN, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,354
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-004]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT - Set decimal number to u16Format of BarGraph with index BG counter-1  right shift by FOUR bitwise and with Seven.
        COMMENT The function shall loop from ONE to (bg_no_lin of Bg_settings with index BG counter-1 of Page_settings) an do the following,
        COMMENT If function CheckMinMax with parameters (bg_lin_range with index counter j of Bg_settings with index BG counter-1 of Page_settings divided by product of 
        COMMENT ( ten and CalculatePower with parameter 10 and decimal number), MIN_LIN_RANGE and MAX_LIN_RANGE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_LIN_RANGE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,356
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-008]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckMinMax with parameters (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_NO_LIM) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND BIT_FIVE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NO_LIM, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,358
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 4,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = PANEL_WIDTH+1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = PANEL_HEIGHT+1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = PANEL_WIDTH+1,								ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_VERTICAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init			
			
			
																																																						

			VAR Error_msg_string[0],			init = "BG 0000 LABEL",						ev = init
			VAR Error_msg_string[1],			init = "BG 0000 SDI",						ev = init
			VAR Error_msg_string[2],			init = "BG 0000 BG_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "BG 0000 BG_WIDTH",					ev = init
			VAR Error_msg_string[4],			init = "BG 0000 BG_WIDTH",					ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 99	
	
	
    TEST 100
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT
		COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-006]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT - Do the below when bg_orien of Bg_settings with index BG counter-1 of Page_settings is equal to BG_HORIZONTAL 
        COMMENT a.If function CheckAxisMinMax with parameters (u16_y of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false 
        COMMENT OR function CheckAxisMinMax with parameters (u16_x of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT ) returns false 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,352
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-003]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckMinMax with parameters (bg_no_lin of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_NO_LIN) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NO_LIN, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,354
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-004]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT - Set decimal number to u16Format of BarGraph with index BG counter-1  right shift by FOUR bitwise and with Seven.
        COMMENT The function shall loop from ONE to (bg_no_lin of Bg_settings with index BG counter-1 of Page_settings) an do the following,
        COMMENT If function CheckMinMax with parameters (bg_lin_range with index counter j of Bg_settings with index BG counter-1 of Page_settings divided by product of 
        COMMENT ( ten and CalculatePower with parameter 10 and decimal number), MIN_LIN_RANGE and MAX_LIN_RANGE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_LIN_RANGE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,356
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-008]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckMinMax with parameters (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_NO_LIM) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND BIT_FIVE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NO_LIM, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,358
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = PANEL_HEIGHT+1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = PANEL_WIDTH,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_VERTICAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 100,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = -4,						ev = init			
			
			
																																																						

			VAR Error_msg_string[0],			init = "BG 0001 BG_AXIS",					ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_WIDTH",					ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NO_LIM",					ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_REDX_WIDTH",					ev = init
			VAR Error_msg_string[4],			init = "BG 0001 BG_REDX_HEIGHT",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 100	
	
    TEST 101
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-006]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT - Do the below when bg_orien of Bg_settings with index BG counter-1 of Page_settings is equal to BG_HORIZONTAL 
        COMMENT a.If function CheckAxisMinMax with parameters (u16_y of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false 
        COMMENT OR function CheckAxisMinMax with parameters (u16_x of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT ) returns false 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 343,352
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-003]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckMinMax with parameters (bg_no_lin of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_NO_LIN) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 343,354
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-004]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT - Set decimal number to u16Format of BarGraph with index BG counter-1  right shift by FOUR bitwise and with Seven.
        COMMENT The function shall loop from ONE to (bg_no_lin of Bg_settings with index BG counter-1 of Page_settings) an do the following,
        COMMENT If function CheckMinMax with parameters (bg_lin_range with index counter j of Bg_settings with index BG counter-1 of Page_settings divided by product of 
        COMMENT ( ten and CalculatePower with parameter 10 and decimal number), MIN_LIN_RANGE and MAX_LIN_RANGE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT Equivalence Class 343,356
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-008]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckMinMax with parameters (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_NO_LIM) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND BIT_FIVE is equal to TRUE then,
        COMMENT Equivalence Class 343,358
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = PANEL_HEIGHT+1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = PANEL_WIDTH,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_VERTICAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 100,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = -4,						ev = init			
			
			
																																																						

			VAR Error_msg_string[0],			init = "BG 0001 BG_AXIS",					ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_WIDTH",					ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_ORIEN",					ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NO_LIM",					ev = init
			VAR Error_msg_string[4],			init = "BG 0001 BG_REDX_WIDTH",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 101	
	
	
    TEST 102
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-006]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT - Do the below when bg_orien of Bg_settings with index BG counter-1 of Page_settings is equal to BG_HORIZONTAL 
        COMMENT a.If function CheckAxisMinMax with parameters (u16_y of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false 
        COMMENT OR function CheckAxisMinMax with parameters (u16_x of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT ) returns false 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,361,352
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-003]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckMinMax with parameters (bg_no_lin of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_NO_LIN) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NO_LIN, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,361,354
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-004]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT - Set decimal number to u16Format of BarGraph with index BG counter-1  right shift by FOUR bitwise and with Seven.
        COMMENT The function shall loop from ONE to (bg_no_lin of Bg_settings with index BG counter-1 of Page_settings) an do the following,
        COMMENT If function CheckMinMax with parameters (bg_lin_range with index counter j of Bg_settings with index BG counter-1 of Page_settings divided by product of 
        COMMENT ( ten and CalculatePower with parameter 10 and decimal number), MIN_LIN_RANGE and MAX_LIN_RANGE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_LIN_RANGE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,361,356
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-008]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckMinMax with parameters (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_NO_LIM) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND BIT_FIVE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NO_LIM, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,361,358
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = PANEL_HEIGHT+1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = PANEL_WIDTH,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_VERTICAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 100,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = -4,						ev = init			
			
			
																																																						

			VAR Error_msg_string[0],			init = "BG 0001 BG_AXIS",					ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 102
	
	
    TEST 103
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-006]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT - Do the below when bg_orien of Bg_settings with index BG counter-1 of Page_settings is equal to BG_HORIZONTAL 
        COMMENT a.If function CheckAxisMinMax with parameters (u16_y of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false 
        COMMENT OR function CheckAxisMinMax with parameters (u16_x of bg_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT ) returns false 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,353
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-003]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckMinMax with parameters (bg_no_lin of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_NO_LIN) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NO_LIN, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,355
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-004]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT - Set decimal number to u16Format of BarGraph with index BG counter-1  right shift by FOUR bitwise and with Seven.
        COMMENT The function shall loop from ONE to (bg_no_lin of Bg_settings with index BG counter-1 of Page_settings) an do the following,
        COMMENT If function CheckMinMax with parameters (bg_lin_range with index counter j of Bg_settings with index BG counter-1 of Page_settings divided by product of 
        COMMENT ( ten and CalculatePower with parameter 10 and decimal number), MIN_LIN_RANGE and MAX_LIN_RANGE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_LIN_RANGE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,357
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-008]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckMinMax with parameters (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_NO_LIM) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND BIT_FIVE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NO_LIM, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,359
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-009]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) then do the following
        COMMENT If function CheckMinMax with parameters (bg_lim_val_type with index counter j of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE)
        COMMENT  returns FALSE OR  function CheckFloatMinMax with parameters (bg_lim_val with index counter j of Bg_settings with index BG counter-1 of Page_settings, MIN_RANGE 
        COMMENT  and  MAX_RANGE) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SIX is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_LIM_VAL, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,362
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-010]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) and do the following,
        COMMENT If function CheckColor with parameters (bg_lim_color of Bg_settings with index BG counter-1 of Page_settings) returns FALSE
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_LIM_COLOR, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,364
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-024]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from Counter j ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) and do the following,
        COMMENT If function CheckMinMax with parameters (bg_lim_type with counter j as index of Bg_settings with index BG counter-1 of Page_settings,TYPE_NORMAL,TYPE_WARNING)
        COMMENT  returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_LIM_TYPE, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,366
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-012]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (bg_redx_width of Bg_settings with index BG counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns 
        COMMENT FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_REDX_WIDTH, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,368
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_VERTICAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 2,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 100,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],								init = TYPE_WARNING,			ev = init			
			
			
																																																						

			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_HEIGHT",			ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_REDX_OFFSET_AXIS",			ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_REDX_OFFSET_AXIS",					ev = init
			VAR Error_msg_string[4],			init = "BG 0001 BG_REDX_AXIS",					ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 103	
	
	
    TEST 104
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-009]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) then do the following
        COMMENT If function CheckMinMax with parameters (bg_lim_val_type with index counter j of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE)
        COMMENT  returns FALSE OR  function CheckFloatMinMax with parameters (bg_lim_val with index counter j of Bg_settings with index BG counter-1 of Page_settings, MIN_RANGE 
        COMMENT  and  MAX_RANGE) returns false AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SIX is equal to TRUE then,
        COMMENT Equivalence Class 343,360,362
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-010]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) and do the following,
        COMMENT If function CheckColor with parameters (bg_lim_color of Bg_settings with index BG counter-1 of Page_settings) returns FALSE
        COMMENT  AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT Equivalence Class 343,360,364
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-024]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from Counter j ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) and do the following,
        COMMENT If function CheckMinMax with parameters (bg_lim_type with counter j as index of Bg_settings with index BG counter-1 of Page_settings,TYPE_NORMAL,TYPE_WARNING)
        COMMENT  returns FALSE AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT Equivalence Class 343,360,366
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-012]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (bg_redx_width of Bg_settings with index BG counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns 
        COMMENT FALSE AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TEN is equal to TRUE then,
        COMMENT Equivalence Class 343,360,368
        COMMENT
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_VERTICAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 2,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 100,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],								init = TYPE_WARNING,			ev = init			
			
			
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 104	
	
	
    TEST 105
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-009]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) then do the following
        COMMENT If function CheckMinMax with parameters (bg_lim_val_type with index counter j of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE)
        COMMENT  returns FALSE OR  function CheckFloatMinMax with parameters (bg_lim_val with index counter j of Bg_settings with index BG counter-1 of Page_settings, MIN_RANGE 
        COMMENT  and  MAX_RANGE) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SIX is equal to FALSE
        COMMENT Equivalence Class 342,361,362
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-010]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) and do the following,
        COMMENT If function CheckColor with parameters (bg_lim_color of Bg_settings with index BG counter-1 of Page_settings) returns FALSE
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SEVEN is equal to FALSE then,
        COMMENT Equivalence Class 342,361,364
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-024]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from Counter j ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) and do the following,
        COMMENT If function CheckMinMax with parameters (bg_lim_type with counter j as index of Bg_settings with index BG counter-1 of Page_settings,TYPE_NORMAL,TYPE_WARNING)
        COMMENT  returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SEVEN is equal to FALSE
        COMMENT Equivalence Class 342,361,366
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-012]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (bg_redx_width of Bg_settings with index BG counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns 
        COMMENT FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TEN is equal to FALSE
        COMMENT Equivalence Class 342,361,368
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_VERTICAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 2,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 100,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],								init = TYPE_WARNING,			ev = init			
			
			
																																																						

			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 105	
	
	
    TEST 106
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-009]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) then do the following
        COMMENT If function CheckMinMax with parameters (bg_lim_val_type with index counter j of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE)
        COMMENT  returns FALSE OR  function CheckFloatMinMax with parameters (bg_lim_val with index counter j of Bg_settings with index BG counter-1 of Page_settings, MIN_RANGE 
        COMMENT  and  MAX_RANGE) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SIX is equal to TRUE then,
        COMMENT Equivalence Class 342,363
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-010]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) and do the following,
        COMMENT If function CheckColor with parameters (bg_lim_color of Bg_settings with index BG counter-1 of Page_settings) returns FALSE
        COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT Equivalence Class 342,364
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-024]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from Counter j ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) and do the following,
        COMMENT If function CheckMinMax with parameters (bg_lim_type with counter j as index of Bg_settings with index BG counter-1 of Page_settings,TYPE_NORMAL,TYPE_WARNING)
        COMMENT  returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT Equivalence Class 342,367
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-012]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (bg_redx_width of Bg_settings with index BG counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns 
        COMMENT FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TEN is equal to TRUE then,
        COMMENT Equivalence Class 342,369
        COMMENT
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-013]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (bg_redx_height of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH,PANEL_HEIGHT) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_ELEVEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_REDX_HEIGHT, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,370
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-014]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO ,-PANEL_HEIGHT, -PANEL_WIDTH,
        COMMENT PANEL_HEIGHT and PANEL_WIDTH) returns false OR function CheckAxisMinMax2 with parameters (u16_y of bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings,
        COMMENT  -PANEL_WIDTH  -PANEL_HEIGHT, PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1
        COMMENT  bitwise AND with BIT_TWELVE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,372
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is less than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "BG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 342,374
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-011]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_NINE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,382
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 2,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 100,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],								init = TYPE_WARNING,			ev = init			
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",			ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",			ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_REDX_OFFSET_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_REDX_AXIS",					ev = init
			VAR Error_msg_string[4],			init = "BG 0001 BG_REDX_AXIS",					ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 106	
	
	
    TEST 107
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-013]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (bg_redx_height of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH,PANEL_HEIGHT) returns FALSE 
        COMMENT AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_ELEVEN is equal to TRUE then,
        COMMENT Equivalence Class 343,360,370
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-014]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO ,-PANEL_HEIGHT, -PANEL_WIDTH,
        COMMENT PANEL_HEIGHT and PANEL_WIDTH) returns false OR function CheckAxisMinMax2 with parameters (u16_y of bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings,
        COMMENT  -PANEL_WIDTH  -PANEL_HEIGHT, PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1
        COMMENT  bitwise AND with BIT_TWELVE is equal to TRUE then,
        COMMENT Equivalence Class 343,360,372
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is greater than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT Equivalence Class 343,360,374
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-011]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_NINE is equal to TRUE then,
        COMMENT Equivalence Class 343,360,382
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 2,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 100,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],								init = TYPE_WARNING,			ev = init			
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_REDX_OFFSET_AXIS",			ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",			ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_REDX_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_REDX_AXIS",					ev = init
			VAR Error_msg_string[4],			init = "BG 0001 BG_REDX_FONT",					ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 107	
	
	
    TEST 108
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-013]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (bg_redx_height of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH,PANEL_HEIGHT) returns FALSE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_ELEVEN is equal to FALSE then,
        COMMENT Equivalence Class 342,361370
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-014]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO ,-PANEL_HEIGHT, -PANEL_WIDTH,
        COMMENT PANEL_HEIGHT and PANEL_WIDTH) returns false OR function CheckAxisMinMax2 with parameters (u16_y of bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings,
        COMMENT  -PANEL_WIDTH  -PANEL_HEIGHT, PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1
        COMMENT  bitwise AND with BIT_TWELVE is equal to FALSE then,
        COMMENT Equivalence Class 342,361,372
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is less than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is FALSE then,
        COMMENT Equivalence Class 342,361,374
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-011]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_NINE is equal to FALSE then,
        COMMENT Equivalence Class 342,361,382 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init
			VAR Timer_flag,								init = FALSE,					ev = init			
			VAR Acdt_flag,								init = FALSE,					ev = init			
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 2,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 100,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],								init = TYPE_WARNING,			ev = init			
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",			ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 108
	
	
    TEST 109
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-013]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (bg_redx_height of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH,PANEL_HEIGHT) returns TRUE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_ELEVEN is equal to TRUE then,
        COMMENT Equivalence Class 342,360,371
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-014]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO ,-PANEL_HEIGHT, -PANEL_WIDTH,
        COMMENT PANEL_HEIGHT and PANEL_WIDTH) returns TRUE OR function CheckAxisMinMax2 with parameters (u16_y of bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings,
        COMMENT  -PANEL_WIDTH  -PANEL_HEIGHT, PANEL_WIDTH and PANEL_HEIGHT) returns TRUE AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1
        COMMENT  bitwise AND with BIT_TWELVE is equal to TRUE then,
        COMMENT Equivalence Class 342,360,373
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-011]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns TRUE OR function CheckAxisMinMax with parameters (u16_y of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns TRUE AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_NINE is equal to TRUE then,
        COMMENT Equivalence Class 342,360,383
        COMMENT
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 2,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = -1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 100,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],								init = TYPE_WARNING,			ev = init			
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",			ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",					ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 109	
	
	
    TEST 110
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-013]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (bg_redx_height of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH,PANEL_HEIGHT) returns TRUE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_ELEVEN is equal to TRUE then,
        COMMENT Equivalence Class 343,360,371
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-014]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO ,-PANEL_HEIGHT, -PANEL_WIDTH,
        COMMENT PANEL_HEIGHT and PANEL_WIDTH) returns TRUE OR function CheckAxisMinMax2 with parameters (u16_y of bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings,
        COMMENT  -PANEL_WIDTH  -PANEL_HEIGHT, PANEL_WIDTH and PANEL_HEIGHT) returns TRUE AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1
        COMMENT  bitwise AND with BIT_TWELVE is equal to TRUE then,
        COMMENT Equivalence Class 343,360,373
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-011]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns TRUE OR function CheckAxisMinMax with parameters (u16_y of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns TRUE AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_NINE is equal to TRUE then,
        COMMENT Equivalence Class 343,360,383
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 2,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = -1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 100,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],								init = TYPE_WARNING,			ev = init			
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_REDX_OFFSET_AXIS",			ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_TXT",					ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 110	
	
	
    TEST 111
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-013]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (bg_redx_height of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH,PANEL_HEIGHT) returns TRUE 
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_ELEVEN is equal to TRUE then,
        COMMENT Equivalence Class 342,361,371
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-014]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO ,-PANEL_HEIGHT, -PANEL_WIDTH,
        COMMENT PANEL_HEIGHT and PANEL_WIDTH) returns TRUE OR function CheckAxisMinMax2 with parameters (u16_y of bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings,
        COMMENT  -PANEL_WIDTH  -PANEL_HEIGHT, PANEL_WIDTH and PANEL_HEIGHT) returns TRUE AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1
        COMMENT  bitwise AND with BIT_TWELVE is equal to TRUE then,
        COMMENT Equivalence Class 342,361,373
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-011]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns TRUE OR function CheckAxisMinMax with parameters (u16_y of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns TRUE AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_NINE is equal to TRUE then,
        COMMENT Equivalence Class 342,361,383
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 2,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 2,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = -1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 100,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = COLOR_BLACK,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],								init = TYPE_WARNING,			ev = init			
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",			ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 111	
	

    TEST 112
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-026]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, bg_redx_width of Bg_settings
        COMMENT  with index BG counter-1 of Page_settings by two,PANEL_HEIGHT and PANEL_WIDTH) returns false OR CheckAxisMinMax with parameters (u16_x of bg_redx_axis of
        COMMENT  Bg_settings with index BG counter-1 of Page_settings,ZERO, PANEL_HEIGHT minus bg_redx_width of Bg_settings with index BG counter-1 of Page_settings by two,
        COMMENT  PANEL_WIDTH  minus bg_redx_width of Bg_settings with index BG counter-1 of Page_settings) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_NINE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,384
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-027]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_y of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, bg_redx_height of Bg_settings
        COMMENT  with index BG counter-1 of Page_settings by two,PANEL_HEIGHT and PANEL_WIDTH) returns false OR CheckAxisMinMax with parameters (u16_y of bg_redx_axis of
        COMMENT  Bg_settings with index BG counter-1 of Page_settings,ZERO, PANEL_WIDTH minus bg_redx_height of Bg_settings with index BG counter-1 of Page_settings by two,
        COMMENT  PANEL_HEIGHT  minus bg_redx_height of Bg_settings with index BG counter-1 of Page_settings) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_NINE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,386
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-015]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckFont with parameters (bg_redx_font of Bg_settings with index BG counter-1 of Page_settings) returns FALSE AND Pdi_error_count
        COMMENT  is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_THIRTEEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_REDX_FONT, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,388
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckDecimalFormat-DB-LLR-001]
        COMMENT return TRUE if format is NUM_ONED,NUM_TWOD,NUM_THREED,NUM_FOURD,NUM_FIVED and NUM_SIXD.
        COMMENT Equivalence Class 644
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = -1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 11000000,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = 40,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = MAX_LIM_VAL_TYPE+1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = MAX_RANGE+1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = COLOR_MAX,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],								init = TYPE_WARNING+1,			ev = init			
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_LIN_LENGTH",			ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_WIDTH",					ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_LIN_RANGE",					ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_LIM_VAL",					ev = init
			VAR Error_msg_string[4],			init = "BG 0001 BG_LIM_COLOR",					ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 112	
	
	
    TEST 113
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-026]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, bg_redx_width of Bg_settings
        COMMENT  with index BG counter-1 of Page_settings by two,PANEL_HEIGHT and PANEL_WIDTH) returns false OR CheckAxisMinMax with parameters (u16_x of bg_redx_axis of
        COMMENT  Bg_settings with index BG counter-1 of Page_settings,ZERO, PANEL_HEIGHT minus bg_redx_width of Bg_settings with index BG counter-1 of Page_settings by two,
        COMMENT  PANEL_WIDTH  minus bg_redx_width of Bg_settings with index BG counter-1 of Page_settings) returns false AND Pdi_error_count is greater than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_NINE is equal to TRUE then,
        COMMENT Equivalence Class 343,360,384
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-027]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_y of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, bg_redx_height of Bg_settings
        COMMENT  with index BG counter-1 of Page_settings by two,PANEL_HEIGHT and PANEL_WIDTH) returns false OR CheckAxisMinMax with parameters (u16_y of bg_redx_axis of
        COMMENT  Bg_settings with index BG counter-1 of Page_settings,ZERO, PANEL_WIDTH minus bg_redx_height of Bg_settings with index BG counter-1 of Page_settings by two,
        COMMENT  PANEL_HEIGHT  minus bg_redx_height of Bg_settings with index BG counter-1 of Page_settings) returns false AND Pdi_error_count is greater than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_NINE is equal to TRUE then,
        COMMENT Equivalence Class 343,360,386
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-015]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckFont with parameters (bg_redx_font of Bg_settings with index BG counter-1 of Page_settings) returns FALSE AND Pdi_error_count
        COMMENT  is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_THIRTEEN is equal to TRUE then,
        COMMENT Equivalence Class 343,360,388
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = -1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 10000000,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = 40,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = MAX_LIM_VAL_TYPE+1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = MAX_RANGE+1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = COLOR_MAX,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],								init = TYPE_WARNING+1,			ev = init			
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_LIN_RANGE",			ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_LIN_LENGTH",					ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_LIM_VAL",					ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_LIM_COLOR",					ev = init
			VAR Error_msg_string[4],			init = "BG 0001 BG_LIM_TYPE",					ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 113	
	
	
    TEST 114
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-026]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, bg_redx_width of Bg_settings
        COMMENT  with index BG counter-1 of Page_settings by two,PANEL_HEIGHT and PANEL_WIDTH) returns false OR CheckAxisMinMax with parameters (u16_x of bg_redx_axis of
        COMMENT  Bg_settings with index BG counter-1 of Page_settings,ZERO, PANEL_HEIGHT minus bg_redx_width of Bg_settings with index BG counter-1 of Page_settings by two,
        COMMENT  PANEL_WIDTH  minus bg_redx_width of Bg_settings with index BG counter-1 of Page_settings) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_NINE is equal to FALSE 
        COMMENT Equivalence Class 342,361,384
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-027]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_y of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, bg_redx_height of Bg_settings
        COMMENT  with index BG counter-1 of Page_settings by two,PANEL_HEIGHT and PANEL_WIDTH) returns false OR CheckAxisMinMax with parameters (u16_y of bg_redx_axis of
        COMMENT  Bg_settings with index BG counter-1 of Page_settings,ZERO, PANEL_WIDTH minus bg_redx_height of Bg_settings with index BG counter-1 of Page_settings by two,
        COMMENT  PANEL_HEIGHT  minus bg_redx_height of Bg_settings with index BG counter-1 of Page_settings) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_NINE is equal to FALSE
        COMMENT Equivalence Class 342,361,386
        COMMENT
        COMMENT [hdudispfpdicheck-CheckMinMax-DB-LLR-001]
        COMMENT If parameter is less than minimum or greater than maximum then function shall return FALSE.
        COMMENT Equivalence Class None
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-015]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckFont with parameters (bg_redx_font of Bg_settings with index BG counter-1 of Page_settings) returns FALSE AND Pdi_error_count
        COMMENT  is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_THIRTEEN is equal to FALSE
        COMMENT Equivalence Class 342,361,388
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckDecimalFormat-DB-LLR-002]
        COMMENT return FALSE if format is other tha NUM_ONED,NUM_TWOD,NUM_THREED,NUM_FOURD,NUM_FIVED and NUM_SIXD.	
        COMMENT Equivalence Class 645
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = -1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 10000000,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = 40,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = MAX_LIM_VAL_TYPE+1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = MAX_RANGE+1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = COLOR_MAX,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],								init = TYPE_WARNING+1,			ev = init			
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_LIN_LENGTH",			ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_WIDTH",					ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 114	
	
	
    TEST 115
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-009]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) then do the following
        COMMENT If function CheckMinMax with parameters (bg_lim_val_type with index counter j of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE)
        COMMENT  returns FALSE OR  function CheckFloatMinMax with parameters (bg_lim_val with index counter j of Bg_settings with index BG counter-1 of Page_settings, MIN_RANGE 
        COMMENT  and  MAX_RANGE) returns false AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SIX is equal to TRUE then,
        COMMENT Equivalence Class 343,360,362
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-010]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) and do the following,
        COMMENT If function CheckColor with parameters (bg_lim_color of Bg_settings with index BG counter-1 of Page_settings) returns FALSE
        COMMENT  AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT Equivalence Class 343,360,364
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-024]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from Counter j ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) and do the following,
        COMMENT If function CheckMinMax with parameters (bg_lim_type with counter j as index of Bg_settings with index BG counter-1 of Page_settings,TYPE_NORMAL,TYPE_WARNING)
        COMMENT  returns FALSE AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT Equivalence Class 342,360,366
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-012]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (bg_redx_width of Bg_settings with index BG counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns 
        COMMENT FALSE AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TEN is equal to TRUE then,
        COMMENT Equivalence Class 342,360,368
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = -1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 10000000,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = 40,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = MAX_LIM_VAL_TYPE,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = MAX_RANGE+1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = COLOR_MAX,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],								init = TYPE_WARNING+1,			ev = init			
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_LIN_LENGTH",			ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_WIDTH",					ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_LIN_RANGE",					ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_LIM_VAL",					ev = init
			VAR Error_msg_string[4],			init = "BG 0001 BG_LIM_COLOR",					ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 115	
	
	
    TEST 116
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-009]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) then do the following
        COMMENT If function CheckMinMax with parameters (bg_lim_val_type with index counter j of Bg_settings with index BG counter-1 of Page_settings, ONE and MAX_LIM_VAL_TYPE)
        COMMENT  returns FALSE OR  function CheckFloatMinMax with parameters (bg_lim_val with index counter j of Bg_settings with index BG counter-1 of Page_settings, MIN_RANGE 
        COMMENT  and  MAX_RANGE) returns false AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SIX is equal to TRUE then,
        COMMENT Equivalence Class 343,360,362
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-010]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) and do the following,
        COMMENT If function CheckColor with parameters (bg_lim_color of Bg_settings with index BG counter-1 of Page_settings) returns FALSE
        COMMENT  AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT Equivalence Class 343,360,364
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckMinMax-DB-LLR-002]
        COMMENT The function shall return TRUE if parameter is in range.
        COMMENT Equivalence Class None
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-024]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from Counter j ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) and do the following,
        COMMENT If function CheckMinMax with parameters (bg_lim_type with counter j as index of Bg_settings with index BG counter-1 of Page_settings,TYPE_NORMAL,TYPE_WARNING)
        COMMENT  returns FALSE AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT Equivalence Class 343,360,366
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-012]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (bg_redx_width of Bg_settings with index BG counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns 
        COMMENT FALSE AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TEN is equal to TRUE then,
        COMMENT Equivalence Class 343,360,368
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = -1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 11000000,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = 40,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = MAX_LIM_VAL_TYPE,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = MAX_RANGE+1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = COLOR_MAX,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],								init = TYPE_WARNING+1,			ev = init			
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_LIN_RANGE",			ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_LIN_LENGTH",					ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_LIM_VAL",					ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_LIM_COLOR",					ev = init
			VAR Error_msg_string[4],			init = "BG 0001 BG_LIM_TYPE",					ev = init


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 116	
	
	
    TEST 117
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-024]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from Counter j ZERO to (bg_no_lim of Bg_settings with index BG counter-1 of Page_settings) and do the following,
        COMMENT If function CheckMinMax with parameters (bg_lim_type with counter j as index of Bg_settings with index BG counter-1 of Page_settings,TYPE_NORMAL,TYPE_WARNING)
        COMMENT  returns FALSE AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_SEVEN is equal to TRUE then,
        COMMENT Equivalence Class 342,360,366
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-012]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (bg_redx_width of Bg_settings with index BG counter-1 of Page_settings, ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns 
        COMMENT FALSE AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TEN is equal to TRUE then,
        COMMENT Equivalence Class 342,360,368
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = -1,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init			
			
			VAR Page_settings.Bg_settings[0].bg_lin_range[1..2],							init = 10000000,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1..2],							init = 40,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = MAX_LIM_VAL_TYPE,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = MAX_RANGE+1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = COLOR_MAX,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],								init = TYPE_WARNING+1,			ev = init			
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_LIN_LENGTH",			ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_WIDTH",					ev = init



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 117	
	
    TEST 118
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-026]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, bg_redx_width of Bg_settings
        COMMENT  with index BG counter-1 of Page_settings by two,PANEL_HEIGHT and PANEL_WIDTH) returns false OR CheckAxisMinMax with parameters (u16_x of bg_redx_axis of
        COMMENT  Bg_settings with index BG counter-1 of Page_settings,ZERO, PANEL_HEIGHT minus bg_redx_width of Bg_settings with index BG counter-1 of Page_settings by two,
        COMMENT  PANEL_WIDTH  minus bg_redx_width of Bg_settings with index BG counter-1 of Page_settings) returns false AND Pdi_error_count is greater than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_NINE is equal to TRUE then,
        COMMENT Equivalence Class 343,360,385
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-027]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_y of bg_redx_axis of Bg_settings with index BG counter-1 of Page_settings, bg_redx_height of Bg_settings
        COMMENT  with index BG counter-1 of Page_settings by two,PANEL_HEIGHT and PANEL_WIDTH) returns false OR CheckAxisMinMax with parameters (u16_y of bg_redx_axis of
        COMMENT  Bg_settings with index BG counter-1 of Page_settings,ZERO, PANEL_WIDTH minus bg_redx_height of Bg_settings with index BG counter-1 of Page_settings by two,
        COMMENT  PANEL_HEIGHT  minus bg_redx_height of Bg_settings with index BG counter-1 of Page_settings) returns false AND Pdi_error_count is greater than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_NINE is equal to TRUE then,
        COMMENT Equivalence Class 343,360,387
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-015]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckFont with parameters (bg_redx_font of Bg_settings with index BG counter-1 of Page_settings) returns FALSE AND Pdi_error_count
        COMMENT  is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_THIRTEEN is equal to TRUE then,
        COMMENT Equivalence Class 343,360,389
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-016]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckString with parameters (bg_redx_txt with index counter j-1 of Bg_settings with index BG counter-1 of Page_settings and
        COMMENT  MAX_STRING_CHAR_TXT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 
        COMMENT  bitwise AND with BIT_FOURTEEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_REDX_TXT, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,360,390
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-017]
        COMMENT The function shall loop from ZERO to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT Loops from ZERO to bg_no_lim-1 of Bg_settings with index BG counter-1 of Page_settings,
        COMMENT If nb_lim_color with index counter j of Nb_settings with index NB counter-1 of Page_settings is not equal to ZERO
        COMMENT  AND function CheckColor with parameter nb_lim_color with index counter j of Nb_settings  with index NB counter-1 of
        COMMENT  Page_settings returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG 
        COMMENT  counter-1 bitwise AND with BIT_EIGHT is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_LIM_COLOR, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,360,392
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0],							init = COLOR_MAX,			ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_NO_FONT,			ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = PANEL_WIDTH+1,		ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = PANEL_HEIGHT+1,		ev = init			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",			ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_NB_LIM_COLOR",				ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NB_FONT",				ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NB_FORMAT",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1				

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	


			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 118
	
	
    TEST 119
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-016]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckString with parameters (bg_redx_txt with index counter j-1 of Bg_settings with index BG counter-1 of Page_settings and
        COMMENT  MAX_STRING_CHAR_TXT) returns false AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 
        COMMENT  bitwise AND with BIT_FOURTEEN is equal to TRUE then,
        COMMENT Equivalence Class 342,360,390
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-017]
        COMMENT The function shall loop from ZERO to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT Loops from ZERO to bg_no_lim-1 of Bg_settings with index BG counter-1 of Page_settings,
        COMMENT If nb_lim_color with index counter j of Nb_settings with index NB counter-1 of Page_settings is not equal to ZERO
        COMMENT  AND function CheckColor with parameter nb_lim_color with index counter j of Nb_settings  with index NB counter-1 of
        COMMENT  Page_settings returns FALSE AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG 
        COMMENT  counter-1 bitwise AND with BIT_EIGHT is equal to TRUE then,
        COMMENT Equivalence Class 342,360,392
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0],							init = COLOR_MAX,			ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_NO_FONT,			ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = PANEL_WIDTH+1,		ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = PANEL_HEIGHT+1,		ev = init			
			

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = 6
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 8064
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 119	
	
	
    TEST 120
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-016]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckString with parameters (bg_redx_txt with index counter j-1 of Bg_settings with index BG counter-1 of Page_settings and
        COMMENT  MAX_STRING_CHAR_TXT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 
        COMMENT  bitwise AND with BIT_FOURTEEN is equal to FALSE
        COMMENT Equivalence Class 343,361,390
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-017]
        COMMENT The function shall loop from ZERO to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT Loops from ZERO to bg_no_lim-1 of Bg_settings with index BG counter-1 of Page_settings,
        COMMENT If nb_lim_color with index counter j of Nb_settings with index NB counter-1 of Page_settings is not equal to ZERO
        COMMENT  AND function CheckColor with parameter nb_lim_color with index counter j of Nb_settings  with index NB counter-1 of
        COMMENT  Page_settings returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG 
        COMMENT  counter-1 bitwise AND with BIT_EIGHT is equal to FALSE 
        COMMENT Equivalence Class 343,361,392
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0],							init = COLOR_MAX,			ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_NO_FONT,			ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = PANEL_WIDTH+1,		ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = PANEL_HEIGHT+1,		ev = init			
			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 120
	
	
    TEST 121
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-016]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT If function CheckString with parameters (bg_redx_txt with index counter j-1 of Bg_settings with index BG counter-1 of Page_settings and
        COMMENT  MAX_STRING_CHAR_TXT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 
        COMMENT  bitwise AND with BIT_FOURTEEN is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_REDX_TXT, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,391
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-017]
        COMMENT The function shall loop from ZERO to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT Loops from ZERO to bg_no_lim-1 of Bg_settings with index BG counter-1 of Page_settings,
        COMMENT If nb_lim_color with index counter j of Nb_settings with index NB counter-1 of Page_settings is not equal to ZERO
        COMMENT  AND function CheckColor with parameter nb_lim_color with index counter j of Nb_settings  with index NB counter-1 of
        COMMENT  Page_settings returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG 
        COMMENT  counter-1 bitwise AND with BIT_EIGHT is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_LIM_COLOR, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,393
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-018]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns FALSE AND Pdi_error_count
        COMMENT  is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_FOUR is equal to TRUE then,
        COMMENT       1.Set eFont of Ap_page1_bar_graphs with index index NB counter-1  to E_NO_FONT.
        COMMENT       2.Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_FONT, Error_msg_string with array index Pdi_error_count.
        COMMENT       3.Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,394
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-020]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then do the following,
        COMMENT 1.	Set Number box byte format to bg_nb_format of Bg_settings with index BG counter-1 of Page_settings bitwise AND with 0xF00000.
        COMMENT 2.	Set Number box decimal format to bg_nb_format of Bg_settings with index BG counter-1 of Page_settings bitwise AND with 0x1FC00.
        COMMENT 3.	Set Number box word format to bg_nb_format of Bg_settings with index BG counter-1 of Page_settings bitwise and with 0xFF.
        COMMENT 4.	If Number box byte format is not equal to NUM_ONEB AND Number box byte format is not equal to NUM_TWOB AND Number box byte 
        COMMENT format is not equal to NUM_THREEB  AND Number box byte format is not equal to NUM_FOURB AND Pdi_error_count is less than MAX_ERROR_MSG
        COMMENT  AND Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_THREE is equal to TRUE then,
        COMMENT a)	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_FORMAT, Error_msg_string with array index Pdi_error_count.
        COMMENT b)	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,396
        COMMENT
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_ONEB,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = PANEL_WIDTH+1,		ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = PANEL_HEIGHT+1,		ev = init			
			
																																																						


			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NB_AXIS",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 121	
	
	
    TEST 122
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-018]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns FALSE AND Pdi_error_count
        COMMENT  is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_FOUR is equal to TRUE then,
        COMMENT Equivalence Class 343,360,394
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-020]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then do the following,
        COMMENT 1.	Set Number box byte format to bg_nb_format of Bg_settings with index BG counter-1 of Page_settings bitwise AND with 0xF00000.
        COMMENT 2.	Set Number box decimal format to bg_nb_format of Bg_settings with index BG counter-1 of Page_settings bitwise AND with 0x1FC00.
        COMMENT 3.	Set Number box word format to bg_nb_format of Bg_settings with index BG counter-1 of Page_settings bitwise and with 0xFF.
        COMMENT 4.	If Number box byte format is not equal to NUM_ONEB AND Number box byte format is not equal to NUM_TWOB AND Number box byte 
        COMMENT format is not equal to NUM_THREEB  AND Number box byte format is not equal to NUM_FOURB AND Pdi_error_count is less than MAX_ERROR_MSG
        COMMENT  AND Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_THREE is equal to TRUE then,
        COMMENT Equivalence Class 343,360,396
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_TWOB,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = PANEL_WIDTH+1,		ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = PANEL_HEIGHT+1,		ev = init			
			


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = 6
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 8064
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 122	
	
	
    TEST 123
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-018]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns FALSE AND Pdi_error_count
        COMMENT  is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_FOUR is equal to TRUE then,
        COMMENT Equivalence Class 342,361,394
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-020]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then do the following,
        COMMENT 1.	Set Number box byte format to bg_nb_format of Bg_settings with index BG counter-1 of Page_settings bitwise AND with 0xF00000.
        COMMENT 2.	Set Number box decimal format to bg_nb_format of Bg_settings with index BG counter-1 of Page_settings bitwise AND with 0x1FC00.
        COMMENT 3.	Set Number box word format to bg_nb_format of Bg_settings with index BG counter-1 of Page_settings bitwise and with 0xFF.
        COMMENT 4.	If Number box byte format is not equal to NUM_ONEB AND Number box byte format is not equal to NUM_TWOB AND Number box byte 
        COMMENT format is not equal to NUM_THREEB  AND Number box byte format is not equal to NUM_FOURB AND Pdi_error_count is less than MAX_ERROR_MSG
        COMMENT  AND Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_THREE is equal to TRUE then,
        COMMENT Equivalence Class 342,361,396
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_THREEB,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = PANEL_WIDTH+1,		ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = PANEL_HEIGHT+1,		ev = init			
			


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 123	
	
	
	TEST 124
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-018]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckFont with parameters (nb_font of Nb_settings with index NB counter-1 of Page_settings) returns TRUE AND Pdi_error_count
        COMMENT  is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_FOUR is equal to TRUE then,
        COMMENT Equivalence Class 342,360,395
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-020]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then do the following,
        COMMENT 1.	Set Number box byte format to bg_nb_format of Bg_settings with index BG counter-1 of Page_settings bitwise AND with 0xF00000.
        COMMENT 2.	Set Number box decimal format to bg_nb_format of Bg_settings with index BG counter-1 of Page_settings bitwise AND with 0x1FC00.
        COMMENT 3.	Set Number box word format to bg_nb_format of Bg_settings with index BG counter-1 of Page_settings bitwise and with 0xFF.
        COMMENT 4.	If Number box byte format is  equal to NUM_ONEB AND Number box byte format is  equal to NUM_TWOB AND Number box byte 
        COMMENT format is  equal to NUM_THREEB  AND Number box byte format is  equal to NUM_FOURB AND Pdi_error_count is less than MAX_ERROR_MSG
        COMMENT  AND Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_THREE is equal to TRUE then,
        COMMENT Equivalence Class 342,360,397
        COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-021]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If return value of CheckDecimalFormat with parameter (Number box decimal format ) returns FALSE AND Pdi_error_count 
        COMMENT is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_THREE is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_FORMAT, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,398
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-019]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,400
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,402
        COMMENT
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_TWOD,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = PANEL_HEIGHT+1,		ev = init			
			
																																																						


			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NB_FORMAT",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 124
	
	
	TEST 125
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-019]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is greater than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT Equivalence Class 343,360,400
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is greater than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT Equivalence Class 343,360,402
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_FOURB,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = PANEL_HEIGHT+1,		ev = init			
			


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = 6
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 8064
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = 65535
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 125	
	
	
	TEST 126
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-019]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TWO is equal to FALSE then,
        COMMENT Equivalence Class 342,361,400
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is FALSE then,
        COMMENT Equivalence Class 342,361,402
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0..1],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0..1],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0..1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0..1],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = COLOR_BLACK,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_TWOD,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = PANEL_HEIGHT+1,		ev = init			
			

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 126
	
	TEST 127
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-019]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT The function shall loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT If function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_HEIGHT and PANEL_WIDTH)
        COMMENT  returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings, ZERO,PANEL_WIDTH and PANEL_HEIGHT)
        COMMENT  returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND Bg_parameter_occurrence with index BG counter-1 bitwise AND with BIT_TWO is equal to TRUE then,
        COMMENT Equivalence Class 342,360,401
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = NUM_TWOW,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = PANEL_HEIGHT+1,		ev = init			
			
																																																						


			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NB_AXIS",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 127	

	TEST 128
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 343,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0x3000,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						


			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_REDX_OFFSET_AXIS",				ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NB_FORMAT",				ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NB_FORMAT",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 128	
	
	
	TEST 129
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT Equivalence Class 342,361,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0x3000,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = 0,		ev = init			
			
																																																						


			VAR Error_msg_string[0],			init = "BG 0001 BG_NB_FORMAT",				ev = init
			VAR Error_msg_string[1],			init = "BG 0001 BG_NB_FORMAT",				ev = init
			VAR Error_msg_string[2],			init = "BG 0001 BG_NB_AXIS",				ev = init
			VAR Error_msg_string[3],			init = "BG 0001 BG_NB_AXIS",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = 6
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 8064
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 129	
	
	TEST 130
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 4,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 4,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init
			
			VAR Page_settings.Nb_settings[0].nb_lim_color[0..1],						init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_font,									init = E_LARGE_FONT,		ev = init			
			VAR Page_settings.Bg_settings[0].bg_nb_format,								init = 0x3000,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_x,								init = 0,					ev = init			
			VAR Page_settings.Nb_settings[0].nb_axis.u16_y,								init = PANEL_HEIGHT+1,		ev = init			
			
																																																						


			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[0][0],			init = TRUE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 1,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	
			
			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 130	
	
	
	
	
    TEST 131
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string BG_NB_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 342,360,406
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[0][0],			init = FALSE,					ev = init
			
			VAR Nb_tracker[0][0],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(353)10
			STUB FontsGetFontHeight(353)0			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			--STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 131
	
	
    TEST 132
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is TRUE then,
        COMMENT Equivalence Class 343,360,404 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_REDX_OFFSET_AXIS",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[1][1],			init = FALSE,					ev = init
			
			VAR Nb_tracker[1][1],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(353)10
			STUB FontsGetFontHeight(353)0			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			--STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 132
	
	
    TEST 133
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-028]
        COMMENT The function shall loop from ONE to Bg_cnt and do the following,
        COMMENT Loop from ONE to Nb_cnt,
        COMMENT If Bg_tracker with index [BG counter minus one][NB counter minus one] is equal to TRUE then,
        COMMENT - Set total digits to return value of FindTotalDigits with parameter bg_nb_format of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set char width to return value of function FontsGetStringWidth with parameter Character 'A' and nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Set number box width to product of total digits and char width
        COMMENT - Set number box height to return value of function FontsGetFontHeight with parameter nb_font of Nb_settings with index NB counter-1 of Page_settings.
        COMMENT - Increment number box width by one if number box width bitwise And one is equal to one.
        COMMENT - Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box width by two, 
        COMMENT ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six ) returns false OR Function CheckAxisMinMax with parameters (u16_x of nb_axis of Nb_settings
        COMMENT  with index NB counter-1 of Page_settings minus number box width by two, ZERO,PANEL_HEIGHT minus six and PANEL_WIDTH minus six) returns false OR 
        COMMENT  function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1 of Page_settings plus number box height by two,
        COMMENT  ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false OR function CheckAxisMinMax with parameters (u16_y of nb_axis of Nb_settings with index NB counter-1
        COMMENT  of Page_settings minus number box height by two, ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false AND Pdi_error_count is less than MAX_ERROR_MSG AND
        COMMENT  Bg_parameter_occurrence with index BG counter-1 and BIT_TWO is FALSE then,
        COMMENT Equivalence Class 342,361,404
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[1][1],			init = FALSE,					ev = init
			
			VAR Nb_tracker[1][1],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(353)10
			STUB FontsGetFontHeight(353)0			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			--STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 133
	
	
    TEST 134
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is less than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "BG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 342,374
        COMMENT
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[1][1],			init = FALSE,					ev = init
			
			VAR Nb_tracker[1][1],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(353)4
			STUB FontsGetFontHeight(353)0			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			--STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 134	
	
	
    TEST 135
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is greater than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT Equivalence Class 343,360,374
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_REDX_OFFSET_AXIS",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[1][1],			init = FALSE,					ev = init
			
			VAR Nb_tracker[1][1],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(353)4
			STUB FontsGetFontHeight(353)0			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			--STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 135	
	
	
    TEST 136
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is less than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is FALSE 
        COMMENT Equivalence Class 342,361,374
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[1][1],			init = FALSE,					ev = init
			
			VAR Nb_tracker[1][1],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(353)4
			STUB FontsGetFontHeight(353)0			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			--STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 136	
	
    TEST 137
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is less than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "BG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 342,360,376
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[1][1],			init = FALSE,					ev = init
			
			VAR Nb_tracker[1][1],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)10			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			--STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 137	
	
    TEST 138
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is greater than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT Equivalence Class 343,360,376
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_REDX_OFFSET_AXIS",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[1][1],			init = FALSE,					ev = init
			
			VAR Nb_tracker[1][1],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)10			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			--STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 138	
	
	
    TEST 139
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is less than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is FALSE
        COMMENT Equivalence Class 342,361,376 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH ",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[1][1],			init = FALSE,					ev = init
			
			VAR Nb_tracker[1][1],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)10			
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			--STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 139	
	
	
    TEST 140
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is less than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "BG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 342,360,378
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[1][1],			init = FALSE,					ev = init
			
			VAR Nb_tracker[1][1],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)4		
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			--STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 140	
	
	
    TEST 141
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is greater than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT Equivalence Class 343,360,378
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_REDX_OFFSET_AXIS",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[1][1],			init = FALSE,					ev = init
			
			VAR Nb_tracker[1][1],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)4		
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			--STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 141	
	
    TEST 142
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is less than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is FALSE
        COMMENT Equivalence Class 342,361,378
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[1][1],			init = FALSE,					ev = init
			
			VAR Nb_tracker[1][1],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)4		
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			--STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 142	
	
	
    TEST 143
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is less than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "BG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 342,360,380
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_LARGE_FONT,						ev = init		
				
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[1][1],			init = FALSE,					ev = init
			
			VAR Nb_tracker[1][1],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(353)0
			STUB FontsGetFontHeight(353)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			--STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 143		
	
	
    TEST 144
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is greater than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT Equivalence Class 343,360,380
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = PANEL_WIDTH+1,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 4,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 4,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init		
				
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_AXIS",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[1][1],			init = FALSE,					ev = init
			
			VAR Nb_tracker[1][1],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1					

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			--STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 144
	
	
    TEST 145
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is less than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is FALSE,
        COMMENT Equivalence Class 342,361,380 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = PANEL_WIDTH+1,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 4,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 4,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init		
				
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_REDX_OFFSET_AXIS",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[1][1],			init = FALSE,					ev = init
			
			VAR Nb_tracker[1][1],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1					

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			--STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 145	
	
	
	TEST 146
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is less than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "BG_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 342,360,374
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = PANEL_WIDTH+1,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 0,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = 4,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = 4,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init		
				
			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_AXISREDX_OFFSET_AXIS ",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[1][1],			init = FALSE,					ev = init
			
			VAR Nb_tracker[1][1],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			--STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 146	
	
    TEST 147
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is greater than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT Equivalence Class 343,360,374
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init			
			
																																																						
			VAR Error_msg_string[0],			init = "BG 0001 BG_WIDTH",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Bg_parameter_occurrence[0],			init = 0xFFFF,					ev = init
			VAR Bg_tracker[1][1],			init = FALSE,					ev = init
			
			VAR Nb_tracker[1][1],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)1
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 147	
	
	
    TEST 148
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND Pdi_error_count 
        COMMENT is less than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is FALSE
        COMMENT Equivalence Class 342,361,374
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { 0=>'\r',1=>'\n',others => '\0' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init			
			




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 6,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 8064
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[1][1],			init = FALSE,					ev = init
			
			VAR Nb_tracker[1][1],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 148	
	
	
    TEST 149
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-CheckBarGraph-DB-LLR-025]
        COMMENT The function shall loop from ONE to Bg_cnt  and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter bg_redx_txt of Bg_settings with index BG counter-1 of Page_settings, 
        COMMENT address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and bg_redx_font of  
        COMMENT Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and bg_redx_font of Bg_settings with index BG counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT -If new line indication is TRUE OR 
        COMMENT function CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  txt_redx_axis
        COMMENT  of Bg_settings with index BG counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_x of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  bg_redx_offset_axis of Bg_settings with index BG counter-1 of Page_settings plus u16_y of  bg_redx_axis of 
        COMMENT Bg_settings with index BG counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE AND Pdi_error_count 
        COMMENT is less than MAX_ERROR_MSG AND result of Bg_parameter_occurrence with index BG counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT Equivalence Class 342,360,375,377,379,381
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,				ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			VAR Ap_page1_bar_graphs[0].u16Format,					init = 0,					ev = init	
			
			VAR Page_settings.Bg_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_x,					init = 0,									ev = init			
			VAR Page_settings.Bg_settings[0].bg_axis.u16_y,					init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lin,						init = 1,											ev = init			
			VAR Page_settings.Bg_settings[0].bg_width,						init = 0,									ev = init		
			
			VAR Page_settings.Bg_settings[0].bg_orien,						init = BG_HORIZONTAL,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_no_lim,						init = 1,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_width,					init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_x,				init = 0,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_offset_axis.u16_y,				init = 0,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_txt,							init = { 0..10=>'A',11=>'\r',12=>'\n',13..15=>'A',16=>'\r',17=>'\n',18..27=>'A',28=>'\r',29=>'\n',others => 'A' },				ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_x,					init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_axis.u16_y,					init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Bg_settings[0].bg_redx_font,							init = E_NO_FONT,						ev = init		
				

			VAR Page_settings.Bg_settings[0].bg_lin_range[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lin_length[1],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val_type[0],							init = 1,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_val[0],								init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_color[0],							init = 0,						ev = init			
			VAR Page_settings.Bg_settings[0].bg_lim_type[0],							init = TYPE_WARNING,			ev = init			
			




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 6,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 8064
			
			VAR Bg_parameter_occurrence[0],			init = 0,					ev = init
			VAR Bg_tracker[1][1],			init = FALSE,					ev = init
			
			VAR Nb_tracker[1][1],			init = FALSE,					ev = init


			VAR Bg_cnt,			init = 1,							ev = init

			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0	
	
			STUB StrLen(Page_settings.Bg_settings[0].bg_redx_txt)31
			
			STUB CalculatePower(10,0)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 149	
	
	
    TEST 150
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-018]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT Call the function OctToStringTrim with parameters (label of Tb_settings with index TB counter-1 of Page_settings,Label_size and label string).
		COMMENT If function CheckMinMax with parameters (label of Tb_settings with index TB counter-1 of Page_settings,1 and MAX_LABEL) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, LABEL, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 75,77
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-001]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckString with parameters (tb_string of Tb_settings with index TB counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_STRING, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,79
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-017]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Tb_settings with index TB counter-1 of Page_settings, ZERO and THREE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string SDI, Error_msg_string with array index Pdi_error_count.
		COMMENT 2. Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,83,81
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-002]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of tb_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function CheckAxisMinMax with parameters (u16_y of tb_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
        COMMENT Equivalence Class 75,85
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-003]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_width of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false Pdi_error_count is less than MAX_ERROR_MSG  then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string TB_WIDTH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,88
        COMMENT
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => 'A' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 4,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH+1,					ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 30,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 30,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE+1,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							

			VAR Error_msg_string[0],			init = "TB 0000 LABEL",						ev = init
			VAR Error_msg_string[1],			init = "TB 0000 TB_STRING",					ev = init
			VAR Error_msg_string[2],			init = "TB 0000 SDI",						ev = init
			VAR Error_msg_string[3],			init = "TB 0000 TB_AXIS",					ev = init
			VAR Error_msg_string[4],			init = "TB 0000 TB_WIDTH",					ev = init



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1	

			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 150


    TEST 151
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-018]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT Call the function OctToStringTrim with parameters (label of Tb_settings with index TB counter-1 of Page_settings,Label_size and label string).
		COMMENT If function CheckMinMax with parameters (label of Tb_settings with index TB counter-1 of Page_settings,1 and MAX_LABEL) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, LABEL, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 76,77
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-001]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckString with parameters (tb_string of Tb_settings with index TB counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_STRING, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,79
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-017]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Tb_settings with index TB counter-1 of Page_settings, ZERO and THREE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string SDI, Error_msg_string with array index Pdi_error_count.
		COMMENT 2. Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,83,81
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-002]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of tb_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function CheckAxisMinMax with parameters (u16_y of tb_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
        COMMENT Equivalence Class 76,85
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-003]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_width of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false Pdi_error_count is less than MAX_ERROR_MSG  then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string TB_WIDTH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,88
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => 'A' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 4,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH+1,					ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 30,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 30,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE+1,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1	

			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 151
	
	
    TEST 152
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-002]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of tb_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function CheckAxisMinMax with parameters (u16_y of tb_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
        COMMENT Equivalence Class 75,85
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-003]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_width of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false Pdi_error_count is less than MAX_ERROR_MSG  then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string TB_WIDTH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,87
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-004]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string TB_HEIGHT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,89
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-005]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (tb_margin of Tb_settings with index TB counter-1 of Page_settings,ZERO and TWENTY) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_MARGIN, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,91
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-006]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (tb_frame_width of Tb_settings with index TB counter-1 of Page_settings,ZERO and TWENTY) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_FRAME_WIDTH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,93
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 30,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 30,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE+1,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							

			VAR Error_msg_string[0],			init = "TB 0001 TB_AXIS",					ev = init
			VAR Error_msg_string[1],			init = "TB 0001 TB_HEIGHT",					ev = init
			VAR Error_msg_string[2],			init = "TB 0001 TB_MARGIN",					ev = init
			VAR Error_msg_string[3],			init = "TB 0001 TB_FRAME_WIDTH",			ev = init
			VAR Error_msg_string[4],			init = "TB 0001 TB_FRAME_COLOR",			ev = init



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 152
	
	
    TEST 153
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-002]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of tb_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function CheckAxisMinMax with parameters (u16_y of tb_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
        COMMENT Equivalence Class 76,85
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-003]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_width of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false Pdi_error_count is less than MAX_ERROR_MSG  then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string TB_WIDTH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,87
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-004]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string TB_HEIGHT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,89
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-005]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (tb_margin of Tb_settings with index TB counter-1 of Page_settings,ZERO and TWENTY) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_MARGIN, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,91
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-006]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (tb_frame_width of Tb_settings with index TB counter-1 of Page_settings,ZERO and TWENTY) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_FRAME_WIDTH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,93
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 30,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 30,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE+1,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 153	
	
    TEST 154
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-007]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckColor with parameter (tb_frame_color of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_FRAME_COLOR, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,95
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-008]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckColor with parameter (tb_bg_color of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_BG_COLOR, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,95
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-019]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (tb_bit of Tb_settings with index TB counter-1 of Page_settings,MIN_START_BIT and MAX_START_BIT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_ONE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_BIT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,97
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-020]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If CheckMinMax with parameters (tb_cross_val_type of Tb_settings with index TB counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns FALSE OR CheckFloatMinMax with parameters (tb_cross_val of Tb_settings with index TB counter-1 of Page_settings,MIN_RANGE and MAX_RANGE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_TWO then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_CROSS_VAL, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,99 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-021]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (tb_align of Tb_settings with index TB counter-1 of Page_settings,ALIGN_CENTER and ALIGN_LEFT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_THREE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_ALIGN, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,101
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_TEAL,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE+1,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							

			VAR Error_msg_string[0],			init = "TB 0001 TB_AXIS",					ev = init
			VAR Error_msg_string[1],			init = "TB 0001 TB_BG_COLOR",				ev = init
			VAR Error_msg_string[2],			init = "TB 0001 TB_BIT",					ev = init
			VAR Error_msg_string[3],			init = "TB 0001 TB_CROSS_VAL",				ev = init
			VAR Error_msg_string[4],			init = "TB 0001 TB_ALIGN",					ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev =  3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 154
	
	
    TEST 155
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-007]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckColor with parameter (tb_frame_color of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_FRAME_COLOR, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,95
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-008]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckColor with parameter (tb_bg_color of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_BG_COLOR, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,95
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-019]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (tb_bit of Tb_settings with index TB counter-1 of Page_settings,MIN_START_BIT and MAX_START_BIT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_ONE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_BIT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,97
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-020]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If CheckMinMax with parameters (tb_cross_val_type of Tb_settings with index TB counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns FALSE OR CheckFloatMinMax with parameters (tb_cross_val of Tb_settings with index TB counter-1 of Page_settings,MIN_RANGE and MAX_RANGE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_TWO then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_CROSS_VAL, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,99 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-021]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (tb_align of Tb_settings with index TB counter-1 of Page_settings,ALIGN_CENTER and ALIGN_LEFT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_THREE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_ALIGN, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,101
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_TEAL,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE+1,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							


					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 155	
	
	
    TEST 156
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-018]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT Call the function OctToStringTrim with parameters (label of Tb_settings with index TB counter-1 of Page_settings,Label_size and label string).
		COMMENT If function CheckMinMax with parameters (label of Tb_settings with index TB counter-1 of Page_settings,1 and MAX_LABEL) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, LABEL, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 76,78
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-001]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckString with parameters (tb_string of Tb_settings with index TB counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_STRING, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,80
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-017]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Tb_settings with index TB counter-1 of Page_settings, ZERO and THREE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string SDI, Error_msg_string with array index Pdi_error_count.
		COMMENT 2. Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,83,82
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-002]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of tb_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function CheckAxisMinMax with parameters (u16_y of tb_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
        COMMENT Equivalence Class 76,86
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-003]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_width of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false Pdi_error_count is less than MAX_ERROR_MSG  then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string TB_WIDTH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,87
        COMMENT 
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-007]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckColor with parameter (tb_frame_color of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_FRAME_COLOR, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,96
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-008]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckColor with parameter (tb_bg_color of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_BG_COLOR, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,96
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-019]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (tb_bit of Tb_settings with index TB counter-1 of Page_settings,MIN_START_BIT and MAX_START_BIT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_ONE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_BIT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,98
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-020]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If CheckMinMax with parameters (tb_cross_val_type of Tb_settings with index TB counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns FALSE OR CheckFloatMinMax with parameters (tb_cross_val of Tb_settings with index TB counter-1 of Page_settings,MIN_RANGE and MAX_RANGE) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_TWO then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_CROSS_VAL, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,99 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-021]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (tb_align of Tb_settings with index TB counter-1 of Page_settings,ALIGN_CENTER and ALIGN_LEFT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_THREE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_ALIGN, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,101
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_TEAL,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE+1,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							





					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Tb_parameter_occurrence[0],			init = 0,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 156	
	
	
    TEST 157
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-009]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckFont with parameters (tb_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND 
		COMMENT result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_FOUR then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,103,107
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-010]
		COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckColor with parameter (tb_color of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND
		COMMENT result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_FIVE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_COLOR, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,106,107
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_DARK_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_RED,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							

			VAR Error_msg_string[0],			init = "TB 0001 TB_CROSS_VAL",					ev = init
			VAR Error_msg_string[1],			init = "TB 0001 TB_FONT",					ev = init
			VAR Error_msg_string[2],			init = "TB 0001 TB_COLOR",					ev = init
			VAR Error_msg_string[3],			init = "TB 0001 TB_STATE",					ev = init
			VAR Error_msg_string[4],			init = "TB 0001 TB_FLASH_COLOR",			ev = init



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 157	
	
    TEST 158
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-009]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckFont with parameters (tb_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND 
		COMMENT result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_FOUR then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,103,108
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-010]
		COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckColor with parameter (tb_color of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND
		COMMENT result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_FIVE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_COLOR, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,106,108
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_DARK_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_RED,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Tb_parameter_occurrence[0],			init = 0,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 158	
	
    TEST 159
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-022]
		COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If tb_state of Tb_settings with index TB counter-1 of Page_settings is not equal to TXT_STATE_NORMAL and  tb_state of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings is not equal to TXT_STATE_REVERSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence 
		COMMENT with index Tb counter-1 bitwise and with BIT_SIX then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_STATE, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,111
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-023]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If tb_flash of Tb_settings with index TB counter-1 of Page_settings is not equal to TEXT_FLASH_ON and tb_flash of Tb_settings with index TB counter-1 
		COMMENT of Page_settings is not equal to  TEXT_FLASH_OFF AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 
		COMMENT bitwise and with BIT_SEVEN then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_FLASH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,114
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-024]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If return value of CheckColor with parameter tb_flash_color of Tb_settings with index TB counter-1 of Page_settings is FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of 
		COMMENT Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_FOURTEEN then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_FLASH_COLOR, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,115
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-011]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of tb_redx_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function
		COMMENT CheckAxisMinMax with parameters (u16_y of tb_redx_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT 3.Result of (Tb_parameter_occurrence with index TB counter-1 bitwise AND with BIT_EIGHT) is true.
        COMMENT Equivalence Class 75,107,117
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-012]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_redx_width of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index TB count-1 bitwise and with BIT_NINE is one  then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string TB_REDX_WIDTH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,119
        COMMENT
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							

			VAR Error_msg_string[0],			init = "TB 0001 TB_CROSS_VAL",					ev = init
			VAR Error_msg_string[1],			init = "TB 0001 TB_REDX_AXIS",					ev = init
			VAR Error_msg_string[2],			init = "TB 0001 TB_REDX_WIDTH",					ev = init
			VAR Error_msg_string[3],			init = "TB 0001 TB_REDX_AXIS",					ev = init
			VAR Error_msg_string[4],			init = "TB 0001 TB_REDX_AXIS",				ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 159	
	
    TEST 160
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-022]
		COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If tb_state of Tb_settings with index TB counter-1 of Page_settings is not equal to TXT_STATE_NORMAL and  tb_state of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings is not equal to TXT_STATE_REVERSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence 
		COMMENT with index Tb counter-1 bitwise and with BIT_SIX is zero
        COMMENT Equivalence Class 75,108,111
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-023]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If tb_flash of Tb_settings with index TB counter-1 of Page_settings is not equal to TEXT_FLASH_ON and tb_flash of Tb_settings with index TB counter-1 
		COMMENT of Page_settings is not equal to  TEXT_FLASH_OFF AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 
		COMMENT bitwise and with BIT_SEVEN is zero
        COMMENT Equivalence Class 75,108,114
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-024]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If return value of CheckColor with parameter tb_flash_color of Tb_settings with index TB counter-1 of Page_settings is FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of 
		COMMENT Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_FOURTEEN is zero
        COMMENT Equivalence Class 75,108,115
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-011]
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of tb_redx_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function
		COMMENT CheckAxisMinMax with parameters (u16_y of tb_redx_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT 3.Result of (Tb_parameter_occurrence with index TB counter-1 bitwise AND with BIT_EIGHT) is FALSE.
        COMMENT Equivalence Class 75,108,117
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-012]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_redx_width of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false Pdi_error_count is less than
		COMMENT The MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index TB count-1 bitwise and with BIT_NINE is zero
        COMMENT Equivalence Class 75,108,119
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Tb_parameter_occurrence[0],			init = 0,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 160	
	
    TEST 161
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-022]
		COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If tb_state of Tb_settings with index TB counter-1 of Page_settings is not equal to TXT_STATE_NORMAL and  tb_state of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings is not equal to TXT_STATE_REVERSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence 
		COMMENT with index Tb counter-1 bitwise and with BIT_SIX then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_STATE, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,111
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-023]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If tb_flash of Tb_settings with index TB counter-1 of Page_settings is not equal to TEXT_FLASH_ON and tb_flash of Tb_settings with index TB counter-1 
		COMMENT of Page_settings is not equal to  TEXT_FLASH_OFF AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 
		COMMENT bitwise and with BIT_SEVEN then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_FLASH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,114
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-024]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If return value of CheckColor with parameter tb_flash_color of Tb_settings with index TB counter-1 of Page_settings is FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of 
		COMMENT Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_FOURTEEN then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_FLASH_COLOR, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,115
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-011]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of tb_redx_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function
		COMMENT CheckAxisMinMax with parameters (u16_y of tb_redx_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT 3.Result of (Tb_parameter_occurrence with index TB counter-1 bitwise AND with BIT_EIGHT) is true.
        COMMENT Equivalence Class 75,107,117
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-012]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_redx_width of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index TB count-1 bitwise and with BIT_NINE is one  then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string TB_REDX_WIDTH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,119
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 2,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 2,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							

			VAR Error_msg_string[0],			init = "TB 0001 TB_CROSS_VAL",					ev = init
			VAR Error_msg_string[1],			init = "TB 0001 TB_REDX_AXIS",					ev = init
			VAR Error_msg_string[2],			init = "TB 0001 TB_REDX_AXIS",			ev = init
			VAR Error_msg_string[3],			init = "TB 0001 TB_REDX_OFFSET_AXIS",					ev = init



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 161	
	
	
    TEST 162
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-022]
		COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If tb_state of Tb_settings with index TB counter-1 of Page_settings is not equal to TXT_STATE_NORMAL and  tb_state of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings is not equal to TXT_STATE_REVERSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence 
		COMMENT with index Tb counter-1 bitwise and with BIT_SIX is zero
        COMMENT Equivalence Class 75,108,111
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-023]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If tb_flash of Tb_settings with index TB counter-1 of Page_settings is not equal to TEXT_FLASH_ON and tb_flash of Tb_settings with index TB counter-1 
		COMMENT of Page_settings is not equal to  TEXT_FLASH_OFF AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 
		COMMENT bitwise and with BIT_SEVEN is zero
        COMMENT Equivalence Class 75,108,114
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-024]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If return value of CheckColor with parameter tb_flash_color of Tb_settings with index TB counter-1 of Page_settings is FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of 
		COMMENT Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_FOURTEEN is zero
        COMMENT Equivalence Class 75,108,115
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-011]
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of tb_redx_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function
		COMMENT CheckAxisMinMax with parameters (u16_y of tb_redx_axis of Tb_settings with index as TB counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT 3.Result of (Tb_parameter_occurrence with index TB counter-1 bitwise AND with BIT_EIGHT) is FALSE.
        COMMENT Equivalence Class 75,108,117
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-012]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_redx_width of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns false Pdi_error_count is less than
		COMMENT The MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index TB count-1 bitwise and with BIT_NINE is zero 
        COMMENT Equivalence Class 75,108,119
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 2,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 2,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Tb_parameter_occurrence[0],			init = 0,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 162	
	

    TEST 163
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-025]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings 
		COMMENT with index TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of 
		COMMENT Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two and 
		COMMENT PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG 
		COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 75,107,121
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-026]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_height of Tb_settings with 
		COMMENT index TB counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings,0,PANEL_WIDTH minus tb_redx_height of Tb_settings with index TB counter-1 of Page_settings by two and PANEL_HEIGHT minus tb_redx_height of Tb_settings
		COMMENT with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1
		COMMENT bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 75,107,125
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-013]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_redx_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index TB count-1 bitwise and with BIT_TEN is one  then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string TB_REDX_HEIGHT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,129
        COMMENT  
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-014]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax2 with parameters (u16_x of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function 
		COMMENT CheckAxisMinMax2 with parameters (u16_y of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings, -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT 3.Result of (Tb_parameter_occurrence with index TB counter-1 bitwise AND with BIT_ELEVEN) is true.
        COMMENT Equivalence Class 75,107,131
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-015]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckFont with parameters (tb_redx_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_TWELVE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,135
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_TURQUOISE,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_DARK_BLUE,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_VIOLET,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_NORMAL,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_ON,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BLUE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 2,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 2,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { 0=>'\r',1=>'h',3=>'o',4=>'w',5=>'\n',others=>'\0' },				ev = init			
																																																							

			VAR Error_msg_string[0],			init = "TB 0001 TB_CROSS_VAL",					ev = init
			VAR Error_msg_string[1],			init = "TB 0001 TB_REDX_AXIS",					ev = init
			VAR Error_msg_string[2],			init = "TB 0001 TB_REDX_AXIS",			ev = init
			VAR Error_msg_string[3],			init = "TB 0001 TB_REDX_OFFSET_AXIS",					ev = init
			VAR Error_msg_string[4],			init = "TB 0001 TB_REDX_FONT",					ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)3
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 163	
	
	
    TEST 164
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-025]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings 
		COMMENT with index TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of 
		COMMENT Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two and 
		COMMENT PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is greater than MAX_ERROR_MSG 
		COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 76,107,121
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-026]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_height of Tb_settings with 
		COMMENT index TB counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings,0,PANEL_WIDTH minus tb_redx_height of Tb_settings with index TB counter-1 of Page_settings by two and PANEL_HEIGHT minus tb_redx_height of Tb_settings
		COMMENT with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is greater than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1
		COMMENT bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 76,107,125
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-013]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_redx_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false Pdi_error_count is greater than MAX_ERROR_MSG AND result of 
		COMMENT Tb_parameter_occurrence with index TB count-1 bitwise and with BIT_TEN is one  then,
        COMMENT Equivalence Class 76,107,129
        COMMENT  
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-014]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1. Function CheckAxisMinMax2 with parameters (u16_x of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function 
		COMMENT CheckAxisMinMax2 with parameters (u16_y of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings, -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is greater than MAX_ERROR_MSG.
		COMMENT 3.Result of (Tb_parameter_occurrence with index TB counter-1 bitwise AND with BIT_ELEVEN) is true.
        COMMENT Equivalence Class 76,107,131
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-015]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckFont with parameters (tb_redx_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND
		COMMENT Pdi_error_count is greater than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_TWELVE
        COMMENT Equivalence Class 76,107,135
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_NORMAL,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_ON,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 2,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 2,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 164	
	
	
    TEST 165
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-025]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings 
		COMMENT with index TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of 
		COMMENT Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two and 
		COMMENT PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is greater than MAX_ERROR_MSG 
		COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 75,108,121
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-026]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_height of Tb_settings with 
		COMMENT index TB counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings,0,PANEL_WIDTH minus tb_redx_height of Tb_settings with index TB counter-1 of Page_settings by two and PANEL_HEIGHT minus tb_redx_height of Tb_settings
		COMMENT with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is greater than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1
		COMMENT bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 75,108,125
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-013]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_redx_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false Pdi_error_count is greater than MAX_ERROR_MSG AND result of 
		COMMENT Tb_parameter_occurrence with index TB count-1 bitwise and with BIT_TEN is one  then,
        COMMENT Equivalence Class 75,108,129
        COMMENT  
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-014]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1. Function CheckAxisMinMax2 with parameters (u16_x of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function 
		COMMENT CheckAxisMinMax2 with parameters (u16_y of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings, -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is greater than MAX_ERROR_MSG.
		COMMENT 3.Result of (Tb_parameter_occurrence with index TB counter-1 bitwise AND with BIT_ELEVEN) is true.
        COMMENT Equivalence Class 75,108,131
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-015]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckFont with parameters (tb_redx_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND
		COMMENT Pdi_error_count is greater than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_TWELVE
        COMMENT Equivalence Class 75,108,135
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_NORMAL,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_ON,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 2,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 2,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Tb_parameter_occurrence[0],			init = 0,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 165	
	
	
    TEST 166
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-025]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings 
		COMMENT with index TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of 
		COMMENT Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two and 
		COMMENT PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG 
		COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 75,107,121
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-026]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_height of Tb_settings with 
		COMMENT index TB counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings,0,PANEL_WIDTH minus tb_redx_height of Tb_settings with index TB counter-1 of Page_settings by two and PANEL_HEIGHT minus tb_redx_height of Tb_settings
		COMMENT with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1
		COMMENT bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 75,107,125
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_GRAY,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_GRAY,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_DARK_GRAY,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_NORMAL,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_ON,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_DARK_YELLOW,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH+1,							ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT,							ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = PANEL_HEIGHT,							ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_LARGE_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							

			VAR Error_msg_string[0],			init = "TB 0001 TB_CROSS_VAL",					ev = init
			VAR Error_msg_string[1],			init = "TB 0001 TB_REDX_AXISET_AXIS",			ev = init
			VAR Error_msg_string[2],			init = "TB 0001 TB_REDX_AXISET_AXIS",			ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 166	
	
	
    TEST 167
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-025]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings 
		COMMENT with index TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of 
		COMMENT Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two and 
		COMMENT PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is greater than MAX_ERROR_MSG 
		COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 75,108,121
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-026]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_height of Tb_settings with 
		COMMENT index TB counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings,0,PANEL_WIDTH minus tb_redx_height of Tb_settings with index TB counter-1 of Page_settings by two and PANEL_HEIGHT minus tb_redx_height of Tb_settings
		COMMENT with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is greater than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1
		COMMENT bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 75,108,125
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_YELLOW,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_ORANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_WHITE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_NORMAL,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_ON,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_DARK_YELLOW,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH+1,							ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT,							ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = PANEL_HEIGHT,							ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_LARGE_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							

			VAR Error_msg_string[0],			init = "TB 0001 TB_REDX_AXIS",					ev = init
			VAR Error_msg_string[1],			init = "TB 0001 TB_REDX_OFFSET_AXIS",			ev = init
			VAR Error_msg_string[2],			init = "TB 0001 TB_REDX_OFFSET_AXIS",			ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Tb_parameter_occurrence[0],			init = 0,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 167	
	
    TEST 168
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-025]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings 
		COMMENT with index TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of 
		COMMENT Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two and 
		COMMENT PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG 
		COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 75,107,124
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-026]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_height of Tb_settings with 
		COMMENT index TB counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings,0,PANEL_WIDTH minus tb_redx_height of Tb_settings with index TB counter-1 of Page_settings by two and PANEL_HEIGHT minus tb_redx_height of Tb_settings
		COMMENT with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1
		COMMENT bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 75,107,125
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-013]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_redx_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index TB count-1 bitwise and with BIT_TEN is one  then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string TB_REDX_HEIGHT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,133
        COMMENT  
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-014]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax2 with parameters (u16_x of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function 
		COMMENT CheckAxisMinMax2 with parameters (u16_y of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings, -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT 3.Result of (Tb_parameter_occurrence with index TB counter-1 bitwise AND with BIT_ELEVEN) is true.
        COMMENT Equivalence Class 75,107,133
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-015]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckFont with parameters (tb_redx_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_TWELVE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,137
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_GRAY,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_GRAY,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_DARK_GRAY,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_NORMAL,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_ON,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_DARK_YELLOW,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH+1,							ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT,							ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = PANEL_WIDTH,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = PANEL_HEIGHT,							ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_LARGE_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							

			VAR Error_msg_string[0],			init = "TB 0001 TB_CROSS_VAL",					ev = init
			VAR Error_msg_string[1],			init = "TB 0001 TB_REDX_AXISET_AXIS",			ev = init
			VAR Error_msg_string[2],			init = "TB 0001 TB_REDX_AXISET_AXIS",			ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(353)1
			STUB FontsGetFontHeight(353)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 168		
	
	
    TEST 169
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-025]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings 
		COMMENT with index TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of 
		COMMENT Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two and 
		COMMENT PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG 
		COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 75,107,121
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-026]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_height of Tb_settings with 
		COMMENT index TB counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings,0,PANEL_WIDTH minus tb_redx_height of Tb_settings with index TB counter-1 of Page_settings by two and PANEL_HEIGHT minus tb_redx_height of Tb_settings
		COMMENT with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1
		COMMENT bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 75,107,125
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-013]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_redx_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index TB count-1 bitwise and with BIT_TEN is one  then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string TB_REDX_HEIGHT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,131
        COMMENT  
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-014]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax2 with parameters (u16_x of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function 
		COMMENT CheckAxisMinMax2 with parameters (u16_y of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings, -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT 3.Result of (Tb_parameter_occurrence with index TB counter-1 bitwise AND with BIT_ELEVEN) is true.
        COMMENT Equivalence Class 75,107,131
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-015]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckFont with parameters (tb_redx_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_TWELVE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,137
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							

			VAR Error_msg_string[0],			init = "TB 0001 TB_CROSS_VAL",					ev = init
			VAR Error_msg_string[1],			init = "TB 0001 TB_REDX_AXIS",					ev = init
			VAR Error_msg_string[2],			init = "TB 0001 TB_REDX_WIDTH",					ev = init
			VAR Error_msg_string[3],			init = "TB 0001 TB_REDX_AXIS",					ev = init
			VAR Error_msg_string[4],			init = "TB 0001 TB_REDX_AXIS",				ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 169	
	
	
    TEST 170
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-025]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings 
		COMMENT with index TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of 
		COMMENT Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two and 
		COMMENT PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG 
		COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 76,107,121
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-026]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_height of Tb_settings with 
		COMMENT index TB counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings,0,PANEL_WIDTH minus tb_redx_height of Tb_settings with index TB counter-1 of Page_settings by two and PANEL_HEIGHT minus tb_redx_height of Tb_settings
		COMMENT with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1
		COMMENT bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 76,107,125
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-013]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_redx_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index TB count-1 bitwise and with BIT_TEN is one  then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string TB_REDX_HEIGHT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,107,131
        COMMENT  
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-014]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax2 with parameters (u16_x of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function 
		COMMENT CheckAxisMinMax2 with parameters (u16_y of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings, -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT 3.Result of (Tb_parameter_occurrence with index TB counter-1 bitwise AND with BIT_ELEVEN) is true.
        COMMENT Equivalence Class 76,107,131
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-015]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckFont with parameters (tb_redx_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_TWELVE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,107,137
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							

			VAR Error_msg_string[0],			init = "TB 0001 TB_REDX_AXIS",					ev = init
			VAR Error_msg_string[1],			init = "TB 0001 TB_REDX_WIDTH",					ev = init
			VAR Error_msg_string[2],			init = "TB 0001 TB_REDX_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "TB 0001 TB_REDX_AXIS",					ev = init
			VAR Error_msg_string[4],			init = "TB 0001 TB_REDX_HEIGHT",				ev = init
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 170	
	
    TEST 171
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-025]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings 
		COMMENT with index TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of 
		COMMENT Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two and 
		COMMENT PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG 
		COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 75,108,123
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-026]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_height of Tb_settings with 
		COMMENT index TB counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings,0,PANEL_WIDTH minus tb_redx_height of Tb_settings with index TB counter-1 of Page_settings by two and PANEL_HEIGHT minus tb_redx_height of Tb_settings
		COMMENT with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1
		COMMENT bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 75,108,125
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-013]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_redx_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index TB count-1 bitwise and with BIT_TEN is one  then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string TB_REDX_HEIGHT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,108,133
        COMMENT  
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-014]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax2 with parameters (u16_x of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function 
		COMMENT CheckAxisMinMax2 with parameters (u16_y of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings, -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT 3.Result of (Tb_parameter_occurrence with index TB counter-1 bitwise AND with BIT_ELEVEN) is true.
        COMMENT Equivalence Class 75,108,133
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-015]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckFont with parameters (tb_redx_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_TWELVE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,108,137 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							

			VAR Error_msg_string[0],			init = "TB 0001 TB_REDX_AXIS",					ev = init
			VAR Error_msg_string[1],			init = "TB 0001 TB_REDX_WIDTH",					ev = init
			VAR Error_msg_string[2],			init = "TB 0001 TB_REDX_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "TB 0001 TB_REDX_AXIS",					ev = init
			VAR Error_msg_string[4],			init = "TB 0001 TB_REDX_HEIGHT",				ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Tb_parameter_occurrence[0],			init = 0,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 171	
	
    TEST 172
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT  
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-014]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax2 with parameters (u16_x of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function 
		COMMENT CheckAxisMinMax2 with parameters (u16_y of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings, -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT 3.Result of (Tb_parameter_occurrence with index TB counter-1 bitwise AND with BIT_ELEVEN) is true.
        COMMENT Equivalence Class 75,107,131
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-015]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckFont with parameters (tb_redx_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_TWELVE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,137 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 172	
	
	
	
    TEST 173
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT  
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-014]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax2 with parameters (u16_x of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function 
		COMMENT CheckAxisMinMax2 with parameters (u16_y of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings, -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT 3.Result of (Tb_parameter_occurrence with index TB counter-1 bitwise AND with BIT_ELEVEN) is true.
        COMMENT Equivalence Class 75,108,133
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-015]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckFont with parameters (tb_redx_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_TWELVE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,108,135
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Tb_parameter_occurrence[0],			init = 0,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 173	


    TEST 174
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-014]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax2 with parameters (u16_x of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function 
		COMMENT CheckAxisMinMax2 with parameters (u16_y of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings, -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT 3.Result of (Tb_parameter_occurrence with index TB counter-1 bitwise AND with BIT_ELEVEN) is true.
        COMMENT Equivalence Class 75,108,131
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-015]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckFont with parameters (tb_redx_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_TWELVE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,108,137 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = PANEL_WIDTH,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 174
	
    TEST 175
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-025]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings 
		COMMENT with index TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of 
		COMMENT Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two and 
		COMMENT PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG 
		COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 76,108,123
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-026]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_height of Tb_settings with 
		COMMENT index TB counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings,0,PANEL_WIDTH minus tb_redx_height of Tb_settings with index TB counter-1 of Page_settings by two and PANEL_HEIGHT minus tb_redx_height of Tb_settings
		COMMENT with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1
		COMMENT bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 76,108,125 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 175	
	
	
    TEST 176
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-025]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings 
		COMMENT with index TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of 
		COMMENT Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two and 
		COMMENT PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG 
		COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 75,107,122,124
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-026]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_height of Tb_settings with 
		COMMENT index TB counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings,0,PANEL_WIDTH minus tb_redx_height of Tb_settings with index TB counter-1 of Page_settings by two and PANEL_HEIGHT minus tb_redx_height of Tb_settings
		COMMENT with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1
		COMMENT bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 75,107,126,128
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-013]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_redx_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index TB count-1 bitwise and with BIT_TEN is one  then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string TB_REDX_HEIGHT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,133
        COMMENT  
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-014]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax2 with parameters (u16_x of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function 
		COMMENT CheckAxisMinMax2 with parameters (u16_y of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings, -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT 3.Result of (Tb_parameter_occurrence with index TB counter-1 bitwise AND with BIT_ELEVEN) is true.
        COMMENT Equivalence Class 75,107,133
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-015]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckFont with parameters (tb_redx_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_TWELVE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,137 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_NO_FONT)2
			STUB FontsGetFontHeight(E_NO_FONT)0
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 176	
	
	
    TEST 177
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-025]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings 
		COMMENT with index TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of 
		COMMENT Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two and 
		COMMENT PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG 
		COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 75,107,122,124
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-026]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_height of Tb_settings with 
		COMMENT index TB counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings,0,PANEL_WIDTH minus tb_redx_height of Tb_settings with index TB counter-1 of Page_settings by two and PANEL_HEIGHT minus tb_redx_height of Tb_settings
		COMMENT with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1
		COMMENT bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 75,107,126,128
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-013]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_redx_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index TB count-1 bitwise and with BIT_TEN is one  then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string TB_REDX_HEIGHT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,131
        COMMENT  
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-014]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax2 with parameters (u16_x of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function 
		COMMENT CheckAxisMinMax2 with parameters (u16_y of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings, -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT 3.Result of (Tb_parameter_occurrence with index TB counter-1 bitwise AND with BIT_ELEVEN) is true.
        COMMENT Equivalence Class 75,107,131
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-015]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckFont with parameters (tb_redx_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_TWELVE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,135 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)2
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 177	
	
    TEST 178
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-025]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings 
		COMMENT with index TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of 
		COMMENT Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two and 
		COMMENT PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG 
		COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 75,107,122,124
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-026]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_height of Tb_settings with 
		COMMENT index TB counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings,0,PANEL_WIDTH minus tb_redx_height of Tb_settings with index TB counter-1 of Page_settings by two and PANEL_HEIGHT minus tb_redx_height of Tb_settings
		COMMENT with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1
		COMMENT bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 75,107,126,128
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-013]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_redx_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index TB count-1 bitwise and with BIT_TEN is one  then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string TB_REDX_HEIGHT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,131
        COMMENT  
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-014]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax2 with parameters (u16_x of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function 
		COMMENT CheckAxisMinMax2 with parameters (u16_y of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings, -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT 3.Result of (Tb_parameter_occurrence with index TB counter-1 bitwise AND with BIT_ELEVEN) is true.
        COMMENT Equivalence Class 75,107,131
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-015]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckFont with parameters (tb_redx_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_TWELVE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,135 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
																																																							
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 178	
	
	
    TEST 179
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-025]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_width of Tb_settings 
		COMMENT with index TB counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR CheckAxisMinMax with parameters (u16_x of  tb_redx_axis of 
		COMMENT Tb_settings with index TB counter-1 of Page_settings,0,PANEL_HEIGHT minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two and 
		COMMENT PANEL_WIDTH minus tb_redx_width of Tb_settings with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG 
		COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 76,107,122,124
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-026]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings,tb_redx_height of Tb_settings with 
		COMMENT index TB counter-1 of Page_settings by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  tb_redx_axis of Tb_settings with index 
		COMMENT TB counter-1 of Page_settings,0,PANEL_WIDTH minus tb_redx_height of Tb_settings with index TB counter-1 of Page_settings by two and PANEL_HEIGHT minus tb_redx_height of Tb_settings
		COMMENT with index TB counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1
		COMMENT bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 76,107,126,128
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-013]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (tb_redx_height of Tb_settings with index TB count-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns false Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index TB count-1 bitwise and with BIT_TEN is one  then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, string TB_REDX_HEIGHT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,107,131
        COMMENT  
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-014]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax2 with parameters (u16_x of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE OR function 
		COMMENT CheckAxisMinMax2 with parameters (u16_y of tb_redx_offset_axis of Tb_settings with index as TB counter-1 of Page_settings, -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT 3.Result of (Tb_parameter_occurrence with index TB counter-1 bitwise AND with BIT_ELEVEN) is true.
        COMMENT Equivalence Class 76,107,131
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-015]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckFont with parameters (tb_redx_font of Tb_settings with index TB counter-1 of Page_settings) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_TWELVE then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 76,107,135 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => 'A' },				ev = init			
			VAR Page_settings.Tb_settings[1].tb_redx_txt,					init = { others => 'A' },				ev = init																																																								

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 2,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
			STUB StrLen(Page_settings.Tb_settings[1].tb_redx_txt)31

			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 179	
	
	
    TEST 180
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-016]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings,MAX_STRING_CHAR_TXT) returns FALSE AND
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_THIRTEEN then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_TXT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,137
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-027]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT - Set new line indication to return value of function CalStringParam with parameter tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings, address of max width and address of line count.
		COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT- Set line count to product of line count and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
		COMMENT -If new line indication is TRUE OR 
		COMMENT function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Textbox_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ELEVEN is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
		COMMENT Equivalence Class 75,107,139
		COMMENT
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)10
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 180	
	
    TEST 181
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-016]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings,MAX_STRING_CHAR_TXT) returns FALSE AND
		COMMENT Pdi_error_count is greater than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_THIRTEEN then,
        COMMENT Equivalence Class 76,107,137
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-027]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT - Set new line indication to return value of function CalStringParam with parameter tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings, address of max width and address of line count.
		COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT- Set line count to product of line count and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
		COMMENT -If new line indication is TRUE OR 
		COMMENT function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR  
		COMMENT AND Pdi_error_count is greater than MAX_ERROR_MSG AND result of Textbox_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ELEVEN is true then,
		COMMENT Equivalence Class 76,107,139
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)10
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 181	
	
    TEST 182
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-016]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings,MAX_STRING_CHAR_TXT) returns FALSE AND
		COMMENT Pdi_error_count is greater than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_THIRTEEN then,
        COMMENT Equivalence Class 75,108,137
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-027]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT - Set new line indication to return value of function CalStringParam with parameter tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings, address of max width and address of line count.
		COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT- Set line count to product of line count and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
		COMMENT -If new line indication is TRUE OR 
		COMMENT function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR  
		COMMENT AND Pdi_error_count is greater than MAX_ERROR_MSG AND result of Textbox_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ELEVEN is true then,
		COMMENT Equivalence Class 75,108,139 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Tb_parameter_occurrence[0],			init = 0,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)10
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 182	
	
    TEST 183
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-016]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings,MAX_STRING_CHAR_TXT) returns FALSE AND
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_THIRTEEN then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TB_REDX_TXT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 75,107,137
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-027]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT - Set new line indication to return value of function CalStringParam with parameter tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings, address of max width and address of line count.
		COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT- Set line count to product of line count and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
		COMMENT -If new line indication is TRUE OR 
		COMMENT function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR  
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Textbox_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ELEVEN is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
		COMMENT Equivalence Class 75,107,140,141
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)2
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 183	
	
	
    TEST 184
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-016]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings,MAX_STRING_CHAR_TXT) returns FALSE AND
		COMMENT Pdi_error_count is greater than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_THIRTEEN then,
        COMMENT Equivalence Class 76,107,137
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-027]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT - Set new line indication to return value of function CalStringParam with parameter tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings, address of max width and address of line count.
		COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT- Set line count to product of line count and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
		COMMENT -If new line indication is TRUE OR 
		COMMENT function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR  
		COMMENT AND Pdi_error_count is greater than MAX_ERROR_MSG AND result of Textbox_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ELEVEN is true then,
		COMMENT Equivalence Class 76,107,140,141
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)2
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 184	
	
    TEST 185
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-016]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings,MAX_STRING_CHAR_TXT) returns FALSE AND
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG AND result of Tb_parameter_occurrence with index Tb counter-1 bitwise and with BIT_THIRTEEN is zero,
        COMMENT Equivalence Class 75,108,137
        COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-027]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT - Set new line indication to return value of function CalStringParam with parameter tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings, address of max width and address of line count.
		COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT- Set line count to product of line count and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
		COMMENT -If new line indication is TRUE OR 
		COMMENT function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR  
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Textbox_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ELEVEN is zero,
		COMMENT Equivalence Class 75,108,140,141
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Tb_parameter_occurrence[0],			init = 0,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)2
			STUB FontsGetFontHeight(E_NO_FONT)1
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 185	
	
    TEST 186
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-027]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT - Set new line indication to return value of function CalStringParam with parameter tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings, address of max width and address of line count.
		COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT- Set line count to product of line count and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
		COMMENT -If new line indication is TRUE OR 
		COMMENT function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR  
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Textbox_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ELEVEN is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
		COMMENT Equivalence Class 75,107,140,142,143
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)10
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 186	
	
	
    TEST 187
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-027]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT - Set new line indication to return value of function CalStringParam with parameter tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings, address of max width and address of line count.
		COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT- Set line count to product of line count and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
		COMMENT -If new line indication is TRUE OR 
		COMMENT function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR  
		COMMENT AND Pdi_error_count is greater than MAX_ERROR_MSG AND result of Textbox_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ELEVEN is true then,
		COMMENT Equivalence Class 76,107,140,142,143
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)10
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 187	
	
    TEST 188
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-027]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT - Set new line indication to return value of function CalStringParam with parameter tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings, address of max width and address of line count.
		COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT- Set line count to product of line count and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
		COMMENT -If new line indication is TRUE OR 
		COMMENT function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR  
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Textbox_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ELEVEN is zero,
		COMMENT Equivalence Class 75,108,140,142,143 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Tb_parameter_occurrence[0],			init = 0,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)10
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 188	
	
    TEST 189
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-027]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT - Set new line indication to return value of function CalStringParam with parameter tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings, address of max width and address of line count.
		COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT- Set line count to product of line count and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
		COMMENT -If new line indication is TRUE OR 
		COMMENT function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR  
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Textbox_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ELEVEN is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
		COMMENT Equivalence Class 75,107,140,142,143
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)4
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 189	
	
    TEST 190
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-027]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT - Set new line indication to return value of function CalStringParam with parameter tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings, address of max width and address of line count.
		COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT- Set line count to product of line count and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
		COMMENT -If new line indication is TRUE OR 
		COMMENT function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR  
		COMMENT AND Pdi_error_count is greater than MAX_ERROR_MSG AND result of Textbox_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ELEVEN is true then,
		COMMENT Equivalence Class 76,107,140,142,143
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)4
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 190	
	
    TEST 191
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-027]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT - Set new line indication to return value of function CalStringParam with parameter tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings, address of max width and address of line count.
		COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT- Set line count to product of line count and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
		COMMENT -If new line indication is TRUE OR 
		COMMENT function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR  
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Textbox_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ELEVEN is zero,
		COMMENT Equivalence Class 75,107,140,142,143
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Tb_parameter_occurrence[0],			init = 0,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)4
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 191	
	
    TEST 192
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-027]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT - Set new line indication to return value of function CalStringParam with parameter tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings, address of max width and address of line count.
		COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT- Set line count to product of line count and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
		COMMENT -If new line indication is TRUE OR 
		COMMENT function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR  
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Textbox_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ELEVEN is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
		COMMENT Equivalence Class 75,107,140,142,144,145 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 192	
	
	
    TEST 193
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-027]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT - Set new line indication to return value of function CalStringParam with parameter tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings, address of max width and address of line count.
		COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT- Set line count to product of line count and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
		COMMENT -If new line indication is TRUE OR 
		COMMENT function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR  
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Textbox_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ELEVEN is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
		COMMENT Equivalence Class 75,107,140,141
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val_type,		init = MAX_LIM_VAL_TYPE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_MAX,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = PANEL_HEIGHT+1,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 4
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 1920
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 193	
	

    TEST 194
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-027]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT - Set new line indication to return value of function CalStringParam with parameter tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings, address of max width and address of line count.
		COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT- Set line count to product of line count and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
		COMMENT -If new line indication is TRUE OR 
		COMMENT function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR  
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Textbox_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ELEVEN is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, "TB_REDX_OFFSET_AXIS", Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
		COMMENT Equivalence Class 75,107,140,142,144,145 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE+1,						ev = init	
			VAR Page_settings.Tb_settings[0].tb_cross_val_type,		init = MAX_LIM_VAL_TYPE,				ev = init				
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							
					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 2
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 384
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 194

    TEST 195
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-027]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT - Set new line indication to return value of function CalStringParam with parameter tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings, address of max width and address of line count.
		COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT- Set line count to product of line count and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
		COMMENT -If new line indication is TRUE OR 
		COMMENT function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR  
		COMMENT AND Pdi_error_count is greater than MAX_ERROR_MSG AND result of Textbox_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ELEVEN is true then,
		COMMENT Equivalence Class 76,107,140,142,144,145  
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE+1,						ev = init	
			VAR Page_settings.Tb_settings[0].tb_cross_val_type,		init = MAX_LIM_VAL_TYPE,				ev = init				
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							
				
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Tb_parameter_occurrence[0],			init = 0xFFFF,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 195
	
	
    TEST 196
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckTextBox-DB-LLR-027]
        COMMENT The function shall loop from ONE to Tb_cnt and do the following,
		COMMENT - Set new line indication to return value of function CalStringParam with parameter tb_redx_txt of Tb_settings with index TB counter-1 of Page_settings, address of max width and address of line count.
		COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT- Set line count to product of line count and tb_redx_font of f Tb_settings with index TB counter-1 of Page_settings.
		COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
		COMMENT -If new line indication is TRUE OR 
		COMMENT function CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  txt_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_x of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_y of  tb_redx_offset_axis of Tb_settings with index TB counter-1 of Page_settings plus u16_y of  tb_redx_axis of Tb_settings with index TB counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR  
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Textbox_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ELEVEN is zero,
		COMMENT Equivalence Class 75,108,140,142,144,145 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Tb_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Tb_settings[0].sdi,					init = 3,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_x,			init = PANEL_WIDTH,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_axis.u16_y,			init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_width,				init = PANEL_WIDTH,						ev = init
			
			VAR Page_settings.Tb_settings[0].tb_height,				init = PANEL_HEIGHT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_margin,				init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_width,		init = 10,								ev = init			
			VAR Page_settings.Tb_settings[0].tb_frame_color,		init = COLOR_LIGHT_RED,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_bg_color,			init = COLOR_PINK,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_bit,				init = MAX_START_BIT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_cross_val,			init = MAX_RANGE+1,						ev = init	
			VAR Page_settings.Tb_settings[0].tb_cross_val_type,		init = MAX_LIM_VAL_TYPE,				ev = init				
			VAR Page_settings.Tb_settings[0].tb_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_font,				init = E_SMALL_FONT,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_color,				init = COLOR_GREEN,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_state,				init = TXT_STATE_REVERSE,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash,				init = TEXT_FLASH_OFF,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_flash_color,		init = COLOR_BRIGHT_GREEN,				ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_x,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_axis.u16_y,	init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_width,			init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_height,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_x,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_offset_axis.u16_y,		init = 0,					ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_font,					init = E_NO_FONT,						ev = init			
			VAR Page_settings.Tb_settings[0].tb_redx_txt,					init = { others => '\0' },				ev = init			
																																																							






					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Tb_parameter_occurrence[0],			init = 0,					ev = init
						
			VAR Tb_cnt,			init = 1,							ev = init

			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Text_cnt,		init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_NO_FONT)0
			STUB FontsGetFontHeight(E_NO_FONT)0
			
			STUB StrLen(Page_settings.Tb_settings[0].tb_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 196	
	
    TEST 197
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-009]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT Call the function OctToStringTrim with parameter (label of Text_settings with index text loop  counter-1 of Page_settings,Label_size and label string.
		COMMENT If function CheckMinMax with parameters (label of Text_settings with index text loop  counter-1 of Page_settings,1 and  MAX_LABEL) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, LABEL, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 147,149
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-001]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_string of Text_settings with index text loop  counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_STRING, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 147,151
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-008]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Text_settings with index text loop  counter-1 of Page_settings, ZERO and THREE) returns FALSE AND
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string SDI, Error_msg_string with array index Pdi_error_count.
		COMMENT 2. Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 147,153
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-003]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_align of Text_settings with index text loop  counter-1 of Page_settings,ALIGN_CENTER and ALIGN_LEFT) returns FALSE AND
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_THREE is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_ALIGN, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 147,157,155
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-004]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_font of Text_settings with index text loop  counter-1 of Page_settings,E_TINY_FONT and E_LARGE_FONT) returns FALSE
		COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_FOUR is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
		COMMENT Equivalence Class 147,157,159
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 0,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => 'A' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 4,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT+1,					ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_NO_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_MAX,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_flash,					init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => 'A' },							ev = init			
		
																																																							

			VAR Error_msg_string[0],			init = "TEXT 0000 LABEL",						ev = init
			VAR Error_msg_string[1],			init = "TEXT 0000 TXT_STRING",					ev = init
			VAR Error_msg_string[2],			init = "TEXT 0000 SDI",							ev = init
			VAR Error_msg_string[3],			init = "TEXT 0000 TXT_ALIGN",					ev = init
			VAR Error_msg_string[4],			init = "TEXT 0000 TXT_FONT",					ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1	
			
			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1				
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 197
	
	
    TEST 198
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-009]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT Call the function OctToStringTrim with parameter (label of Text_settings with index text loop  counter-1 of Page_settings,Label_size and label string.
		COMMENT If function CheckMinMax with parameters (label of Text_settings with index text loop  counter-1 of Page_settings,1 and  MAX_LABEL) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, LABEL, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 148,149
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-001]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_string of Text_settings with index text loop  counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_STRING, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 148,151
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-008]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Text_settings with index text loop  counter-1 of Page_settings, ZERO and THREE) returns FALSE AND
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string SDI, Error_msg_string with array index Pdi_error_count.
		COMMENT 2. Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 148,153
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-003]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_align of Text_settings with index text loop  counter-1 of Page_settings,ALIGN_CENTER and ALIGN_LEFT) returns FALSE AND
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_THREE is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_ALIGN, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 148,157,155
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-004]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_font of Text_settings with index text loop  counter-1 of Page_settings,E_TINY_FONT and E_LARGE_FONT) returns FALSE
		COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_FOUR is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
		COMMENT Equivalence Class 148,157,159
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 0,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => 'A' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 4,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT+1,					ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_NO_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_MAX,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_flash,					init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => 'A' },							ev = init			
		
																																																							

			VAR Error_msg_string[0],			init = "TEXT 0000 LABEL",						ev = init
			VAR Error_msg_string[1],			init = "TEXT 0000 TXT_STRING",					ev = init
			VAR Error_msg_string[2],			init = "TEXT 0000 SDI",							ev = init
			VAR Error_msg_string[3],			init = "TEXT 0000 TXT_ALIGN",					ev = init
			VAR Error_msg_string[4],			init = "TEXT 0000 TXT_FONT",					ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1	
			
			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1				
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31			
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31			
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 198	
	
	
    TEST 199
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-009]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT Call the function OctToStringTrim with parameter (label of Text_settings with index text loop  counter-1 of Page_settings,Label_size and label string.
		COMMENT If function CheckMinMax with parameters (label of Text_settings with index text loop  counter-1 of Page_settings,1 and  MAX_LABEL) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, LABEL, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 147,149
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-001]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_string of Text_settings with index text loop  counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_STRING, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 147,151
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-008]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Text_settings with index text loop  counter-1 of Page_settings, ZERO and THREE) returns FALSE AND
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string SDI, Error_msg_string with array index Pdi_error_count.
		COMMENT 2. Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 147,161
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-002]
        COMMENT The function shall loop from ONE to Text_cnt  and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of txt_axis of Tb_settings with index as text loop counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
		COMMENT OR function CheckAxisMinMax with parameters (u16_y of txt_axis of Tb_settings with index as text loop  counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT Equivalence Class 147,163 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 0,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => 'A' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 4,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT+1,					ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_NO_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_MAX,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_flash,					init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => 'A' },							ev = init			
		
																																																							

			VAR Error_msg_string[0],			init = "TEXT 0000 LABEL",						ev = init
			VAR Error_msg_string[1],			init = "TEXT 0000 TXT_STRING",					ev = init
			VAR Error_msg_string[2],			init = "TEXT 0000 SDI",							ev = init
			VAR Error_msg_string[3],			init = "TEXT 0000 TXT_AXIS",					ev = init





					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1	
			
			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 199	
	
    TEST 200
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-009]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT Call the function OctToStringTrim with parameter (label of Text_settings with index text loop  counter-1 of Page_settings,Label_size and label string.
		COMMENT If function CheckMinMax with parameters (label of Text_settings with index text loop  counter-1 of Page_settings,1 and  MAX_LABEL) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, LABEL, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 147,150
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-001]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_string of Text_settings with index text loop  counter-1 of Page_settings and MAX_STRING_CHAR_TXT) returns FALSE AND Pdi_error_count is less than MAX_ERROR_MSG then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_STRING, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 147,152
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-008]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If eng_sdi of Config_data is equal to TRUE AND function CheckMinMax with parameters (sdi of Text_settings with index text loop  counter-1 of Page_settings, ZERO and THREE) returns FALSE AND
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG then do the following.
		COMMENT 1. Call the function BuildErrorMsg with parameters string element, label string, string SDI, Error_msg_string with array index Pdi_error_count.
		COMMENT 2. Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 147,154
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-003]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_align of Text_settings with index text loop  counter-1 of Page_settings,ALIGN_CENTER and ALIGN_LEFT) returns FALSE AND
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_THREE is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_ALIGN, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT Equivalence Class 147,157,155
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-004]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_font of Text_settings with index text loop  counter-1 of Page_settings,E_TINY_FONT and E_LARGE_FONT) returns FALSE
		COMMENT  AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_FOUR is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_FONT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
		COMMENT Equivalence Class 147,157,160
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-002]
        COMMENT The function shall loop from ONE to Text_cnt  and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of txt_axis of Tb_settings with index as text loop counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
		COMMENT OR function CheckAxisMinMax with parameters (u16_y of txt_axis of Tb_settings with index as text loop  counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT Equivalence Class 147,163  
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-021]
        COMMENT Do the following if txt_align of Text_settings with index text loop  counter-1 of Page_settings is not equal to ALIGN_CENTER,ALIGN_CENTER_LEFT and ALIGN_RIGHT.
		COMMENT - Set Text X axis to u16_x of txt_axis of  Text_settings with index text loop  counter-1 of Page_settings.
		COMMENT - Set Text Y axis to u16_y of txt_axis of  Text_settings with index text loop  counter-1 of Page_settings
		COMMENT Equivalence Class 147,170 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-022]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT - If function CheckAxisMinMax with parameter Text X axis plus max width,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter line count plus Text Y axis,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT - If function CheckAxisMinMax with parameter Text X axis,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter Text Y axis ,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And  Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 147,171,174
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-010]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_bit of Text_settings with index text loop  counter-1 of Page_settings,MIN_START_BIT and MAX_START_BIT) returns FALSE 
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ONE is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_BIT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 147,177 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-011]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_cross_val_type of Text_settings with index text loop  counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns FALSE OR 
		COMMENT CheckMinMax with parameters (txt_cross_val of Text_settings with index text loop  counter-1 of Page_settings,MIN_RANGE and MAX_RANGE) returns FALSE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TWO is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_BIT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 147,179 
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_MAX,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = 0,									ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => 'A' },							ev = init			
		
																																																							

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_AXIS",						ev = init
			VAR Error_msg_string[1],			init = "TEXT 0001 TXT_AXIS",							ev = init
			VAR Error_msg_string[2],			init = "TEXT 0001 TXT_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "TEXT 0001 TXT_BIT",					ev = init
			VAR Error_msg_string[4],			init = "TEXT 0001 TXT_CROSS_VAL",					ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(350)1
			STUB FontsGetFontHeight(350)1	
			
			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1				
        
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
		
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 200	
	
	
    TEST 201
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-002]
        COMMENT The function shall loop from ONE to Text_cnt  and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of txt_axis of Tb_settings with index as text loop counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
		COMMENT OR function CheckAxisMinMax with parameters (u16_y of txt_axis of Tb_settings with index as text loop  counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT Equivalence Class 148,163  
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-021]
        COMMENT Do the following if txt_align of Text_settings with index text loop  counter-1 of Page_settings is not equal to ALIGN_CENTER,ALIGN_CENTER_LEFT and ALIGN_RIGHT.
		COMMENT - Set Text X axis to u16_x of txt_axis of  Text_settings with index text loop  counter-1 of Page_settings.
		COMMENT - Set Text Y axis to u16_y of txt_axis of  Text_settings with index text loop  counter-1 of Page_settings
		COMMENT Equivalence Class 148,170 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-022]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT - If function CheckAxisMinMax with parameter Text X axis plus max width,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter line count plus Text Y axis,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT - If function CheckAxisMinMax with parameter Text X axis,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter Text Y axis ,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And  Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 148,171,174
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-010]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_bit of Text_settings with index text loop  counter-1 of Page_settings,MIN_START_BIT and MAX_START_BIT) returns FALSE 
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_ONE is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_BIT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 148,177 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-011]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_cross_val_type of Text_settings with index text loop  counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns FALSE OR 
		COMMENT CheckMinMax with parameters (txt_cross_val of Text_settings with index text loop  counter-1 of Page_settings,MIN_RANGE and MAX_RANGE) returns FALSE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TWO is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_BIT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 148,179 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_MAX,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = 0,									ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => 'A' },							ev = init			
		
																																																							

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_AXIS",						ev = init
			VAR Error_msg_string[1],			init = "TEXT 0001 TXT_BIT",							ev = init
			VAR Error_msg_string[2],			init = "TEXT 0001 TXT_CROSS_VAL",					ev = init
			VAR Error_msg_string[3],			init = "TEXT 0001 TXT_COLOR",					ev = init
			VAR Error_msg_string[4],			init = "TEXT 0001 TXT_STATE",					ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(350)1
			STUB FontsGetFontHeight(350)1	
			
			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1				
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 201
	
	
    TEST 202
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-002]
        COMMENT The function shall loop from ONE to Text_cnt  and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of txt_axis of Tb_settings with index as text loop counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
		COMMENT OR function CheckAxisMinMax with parameters (u16_y of txt_axis of Tb_settings with index as text loop  counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT Equivalence Class 147,165  
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-022]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT - If function CheckAxisMinMax with parameter Text X axis plus max width,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter line count plus Text Y axis,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT - If function CheckAxisMinMax with parameter Text X axis,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter Text Y axis ,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And  Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 147,173,174
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_MAX,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = 0,									ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => 'A' },							ev = init			
		
																																																							

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_AXIS",						ev = init





					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(350)1
			STUB FontsGetFontHeight(350)1	
			
			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 202	
	
	
    TEST 203
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-002]
        COMMENT The function shall loop from ONE to Text_cnt  and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of txt_axis of Tb_settings with index as text loop counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
		COMMENT OR function CheckAxisMinMax with parameters (u16_y of txt_axis of Tb_settings with index as text loop  counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT Equivalence Class 147,165  
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-022]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT - If function CheckAxisMinMax with parameter Text X axis plus max width,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter line count plus Text Y axis,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT - If function CheckAxisMinMax with parameter Text X axis,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter Text Y axis ,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And  Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 147,173,174
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-011]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_cross_val_type of Text_settings with index text loop  counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns FALSE OR 
		COMMENT CheckMinMax with parameters (txt_cross_val of Text_settings with index text loop  counter-1 of Page_settings,MIN_RANGE and MAX_RANGE) returns FALSE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TWO is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_BIT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 147,181 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-007]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If txt_flash of Text_settings with index text loop  counter-1 of Page_settings is not equal to TEXT_FLASH_ON and  txt_flash of Text_settings with index text loop  counter-1 of 
		COMMENT Page_settings is not equal to TEXT_FLASH_OFF AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_SEVEN is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_FLASH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,183 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_NORMAL,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT+1,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => 'A' },							ev = init			
		
																																																							

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_AXIS",						ev = init
			VAR Error_msg_string[1],			init = "TEXT 0001 TXT_AXIS",						ev = init
			VAR Error_msg_string[2],			init = "TEXT 0001 TXT_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "TEXT 0001 TXT_CROSS_VAL",					ev = init
			VAR Error_msg_string[4],			init = "TEXT 0001 TXT_FLASH",					ev = init





					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(350)1
			STUB FontsGetFontHeight(350)1	
			
			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1				
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 203	
	
	
    TEST 204
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-002]
        COMMENT The function shall loop from ONE to Text_cnt  and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of txt_axis of Tb_settings with index as text loop counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
		COMMENT OR function CheckAxisMinMax with parameters (u16_y of txt_axis of Tb_settings with index as text loop  counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT Equivalence Class 147,165  
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-022]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT - If function CheckAxisMinMax with parameter Text X axis plus max width,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter line count plus Text Y axis,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT - If function CheckAxisMinMax with parameter Text X axis,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter Text Y axis ,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And  Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 147,172,174
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-011]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_cross_val_type of Text_settings with index text loop  counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns FALSE OR 
		COMMENT CheckMinMax with parameters (txt_cross_val of Text_settings with index text loop  counter-1 of Page_settings,MIN_RANGE and MAX_RANGE) returns FALSE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TWO is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_BIT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 147,181 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-007]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If txt_flash of Text_settings with index text loop  counter-1 of Page_settings is not equal to TEXT_FLASH_ON and  txt_flash of Text_settings with index text loop  counter-1 of 
		COMMENT Page_settings is not equal to TEXT_FLASH_OFF AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_SEVEN is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_FLASH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,183  
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_NORMAL,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT+1,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => 'A' },							ev = init			
		
																																																							

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_AXIS",						ev = init
			VAR Error_msg_string[1],			init = "TEXT 0001 TXT_AXIS",						ev = init
			VAR Error_msg_string[2],			init = "TEXT 0001 TXT_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "TEXT 0001 TXT_CROSS_VAL",					ev = init
			VAR Error_msg_string[4],			init = "TEXT 0001 TXT_FLASH",					ev = init





					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(350)1
			STUB FontsGetFontHeight(350)1	
			
			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1				
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 204	
	
    TEST 205
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-002]
        COMMENT The function shall loop from ONE to Text_cnt  and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of txt_axis of Tb_settings with index as text loop counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
		COMMENT OR function CheckAxisMinMax with parameters (u16_y of txt_axis of Tb_settings with index as text loop  counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT Equivalence Class 148,165  
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-022]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT - If function CheckAxisMinMax with parameter Text X axis plus max width,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter line count plus Text Y axis,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT - If function CheckAxisMinMax with parameter Text X axis,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter Text Y axis ,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And  Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 148,173,174
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-011]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_cross_val_type of Text_settings with index text loop  counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns FALSE OR 
		COMMENT CheckMinMax with parameters (txt_cross_val of Text_settings with index text loop  counter-1 of Page_settings,MIN_RANGE and MAX_RANGE) returns FALSE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TWO is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_BIT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 148,181 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-007]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If txt_flash of Text_settings with index text loop  counter-1 of Page_settings is not equal to TEXT_FLASH_ON and  txt_flash of Text_settings with index text loop  counter-1 of 
		COMMENT Page_settings is not equal to TEXT_FLASH_OFF AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_SEVEN is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_FLASH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 148,183  
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_NORMAL,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT+1,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => 'A' },							ev = init			
		
																																																							

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_AXIS",						ev = init
			VAR Error_msg_string[1],			init = "TEXT 0001 TXT_FLASH",						ev = init
			VAR Error_msg_string[2],			init = "TEXT 0001 TXT_REDX_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "TEXT 0001 TXT_REDX_WIDTH",					ev = init
			VAR Error_msg_string[4],			init = "TEXT 0001 TXT_REDX_HEIGHT",					ev = init





					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(350)1
			STUB FontsGetFontHeight(350)1	
			
			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1				
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 205	
	
	
    TEST 206
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-012]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
		COMMENT   OR CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  AND
		COMMENT   Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,186
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_ON,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => 'A' },							ev = init			
		
																																																							

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_AXIS",						ev = init
			VAR Error_msg_string[1],			init = "TEXT 0001 TXT_AXIS",					ev = init
			VAR Error_msg_string[2],			init = "TEXT 0001 TXT_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "TEXT 0001 TXT_CROSS_VAL",					ev = init
			VAR Error_msg_string[4],			init = "TEXT 0001 TXT_REDX_AXIS",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(350)1
			STUB FontsGetFontHeight(350)1	
			
			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1				
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 206	
	
	
    TEST 207
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-002]
        COMMENT The function shall loop from ONE to Text_cnt  and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of txt_axis of Tb_settings with index as text loop counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
		COMMENT OR function CheckAxisMinMax with parameters (u16_y of txt_axis of Tb_settings with index as text loop  counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT Equivalence Class 148,166  
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-022]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT - If function CheckAxisMinMax with parameter Text X axis plus max width,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter line count plus Text Y axis,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT - If function CheckAxisMinMax with parameter Text X axis,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter Text Y axis ,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And  Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 148,173,175
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-011]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_cross_val_type of Text_settings with index text loop  counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns FALSE OR 
		COMMENT CheckMinMax with parameters (txt_cross_val of Text_settings with index text loop  counter-1 of Page_settings,MIN_RANGE and MAX_RANGE) returns FALSE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TWO is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_BIT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 148,182
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-007]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If txt_flash of Text_settings with index text loop  counter-1 of Page_settings is not equal to TEXT_FLASH_ON and  txt_flash of Text_settings with index text loop  counter-1 of 
		COMMENT Page_settings is not equal to TEXT_FLASH_OFF AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_SEVEN is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_FLASH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 148,184
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-012]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
		COMMENT   OR CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  AND
		COMMENT   Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 148,186
        COMMENT  
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_ON,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => 'A' },							ev = init			
		
																																																							

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_AXIS",						ev = init
			VAR Error_msg_string[1],			init = "TEXT 0001 TXT_REDX_AXIS",					ev = init
			VAR Error_msg_string[2],			init = "TEXT 0001 TXT_REDX_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "TEXT 0001 TXT_REDX_AXIS",					ev = init
			VAR Error_msg_string[4],			init = "TEXT 0001 TXT_REDX_OFFSET_AXIS",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(350)1
			STUB FontsGetFontHeight(350)1	
			
			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1				
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 207	
	
    TEST 208
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-007]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If txt_flash of Text_settings with index text loop  counter-1 of Page_settings is not equal to TEXT_FLASH_ON and  txt_flash of Text_settings with index text loop  counter-1 of 
		COMMENT Page_settings is not equal to TEXT_FLASH_OFF AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_SEVEN is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_FLASH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,184
		COMMENT
		COMMENT [hdudispfpdicheck-CheckFloatMinMax-DB-LLR-001]
		COMMENT - Returns FALSE if param is less than min OR param is greater than max_value.
		COMMENT Else returns TRUE.
		COMMENT Equivalence Class None
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-012]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
		COMMENT   OR CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  AND
		COMMENT   Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,188
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_ON,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => 'A' },							ev = init			
		
																																																							

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_AXIS",						ev = init





					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(350)1
			STUB FontsGetFontHeight(350)1	
			
			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 208	
	
	
    TEST 209
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-018]
		COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,txt_redx_width of Text_settings with index text loop  counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_HEIGHT minus txt_redx_width of Text_settings with index text loop  counter-1 of Page_settings by two and PANEL_WIDTH minus txt_redx_width of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings by two) returns FALSE 
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,157,183
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-019]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  
        COMMENT counter-1 of Page_settings,txt_redx_height of  Text_settings with index text loop  counter-1 of Page_settings 
        COMMENT by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  txt_redx_axis
        COMMENT  of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH minus txt_redx_height of Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings by two and PANEL_HEIGHT minus txt_redx_height of  txt_redx_axis 
        COMMENT  of Text_settings with index text loop  counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is 
        COMMENT  less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with 
        COMMENT  BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_AXIS, Error_msg_string
        COMMENT  with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,157,194
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-015]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of txt_redx_offset_axis OF Text_settings with index text loop 
        COMMENT  counter-1 of Page_settings ,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH ) returns FALSE OR 
        COMMENT  CheckAxisMinMax2 with parameters (u16_y of txt_redx_offset_axis OF Text_settings with index text loop  
        COMMENT  counter-1 of Page_settings -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND 
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop
        COMMENT  counter-1 bitwise and with BIT_ELEVEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,157,196
        COMMENT 
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => 'A' },							ev = init			
		
																																																							


			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_AXIS",					ev = init			
			VAR Error_msg_string[1],			init = "TEXT 0001 TXT_CROSS_VAL",					ev = init
			VAR Error_msg_string[2],			init = "TEXT 0001 TXT_REDX_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "TEXT 0001 TXT_REDX_AXIS",			ev = init





					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(350)1
			STUB FontsGetFontHeight(350)1	
			
			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1				
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 209	
	
	
    TEST 210
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-018]
		COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,txt_redx_width of Text_settings with index text loop  counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_HEIGHT minus txt_redx_width of Text_settings with index text loop  counter-1 of Page_settings by two and PANEL_WIDTH minus txt_redx_width of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings by two) returns FALSE 
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 148,157,183
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-019]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  
        COMMENT counter-1 of Page_settings,txt_redx_height of  Text_settings with index text loop  counter-1 of Page_settings 
        COMMENT by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  txt_redx_axis
        COMMENT  of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH minus txt_redx_height of Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings by two and PANEL_HEIGHT minus txt_redx_height of  txt_redx_axis 
        COMMENT  of Text_settings with index text loop  counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is 
        COMMENT  less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with 
        COMMENT  BIT_EIGHT is true then,
        COMMENT Equivalence Class 148,157,194
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-015]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of txt_redx_offset_axis OF Text_settings with index text loop 
        COMMENT  counter-1 of Page_settings ,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH ) returns FALSE OR 
        COMMENT  CheckAxisMinMax2 with parameters (u16_y of txt_redx_offset_axis OF Text_settings with index text loop  
        COMMENT  counter-1 of Page_settings -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND 
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop
        COMMENT  counter-1 bitwise and with BIT_ELEVEN is true then,
        COMMENT Equivalence Class 148,157,196
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => 'A' },							ev = init			
		
																																																							


			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_REDX_AXIS",					ev = init			
			VAR Error_msg_string[1],			init = "TEXT 0001 TXT_REDX_AXIS",					ev = init
			VAR Error_msg_string[2],			init = "TEXT 0001 TXT_REDX_AXIS",					ev = init
			VAR Error_msg_string[3],			init = "TEXT 0001 TXT_REDX_OFFSET_AXIS",			ev = init
			VAR Error_msg_string[4],			init = "TEXT 0001 TXT_REDX_FONT",					ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(350)1
			STUB FontsGetFontHeight(350)1	
			
			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1				
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 210	
	
	
    TEST 211
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-018]
		COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,txt_redx_width of Text_settings with index text loop  counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_HEIGHT minus txt_redx_width of Text_settings with index text loop  counter-1 of Page_settings by two and PANEL_WIDTH minus txt_redx_width of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings by two) returns FALSE 
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 147,158,183
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-019]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  
        COMMENT counter-1 of Page_settings,txt_redx_height of  Text_settings with index text loop  counter-1 of Page_settings 
        COMMENT by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  txt_redx_axis
        COMMENT  of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH minus txt_redx_height of Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings by two and PANEL_HEIGHT minus txt_redx_height of  txt_redx_axis 
        COMMENT  of Text_settings with index text loop  counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is 
        COMMENT  less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with 
        COMMENT  BIT_EIGHT is true then,
        COMMENT Equivalence Class 147,158,194
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-015]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of txt_redx_offset_axis OF Text_settings with index text loop 
        COMMENT  counter-1 of Page_settings ,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH ) returns FALSE OR 
        COMMENT  CheckAxisMinMax2 with parameters (u16_y of txt_redx_offset_axis OF Text_settings with index text loop  
        COMMENT  counter-1 of Page_settings -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND 
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop
        COMMENT  counter-1 bitwise and with BIT_ELEVEN is true then,
        COMMENT Equivalence Class 147,158,196
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => 'A' },							ev = init			
		
																																																							


			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_AXIS",					ev = init			




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(350)1
			STUB FontsGetFontHeight(350)1	
			
			STUB FontsGetStringWidth(E_NO_FONT)1
			STUB FontsGetFontHeight(E_NO_FONT)1				
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 211	
	
	
    TEST 212
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-018]
		COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,txt_redx_width of Text_settings with index text loop  counter-1 of Page_settings by two ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
		COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_HEIGHT minus txt_redx_width of Text_settings with index text loop  counter-1 of Page_settings by two and PANEL_WIDTH minus txt_redx_width of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings by two) returns FALSE 
		COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 147,157,184
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-019]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  
        COMMENT counter-1 of Page_settings,txt_redx_height of  Text_settings with index text loop  counter-1 of Page_settings 
        COMMENT by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  txt_redx_axis
        COMMENT  of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH minus txt_redx_height of Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings by two and PANEL_HEIGHT minus txt_redx_height of  txt_redx_axis 
        COMMENT  of Text_settings with index text loop  counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is 
        COMMENT  less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with 
        COMMENT  BIT_EIGHT is true then,
        COMMENT Equivalence Class 147,157,195
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-015]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of txt_redx_offset_axis OF Text_settings with index text loop 
        COMMENT  counter-1 of Page_settings ,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH ) returns FALSE OR 
        COMMENT  CheckAxisMinMax2 with parameters (u16_y of txt_redx_offset_axis OF Text_settings with index text loop  
        COMMENT  counter-1 of Page_settings -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND 
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop
        COMMENT  counter-1 bitwise and with BIT_ELEVEN is true then,
        COMMENT Equivalence Class 147,157,197
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-016]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckFont with parameters (txt_redx_font of Text_settings with index text loop  counter-1 of Page_settings) 
        COMMENT returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text 
        COMMENT loop counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_FONT, Error_msg_string with
        COMMENT  array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,157,198
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-017]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckString with parameters (txt_redx_font of Text_settings with index text loop  counter-1 
        COMMENT of Page_settings and MAX_STRING_CHAR_TXT ) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG 
        COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_THIRTEEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_TXT, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,157,200
        COMMENT  
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => 'A' },							ev = init			
		
																																																							


			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_AXIS",					ev = init			
			VAR Error_msg_string[1],			init = "TEXT 0001 TXT_CROSS_VAL",					ev = init
			VAR Error_msg_string[2],			init = "TEXT 0001 TXT_REDX_AXIS",			ev = init




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)1
			STUB FontsGetFontHeight(E_TINY_FONT)1	
			
			STUB FontsGetStringWidth(E_TINY_FONT)1
			STUB FontsGetFontHeight(E_TINY_FONT)1				
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 212	
	
    TEST 213
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-016]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckFont with parameters (txt_redx_font of Text_settings with index text loop  counter-1 of Page_settings) 
        COMMENT returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text 
        COMMENT loop counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_FONT, Error_msg_string with
        COMMENT  array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 148,157,198
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-017]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckString with parameters (txt_redx_font of Text_settings with index text loop  counter-1 
        COMMENT of Page_settings and MAX_STRING_CHAR_TXT ) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG 
        COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_THIRTEEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_TXT, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 148,157,200
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => 'A' },							ev = init			
		
																																																							

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)1
			STUB FontsGetFontHeight(E_TINY_FONT)1	
			
			STUB FontsGetStringWidth(E_TINY_FONT)1
			STUB FontsGetFontHeight(E_TINY_FONT)1			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 213	
	
	
    TEST 214
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-016]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckFont with parameters (txt_redx_font of Text_settings with index text loop  counter-1 of Page_settings) 
        COMMENT returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text 
        COMMENT loop counter-1 bitwise and with BIT_TWELVE is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_FONT, Error_msg_string with
        COMMENT  array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,158,198
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-017]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckString with parameters (txt_redx_font of Text_settings with index text loop  counter-1 
        COMMENT of Page_settings and MAX_STRING_CHAR_TXT ) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG 
        COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_THIRTEEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_TXT, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,158,200
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => 'A' },							ev = init			
		




					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)1
			STUB FontsGetFontHeight(E_TINY_FONT)1	
			
			STUB FontsGetStringWidth(E_TINY_FONT)1
			STUB FontsGetFontHeight(E_TINY_FONT)1				
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 214	
	
	
    TEST 215
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-017]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckString with parameters (txt_redx_font of Text_settings with index text loop  counter-1 
        COMMENT of Page_settings and MAX_STRING_CHAR_TXT ) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG 
        COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_THIRTEEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_TXT, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,157,200
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },							ev = init			
		
																																																							

		

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_AXIS_OFFSET_AXIS",			ev = init



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)2
			STUB FontsGetFontHeight(E_TINY_FONT)1
			
			STUB FontsGetStringWidth(E_TINY_FONT)2
			STUB FontsGetFontHeight(E_TINY_FONT)1			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 215	
	
    TEST 216
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-017]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckString with parameters (txt_redx_font of Text_settings with index text loop  counter-1 
        COMMENT of Page_settings and MAX_STRING_CHAR_TXT ) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG 
        COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_THIRTEEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_TXT, 
        COMMENT Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 148,157,200
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },							ev = init			
		
																																																							

		

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_REDX_OFFSET_AXIS",			ev = init



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)2
			STUB FontsGetFontHeight(E_TINY_FONT)1
			
			STUB FontsGetStringWidth(E_TINY_FONT)2
			STUB FontsGetFontHeight(E_TINY_FONT)1			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 216	
	
    TEST 217
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-017]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckString with parameters (txt_redx_font of Text_settings with index text loop  counter-1 
        COMMENT of Page_settings and MAX_STRING_CHAR_TXT ) returns FALSE  AND Pdi_error_count is less than MAX_ERROR_MSG 
        COMMENT AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_THIRTEEN is true then,
        COMMENT Equivalence Class 147,158,200
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },							ev = init			
		
																																																							

		

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_AXIS",			ev = init



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)2
			STUB FontsGetFontHeight(E_TINY_FONT)1
			
			STUB FontsGetStringWidth(E_TINY_FONT)2
			STUB FontsGetFontHeight(E_TINY_FONT)1			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 217


    TEST 218
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,157,204
        COMMENT 
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },							ev = init			
		
																																																							

		

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_AXIS_OFFSET_AXIS",			ev = init



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)2
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)2			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 218	
	
	
    TEST 219
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 148,157,204
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },							ev = init			
		
																																																							

		

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_REDX_OFFSET_AXIS",			ev = init



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)2
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)2			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 219	
	
	
    TEST 220
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 147,158,204
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },							ev = init			
		
																																																							

		

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_AXISREDX_OFFSET_AXIS",			ev = init



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)2
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)2			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 220	
	
    TEST 221
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,157,208
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																							

		

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_AXIS",			ev = init



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)2
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)2			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 221	
	
    TEST 222
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 148,157,208
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																							

		

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_REDX_OFFSET_AXIS",			ev = init



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)2
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)2			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)0
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 222	
	
	
    TEST 223
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,158,206
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																							

		

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_REDX_OFFSET_AXIS",			ev = init



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)2
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)2			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)0
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)0
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 223	
	
	
    TEST 224
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,157,208
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																							

		

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_AXIS",			ev = init



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 2,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)1
			STUB FontsGetFontHeight(E_TINY_FONT)1
			
			STUB FontsGetStringWidth(350)1
			STUB FontsGetFontHeight(350)1	

			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB StrLen(Page_settings.Text_settings[0].txt_string)31			
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31		
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31			
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31		
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 224	


    TEST 225
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 148,157,208
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = PANEL_WIDTH+1,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT+1,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)2
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)2			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 225	
	
	
    TEST 226
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 147,158,208
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = PANEL_WIDTH,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT+1,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)2
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)2			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)31
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)31
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 226	
	

	
    TEST 227
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,157,204
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)10
			STUB FontsGetFontHeight(E_TINY_FONT)2
			
			STUB FontsGetStringWidth(E_TINY_FONT)10
			STUB FontsGetFontHeight(E_TINY_FONT)2			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 227	
	
	
    TEST 228
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 148,157,204
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)10
			STUB FontsGetFontHeight(E_TINY_FONT)2
			
			STUB FontsGetStringWidth(E_TINY_FONT)10
			STUB FontsGetFontHeight(E_TINY_FONT)2			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 228		
	
	
    TEST 229
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,157,206 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)10
			STUB FontsGetFontHeight(E_TINY_FONT)2
			
			STUB FontsGetStringWidth(E_TINY_FONT)10
			STUB FontsGetFontHeight(E_TINY_FONT)2			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 229	

    TEST 230
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,157,208
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)4
			STUB FontsGetFontHeight(E_TINY_FONT)2
			
			STUB FontsGetStringWidth(E_TINY_FONT)4
			STUB FontsGetFontHeight(E_TINY_FONT)2			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 230

    TEST 231
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-002]
        COMMENT The function shall loop from ONE to Text_cnt  and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of txt_axis of Tb_settings with index as text loop counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
		COMMENT OR function CheckAxisMinMax with parameters (u16_y of txt_axis of Tb_settings with index as text loop  counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT Equivalence Class 147,165  
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-022]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT - If function CheckAxisMinMax with parameter Text X axis plus max width,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter line count plus Text Y axis,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT - If function CheckAxisMinMax with parameter Text X axis,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter Text Y axis ,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And  Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 147,173,174
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)4
			STUB FontsGetFontHeight(E_TINY_FONT)2
			
			STUB FontsGetStringWidth(E_TINY_FONT)4
			STUB FontsGetFontHeight(E_TINY_FONT)2			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 231

	TEST 232
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-002]
        COMMENT The function shall loop from ONE to Text_cnt  and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of txt_axis of Tb_settings with index as text loop counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
		COMMENT OR function CheckAxisMinMax with parameters (u16_y of txt_axis of Tb_settings with index as text loop  counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT Equivalence Class 147,166 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-022]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT - If function CheckAxisMinMax with parameter Text X axis plus max width,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter line count plus Text Y axis,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT - If function CheckAxisMinMax with parameter Text X axis,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter Text Y axis ,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And  Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 147,173,175 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)4
			STUB FontsGetFontHeight(E_TINY_FONT)2
			
			STUB FontsGetStringWidth(E_TINY_FONT)4
			STUB FontsGetFontHeight(E_TINY_FONT)2			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 232
	
	
    TEST 233
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-002]
        COMMENT The function shall loop from ONE to Text_cnt  and do the following,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT when,
		COMMENT 1. Function CheckAxisMinMax with parameters (u16_x of txt_axis of Tb_settings with index as text loop counter-1 of Page_settings,ZERO,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE 
		COMMENT OR function CheckAxisMinMax with parameters (u16_y of txt_axis of Tb_settings with index as text loop  counter-1 of Page_settings,ZERO,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE.
		COMMENT 2.Pdi_error_count is less than MAX_ERROR_MSG.
		COMMENT Equivalence Class 148,164 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-022]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT - If function CheckAxisMinMax with parameter Text X axis plus max width,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter line count plus Text Y axis,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT - If function CheckAxisMinMax with parameter Text X axis,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter Text Y axis ,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And  Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 148,173,174
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)10
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)10			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 233	
	
    TEST 234
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-022]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT - If function CheckAxisMinMax with parameter Text X axis plus max width,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter line count plus Text Y axis,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT - If function CheckAxisMinMax with parameter Text X axis,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter Text Y axis ,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And  Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 147,172,174
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-011]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_cross_val_type of Text_settings with index text loop  counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns FALSE OR 
		COMMENT CheckMinMax with parameters (txt_cross_val of Text_settings with index text loop  counter-1 of Page_settings,MIN_RANGE and MAX_RANGE) returns FALSE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TWO is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_BIT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 147,181 
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-007]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If txt_flash of Text_settings with index text loop  counter-1 of Page_settings is not equal to TEXT_FLASH_ON and  txt_flash of Text_settings with index text loop  counter-1 of 
		COMMENT Page_settings is not equal to TEXT_FLASH_OFF AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_SEVEN is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_FLASH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,183  
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)10
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)10			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 234	
	
	
    TEST 235
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-022]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT - If function CheckAxisMinMax with parameter Text X axis plus max width,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter line count plus Text Y axis,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And
		COMMENT Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
		COMMENT - If function CheckAxisMinMax with parameter Text X axis,ZERO,PANEL_HEIGHT and PANEL_WIDTH returns FALSE OR
		COMMENT CheckAxisMinMax with parameter Text Y axis ,ZERO,PANEL_WIDTH and PANEL_HEIGHT returns FALSE And  Pdi_error_count is less than MAX_ERROR_MSG do the following:
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 147,173,175
        COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-011]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckMinMax with parameters (txt_cross_val_type of Text_settings with index text loop  counter-1 of Page_settings,ONE and MAX_LIM_VAL_TYPE) returns FALSE OR 
		COMMENT CheckMinMax with parameters (txt_cross_val of Text_settings with index text loop  counter-1 of Page_settings,MIN_RANGE and MAX_RANGE) returns FALSE AND Pdi_error_count is 
		COMMENT less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_TWO is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_BIT, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE.
        COMMENT Equivalence Class 147,182
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-007]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If txt_flash of Text_settings with index text loop  counter-1 of Page_settings is not equal to TEXT_FLASH_ON and  txt_flash of Text_settings with index text loop  counter-1 of 
		COMMENT Page_settings is not equal to TEXT_FLASH_OFF AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_SEVEN is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_FLASH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,184  
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)10
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)10			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 235	
	
	
    TEST 236
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-007]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If txt_flash of Text_settings with index text loop  counter-1 of Page_settings is not equal to TEXT_FLASH_ON and  txt_flash of Text_settings with index text loop  counter-1 of 
		COMMENT Page_settings is not equal to TEXT_FLASH_OFF AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_SEVEN is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_FLASH, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,184
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-012]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
		COMMENT   OR CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  AND
		COMMENT   Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
		COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_AXIS, Error_msg_string with array index Pdi_error_count.
		COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,188
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = TRUE							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1		

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)4
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)4			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 236	
	
    TEST 237
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-007]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If txt_flash of Text_settings with index text loop  counter-1 of Page_settings is not equal to TEXT_FLASH_ON and  txt_flash of Text_settings with index text loop  counter-1 of 
		COMMENT Page_settings is not equal to TEXT_FLASH_OFF AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_SEVEN is true then,
        COMMENT Equivalence Class 148,184
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-012]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
		COMMENT If function CheckAxisMinMax with parameters (u16_x of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE
		COMMENT   OR CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  AND
		COMMENT   Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 148,188
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)4
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)4			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 237	
	
    TEST 238
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-019]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  
        COMMENT counter-1 of Page_settings,txt_redx_height of  Text_settings with index text loop  counter-1 of Page_settings 
        COMMENT by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  txt_redx_axis
        COMMENT  of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH minus txt_redx_height of Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings by two and PANEL_HEIGHT minus txt_redx_height of  txt_redx_axis 
        COMMENT  of Text_settings with index text loop  counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is 
        COMMENT  less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with 
        COMMENT  BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_AXIS, Error_msg_string
        COMMENT  with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,157,194
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-015]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of txt_redx_offset_axis OF Text_settings with index text loop 
        COMMENT  counter-1 of Page_settings ,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH ) returns FALSE OR 
        COMMENT  CheckAxisMinMax2 with parameters (u16_y of txt_redx_offset_axis OF Text_settings with index text loop  
        COMMENT  counter-1 of Page_settings -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND 
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop
        COMMENT  counter-1 bitwise and with BIT_ELEVEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,157,196
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)4
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)4
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 238	
	
    TEST 239
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-019]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  
        COMMENT counter-1 of Page_settings,txt_redx_height of  Text_settings with index text loop  counter-1 of Page_settings 
        COMMENT by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  txt_redx_axis
        COMMENT  of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH minus txt_redx_height of Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings by two and PANEL_HEIGHT minus txt_redx_height of  txt_redx_axis 
        COMMENT  of Text_settings with index text loop  counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is 
        COMMENT  less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with 
        COMMENT  BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_AXIS, Error_msg_string
        COMMENT  with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 148,157,194
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-015]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of txt_redx_offset_axis OF Text_settings with index text loop 
        COMMENT  counter-1 of Page_settings ,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH ) returns FALSE OR 
        COMMENT  CheckAxisMinMax2 with parameters (u16_y of txt_redx_offset_axis OF Text_settings with index text loop  
        COMMENT  counter-1 of Page_settings -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND 
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop
        COMMENT  counter-1 bitwise and with BIT_ELEVEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 148,157,196
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = TRUE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 3
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 896
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 239	
	
    TEST 240
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-019]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  
        COMMENT counter-1 of Page_settings,txt_redx_height of  Text_settings with index text loop  counter-1 of Page_settings 
        COMMENT by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  txt_redx_axis
        COMMENT  of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH minus txt_redx_height of Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings by two and PANEL_HEIGHT minus txt_redx_height of  txt_redx_axis 
        COMMENT  of Text_settings with index text loop  counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is 
        COMMENT  less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with 
        COMMENT  BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_AXIS, Error_msg_string
        COMMENT  with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,158,194
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-015]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of txt_redx_offset_axis OF Text_settings with index text loop 
        COMMENT  counter-1 of Page_settings ,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH ) returns FALSE OR 
        COMMENT  CheckAxisMinMax2 with parameters (u16_y of txt_redx_offset_axis OF Text_settings with index text loop  
        COMMENT  counter-1 of Page_settings -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND 
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop
        COMMENT  counter-1 bitwise and with BIT_ELEVEN is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS,
        COMMENT  Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,158,196
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val_type,			init = ONE,									ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_MAX,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = 0,									ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = PANEL_WIDTH+1,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = PANEL_HEIGHT+1,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_COLOR",					ev = init
			VAR Error_msg_string[1],			init = "TEXT 0001 TXT_STATE",						ev = init
			VAR Error_msg_string[2],			init = "TEXT 0001 TXT_REDX_WIDTH",						ev = init
			VAR Error_msg_string[3],			init = "TEXT 0001 TXT_REDX_HEIGHT",					ev = init
			VAR Error_msg_string[4],			init = "TEXT 0001 TXT_REDX_AXIS",					ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 240	


    TEST 241
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-019]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  
        COMMENT counter-1 of Page_settings,txt_redx_height of  Text_settings with index text loop  counter-1 of Page_settings 
        COMMENT by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  txt_redx_axis
        COMMENT  of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH minus txt_redx_height of Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings by two and PANEL_HEIGHT minus txt_redx_height of  txt_redx_axis 
        COMMENT  of Text_settings with index text loop  counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is 
        COMMENT  less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with 
        COMMENT  BIT_EIGHT is true then,
        COMMENT Equivalence Class 147,157,195
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-015]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of txt_redx_offset_axis OF Text_settings with index text loop 
        COMMENT  counter-1 of Page_settings ,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH ) returns FALSE OR 
        COMMENT  CheckAxisMinMax2 with parameters (u16_y of txt_redx_offset_axis OF Text_settings with index text loop  
        COMMENT  counter-1 of Page_settings -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND 
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop
        COMMENT  counter-1 bitwise and with BIT_ELEVEN is true then,
        COMMENT Equivalence Class 147,157,197
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val_type,			init = ONE,									ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = PANEL_HEIGHT,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = 2,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = PANEL_WIDTH+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_NO_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\r' },								ev = init			
		
																																																						

			VAR Error_msg_string[0],			init = "TEXT 0001 TXT_REDX_AXIS",					ev = init
			VAR Error_msg_string[1],			init = "TEXT 0001 TXT_REDX_OFFSET_AXIS",			ev = init
			VAR Error_msg_string[2],			init = "TEXT 0001 TXT_REDX_FONT",					ev = init
			VAR Error_msg_string[3],			init = "TEXT 0001 TXT_REDX_TXT",					ev = init

					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 0,						ev = 5
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1			

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB FontsGetStringWidth(0)0
			STUB FontsGetFontHeight(0)0
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)5
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)5
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 241
	
	
    TEST 242
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-019]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckAxisMinMax with parameters (u16_y of  txt_redx_axis of Text_settings with index text loop  
        COMMENT counter-1 of Page_settings,txt_redx_height of  Text_settings with index text loop  counter-1 of Page_settings 
        COMMENT by two ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR CheckAxisMinMax with parameters (u16_y of  txt_redx_axis
        COMMENT  of Text_settings with index text loop  counter-1 of Page_settings,0,PANEL_WIDTH minus txt_redx_height of Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings by two and PANEL_HEIGHT minus txt_redx_height of  txt_redx_axis 
        COMMENT  of Text_settings with index text loop  counter-1 of Page_settings by two) returns FALSE  AND Pdi_error_count is 
        COMMENT  less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with 
        COMMENT  BIT_EIGHT is true then,
        COMMENT Equivalence Class 148,157,195
        COMMENT 
        COMMENT [hdudispfpdicheck-CheckText-DB-LLR-015]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT If function CheckAxisMinMax2 with parameters (u16_x of txt_redx_offset_axis OF Text_settings with index text loop 
        COMMENT  counter-1 of Page_settings ,-PANEL_HEIGHT,-PANEL_WIDTH,PANEL_HEIGHT and PANEL_WIDTH ) returns FALSE OR 
        COMMENT  CheckAxisMinMax2 with parameters (u16_y of txt_redx_offset_axis OF Text_settings with index text loop  
        COMMENT  counter-1 of Page_settings -PANEL_WIDTH,-PANEL_HEIGHT,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE AND 
        COMMENT  Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop
        COMMENT  counter-1 bitwise and with BIT_ELEVEN is true then,
        COMMENT Equivalence Class 148,157,197
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_CENTER,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE,							ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val_type,			init = ONE,									ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = 0,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 242	
	
	
    TEST 243
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 147,157,204
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_CENTER_LEFT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val_type,			init = ONE,									ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = 0,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init					
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 243	
	
	
    TEST 244
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 148,157,208
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_RIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val_type,			init = ONE,									ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = 0,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Display_size,					init = E_10_INCH,					ev = init	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init						
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 244	
	
    TEST 245
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,158,208
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_RIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val_type,			init = ONE,									ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = 0,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Display_size,					init = E_7_INCH,					ev = init	
			
			VAR Pdi_error_count,				init = 0,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init						
						
			VAR U16_message_words[1],			init = 0,							ev = init
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 245	
	
    TEST 246
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,157,204
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_RIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val_type,			init = ONE,									ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = 0,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Display_size,					init = E_5_INCH,					ev = init	
			
			VAR Pdi_error_count,				init = 0,						ev = 1
			VAR Page_parameter_error[0],		init = FALSE,				ev = 1							
						
			VAR U16_message_words[1],			init = 0,							ev = 128
			
			VAR Text_parameter_occurrence[0],		init = 0xFFFF,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 246	
	
	
    TEST 247
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT Equivalence Class 148,157,204
        COMMENT 
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_RIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val_type,			init = ONE,									ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = 20,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = 20,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 20,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 20,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Display_size,					init = E_5_INCH,					ev = init	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
			
			VAR E_orientation,						init = E_PORTRAIT,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 247	
	
	
    TEST 248
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,158,204
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_RIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val_type,			init = ONE,									ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = -20,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = -20,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = -10,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Display_size,					init = E_5_INCH,					ev = init	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
			
			VAR E_orientation,						init = E_PORTRAIT,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 248	
	
	
    TEST 249
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns FALSE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 147,157,208
        COMMENT 
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_RIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val_type,			init = ONE,									ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = 0,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = 2,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = 2,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Display_size,					init = E_5_INCH,					ev = init	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init						
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
			
			VAR E_orientation,						init = E_PORTRAIT,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 249	
	
	
    TEST 250
    FAMILY nominal

        ELEMENT
        COMMENT Test Description
        COMMENT <TD> 
		COMMENT
		COMMENT [hdudispfpdicheck-CheckText-DB-LLR-020]
        COMMENT The function shall loop from ONE to Text_cnt and do the following,
        COMMENT - Set new line indication to return value of function CalStringParam with parameter txt_redx_txt of Text_settings with index text 
        COMMENT loop  counter-1 of Page_settings, address of max width and address of line count.
        COMMENT - Set max width to  product of max width and FontsGetStringWidth with parameter character 'A' and txt_redx_font of f Text_settings
        COMMENT  with index text loop  counter-1 of Page_settings.
        COMMENT - Set line count to product of line count and txt_redx_font of f Text_settings with index text loop  counter-1 of Page_settings.
        COMMENT - Increment max width by one if max width bitwise and with one is equal to ONE.
        COMMENT - If new line indication is TRUE OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_x of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_x of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus max width by  two,ZERO ,PANEL_HEIGHT and PANEL_WIDTH) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings plus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR 
        COMMENT CheckAxisMinMax with parameters (u16_y of  txt_redx_offset_axis of Text_settings with index text loop  counter-1 of Page_settings plus u16_y of  
        COMMENT txt_redx_axis of Text_settings with index text loop  counter-1 of Page_settings Minus line count by  two,ZERO ,PANEL_WIDTH and PANEL_HEIGHT) returns TRUE  OR   
        COMMENT AND Pdi_error_count is less than MAX_ERROR_MSG AND result of Text_parameter_occurrence with index text loop counter-1 bitwise and with BIT_EIGHT is true then,
        COMMENT 1.	Call the function BuildErrorMsg with parameters string element, Label string, TXT_REDX_OFFSET_AXIS, Error_msg_string with array index Pdi_error_count.
        COMMENT 2.	Increment Pdi_error_count by ONE
        COMMENT Equivalence Class 148,157,205,207,208
        COMMENT </TD> 	
		
        COMMENT INPUT SECTION:   
		

			VAR Appdata_appdata->panelWidth,			init = 2,							ev = init
			VAR Appdata_appdata->panelHeight,			init = 2,							ev = init

			VAR Page_settings.page_num,					init = 0,							ev = init			
			VAR Page_settings.page_name,				init = { others => '\0' },			ev = init			
			VAR Page_settings.page_menu,				init = MAX_PAGE_MENU_10INCH,		ev = init			
			VAR Page_settings.menu_color,				init = BLACK,					ev = init			
			VAR Page_settings.action_color,				init = BLACK,					ev = init			
			VAR Page_settings.menu_txt_color,			init = BLACK,					ev = init			
			VAR Page_settings.timer_font,				init = BLACK,					ev = init				
			VAR Page_settings.timer_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.timer_axis.u16_y,			init = 0,					ev = init					
			VAR Page_settings.acdt_axis.u16_x,			init = 0,								ev = init			
			VAR Page_settings.acdt_axis.u16_y,			init = 0,					ev = init	
			
			VAR Config_data.eng_sdi,					init = FALSE,					ev = init	
			
			VAR Page_settings.Text_settings[0].label,					init = 1,								ev = init			
			VAR Page_settings.Text_settings[0].txt_string,				init = { others => '\0' },				ev = init			
			VAR Page_settings.Text_settings[0].sdi,						init = 3,								ev = init			
			VAR Page_settings.Text_settings[0].txt_align,				init = ALIGN_RIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_font,				init = E_TINY_FONT,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_axis.u16_x,				init = PANEL_WIDTH,							ev = init			
			VAR Page_settings.Text_settings[0].txt_axis.u16_y,				init = PANEL_HEIGHT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_bit,						init = MAX_START_BIT,						ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val,				init = MAX_RANGE+1,							ev = init			
			VAR Page_settings.Text_settings[0].txt_cross_val_type,			init = ONE,									ev = init			
			VAR Page_settings.Text_settings[0].txt_color,					init = COLOR_BLACK,							ev = init			
			VAR Page_settings.Text_settings[0].txt_state,					init = TXT_STATE_REVERSE,					ev = init
			
			VAR Page_settings.Text_settings[0].txt_flash,					init = TEXT_FLASH_OFF,						ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_x,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_axis.u16_y,			init = 0,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_width,				init = 0,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_height,				init = 0,						ev = init	
			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_x,				init = -20,							ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_offset_axis.u16_y,				init = -20,									ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_font,				init = E_TINY_FONT,										ev = init			
			VAR Page_settings.Text_settings[0].txt_redx_txt,				init = { others => '\0' },								ev = init			
		
																																																						



					
        COMMENT OUTPUT SECTION:
        --None
        
        COMMENT INPUT/OUTPUT SECTION:
	
			VAR Global_check,					init = TRUE,					ev = init					
			VAR Page_num,						init = 0,						ev = init						
			VAR Page_check[0],					init = FALSE,					ev = TRUE	
			
			VAR Display_size,					init = E_5_INCH,					ev = init	
			
			VAR Pdi_error_count,				init = 5,						ev = init
			VAR Page_parameter_error[0],		init = FALSE,				ev = init							
						
			VAR U16_message_words[1],			init = 0,							ev = 3968
			
			VAR Text_parameter_occurrence[0],		init = 0,					ev = init

			VAR Text_cnt,		init = 1,							ev = init
						
			VAR Tb_cnt,			init = 0,							ev = init
			VAR Cg_cnt,			init = 0,							ev = init
			VAR Bg_cnt,			init = 0,							ev = init
			VAR Rd_cnt,			init = 0,							ev = init
			VAR Nb_cnt,			init = 0,							ev = init
			VAR Pg_cnt,			init = 0,							ev = init
			VAR Exceed_cnt,		init = 0,							ev = init			
			VAR Caslocationset_parameters,			init = FALSE,							ev = init		
			
			VAR E_orientation,						init = E_LAND_SCAPE_PORTRAIT_UNKNOWN,							ev = init		
        
        COMMENT Stub Calls:
        SIMUL   
		
			STUB FontsGetStringWidth(0)1
			STUB FontsGetFontHeight(0)1	

			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0
			
			STUB FontsGetStringWidth(E_TINY_FONT)0
			STUB FontsGetFontHeight(E_TINY_FONT)0			
			
			STUB StrLen(Page_settings.Text_settings[0].txt_string)1
			STUB StrLen(Page_settings.Text_settings[0].txt_redx_txt)1
        
        END SIMUL			
		
        #PdiDataCheck();
        END ELEMENT

    END TEST -- TEST 250	

END SERVICE -- PdiDataCheck		



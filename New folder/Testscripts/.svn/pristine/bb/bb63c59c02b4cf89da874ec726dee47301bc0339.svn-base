HEADER hdudispflmsscu,Source Code Ver : 1.7 ,TestScript Ver :1.3
--------------------------------------------------------------------------------
-- Author Name         : Vignesh Sunil
--
-- File Name           : hdudispflmsscu_1.ptu
--                       
-- Test Creation Date  : 29.04.2021
--
-- Tested Functions    : ScuRTDWatchdog
--                       ScuRTDSetParam
--                       ScuRTDInit
--                       FaultTimer
--                       ProcessLmsScuSysStatusErr
--                       ProcessLmsScuProbeErr
--                       StartProcessFaultLog
--                       StopProcessingFaultLog
--                       ProcessingArinc01Fault
--                       GetFaultParamData
--                       PushFaultLog
--
-- Version History     :
--
-- TEST-VERSION     TEST-DATE       TESTER NAME        MODIFICATIONS
-- ------------     ---------       -----------        -------------
--     1.1          29.04.2021      Vignesh Sunil       Updated as per #PR100338
--     1.2          14.05.2020      Vignesh Sunil       Updated as per #PR100354
--     1.3          20.04.2022      P AFREEN            Updated as per #PR1000371
--------------------------------------------------------------------------------
--
-- TESTED FILE INCLUDE DIRECTIVES 
--
--------------------------------------------------------------------------------

#/*============================================================================*/
#/* Module specific includes                                                   */
#/*============================================================================*/  

##include "hdudispflmsscu.h" 
##include "hdudispfa429.h"  
##include "hdulibbasictypes.h"      
##include "hdudispfgrapp.h"         
##include "hdudispfdauprofile.h"    
##include "hdudispfarinc825.h" 
##include "hdudispftimer.h"         
##include "hdudispfglobalsettings.h"
##include "hdudispfapp.h"           
--------------------------------------------------------------------------------
--
-- TESTED FILE DECLARATIONS 
--
--------------------------------------------------------------------------------

-- Declarations of the global variables of the tested file

--------------------------------------------------------------------------------

    #T_UINT8 Du_position; 
    #T_UINT16 Port1_label_count; 
    #T_UINT8 Scu_label_flag; 
    #T_BOOL Demo_mode;
    #T_UINT32 Time_in_sec; 
    #T_UINT16 Flight_count; 
    #T_BOOL Ft_log_overflow;
    #T_UINT16 U16_message_words[3]; 
    #T_A429_DATA_STRUCT A429_data[2][256]; 
    #T_UINT16 Scu_timer[3]; 
    #T_UINT8 Scu_fty_offset_flag; 
    #T_UINT32 U32_critical_sr; 
    # volatile T_INT32 Itm_rx_buffer; 
    
    
    
#T_A825_MESSAGE PTU_IN_ps_xm[30];   
#T_UINT32 Index=0;


--------------------------------------------------------------------------------

BEGIN

    COMMENT  Author Name         : Vignesh Sunil
    COMMENT 
    COMMENT  File Name           : hdudispflmsscu_1.ptu
    COMMENT 
    COMMENT  Tested Functions    : ScuRTDWatchdog
    COMMENT                        ScuRTDSetParam
    COMMENT                        ScuRTDInit
    COMMENT                        FaultTimer
    COMMENT                        ProcessLmsScuSysStatusErr
    COMMENT                        ProcessLmsScuProbeErr
    COMMENT                        StartProcessFaultLog
    COMMENT                        StopProcessingFaultLog
    COMMENT                        ProcessingArinc01Fault
    COMMENT                        GetFaultParamData
    COMMENT                        PushFaultLog
    COMMENT
    COMMENT
    COMMENT  Assumptions and Constraints
    COMMENT  <AC>
    COMMENT
    COMMENT  Assumption(s):
    COMMENT  None
    COMMENT 
    COMMENT  Constraint(s):
    COMMENT 1) The testscript is split into 3 due to static dependency.
    COMMENT
    COMMENT  </AC>
    COMMENT
    COMMENT Equivalence Class Description
    COMMENT  <ECD>
    COMMENT 
    COMMENT  Valid Class(es)
    COMMENT
    COMMENT Class 1
    COMMENT In function 'ScuRTDSetParam', parameter a429_tag is not equal to ZERO
    COMMENT
    COMMENT Class 2
    COMMENT In function 'ScuRTDSetParam', parameter a429_tag is equal to ZERO   
    COMMENT
    COMMENT Class 3
    COMMENT In function 'ScuRTDSetParam', type of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is equal to BNR  
    COMMENT
    COMMENT Class 4
    COMMENT In function 'ScuRTDSetParam', type of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is not equal to BNR  
    COMMENT
    COMMENT Class 5
    COMMENT In function 'ScuRTDSetParam', min_val of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is greater than parameter s32_data   
    COMMENT
    COMMENT Class 6
    COMMENT In function 'ScuRTDSetParam', min_val of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is less than parameter s32_data  
    COMMENT
    COMMENT Class 7
    COMMENT In function 'ScuRTDSetParam', max_val of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is less than parameter s32_data
    COMMENT
    COMMENT Class 8
    COMMENT In function 'ScuRTDSetParam', max_val of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is greater than parameter s32_data   
    COMMENT
    COMMENT Class 9
    COMMENT In function 'ScuRTDSetParam', max_val and min_val of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is equal to parameter s32_data       
    COMMENT
    COMMENT Class 10
    COMMENT In function 'ScuRTDSetParam', rtd_tag is equal to ZERO 
    COMMENT
    COMMENT Class 11
    COMMENT In function 'ScuRTDSetParam', rtd_tag is not equal to ZERO  
    COMMENT
    COMMENT Class 12
    COMMENT In function 'ScuRTDSetParam', ertd_stat is not equal to THREE       
    COMMENT
    COMMENT Class 13
    COMMENT In function 'ScuRTDSetParam', ertd_stat is equal to THREE       
    COMMENT
    COMMENT Class 14
    COMMENT In function 'ScuRTDWatchdog', usRTimer of Storage for Real Time Data with 
    COMMENT index as loop index count is less than RTD_MAX_INTERVAL_SCU 
    COMMENT
    COMMENT Class 15
    COMMENT In function 'ScuRTDWatchdog', usRTimer of Storage for Real Time Data with 
    COMMENT index as loop index count is greater than RTD_MAX_INTERVAL_SCU
    COMMENT
    COMMENT Class 16
    COMMENT In function 'ScuRTDWatchdog', Scu_timer with 
    COMMENT index as loop index count is greater than RTD_MAX_INTERVAL_SCU  
    COMMENT
    COMMENT Class 17
    COMMENT In function 'ScuRTDWatchdog', Scu_timer with 
    COMMENT index as loop index count is less than RTD_MAX_INTERVAL_SCU     
    COMMENT
    COMMENT Class 18
    COMMENT In function 'ScuRTDWatchdog', Scu_timer with 
    COMMENT index as loop index count is equal to RTD_MAX_INTERVAL_SCU  
    COMMENT
    COMMENT Class 19
    COMMENT In function 'ProcessingArinc01Fault', Demo_mode is not equal to TRUE
    COMMENT
    COMMENT Class 20
    COMMENT In function 'ProcessingArinc01Fault', Demo_mode is equal to TRUE    
    COMMENT
    COMMENT Class 21
    COMMENT In function 'ProcessingArinc01Fault', Arinc Fault set is equal to ZERO 
    COMMENT
    COMMENT Class 23
    COMMENT In function 'ProcessingArinc01Fault', scu timer of index ZERO or scu timer of index ONE or scu timer of 
    COMMENT index TWO is less than RTD_MAX_INTERVAL_SCU 
    COMMENT
    COMMENT Class 24
    COMMENT In function 'ProcessingArinc01Fault', scu timer of index ZERO or scu timer of index ONE or scu timer of 
    COMMENT index TWO is equal to RTD_MAX_INTERVAL_SCU  
    COMMENT
    COMMENT Class 25
    COMMENT In function 'ProcessingArinc01Fault', scu timer of index ZERO or scu timer of index ONE or scu timer of 
    COMMENT index TWO is greater than RTD_MAX_INTERVAL_SCU  
    COMMENT
    COMMENT Class 26
    COMMENT In function 'ProcessingArinc01Fault', error state is FALSE  
    COMMENT
    COMMENT Class 27
    COMMENT In function 'ProcessingArinc01Fault', error state is TRUE       
    COMMENT
    COMMENT Class 28
    COMMENT In function 'ProcessingArinc01Fault', fault_active_flag of Fault log structure with index as ft index is TRUE
    COMMENT
    COMMENT Class 29
    COMMENT In function 'ProcessingArinc01Fault', fault_active_flag of Fault log structure with index as ft index is FALSE
    COMMENT
    COMMENT Class 30
    COMMENT In function 'ProcessingArinc01Fault', index flag is equal to FALSE  
    COMMENT
    COMMENT Class 31
    COMMENT In function 'ProcessingArinc01Fault', index flag is equal to TRUE
    COMMENT
    COMMENT Class 32
    COMMENT In function 'ProcessingArinc01Fault', scu label flag is 
    COMMENT equal to SEVEN
    COMMENT
    COMMENT Class 33
    COMMENT In function 'ProcessingArinc01Fault', scu label flag is 
    COMMENT not equal to SEVEN  
    COMMENT
    COMMENT Class 34
    COMMENT In function 'ProcessingArinc01Fault', data_present of Fault log structure with index as fault index count is 
    COMMENT equal to FALSE
    COMMENT
    COMMENT Class 35
    COMMENT In function 'ProcessingArinc01Fault', data_present of Fault log structure with index as fault index count is 
    COMMENT not equal to FALSE  
    COMMENT
    COMMENT Class 36
    COMMENT In function 'ProcessingArinc01Fault',ft index flag is equal to FALSE
    COMMENT
    COMMENT Class 37
    COMMENT In function 'ProcessingArinc01Fault',ft index flag is equal to TRUE 
    COMMENT
    COMMENT Class 38
    COMMENT In function 'ProcessingArinc01Fault',initial_fault_index of Fault log structure 
    COMMENT with index as ft index is equal to FALSE.   
    COMMENT
    COMMENT Class 39
    COMMENT In function 'ProcessingArinc01Fault',initial_fault_index of Fault log structure 
    COMMENT with index as ft index is equal to TRUE.    
    COMMENT
    COMMENT Class 40
    COMMENT In function 'ProcessingArinc01Fault',fault index is less than TEN and Stop log variable is equal to FALSE.  
    COMMENT
    COMMENT Class 41
    COMMENT In function 'ProcessingArinc01Fault',fault index is less than TEN and Stop log variable is equal to TRUE.
    COMMENT
    COMMENT Class 42
    COMMENT In function 'ProcessingArinc01Fault',fault index is greater than TEN and Stop log variable is equal to FALSE.   
    COMMENT
    COMMENT Class 43
    COMMENT In function 'StartProcessingFaultLog',fault id count is greater than 65534  
    COMMENT
    COMMENT Class 44
    COMMENT In function 'StartProcessingFaultLog',fault id count is less than 65534 
    COMMENT
    COMMENT Class 45
    COMMENT In function 'StartProcessingFaultLog',fault id count is equal to 65534      
    COMMENT
    COMMENT Class 46
    COMMENT In function 'StartProcessingFaultLog',Ft log 
    COMMENT Size is less than fault id count    
    COMMENT
    COMMENT Class 47
    COMMENT In function 'StartProcessingFaultLog',Ft log 
    COMMENT Size is greater than fault id count 
    COMMENT
    COMMENT Class 48
    COMMENT In function 'GetFaultParamData',label of A429_data with index zero and first loop index count is equal 
    COMMENT to fault_label of fault data with index zero    
    COMMENT
    COMMENT Class 49
    COMMENT In function 'GetFaultParamData',label of A429_data with index zero and first loop index count is not equal 
    COMMENT to fault_label of fault data with index zero    
    COMMENT
    COMMENT Class 50
    COMMENT In function 'GetFaultParamData',stat of label_data of fault data with index as second 
    COMMENT loop index count is equal to PARAM_OK
    COMMENT
    COMMENT Class 51
    COMMENT In function 'GetFaultParamData',stat of label_data of fault data with index as second 
    COMMENT loop index count is not equal to PARAM_OK   
    COMMENT
    COMMENT Class 52
    COMMENT In function 'GetFaultParamData',data set flag equal to TRUE
    COMMENT
    COMMENT Class 53
    COMMENT In function 'GetFaultParamData',data set flag equal to FALSE    
    COMMENT
    COMMENT Class 54
    COMMENT In function 'GetFaultParamData',param_data_present with index as second loop index count of Fault 
    COMMENT log structure with index as parameter arr_index is equal to FALSE
    COMMENT
    COMMENT Class 55
    COMMENT In function 'GetFaultParamData',param_data_present with index as second loop index count of Fault 
    COMMENT log structure with index as parameter arr_index is equal to TRUE    
    COMMENT
    COMMENT Class 56
    COMMENT In function 'GetFaultParamData',parameter timer reset state with index as second loop index count 
    COMMENT is equal to FALSE   
    COMMENT
    COMMENT Class 57
    COMMENT In function 'GetFaultParamData',parameter timer reset state with index as second loop index count 
    COMMENT is equal to TRUE 
    COMMENT
    COMMENT Class 58
    COMMENT In function 'GetFaultParamData',param_data_present with index as second loop index count of 
    COMMENT Fault log structure with index as parameter arr_index is equal to FALSE
    COMMENT
    COMMENT Class 59
    COMMENT In function 'GetFaultParamData',param_data_present with index as second loop index count of 
    COMMENT Fault log structure with index as parameter arr_index is equal to TRUE  
    COMMENT
    COMMENT Class 60
    COMMENT In function 'GetFaultParamData',Return value of FaultTimer with index as second loop index count 
    COMMENT is not equal to TRUE
    COMMENT
    COMMENT Class 61
    COMMENT In function 'GetFaultParamData',Return value of FaultTimer with index as second loop index count 
    COMMENT is equal to TRUE
    COMMENT
    COMMENT Class 62
    COMMENT In function 'GetFaultParamData',parameter ssm validity with index as second loop index count is 
    COMMENT equal to TRUE 
    COMMENT
    COMMENT Class 63
    COMMENT In function 'GetFaultParamData',parameter ssm validity with index as second loop index count is 
    COMMENT not equal to TRUE   
    COMMENT
    COMMENT Class 64
    COMMENT In function 'FaultTimer',initial variable is TRUE
    COMMENT
    COMMENT Class 65
    COMMENT In function 'FaultTimer',initial variable is FALSE  
    COMMENT
    COMMENT Class 66
    COMMENT In function 'FaultTimer',Fault timer with index as parameter
    COMMENT index is greater than TIME_FRAME
    COMMENT
    COMMENT Class 67
    COMMENT In function 'FaultTimer',Fault timer with index as parameter
    COMMENT index is less than TIME_FRAME   
    COMMENT
    COMMENT Class 68
    COMMENT In function 'GetFaultParamData',stat of 
    COMMENT label_data of Fault_data with index zero and one and two and three and 
    COMMENT four and five are equal to PARAM_OK 
    COMMENT
    COMMENT Class 69
    COMMENT In function 'GetFaultParamData',stat of 
    COMMENT label_data of Fault_data with index zero and one and two and three and 
    COMMENT four and five are not equal to PARAM_OK     
    COMMENT
    COMMENT Class 70
    COMMENT In function 'PushFaultLog',Fault_index of Fault log structure 
    COMMENT with index as fault index is greater than ZERO
    COMMENT
    COMMENT Class 71
    COMMENT In function 'PushFaultLog',Fault_index of Fault log structure 
    COMMENT with index as fault index is equal to ZERO
    COMMENT
    COMMENT Class 72
    COMMENT In function 'PushFaultLog',end_ft_transmission 
    COMMENT of Fault log structure with index as fault index count is equal to FALSE
    COMMENT
    COMMENT Class 73
    COMMENT In function 'PushFaultLog',end_ft_transmission 
    COMMENT of Fault log structure with index as fault index count is equal to TRUE 
    COMMENT
    COMMENT Class 74
    COMMENT In function 'PushFaultLog',Stop ft log is equal to FALSE    
    COMMENT
    COMMENT Class 75
    COMMENT In function 'PushFaultLog',Stop ft log is equal to TRUE     
    COMMENT
    COMMENT Class 76
    COMMENT In function 'PushFaultLog',fault_data_write of Fault log structure with index as fault index count 
    COMMENT is equal to FALSE   
    COMMENT
    COMMENT Class 77
    COMMENT In function 'PushFaultLog',fault_data_write of Fault log structure with index as fault index count 
    COMMENT is equal to TRUE    
    COMMENT
    COMMENT Class 78
    COMMENT In function 'PushFaultLog',test result is not equal to A825_XM_OK
    COMMENT
    COMMENT Class 79
    COMMENT In function 'PushFaultLog',test result is equal to A825_XM_OK   
    COMMENT
    COMMENT Class 80
    COMMENT In function 'PushFaultLog',fault_active_flag of Fault log structure with index as fault index is equal to TRUE
    COMMENT
    COMMENT Class 81
    COMMENT In function 'PushFaultLog',fault_active_flag of Fault log structure with index as fault index is equal to FALSE 
    COMMENT
    COMMENT Class 82
    COMMENT In function 'PushFaultLog',param_data_present with index as data index count of Fault log structure 
    COMMENT with index as parameter arr_index is equal to TRUE and param_data_write with 
    COMMENT index as data index count of Fault log structure with index as parameter 
    COMMENT arr_index is equal to FALSE 
    COMMENT
    COMMENT Class 83
    COMMENT In function 'PushFaultLog',param_data_present with index as data index count of Fault log structure 
    COMMENT with index as parameter arr_index is equal to TRUE and param_data_write with 
    COMMENT index as data index count of Fault log structure with index as parameter 
    COMMENT arr_index is equal to TRUE 
    COMMENT
    COMMENT Class 84
    COMMENT In function 'PushFaultLog',param_data_present with index as data index count of Fault log structure 
    COMMENT with index as parameter arr_index is equal to FALSE and param_data_write with 
    COMMENT index as data index count of Fault log structure with index as parameter 
    COMMENT arr_index is equal to FALSE 
    COMMENT
    COMMENT Class 85
    COMMENT In function 'PushFaultLog'Last_ft_record of Fault log structure with index as fault index 
    COMMENT count is equal to TRUE      
    COMMENT
    COMMENT Class 86
    COMMENT In function 'PushFaultLog'Last_ft_record of Fault log structure with index as fault index 
    COMMENT count is equal to FALSE 
    COMMENT
    COMMENT Class 87
    COMMENT In function 'ProcessLmsScuSysStatusErr'data_present of Fault log structure with index as 
    COMMENT loop index count is equal to FALSE
    COMMENT
    COMMENT Class 88
    COMMENT In function 'ProcessLmsScuSysStatusErr'data_present of Fault log structure with index as 
    COMMENT loop index count is equal to TRUE
    COMMENT
    COMMENT Class 89
    COMMENT In function 'ProcessLmsScuSysStatusErr'status is equal to THREE 
    COMMENT
    COMMENT Class 90
    COMMENT In function 'ProcessLmsScuSysStatusErr'status is not equal to THREE or ONE  
    COMMENT
    COMMENT Class 91
    COMMENT In function 'ProcessLmsScuSysStatusErr'fault_active_flag of Fault log structure with index as index with index 
    COMMENT zero to four is FALSE   
    COMMENT
    COMMENT Class 92
    COMMENT In function 'ProcessLmsScuSysStatusErr'fault_active_flag of Fault log structure with index as index with index 
    COMMENT zero to four is TRUE
    COMMENT
    COMMENT Class 93
    COMMENT In function 'ProcessLmsScuSysStatusErr'parameter data right shifting to 
    COMMENT NINE,TWELVE,THIRTEEN,FORTEEN,FIFTEEN and with HEX_ONE is not equal to ONE
    COMMENT
    COMMENT Class 94
    COMMENT In function 'ProcessLmsScuSysStatusErr'parameter data right shifting to 
    COMMENT NINE,TWELVE,THIRTEEN,FORTEEN,FIFTEEN and with HEX_ONE is equal to ONE
    COMMENT
    COMMENT Class 95
    COMMENT In function 'ProcessLmsScuSysStatusErr'err_stat is TRUE 
    COMMENT
    COMMENT Class 96
    COMMENT In function 'ProcessLmsScuSysStatusErr'err_stat is FALSE
    COMMENT
    COMMENT Class 97
    COMMENT In function 'ProcessLmsScuSysStatusErr'index flag with index zero,one,two,three,four is equal to FALSE
    COMMENT
    COMMENT Class 98
    COMMENT In function 'ProcessLmsScuSysStatusErr'index flag with index zero,one,two,three,four is equal to TRUE   
    COMMENT
    COMMENT Class 99
    COMMENT In function 'ProcessLmsScuSysStatusErr'initial_fault_index of Fault log structure with index as 
    COMMENT index with index zero is equal to FALSE.    
    COMMENT
    COMMENT Class 100
    COMMENT In function 'ProcessLmsScuSysStatusErr'initial_fault_index of Fault log structure with index as 
    COMMENT index with index zero is equal to TRUE. 
    COMMENT
    COMMENT Class 101
    COMMENT In function 'ProcessLmsScuSysStatusErr'fault index is less than TEN and Stop log variable is equal to FALSE 
    COMMENT
    COMMENT Class 102
    COMMENT In function 'ProcessLmsScuSysStatusErr'fault index is less than TEN and Stop log variable is equal to TRUE  
    COMMENT
    COMMENT Class 103
    COMMENT In function 'ProcessLmsScuSysStatusErr'fault index is greater than TEN and Stop log variable is equal to TRUE   
    COMMENT
    COMMENT Class 104
    COMMENT In function 'ProcessLmsScuProbeErr'parameter data right shifting to ZERO,ONE,TWO,THREE
    COMMENT and with HEX_ONE is not equal to ONE
    COMMENT
    COMMENT Class 105
    COMMENT In function 'ProcessLmsScuProbeErr'parameter data right shifting to ZERO,ONE,TWO,THREE
    COMMENT and with HEX_ONE is equal to ONE
    COMMENT
    COMMENT Class 106
    COMMENT In function 'ProcessLmsScuProbeErr'fault_active_flag of Fault log structure with index as 
    COMMENT index with index ZERO,ONE,TWO,THREE is FALSE    
    COMMENT
    COMMENT Class 107
    COMMENT In function 'ProcessLmsScuProbeErr'fault_active_flag of Fault log structure with index as 
    COMMENT index with index ZERO,ONE,TWO,THREE is TRUE 
    COMMENT
    COMMENT Class 108
    COMMENT In function 'ProcessLmsScuProbeErr'index flag with index ZERO,ONE,TWO,THREE is equal to TRUE
    COMMENT
    COMMENT Class 109
    COMMENT In function 'ProcessLmsScuProbeErr'index flag with index ZERO,ONE,TWO,THREE is equal to FALSE   
    COMMENT
    COMMENT Class 110
    COMMENT In function 'ProcessLmsScuProbeErr'status is equal to THREE 
    COMMENT
    COMMENT Class 111
    COMMENT In function 'ProcessLmsScuProbeErr'status is not equal to THREE or ZERO  
    COMMENT
    COMMENT Class 112
    COMMENT In function 'ProcessLmsScuProbeErr'initial_fault_index of Fault log structure with index as index with index
    COMMENT  zero,one,two,three is equal to FALSE
    COMMENT
    COMMENT Class 113
    COMMENT In function 'ProcessLmsScuProbeErr'initial_fault_index of Fault log structure with index as index with index
    COMMENT  zero,one,two,three is equal to TRUE    
    COMMENT
    COMMENT Class 114
    COMMENT In function 'ProcessLmsScuProbeErr'fault index is less than TEN and Stop log variable is equal to FALSE 
    COMMENT
    COMMENT Class 115
    COMMENT In function 'ProcessLmsScuProbeErr'fault index is greater than TEN and Stop log variable is equal to FALSE  
    COMMENT
    COMMENT Class 116
    COMMENT In function 'ProcessLmsScuProbeErr'fault index is less than TEN and Stop log variable is equal to TRUE  
    COMMENT
    COMMENT Class 117
    COMMENT In function 'ScuRTDGetParam'rtd_tag is greater 
    COMMENT than SCU_RTDMAX_PARAM       
    COMMENT
    COMMENT Class 118
    COMMENT In function 'ScuRTDGetParam'rtd_tag is less 
    COMMENT than SCU_RTDMAX_PARAM       
    COMMENT
    COMMENT Class 119
    COMMENT In function 'ScuRTDGetParam'rtd_tag is equal to 
    COMMENT SCU_RTDMAX_PARAM    
    COMMENT
    COMMENT Class 120
    COMMENT In function 'ScuRTDGetParam'a429_type is BNR
    COMMENT
    COMMENT Class 121
    COMMENT In function 'ScuRTDGetParam'a429_type is DDW    
    COMMENT
    COMMENT Class 122
    COMMENT In function 'ScuRTDGetParam'a429_type is otherthan BNR or DDW   
    COMMENT
    COMMENT Class 123
    COMMENT In function 'ScuRTDGetParam'eRTDStat of RTD reading is RTD_STAT_FAIL        
    COMMENT
    COMMENT Class 124
    COMMENT In function 'ScuRTDGetParam'eRTDStat of RTD reading is not RTD_STAT_FAIL, RTD_NCD,
    COMMENT RTD_MISSING ,RTD_NORMAL and RTD_RANGE_ERR.
    COMMENT
    COMMENT Class 125
    COMMENT In function 'ScuRTDGetParam'Fault_set is not equal to ZERO  
    COMMENT
    COMMENT Class 126
    COMMENT In function 'ScuRTDGetParam'Fault_set is equal to ZERO  
    COMMENT
    COMMENT Class 127
    COMMENT In function 'ScuRTDGetParam'Ssm_ncd is equal to zero    
    COMMENT
    COMMENT Class 128
    COMMENT In function 'ScuRTDGetParam'Ssm_ncd is not equal to zero    
    COMMENT
    COMMENT Class 129
    COMMENT In function 'ScuRTDGetParam'second 
    COMMENT or third bit of Scu_fty_offset_flag is equal to one
    COMMENT
    COMMENT Class 130
    COMMENT In function 'ScuRTDGetParam'second 
    COMMENT or third bit of Scu_fty_offset_flag is not equal to one 
    COMMENT
    COMMENT Class 137
    COMMENT In function 'ScuRTDGetParam'eRTDStat of RTD reading is RTD_NCD      
    COMMENT
    COMMENT Class 138
    COMMENT In function 'ScuRTDGetParam'eRTDStat of RTD reading is RTD_MISSING
    COMMENT
    COMMENT Class 139
    COMMENT In function 'ScuRTDGetParam'eRTDStat of RTD reading is RTD_NORMAL       
    COMMENT
    COMMENT Class 140
    COMMENT In function 'ScuRTDGetParam'eRTDStat of RTD reading is RTD_RANGE_ERR        
    COMMENT
    COMMENT Class 141
    COMMENT In function 'ScuRTDGetParam'second 
    COMMENT bit of Fault_set is not ONE         
    COMMENT
    COMMENT Class 142
    COMMENT In function 'ScuRTDGetParam'second 
    COMMENT bit of Fault_set is ONE     
    COMMENT
    COMMENT Class 143
    COMMENT In function 'ScuRTDGetParam'stat of ps_dest is not equal to RANGE_ERROR     
    COMMENT
    COMMENT Class 144
    COMMENT In function 'ScuRTDGetParam'stat of ps_dest is equal to RANGE_ERROR         
    COMMENT 
    COMMENT
    COMMENT Class 146
    COMMENT In function 'ProcessingArinc01Fault', initial variable is TRUE
    COMMENT
    COMMENT Class 147
    COMMENT In function 'ProcessingArinc01Fault', initial variable is FALSE 
    COMMENT
    COMMENT Class 150
    COMMENT In function 'ProcessLmsScuProbeErr'error 
    COMMENT state is equal to TRUE 
    COMMENT 
    COMMENT Class 151
    COMMENT In function 'ProcessLmsScuProbeErr'error 
    COMMENT state is equal to FALSE 
    COMMENT 
    COMMENT Class 152
    COMMENT In function 'ProcessLmsScuProbeErr' status is equal to ZERO.    
    COMMENT 
    COMMENT Class 153
    COMMENT In function 'ProcessLmsScuSysStatusErr' status is equal to ZERO.    
    COMMENT
    COMMENT Class 154
    COMMENT In function 'ProcessLmsScuSysStatusErr' M_ENGSTART  is equal to N1_value
    COMMENT
    COMMENT Class 155
    COMMENT In function 'ProcessLmsScuSysStatusErr' M_ENGSTART  is Greater than N1_value
    COMMENT
    COMMENT Class 156
    COMMENT In function 'ProcessLmsScuSysStatusErr' M_ENGSTART is  less than n1 value   
    COMMENT
    COMMENT </ECD>

--------------------------------------------------------------------------------
--
-- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
--
--------------------------------------------------------------------------------    

DEFINE STUB hdudispflmsscu_c

    #T_A825_XMITRESULT A8251Xmit(T_A825_MESSAGE _no *ps_xm)
    #{
    #
    #       PTU_IN_ps_xm[Index] = *ps_xm;
    #
    #Index++;
    #}
        
    #void RTDGetParam(T_UINT16  _in a429_tag, T_PARAM_READING  _inout ps_dest);
    #void RTDGetParamDdw(T_UINT16  _in a429_tag, T_PARAM_READING  _inout ps_dest); 
    #void TimerPreset( volatile T_TIMER  _no timer, T_INT32  _in s32_set_val);
    #void TimerInstall( volatile T_TIMER  _no timer);
    #void RestoreStatusReg(T_UINT32  _in U32_critical_sr);
    #T_UINT32 SaveStatusReg(void); 

END DEFINE

--------------------------------------------------------------------------------
--
-- ENVIRONMENTS DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- TESTED FILE ENVIRONNEMENT
--------------------------------------------------------------------------------

-- Environment of the file E:\HDU_VIGNESH\HDUDISPFLMSSCU\SRC\hdudispflmsscu.c
ENVIRONMENT ENV_hdudispflmsscu_c
  VAR Flt_id_count,     init = 0,       ev = init
--  ARRAY Fault_data,       init = { others => { fault_label => 0, label_data => { r => 0, stat => PARAM_OK, fread => 0.0 } } },        ev = init
  ARRAY Fault_timer,        init = { others => 0 },     ev = init
--  ARRAY Fault_log_structure,      init = { others => { Fault_index => 0, flight_number => 0, fault_type => PROBE_ERROR, error_code => 0, timestamp => 0, param_data => { others => 0 }, initial_fault_index => FALSE, start_duration => 0, stop_duration => 0, param_data_present
--&=> { others => FALSE }, data_present => FALSE, fault_active_flag => FALSE, fault_data_write => FALSE, Last_ft_record => FALSE, end_ft_transmission => FALSE, param_data_write => { others => FALSE } } },        ev = init
END ENVIRONMENT -- ENV_hdudispflmsscu_c
USE ENV_hdudispflmsscu_c

--------------------------------------------------------------------------------
--
-- SERVICES DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Declaration of the service ScuRTDSetParam
--------------------------------------------------------------------------------
SERVICE ScuRTDSetParam
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_UINT8 channel;
    #T_UINT16 a429_tag;
    #T_UINT8 rtd_tag;
    #T_FLOAT s32_data;
    #T_RTD_STATUS ertd_stat;

    TEST 1
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-ScuRTDSetParam-DB-LLR-001]
    COMMENT The function perform the following :
    COMMENT 1. call the macro OS_ENTER_CRITICAL
    COMMENT 2. set usRTimer of Storage for Real Time Data with index as loop index count to ZERO.
    COMMENT Equivalence Class None
    COMMENT 
    COMMENT [hdudispflmsscu-ScuRTDSetParam-DB-LLR-004]
    COMMENT The function don't set ertd_stat to RTD_RANGE_ERR when the following 
    COMMENT conditions are satisfied
    COMMENT 1. parameter a429_tag is not equal to ZERO
    COMMENT 2. type of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is equal to BNR
    COMMENT 3. min_val of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is equal to parameter s32_data
    COMMENT 4. max_val of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is equal to parameter s32_data
    COMMENT Equivalence Class 1,3,9
    COMMENT
    COMMENT [hdudispflmsscu-ScuRTDSetParam-DB-LLR-002]
    COMMENT The function do the following when rtd_tag is equal to ZERO 
    COMMENT and ertd_stat is not equal to THREE
    COMMENT -Set Arinc_fault_set to Arinc_fault_set or with ONE.
    COMMENT -Set Ssm_ncd with Ssm_ncd or with ONE when ertd_stat is equal to ONE 
    COMMENT and ertd_stat is not equal to RTD_RANGE_ERR else
    COMMENT -Set Ssm_ncd with Ssm_ncd and with 0xFE
    COMMENT Equivalence Class 10,12
    COMMENT
    COMMENT [hdudispflmsscu-ScuRTDSetParam-DB-LLR-005]
    COMMENT The function perform the following :
    COMMENT 1. set s32reading of Storage for Real Time Data with index as 
    COMMENT parameter rtd_tag to parameter s32_data
    COMMENT 2. set eRTDStat of Storage for Real Time Data with index as 
    COMMENT parameter rtd_tag to parameter ertd_stat
    COMMENT 3. call the macro OS_EXIT_CRITICAL.
    COMMENT Equivalence Class None
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:  
        
        VAR channel,        init = 0,       ev = init
        
        VAR a429_tag,       init = 1,       ev = init
        
        VAR rtd_tag,        init = 0,       ev = init
        
        VAR s32_data,       init = 0.0,     ev = init
        
        VAR ertd_stat,      init = RTD_NCD,     ev = init
        
        VAR A429_data[0][0].type,       init = BNR,     ev = init
        
        VAR A429_data[0][0].min_val,    init = 0.0,     ev = init
                
        COMMENT OUTPUT SECTION: 
        
        VAR U32_critical_sr,        init = 0,       ev = 1      
        
        COMMENT INPUT/OUTPUT SECTION:       
        
            --None
        
        COMMENT Stub Calls:
        SIMUL   
            
            STUB SaveStatusReg()1
            STUB RestoreStatusReg(1)
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ScuRTDSetParam(channel, a429_tag, rtd_tag, s32_data, ertd_stat);
        END ELEMENT

    END TEST -- TEST 1
    
    TEST 2
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT 
    COMMENT [hdudispflmsscu-ScuRTDSetParam-DB-LLR-004]
    COMMENT The function do nothing when
    COMMENT 1. parameter a429_tag is not equal to ZERO
    COMMENT 2. type of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is not equal to BNR
    COMMENT 3. min_val of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is equal to parameter s32_data
    COMMENT 4. max_val of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is equal to parameter s32_data
    COMMENT Equivalence Class 1,4
    COMMENT
    COMMENT [hdudispflmsscu-ScuRTDSetParam-DB-LLR-002]
    COMMENT The function do the following when rtd_tag is equal to ZERO 
    COMMENT and ertd_stat is not equal to THREE
    COMMENT -Set Arinc_fault_set to Arinc_fault_set or with ONE.
    COMMENT -Set Ssm_ncd with Ssm_ncd and with 0xFE
    COMMENT Equivalence Class 10,12
    COMMENT
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:  
        
        VAR channel,        init = 0,       ev = init
        
        VAR a429_tag,       init = 1,       ev = init
        
        VAR rtd_tag,        init = 0,       ev = init
        
        VAR s32_data,       init = 0.0,     ev = init
        
        VAR ertd_stat,      init = 2,       ev = init
        
        VAR A429_data[0][0].type,       init = BNR+1,       ev = init
        
        VAR A429_data[0][0].min_val,    init = 0.0,     ev = init
                
        COMMENT OUTPUT SECTION: 
        
        VAR U32_critical_sr,        init = 0,       ev = 1      
        
        COMMENT INPUT/OUTPUT SECTION:       
        
            --None
        
        COMMENT Stub Calls:
        SIMUL   
            
            STUB SaveStatusReg()1
            STUB RestoreStatusReg(1)
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ScuRTDSetParam(channel, a429_tag, rtd_tag, s32_data, ertd_stat);
        END ELEMENT

    END TEST -- TEST 2
    
    TEST 3
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT 
    COMMENT [hdudispflmsscu-ScuRTDSetParam-DB-LLR-004]
    COMMENT The function  set ertd_stat to RTD_RANGE_ERR when the following 
    COMMENT conditions are satisfied
    COMMENT 1. parameter a429_tag is not equal to ZERO
    COMMENT 2. type of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is equal to BNR
    COMMENT 3. min_val of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is greater than parameter s32_data
    COMMENT 4. max_val of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is equal to parameter s32_data
    COMMENT Equivalence Class 1,3,5
    COMMENT
    COMMENT [hdudispflmsscu-ScuRTDSetParam-DB-LLR-002]
    COMMENT The function do the following when rtd_tag is equal to ZERO 
    COMMENT and ertd_stat is not equal to THREE
    COMMENT -Set Arinc_fault_set to Arinc_fault_set or with ONE.
    COMMENT -Set Ssm_ncd with Ssm_ncd and with 0xFE
    COMMENT Equivalence Class 10,12
    COMMENT
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:  
        
        VAR channel,        init = 0,       ev = init
        
        VAR a429_tag,       init = 1,       ev = init
        
        VAR rtd_tag,        init = 0,       ev = init
        
        VAR s32_data,       init = 0.0,     ev = init
        
        VAR ertd_stat,      init = RTD_NCD,     ev = init
        
        VAR A429_data[0][0].type,       init = BNR,     ev = init
        
        VAR A429_data[0][0].min_val,    init = 1,       ev = init
                
        COMMENT OUTPUT SECTION: 
        
        VAR U32_critical_sr,        init = 0,       ev = 1      
        
        COMMENT INPUT/OUTPUT SECTION:       
        
            --None
        
        COMMENT Stub Calls:
        SIMUL   
            
            STUB SaveStatusReg()1
            STUB RestoreStatusReg(1)
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ScuRTDSetParam(channel, a429_tag, rtd_tag, s32_data, ertd_stat);
        END ELEMENT

    END TEST -- TEST 3
    
    TEST 4
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT 
    COMMENT [hdudispflmsscu-ScuRTDSetParam-DB-LLR-004]
    COMMENT The function  set ertd_stat to RTD_RANGE_ERR when the following 
    COMMENT conditions are satisfied
    COMMENT 1. parameter a429_tag is not equal to ZERO
    COMMENT 2. type of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is equal to BNR
    COMMENT 3. min_val of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is less than parameter s32_data
    COMMENT 4. max_val of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is less than parameter s32_data
    COMMENT Equivalence Class 1,3,7
    COMMENT
    COMMENT [hdudispflmsscu-ScuRTDSetParam-DB-LLR-002]
    COMMENT The function do the following when rtd_tag is equal to ZERO 
    COMMENT and ertd_stat is not equal to THREE
    COMMENT -Set Arinc_fault_set to Arinc_fault_set or with ONE.
    COMMENT -Set Ssm_ncd with Ssm_ncd and with 0xFE
    COMMENT Equivalence Class 10,12
    COMMENT
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:  
        
        VAR channel,        init = 0,       ev = init
        
        VAR a429_tag,       init = 1,       ev = init
        
        VAR rtd_tag,        init = 0,       ev = init
        
        VAR s32_data,       init = 2.0,     ev = init
        
        VAR ertd_stat,      init = RTD_NCD,     ev = init
        
        VAR A429_data[0][0].type,       init = BNR,     ev = init
        
        VAR A429_data[0][0].min_val,    init = 1,       ev = init
        
        VAR A429_data[0][0].max_val,    init = 1,       ev = init
                
        COMMENT OUTPUT SECTION: 
        
        VAR U32_critical_sr,        init = 0,       ev = 1      
        
        COMMENT INPUT/OUTPUT SECTION:       
        
            --None
        
        COMMENT Stub Calls:
        SIMUL   
            
            STUB SaveStatusReg()1
            STUB RestoreStatusReg(1)
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ScuRTDSetParam(channel, a429_tag, rtd_tag, s32_data, ertd_stat);
        END ELEMENT

    END TEST -- TEST 4
    
    TEST 5
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT 
    COMMENT [hdudispflmsscu-ScuRTDSetParam-DB-LLR-004]
    COMMENT The function  set ertd_stat to RTD_RANGE_ERR when the following 
    COMMENT conditions are satisfied
    COMMENT 1. parameter a429_tag is not equal to ZERO
    COMMENT 2. type of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is equal to BNR
    COMMENT 3. min_val of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is less than parameter s32_data
    COMMENT 4. max_val of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is greater than parameter s32_data
    COMMENT Equivalence Class 1,3,6,8
    COMMENT
    COMMENT [hdudispflmsscu-ScuRTDSetParam-DB-LLR-003]
    COMMENT The function do the following when rtd_tag is equal to ZERO and 
    COMMENT ertd_stat is equal to THREE 
    COMMENT -Set Arinc_fault_set to Arinc_fault_set and with 0xFE.
    COMMENT -Set Ssm_ncd with Ssm_ncd and with 0xFE
    COMMENT Equivalence Class 10,13
    COMMENT
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:  
        
        VAR channel,        init = 0,       ev = init
        
        VAR a429_tag,       init = 1,       ev = init
        
        VAR rtd_tag,        init = 0,       ev = init
        
        VAR s32_data,       init = 2.0,     ev = init
        
        VAR ertd_stat,      init = 3,       ev = init
        
        VAR A429_data[0][0].type,       init = BNR,     ev = init
        
        VAR A429_data[0][0].min_val,    init = 1,       ev = init
        
        VAR A429_data[0][0].max_val,    init = 3,       ev = init
                
        COMMENT OUTPUT SECTION: 
        
        VAR U32_critical_sr,        init = 0,       ev = 1      
        
        COMMENT INPUT/OUTPUT SECTION:       
        
            --None
        
        COMMENT Stub Calls:
        SIMUL   
            
            STUB SaveStatusReg()1
            STUB RestoreStatusReg(1)
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ScuRTDSetParam(channel, a429_tag, rtd_tag, s32_data, ertd_stat);
        END ELEMENT

    END TEST -- TEST 5
    
    TEST 6
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT 
    COMMENT [hdudispflmsscu-ScuRTDSetParam-DB-LLR-004]
    COMMENT The function  do nothing when
    COMMENT 1. parameter a429_tag is equal to ZERO
    COMMENT 2. type of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is equal to BNR
    COMMENT 3. min_val of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is less than parameter s32_data
    COMMENT 4. max_val of A429_data with index channel and parameter a429_tag 
    COMMENT decremented by one is greater than parameter s32_data
    COMMENT Equivalence Class 2
    COMMENT
    COMMENT [hdudispflmsscu-ScuRTDSetParam-DB-LLR-002]
    COMMENT  The function do nothing when rtd_tag is not equal 
    COMMENT Equivalence Class 11
    COMMENT
    COMMENT [hdudispflmsscu-ScuRTDSetParam-DB-LLR-003]
    COMMENT The function  do nothing when rtd_tag is not equal to ZERO and 
    COMMENT ertd_stat is equal to THREE 
    COMMENT Equivalence Class 11
    COMMENT
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:  
        
        VAR channel,        init = 0,       ev = init
        
        VAR a429_tag,       init = 0,       ev = init
        
        VAR rtd_tag,        init = 1,       ev = init
        
        VAR s32_data,       init = 2.0,     ev = init
        
        VAR ertd_stat,      init = 3,       ev = init
        
        VAR A429_data[0][0].type,       init = BNR,     ev = init
        
        VAR A429_data[0][0].min_val,    init = 1,       ev = init
        
        VAR A429_data[0][0].max_val,    init = 3,       ev = init
                
        COMMENT OUTPUT SECTION: 
        
        VAR U32_critical_sr,        init = 0,       ev = 1      
        
        COMMENT INPUT/OUTPUT SECTION:       
        
            --None
        
        COMMENT Stub Calls:
        SIMUL   
            
            STUB SaveStatusReg()1
            STUB RestoreStatusReg(1)
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ScuRTDSetParam(channel, a429_tag, rtd_tag, s32_data, ertd_stat);
        END ELEMENT

    END TEST -- TEST 6  

END SERVICE -- ScuRTDSetParam


--------------------------------------------------------------------------------
-- Declaration of the service ScuRTDWatchdog
--------------------------------------------------------------------------------
SERVICE ScuRTDWatchdog
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_UINT8 channel;
    #T_UINT16 a429_tag;
    #T_UINT8 rtd_tag;
    #T_FLOAT s32_data;
    #T_RTD_STATUS ertd_stat;

    TEST 1
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-ScuRTDWatchdog-DB-LLR-001]
    COMMENT The function loop from index zero till index is less than 
    COMMENT SCU_RTDMAX_PARAM and perform the following :
    COMMENT 1. Call the macro OS_ENTER_CRITICAL
    COMMENT 2. Set usRTimer of Storage for Real Time Data with index as loop index 
    COMMENT count to usRTimer of Storage for Real Time Data with index as loop index 
    COMMENT count incremented by ONE when usRTimer of Storage for Real Time Data with 
    COMMENT index as loop index count is less than RTD_MAX_INTERVAL_SCU else set the eRTDStat 
    COMMENT of Scu_rtd_readings with index as loop index count to RTD_MISSING 
    COMMENT 3. Increment the Scu_timer with index as loop index count when Scu_timer with 
    COMMENT index as loop index count is greater than RTD_MAX_INTERVAL_SCU else set the 
    COMMENT eRTDStat of Scu_rtd_readings with index zero to RTD_MISSING
    COMMENT 4. Call the macro OS_EXIT_CRITICAL.
    COMMENT Equivalence Class 14,17
    COMMENT 
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR channel,        init = 0,       ev = init
        
        VAR a429_tag,       init = 1,       ev = init
        
        VAR rtd_tag,        init = 1,       ev = init
        
        VAR s32_data,       init = 0.0,     ev = init
        
        VAR ertd_stat,      init = RTD_RANGE_ERR,       ev = init       

        COMMENT OUTPUT SECTION:
        VAR U32_critical_sr,                init = 0,                  ev = 1  
        
        VAR Scu_timer[0],                init = 0,                  ev = 2  
        VAR Scu_timer[1],                init = 0,                  ev = 2  
        VAR Scu_timer[2],                init = 0,                  ev = 2  
        


        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
            
            STUB SaveStatusReg 1..7 =>()1
            
            STUB RestoreStatusReg 1..7 =>(1)
            
        END SIMUL
        
        
        #ScuRTDSetParam(channel, a429_tag, rtd_tag, s32_data, ertd_stat);       
        COMMENT Calling the Unit Under Test:        
        #ScuRTDWatchdog();
        #ScuRTDWatchdog();
        END ELEMENT

    END TEST -- TEST 1
    
    TEST 2
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-ScuRTDWatchdog-DB-LLR-001]
    COMMENT The function loop from index zero till index is less than 
    COMMENT SCU_RTDMAX_PARAM and perform the following :
    COMMENT 1. Call the macro OS_ENTER_CRITICAL
    COMMENT 2. Set usRTimer of Storage for Real Time Data with index as loop index 
    COMMENT count to usRTimer of Storage for Real Time Data with index as loop index 
    COMMENT count incremented by ONE when usRTimer of Storage for Real Time Data with 
    COMMENT index as loop index count is less than RTD_MAX_INTERVAL_SCU else set the eRTDStat 
    COMMENT of Scu_rtd_readings with index as loop index count to RTD_MISSING 
    COMMENT 3. Increment the Scu_timer with index as loop index count when Scu_timer with 
    COMMENT index as loop index count is greater than RTD_MAX_INTERVAL_SCU else set the 
    COMMENT eRTDStat of Scu_rtd_readings with index zero to RTD_MISSING
    COMMENT 4. Call the macro OS_EXIT_CRITICAL.
    COMMENT Equivalence Class 15,16
    COMMENT 
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
            

        COMMENT OUTPUT SECTION:
        VAR U32_critical_sr,                init = 0,                  ev = 1  
        
        VAR Scu_timer[0],                init = 30000,                  ev = init
        VAR Scu_timer[1],                init = 30000,                  ev = init  
        VAR Scu_timer[2],                init = 30000,                  ev = init  
        


        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
            
            STUB SaveStatusReg 1..5 =>()1
            
            STUB RestoreStatusReg 1..5 =>(1)
            
        END SIMUL
        
        
        #ScuRTDInit();      
        COMMENT Calling the Unit Under Test:        
        #ScuRTDWatchdog();
        END ELEMENT

    END TEST -- TEST 2      
    
    TEST 3
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-ScuRTDWatchdog-DB-LLR-001]
    COMMENT The function loop from index zero till index is less than 
    COMMENT SCU_RTDMAX_PARAM and perform the following :
    COMMENT 1. Call the macro OS_ENTER_CRITICAL
    COMMENT 2. Set usRTimer of Storage for Real Time Data with index as loop index 
    COMMENT count to usRTimer of Storage for Real Time Data with index as loop index 
    COMMENT count incremented by ONE when usRTimer of Storage for Real Time Data with 
    COMMENT index as loop index count is less than RTD_MAX_INTERVAL_SCU else set the eRTDStat 
    COMMENT of Scu_rtd_readings with index as loop index count to RTD_MISSING 
    COMMENT 3. Increment the Scu_timer with index as loop index count when Scu_timer with 
    COMMENT index as loop index count is greater than RTD_MAX_INTERVAL_SCU else set the 
    COMMENT eRTDStat of Scu_rtd_readings with index zero to RTD_MISSING
    COMMENT 4. Call the macro OS_EXIT_CRITICAL.
    COMMENT Equivalence Class 15,18
    COMMENT 
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
            

        COMMENT OUTPUT SECTION:
        VAR U32_critical_sr,                init = 0,                  ev = 1  
        
        VAR Scu_timer[0],                init = 10000,                  ev = init
        VAR Scu_timer[1],                init = 10000,                  ev = init  
        VAR Scu_timer[2],                init = 10000,                  ev = init  
        


        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
            
            STUB SaveStatusReg 1..5 =>()1
            
            STUB RestoreStatusReg 1..5 =>(1)
            
        END SIMUL
        
        
        #ScuRTDInit();      
        COMMENT Calling the Unit Under Test:        
        #ScuRTDWatchdog();
        END ELEMENT

    END TEST -- TEST 3  

END SERVICE -- ScuRTDWatchdog


--------------------------------------------------------------------------------
-- Declaration of the service ProcessingArinc01Fault
--------------------------------------------------------------------------------
SERVICE ProcessingArinc01Fault
SERVICE_TYPE extern


    TEST 1
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-001]
    COMMENT The function don't set the error set to TRUE and Fault set to Fault set bitwise 
    COMMENT or with FOUR when the following conditions are satisfied:
    COMMENT 1. Demo_mode is not equal to TRUE.
    COMMENT 2.  (Arinc Fault set is equal to ZERO) 
    COMMENT  or  scu timer of index ZERO or scu timer of index ONE or scu timer of 
    COMMENT index TWO is less than to RTD_MAX_INTERVAL_SCU and error state is FALSE.
    COMMENT Equivalence Class 19,21,23,26 
    COMMENT
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-007]
    COMMENT The function set the U16_message_words with index two to U16_message_words 
    COMMENT with index two AND 65519 and set the error set to FALSE and Fault set to Fault 
    COMMENT set and with 0xFB when
    COMMENT 1. Demo_mode is not equal to TRUE.
    COMMENT 2. Arinc Fault set is equal to Zero and scu timer of index ZERO and scu timer 
    COMMENT of index ONE and scu timer of index TWO is less than RTD_MAX_INTERVAL_SCU.
    COMMENT Equivalence Class 19,21,23
    COMMENT
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-008]
    COMMENT The function do nothing when
    COMMENT 1. Demo_mode is not equal to TRUE.
    COMMENT 2. Arinc Fault set is equal to Zero  and scu timer of index ZERO and scu timer 
    COMMENT of index ONE and scu timer of index TWO is less than RTD_MAX_INTERVAL_SCU.
    COMMENT 3. fault_active_flag of Fault log structure with index as ft index is TRUE and 
    COMMENT index flag is equal to FALSE
    COMMENT Equivalence Class 19,21,23,28,30
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                   init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Fault_log_structure[0].fault_active_flag,                init = TRUE,                  ev = init
                    

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = init           
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT 

    END TEST -- TEST 1
    
    
    TEST 2
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT  
    COMMENT ELEMENT 1 
    COMMENT  
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-001]
    COMMENT The function set the error set to TRUE and Fault set to Fault set bitwise 
    COMMENT or with FOUR when the following conditions are satisfied:
    COMMENT 1. Demo_mode is not equal to TRUE.
    COMMENT 2.  (Arinc Fault set is not equal to ZERO )
    COMMENT  or  scu timer of index ZERO or scu timer of index ONE or scu timer of 
    COMMENT index TWO is greater than or equal to RTD_MAX_INTERVAL_SCU and scu label flag is 
    COMMENT equal to SEVEN and error state is FALSE.
    COMMENT Equivalence Class 19,21,24,26,32
    COMMENT
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-002]
    COMMENT The function perform the following :
    COMMENT a. set the U16_message_words with index two to bitwise or with 16
    COMMENT b. loop from fault index ZERO till index is less than MAX_FAULT_LOG 
    COMMENT Do nothing when below conditions are satisfied :
    COMMENT 1. Demo_mode is not equal to TRUE.
    COMMENT 2.  (Arinc Fault set is not equal to ZERO)  
    COMMENT or scu timer of index ZERO or scu timer of index ONE 
    COMMENT or scu timer of index TWO is greater than or equal to RTD_MAX_INTERVAL_SCU and 
    COMMENT scu label flag is equal to SEVEN and error state is FALSE.
    COMMENT 3. error set is FALSE
    COMMENT 4. data_present of Fault log structure with index as fault index count is 
    COMMENT equal to FALSE 
    COMMENT Equivalence Class 19,21,24,26,32,34
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-003]
    COMMENT The function set the ft index to fault index and ft index flag to TRUE
    COMMENT when below conditions are satisfied :
    COMMENT 1. Demo_mode is not equal to TRUE.
    COMMENT 2.  (Arinc Fault set is not equal to ZERO)   
    COMMENT or scu timer of index ZERO or scu timer 
    COMMENT of index ONE or scu timer of index TWO is greater than or equal to 
    COMMENT RTD_MAX_INTERVAL_SCU and scu label flag is equal to SEVEN and error state is FALSE.
    COMMENT 3. error set is FALSE
    COMMENT 4. ft index flag is equal to FALSE.
    COMMENT Equivalence Class 19,21,24,26,32,34,36
    COMMENT
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-004]
    COMMENT The function call the function GetFaultParamData with parameter as 
    COMMENT ft index when the following conditions are satisfied:
    COMMENT 1. Demo_mode is not equal to TRUE.
    COMMENT 2. (Arinc Fault set is not equal to ZERO) 
    COMMENT  or scu timer of index ZERO or scu timer of index ONE 
    COMMENT or scu timer of index TWO is greater than or equal to RTD_MAX_INTERVAL_SCU 
    COMMENT and scu label flag is equal to SEVEN and error set is FALSE.
    COMMENT Equivalence Class 19,21,24,26,32,34
    COMMENT
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-005]
    COMMENT The function perform the following :     
    COMMENT 1. call the function StartProcessingFaultLog with parameter ARINC_ERROR,      
    COMMENT INVALID_NO_ARINC_SIGNAL and ft index     
    COMMENT when below condition are satisfied :     
    COMMENT 1. Demo_mode is not equal to TRUE.     
    COMMENT 2.  (Arinc Fault set is not equal to ZERO)        
    COMMENT or scu timer of index ZERO or scu timer of index ONE or 
    COMMENT scu timer of index TWO is greater than or equal to RTD_MAX_INTERVAL_SCU and 
    COMMENT scu label flag is equal to SEVEN.
    COMMENT 3. error set is FALSE
    COMMENT 4. initial_fault_index of Fault log structure with index as ft index is equal to FALSE.
    COMMENT Equivalence Class 19,21,24,26,32,34,38
    COMMENT
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-006]
    COMMENT The function don't increment the fault index when below conditions are satisfied :
    COMMENT 1. Demo_mode is not equal to TRUE.
    COMMENT 2.  (Arinc Fault set is not equal to ZERO)  
    COMMENT or scu timer of index ZERO or scu timer of index ONE or 
    COMMENT scu timer of index TWO is greater than or equal to RTD_MAX_INTERVAL_SCU and 
    COMMENT scu label flag is equal to SEVEN.
    COMMENT 3. error set is FALSE
    COMMENT 4. initial_fault_index of Fault log structure with index as 
    COMMENT index is equal to FALSE
    COMMENT 5. fault index is less than TEN and Stop log variable is equal to FALSE.
    COMMENT Equivalence Class 19,21,24,26,32,34,38,41
    COMMENT
    COMMENT ELEMENT 2
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-008]
    COMMENT The function do nothing when
    COMMENT 1. Demo_mode is not equal to TRUE.
    COMMENT 2. Arinc Fault set is equal to Zero  and scu timer of index ZERO and scu timer 
    COMMENT of index ONE and scu timer of index TWO is less than RTD_MAX_INTERVAL_SCU.
    COMMENT 3. fault_active_flag of Fault log structure with index as ft index is FALSE 
    COMMENT Equivalence Class 19,21,23,29
    COMMENT 
    COMMENT ELEMENT 3
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-006]
    COMMENT The function don't increment the fault index when below conditions are satisfied :
    COMMENT 1. Demo_mode is not equal to TRUE.
    COMMENT 2.(Arinc Fault set is not equal to ZERO) 
    COMMENT  or scu timer of index ZERO or scu timer of index ONE or 
    COMMENT scu timer of index TWO is greater than or equal to RTD_MAX_INTERVAL_SCU and 
    COMMENT scu label flag is equal to SEVEN.
    COMMENT 3. error set is FALSE
    COMMENT 4. initial_fault_index of Fault log structure with index as 
    COMMENT index is equal to FALSE
    COMMENT 5. fault index is less than TEN and Stop log variable is equal to FALSE.
    COMMENT Equivalence Class 19,21,24,26,32,34,38,42
    COMMENT 
    COMMENT 
    COMMENT ELEMENT 4
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-008]
    COMMENT The function call the function StopProcessingFaultLog with index as 
    COMMENT ft index and set the ft index flag FALSE when below conditions are satisfied :
    COMMENT 1. Demo_mode is not equal to TRUE.
    COMMENT 2. Arinc Fault set is equal to Zero  and scu timer of index ZERO and scu timer 
    COMMENT of index ONE and scu timer of index TWO is less than RTD_MAX_INTERVAL_SCU.
    COMMENT 3. fault_active_flag of Fault log structure with index as ft index is TRUE and 
    COMMENT index flag is equal to TRUE
    COMMENT Equivalence Class 19,21,23,28,31
    COMMENT
    COMMENT [hdudispflmsscu-StopProcessingFaultLog-DB-LLR-001]
    COMMENT The function perform the following :
    COMMENT set the Fault_index of Fault log structure with index as 
    COMMENT parameter arr_index to ZERO
    COMMENT set the flight_number of Fault log structure with index 
    COMMENT as parameter arr_index to ZERO
    COMMENT set the start_duration of Fault log structure with index 
    COMMENT as parameter arr_index to ZERO
    COMMENT set the stop_duration of Fault log structure with index 
    COMMENT as parameter arr_index to ZERO
    COMMENT set the fault_type of Fault log structure with index as 
    COMMENT parameter arr_index to NO_ERROR
    COMMENT set the error_code of Fault log structure with index as 
    COMMENT parameter arr_index to ZERO
    COMMENT set the end_ft_transmission of Fault log structure with 
    COMMENT index as parameter arr_index to TRUE
    COMMENT set the data_present of Fault log structure with index as 
    COMMENT parameter arr_index to FALSE
    COMMENT set the Last_ft_record of Fault log structure with index 
    COMMENT as parameter arr_index to TRUE
    COMMENT set the initial_fault_index of Fault log structure with 
    COMMENT index as parameter arr_index to FALSE
    COMMENT set the fault_active_flag of Fault log structure with index 
    COMMENT as parameter arr_index to FALSE
    COMMENT set the param_data_present with index zero of Fault log 
    COMMENT structure with index as parameter arr_index to FALSE
    COMMENT set the param_data_present with index one of Fault log 
    COMMENT structure with index as parameter arr_index to FALSE
    COMMENT set the param_data_present with index two of Fault log 
    COMMENT structure with index as parameter arr_index to FALSE
    COMMENT set the param_data_present with index three of Fault log 
    COMMENT structure with index as parameter arr_index to FALSE
    COMMENT set the param_data_present with index four of Fault log 
    COMMENT structure with index as parameter arr_index to FALSE
    COMMENT set the param_data_present with index five of Fault log 
    COMMENT structure with index as parameter arr_index to FALSE
    COMMENT Equivalence Class None
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU,                  ev = init
        
        VAR Scu_label_flag,                init = SEVEN,                  ev = init 
        
        VAR Fault_log_structure[0].data_present,                init = FALSE,                  ev = init    
        
        VAR Fault_log_structure[0].initial_fault_index,                init = FALSE,                  ev = init 
        
        VAR Port1_label_count,                init = 0,                  ev = init  
        
        
        VAR Fault_data[0].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[1].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[2].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[3].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[4].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[5].label_data.stat,                init = PARAM_ADVISORY,                  ev = init 

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = 16         
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT 

        -- ELEMENT 2
        
        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Fault_log_structure[0].fault_active_flag,                init = FALSE,                  ev = init
        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = init           
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT 

        --ELEMENT 3

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU+1,                  ev = init
        
        VAR Scu_label_flag,                init = SEVEN,                  ev = init 
        
        VAR Fault_log_structure[0..9].data_present,                init = TRUE,                  ev = init  
        
        VAR Fault_log_structure[0].initial_fault_index,                init = FALSE,                  ev = init 
        
        VAR Port1_label_count,                init = 0,                  ev = init  
        
        
        VAR Fault_data[0].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[1].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[2].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[3].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[4].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[5].label_data.stat,                init = PARAM_ADVISORY,                  ev = init 

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = 16         
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT 
        
        --ELEMENT 4

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Fault_log_structure[0].fault_active_flag,                init = TRUE,                  ev = FALSE
        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = init   

      VAR Fault_log_structure[0].Fault_index,                   init = 0,       ev  = ZERO
      VAR Fault_log_structure[0].flight_number,                 init = 0,       ev  = ZERO
      VAR Fault_log_structure[0].start_duration,                init = 0,       ev  = ZERO
      VAR Fault_log_structure[0].stop_duration,                 init = 0,       ev  = ZERO
      VAR Fault_log_structure[0].fault_type,                    init = 0,       ev  = NO_ERROR
      VAR Fault_log_structure[0].error_code,                    init = 0,       ev  = ZERO
      VAR Fault_log_structure[0].end_ft_transmission,           init = 0,       ev  = TRUE
      VAR Fault_log_structure[0].data_present,                  init = 0,       ev  = FALSE
      VAR Fault_log_structure[0].Last_ft_record,                init = 0,       ev  = TRUE
      VAR Fault_log_structure[0].initial_fault_index,           init = 0,       ev  = FALSE
      VAR Fault_log_structure[0].param_data_present[0],         init = 0,       ev  = FALSE
      VAR Fault_log_structure[0].param_data_present[1],         init = 0,       ev  = FALSE
      VAR Fault_log_structure[0].param_data_present[2],         init = 0,       ev  = FALSE
      VAR Fault_log_structure[0].param_data_present[3],         init = 0,       ev  = FALSE
      VAR Fault_log_structure[0].param_data_present[4],         init = 0,       ev  = FALSE
      VAR Fault_log_structure[0].param_data_present[5],         init = 0,       ev  = FALSE
      VAR Fault_log_structure[0].fault_data_write,              init = 0,       ev  = TRUE      
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT 
        

    END TEST -- TEST 2
    
    TEST 3
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-001]
    COMMENT The function set the error set to TRUE and Fault set to Fault set bitwise 
    COMMENT or with FOUR when the following conditions are satisfied:
    COMMENT 1. Demo_mode is not equal to TRUE.
    COMMENT 2.  (Arinc Fault set is not equal to ZERO ) 
    COMMENT   or  scu timer of index ZERO or scu timer of index ONE or scu timer of 
    COMMENT index TWO is greater than or equal to RTD_MAX_INTERVAL_SCU and scu label flag is 
    COMMENT equal to SEVEN and error state is FALSE.
    COMMENT Equivalence Class 19,21,23,26,32,25
    COMMENT
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-005]
    COMMENT The function perform the following :     
    COMMENT 1. call the function StartProcessingFaultLog with parameter ARINC_ERROR,      
    COMMENT INVALID_NO_ARINC_SIGNAL and ft index     
    COMMENT when below condition are satisfied :     
    COMMENT 1. Demo_mode is not equal to TRUE.     
    COMMENT 2.  (Arinc Fault set is not equal to ZERO)        
    COMMENT or scu timer of index ZERO or scu timer of index ONE or 
    COMMENT scu timer of index TWO is greater than or equal to RTD_MAX_INTERVAL_SCU and 
    COMMENT scu label flag is equal to SEVEN.
    COMMENT 3. error set is FALSE
    COMMENT 4. initial_fault_index of Fault log structure with index as ft index is equal to FALSE.
    COMMENT Equivalence Class 19,21,24,26,32,34,38
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-006]
    COMMENT The function increment the fault index when below conditions are satisfied :
    COMMENT 1. Demo_mode is not equal to TRUE.
    COMMENT 2.  (Arinc Fault set is not equal to ZERO)  
    COMMENT or scu timer of index ZERO or scu timer of index ONE or 
    COMMENT scu timer of index TWO is greater than or equal to RTD_MAX_INTERVAL_SCU and 
    COMMENT scu label flag is equal to SEVEN.
    COMMENT 3. error set is FALSE
    COMMENT 4. initial_fault_index of Fault log structure with index as 
    COMMENT index is equal to FALSE
    COMMENT 5. fault index is less than TEN and Stop log variable is equal to FALSE.
    COMMENT Equivalence Class 19,21,24,26,32,34,38,40
    COMMENT 
    COMMENT [hdudispflmsscu-StartProcessingFaultLog-DB-LLR-001]
    COMMENT The function perform the following when Stop log variable is equal to FALSE :
    COMMENT 1. initial_fault_index of Fault log structure with index as parameter arr_index to TRUE
    COMMENT 2. fault_active_flag of Fault log structure with index as parameter arr_index to TRUE
    COMMENT 3. increment the fault id count
    COMMENT 4. set to fault id count to modulus of fault id count and 65534 and set 
    COMMENT Fault_index of Fault log structure with index as parameter arr_index to 
    COMMENT fault id count when fault id count is greater than 65534 else set Fault_index 
    COMMENT of Fault log structure with index as parameter arr_index to fault id count.
    COMMENT Equivalence Class 44
    COMMENT 
    COMMENT [hdudispflmsscu-StartProcessingFaultLog-DB-LLR-002]
    COMMENT The function sdo nothing when Ft log 
    COMMENT Size is greater than fault id count.
    COMMENT Equivalence Class 47
    COMMENT
    COMMENT [hdudispflmsscu-StartProcessingFaultLog-DB-LLR-003]
    COMMENT set the flight_number of Fault log structure with index as parameter 
    COMMENT arr_index to flight count
    COMMENT set the start_duration of Fault log structure with index as parameter 
    COMMENT arr_index to result of time in second by five
    COMMENT set the stop_duration of Fault log structure with index as parameter 
    COMMENT arr_index to result of time in second by five
    COMMENT set the fault_type of Fault log structure with index as parameter 
    COMMENT arr_index to fault type
    COMMENT set the error_code of Fault log structure with index as parameter 
    COMMENT arr_index to fault
    COMMENT set the timestamp of Fault log structure with index as parameter 
    COMMENT arr_index to difference of stop_duration of Fault log structure with 
    COMMENT index as parameter arr_index and start_duration of Fault log structure 
    COMMENT with index as parameter arr_index
    COMMENT set the data_present of Fault log structure with index as parameter 
    COMMENT arr_index to TRUE
    COMMENT set the Last_ft_record of Fault log structure with index as parameter 
    COMMENT arr_index to FALSE
    COMMENT set the fault_data_write of Fault log structure with index as parameter 
    COMMENT arr_index to FALSE
    COMMENT set the end_ft_transmission of Fault log structure with index as parameter 
    COMMENT arr_index to FALSE
    COMMENT set the param_data_ write with index zero of Fault log structure with index 
    COMMENT as parameter arr_index to FALSE
    COMMENT set the param_data_ write with index one of Fault log structure with index 
    COMMENT as parameter arr_index to FALSE
    COMMENT set the param_data_ write with index two of Fault log structure with index 
    COMMENT as parameter arr_index to FALSE
    COMMENT set the param_data_ write with index three of Fault log structure with index 
    COMMENT as parameter arr_index to FALSE
    COMMENT set the param_data_ write with index four of Fault log structure with index 
    COMMENT as parameter arr_index to FALSE
    COMMENT set the param_data_ write with index five of Fault log structure with index 
    COMMENT as parameter arr_index to FALSE
    COMMENT Equivalence Class None
    COMMENT 
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU+1,                  ev = init
        
        VAR Scu_label_flag,                init = SEVEN,                  ev = init 
        
        VAR Fault_log_structure[0].data_present,                init = FALSE,                  ev = TRUE    
        
        VAR Fault_log_structure[0].initial_fault_index,                init = FALSE,                  ev = TRUE 
        
        VAR Port1_label_count,                init = 0,                  ev = init  
        
        VAR Flight_count,                init = 1,                  ev = init   
        
        VAR Time_in_sec,                init = 5,                  ev = init    
        
        
        VAR Fault_data[0].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[1].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[2].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[3].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[4].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[5].label_data.stat,                init = PARAM_OK,                  ev = init   
        
        VAR Fault_log_structure[0].fault_active_flag,                init = FALSE,                  ev = TRUE   
        
        VAR Fault_log_structure[0].Fault_index,                init = 0,                  ev = 1    
        
        VAR Flt_id_count,                init = 0,                  ev = 1  
        
      VAR Fault_log_structure[0].flight_number,         init = 0,       ev   = 1
      VAR Fault_log_structure[0].start_duration,        init = 0,       ev   = 1
      VAR Fault_log_structure[0].stop_duration,         init = 0,       ev   = 1
      VAR Fault_log_structure[0].fault_type,            init = 0,       ev   = 3
      VAR Fault_log_structure[0].error_code,            init = 0,       ev   = 1
      VAR Fault_log_structure[0].timestamp,             init = 0,       ev   = init
      VAR Fault_log_structure[0].Last_ft_record,        init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].fault_data_write,      init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].end_ft_transmission,   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[0],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[1],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[2],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[3],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[4],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[5],   init = 0,       ev   = FALSE        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = 16         
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT     
        
        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Fault_log_structure[0].fault_active_flag,                init = TRUE,                  ev = FALSE
        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = init           
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT         

    END TEST -- TEST 3  
    
    
    TEST 4
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT  
    COMMENT ELEMENT 1 
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-001]
    COMMENT The function set the error set to TRUE and Fault set to Fault set bitwise 
    COMMENT or with FOUR when the following conditions are satisfied:
    COMMENT 1. Demo_mode is not equal to TRUE.
    COMMENT 2.  (Arinc Fault set is not equal to ZERO )
    COMMENT   or  scu timer of index ZERO or scu timer of index ONE or scu timer of 
    COMMENT index TWO is greater than or equal to RTD_MAX_INTERVAL_SCU and scu label flag is 
    COMMENT equal to SEVEN and error state is FALSE.
    COMMENT Equivalence Class 19,21,23,26,32,24
    COMMENT     
    COMMENT ELEMENT 2   
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-001]
    COMMENT The function do nothing when
    COMMENT 1. Demo_mode is not equal to TRUE.
    COMMENT 2.  (Arinc Fault set is not equal to ZERO)
    COMMENT  or  scu timer of index ZERO or scu timer of index ONE or scu timer of 
    COMMENT index TWO is greater than or equal to RTD_MAX_INTERVAL_SCU and scu label flag is 
    COMMENT equal to SEVEN and error state is TRUE.
    COMMENT Equivalence Class 19,21,23,27,32,24 
    COMMENT     
    COMMENT     
    COMMENT     
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU,                  ev = init
        
        VAR Scu_label_flag,                init = SEVEN,                  ev = init 
        
        VAR Fault_log_structure[0].data_present,                init = FALSE,                  ev = init    
        
        VAR Fault_log_structure[0].initial_fault_index,                init = TRUE,                  ev = init  
        
        VAR Port1_label_count,                init = 0,                  ev = init      
        
        
        VAR Fault_data[0].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[1].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[2].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[3].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[4].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[5].label_data.stat,                init = PARAM_ADVISORY,            ev = init   
            

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = 16         
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT 

        --ELEMENT 2

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU+1,                  ev = init
        
        VAR Scu_label_flag,                init = SEVEN,                  ev = init 
                    
        COMMENT OUTPUT SECTION:     
        
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT 
        
        --ELEMENT 3
        
        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Fault_log_structure[0].fault_active_flag,                init = FALSE,                  ev = init
        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = init           
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT         

    END TEST -- TEST 4  
    
    
    TEST 5
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-001]
    COMMENT The function do nothing when
    COMMENT 1. Demo_mode is not equal to TRUE.
    COMMENT 2.  (Arinc Fault set is not equal to ZERO)
    COMMENT   or  scu timer of index ZERO or scu timer of index ONE or scu timer of 
    COMMENT index TWO is greater than or equal to RTD_MAX_INTERVAL_SCU and scu label flag is 
    COMMENT not equal to SEVEN and error state is FALSE.(MCDC:FFFTF)
    COMMENT Equivalence Class 19,21,23,26,32,24,33
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU+1,                  ev = init
        
        VAR Scu_label_flag,                init = 1,                  ev = init 
                    
        COMMENT OUTPUT SECTION:     
        
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT     

    END TEST -- TEST 5  
    
    TEST 6
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-001]
    COMMENT The function do nothing when
    COMMENT 1. Demo_mode is not equal to TRUE.
    COMMENT 2.  (Arinc Fault set is not equal to ZERO) 
    COMMENT   or  scu timer of index ZERO or scu timer of index ONE or scu timer of 
    COMMENT index TWO is greater than or equal to RTD_MAX_INTERVAL_SCU and scu label flag is 
    COMMENT not equal to SEVEN and error state is FALSE.(MCDC:FFTFF)
    COMMENT Equivalence Class 19,21,23,26,32,24,33
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU+1,                  ev = init
        
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Scu_label_flag,                init = 1,                  ev = init 
                    
        COMMENT OUTPUT SECTION:     
        
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT     

    END TEST -- TEST 6  
    
    TEST 7
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-001]
    COMMENT The function do nothing when
    COMMENT 1. Demo_mode is not equal to TRUE.
    COMMENT 2.  (Arinc Fault set is not equal to ZERO 
    COMMENT   or  scu timer of index ZERO or scu timer of index ONE or scu timer of 
    COMMENT index TWO is greater than or equal to RTD_MAX_INTERVAL_SCU and scu label flag is 
    COMMENT not equal to SEVEN and error state is FALSE.(MCDC:FTFFF)
    COMMENT Equivalence Class 19,21,23,26,32,24,33
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU+1,                  ev = init
        
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU+1,                  ev = init
        
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU+1,                  ev = init
        
        VAR Scu_label_flag,                init = 1,                  ev = init 
                    
        COMMENT OUTPUT SECTION:     
        
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT     

    END TEST -- TEST 7  
    
    TEST 8
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-ProcessingArinc01Fault-DB-LLR-001]
    COMMENT The function do nothing when
    COMMENT 1. Demo_mode is equal to TRUE.
    COMMENT Equivalence Class 20
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = TRUE,                  ev = init
                    
        COMMENT OUTPUT SECTION:     
        
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT     

    END TEST -- TEST 8  
    
    
    TEST 9
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT 
    COMMENT ELEMENT 1
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-001]
    COMMENT The function loop for less than Port1_label_count and again loop for 
    COMMENT less than SIX times and perform the following :(1 loop)
    COMMENT 1. call the function RTDGetParamDdw with parameter as first loop index 
    COMMENT count incremented by 1, reference to label_data of fault data with index zero
    COMMENT 2. set the data set flag to TRUE
    COMMENT when below conditions are satisfied :
    COMMENT 1. data set flag equal to False else do nothing
    COMMENT 2. label of A429_data with index zero and first loop index count is equal 
    COMMENT to fault_label of fault data with index zero.
    COMMENT Equivalence Class 48
    COMMENT 
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-003]
    COMMENT The function loop for less than Port1_label_count and again loop 
    COMMENT for less than SIX times and perform the following :
    COMMENT set the parameter timer reset state with index as second loop index count to FALSE
    COMMENT when below conditions are satisfied :
    COMMENT 1. data set flag equal to TRUE else do nothing
    COMMENT 2. stat of label_data of fault data with index as second loop index count is equal to PARAM_OK.
    COMMENT Equivalence Class 50,51,52
    COMMENT 
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-004]
    COMMENT The function loop for less than Port1_label_count and again loop for 
    COMMENT less than SIX times and perform the following :
    COMMENT 1. set the label_data of Previous fault data with index as second loop 
    COMMENT index count to label_data of fault data with index as second loop index count
    COMMENT 2. set the param_data with index as second loop index count of Fault 
    COMMENT log structure with index as parameter arr_index to r of label_data of 
    COMMENT fault data with index as second loop index count
    COMMENT 3. set the param_data_present with index as second loop index count of 
    COMMENT Fault log structure with index as parameter arr_index to TRUE
    COMMENT when below conditions are satisfied :
    COMMENT 1. data set flag equal to TRUE 
    COMMENT 2. stat of label_data of fault data with index as second loop index count 
    COMMENT is equal to PARAM_OK
    COMMENT 3. param_data_present with index as second loop index count of Fault 
    COMMENT log structure with index as parameter arr_index is equal to FALSE 
    COMMENT else do nothing.
    COMMENT Equivalence Class 52,50,54,55
    COMMENT 
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-005]
    COMMENT The function loop for less than Port1_label_count and again 
    COMMENT loop for less than SIX times and perform the following :
    COMMENT 1. set the param_data with index as second loop index count of 
    COMMENT Fault log structure with index as parameter arr_index to r of 
    COMMENT label_data of fault data with index as second loop index count
    COMMENT 2. set the param_data_present with index as second loop index count of 
    COMMENT Fault log structure with index as parameter arr_index to TRUE
    COMMENT when param_data_present with index as second loop index count of 
    COMMENT Fault log structure with index as parameter arr_index is equal to FALSE and
    COMMENT 1. set the parameter timer reset state with index as second loop 
    COMMENT index count to TRUE
    COMMENT 2. set the fault timer with index zero to ZERO
    COMMENT when below conditions are satisfied :
    COMMENT 1. data set flag equal to TRUE else do nothing
    COMMENT 2. stat of label_data of fault data with index as second loop index 
    COMMENT count is not equal to PARAM_OK
    COMMENT 3. parameter timer reset state with index as second loop index count 
    COMMENT is equal to FALSE else do nothing.
    COMMENT Equivalence Class 52,51,56,58,59
    COMMENT 
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-006]
    COMMENT The function loop for less than Port1_label_count and again 
    COMMENT loop for less than SIX times and perform the following :
    COMMENT 1. don't set the parameter ssm validity with index as second loop index count to TRUE
    COMMENT 2. don't set the Last_ft_record of Fault log structure with index as parameter arr_index to TRUE
    COMMENT when below conditions are satisfied :
    COMMENT 1. data set flag equal to TRUE else do nothing
    COMMENT 2. stat of label_data of fault data with index as second loop index 
    COMMENT count is not equal to PARAM_OK
    COMMENT Return value of FaultTimer with index as second loop index count 
    COMMENT is not equal to TRUE
    COMMENT 4. stat of label_data of fault data with index as second loop index 
    COMMENT count is not equal to PARAM_OK
    COMMENT Equivalence Class 52,51,56,58,60
    COMMENT 
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-007]
    COMMENT The function loop for less than Port1_label_count and again loop 
    COMMENT for less than SIX times and perform the following :
    COMMENT 1. don't set the Stop_ft_log to TRUE
    COMMENT 2. don't set the parameter ssm validity with index as second loop index 
    COMMENT count to FALSE
    COMMENT when below conditions are satisfied :
    COMMENT 1. data set flag equal to TRUE else do nothing
    COMMENT 2. stat of label_data of fault data with index as second loop index 
    COMMENT count is not equal to PARAM_OK
    COMMENT 3. parameter ssm validity with index as second loop index count is 
    COMMENT equal to TRUE 
    COMMENT Equivalence Class 52,51,56,58,63 
    COMMENT 
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-008]
    COMMENT The function loop for less than Port1_label_count and again loop 
    COMMENT for less than SIX times and perform the following :
    COMMENT set the data set flag to TRUE
    COMMENT when below conditions are satisfied :
    COMMENT 1. data set flag equal to TRUE else do nothing
    COMMENT 2. stat of label_data of fault data with index as second loop 
    COMMENT index count is equal to PARAM_OK else do nothing.
    COMMENT Equivalence Class 52,50,51
    COMMENT 
    COMMENT [hdudispflmsscu-FaultTimer-DB-LLR-001]
    COMMENT The function  perform the following when initial variable is TRUE :
    COMMENT 1. The function  call TimerInstall with reference to Fault timer 
    COMMENT mirror with index as parameter index as parameter
    COMMENT 2. The function  call TimerInstall with reference to Fault timer 
    COMMENT with index as parameter index as parameter
    COMMENT 3. set the Fault timer with index as parameter index to ZERO
    COMMENT 4. The function  call TimerPreset with reference to Fault timer
    COMMENT  mirror with index as parameter index and Fault timer with index as 
    COMMENT  parameter index as parameter
    COMMENT 5. set initial variable to FALSE
    COMMENT Equivalence Class 64,
    COMMENT 
    COMMENT [hdudispflmsscu-FaultTimer-DB-LLR-003]
    COMMENT The function  return False.
    COMMENT Equivalence Class None
    COMMENT 
    COMMENT [hdudispflmsscu-FaultTimer-DB-LLR-002]
    COMMENT The function else do nothing.
    COMMENT when Fault timer with index as parameter
    COMMENT index is less than TIME_FRAME
    COMMENT Equivalence Class 67
    COMMENT
    COMMENT ELEMENT 3
    COMMENT
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-001]
    COMMENT The function loop for less than Port1_label_count and again loop for 
    COMMENT less than SIX times and perform the following :(2 loop)
    COMMENT 1. call the function RTDGetParamDdw with parameter as first loop index 
    COMMENT count incremented by 1, reference to label_data of fault data with index zero
    COMMENT 2. set the data set flag to TRUE
    COMMENT when below conditions are satisfied :
    COMMENT 1. data set flag equal to False else do nothing
    COMMENT 2. label of A429_data with index zero and first loop index count is equal 
    COMMENT to fault_label of fault data with index zero.
    COMMENT Equivalence Class 48
    COMMENT
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-002]
    COMMENT The function loop for less than Port1_label_count and again loop for 
    COMMENT less than SIX times and perform the following :
    COMMENT 1. call the function RTDGetParam with parameter as second loop index count 
    COMMENT incremented by 1, reference to label_data of fault data with index zero
    COMMENT 2. set the data set flag to TRUE
    COMMENT when below conditions are satisfied :
    COMMENT 1. data set flag equal to False else do nothing
    COMMENT 2. label of A429_data with index zero and second loop index count is equal 
    COMMENT to fault_label of fault data with index zero
    COMMENT else do nothing.
    COMMENT Equivalence Class 49
    COMMENT
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-005]
    COMMENT The function loop for less than Port1_label_count and again 
    COMMENT loop for less than SIX times and perform the following :
    COMMENT 1. set the param_data with index as second loop index count of 
    COMMENT Fault log structure with index as parameter arr_index to r of 
    COMMENT label_data of fault data with index as second loop index count
    COMMENT 2. set the param_data_present with index as second loop index count of 
    COMMENT Fault log structure with index as parameter arr_index to TRUE
    COMMENT when param_data_present with index as second loop index count of 
    COMMENT Fault log structure with index as parameter arr_index is equal to FALSE and
    COMMENT do nothing.
    COMMENT when below conditions are satisfied :
    COMMENT 1. data set flag equal to TRUE else do nothing
    COMMENT 2. stat of label_data of fault data with index as second loop index 
    COMMENT count is not equal to PARAM_OK
    COMMENT 3. parameter timer reset state with index as second loop index count 
    COMMENT is equal to TRUE
    COMMENT Equivalence Class 52,51,57,58,59
    COMMENT 
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-006]
    COMMENT The function loop for less than Port1_label_count and again 
    COMMENT loop for less than SIX times and perform the following :
    COMMENT 1. set the parameter ssm validity with index as second loop index count to TRUE
    COMMENT 2. set the Last_ft_record of Fault log structure with index as parameter arr_index to TRUE
    COMMENT when below conditions are satisfied :
    COMMENT 1. data set flag equal to TRUE else do nothing
    COMMENT 2. stat of label_data of fault data with index as second loop index 
    COMMENT count is not equal to PARAM_OK
    COMMENT Return value of FaultTimer with index as second loop index count 
    COMMENT is not equal to TRUE
    COMMENT 
    COMMENT Equivalence Class 52,51,56,58,61
    COMMENT 
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-007]
    COMMENT The function loop for less than Port1_label_count and again loop 
    COMMENT for less than SIX times and perform the following :
    COMMENT 1. set the Stop_ft_log to TRUE
    COMMENT 2. set the parameter ssm validity with index as second loop index 
    COMMENT count to FALSE
    COMMENT when below conditions are satisfied :
    COMMENT 1. data set flag equal to TRUE else do nothing
    COMMENT 2. stat of label_data of fault data with index as second loop index 
    COMMENT count is not equal to PARAM_OK
    COMMENT 3. parameter ssm validity with index as second loop index count is 
    COMMENT equal to TRUE 
    COMMENT Equivalence Class 52,51,56,58,62
    COMMENT
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-003]
    COMMENT The function do nothing when
    COMMENT 1. data set flag equal to FALSE
    COMMENT Equivalence Class 53
    COMMENT
    COMMENT [hdudispflmsscu-FaultTimer-DB-LLR-002]
    COMMENT The function return TRUE when Fault timer with index as parameter 
    COMMENT index is greater than TIME_FRAME else do nothing.
    COMMENT Equivalence Class 65,66
    COMMENT
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU,                  ev = init
        
        VAR Scu_label_flag,                init = SEVEN,                  ev = init 
        
        VAR Fault_log_structure[0].data_present,                init = FALSE,                  ev = init    
        
        VAR Fault_log_structure[0].initial_fault_index,                init = TRUE,                  ev = init  
        
        VAR Port1_label_count,                init = 1,                  ev = init      
        
        
        VAR Fault_data[0].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[1].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[2].label_data.stat,                init = PARAM_ADVISORY,                  ev = init 
        VAR Fault_data[3].label_data.stat,                init = PARAM_ADVISORY,                  ev = init 
        VAR Fault_data[4].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[5].label_data.stat,                init = PARAM_OK,            ev = init 
        
        VAR A429_data[0][0].label,                init = 1,            ev = init    
        
        VAR Fault_data[0].fault_label,                init = 1,            ev = init
        
        VAR Fault_data[1..5].fault_label,                init = 0,            ev = init 
        
        VAR Fault_data[0].label_data.r,                init = 0,            ev = 0
        
        VAR Fault_data[2].label_data.r,                init = 2,            ev = init   
        
        VAR Fault_data[2].label_data.fread,                init = 1,            ev = init   
                    
        VAR Fault_log_structure[0].param_data_present[0],      init = FALSE,            ev = TRUE   
        
        VAR Fault_log_structure[0].param_data_present[1],      init = TRUE,            ev = init    
        
        VAR Fault_log_structure[0].param_data_present[2],      init = FALSE,            ev = TRUE
        
        VAR Fault_log_structure[0].param_data_present[3..5],      init = TRUE,            ev = init 
        
        VAR Fault_log_structure[0].param_data[0],      init = 0,            ev = init   
        
        VAR Fault_log_structure[0].param_data[2],      init = 0,            ev = init   
        
        VAR Fault_timer[2],      init = 1,            ev = ZERO 
        
            

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = 16         
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
             SIMUL
        
               STUB RTDGetParamDdw 1..6=>(1, &Fault_data[0].label_data)
               
               STUB TimerInstall()
          STUB TimerInstall()
               STUB TimerPreset(0)
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT 

            --ELEMENT 2
        
        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Fault_log_structure[0].fault_active_flag,                init = FALSE,                  ev = init
        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = init           
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT     

            --ELEMENT 3     
        
        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU,                  ev = init
        
        VAR Scu_label_flag,                init = SEVEN,                  ev = init 
        
        VAR Fault_log_structure[0].data_present,                init = FALSE,                  ev = init    
        
        VAR Fault_log_structure[0].initial_fault_index,                init = TRUE,                  ev = init  
        
        VAR Port1_label_count,                init = 2,                  ev = init      
        
        
        VAR Fault_data[0].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[1].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[2].label_data.stat,                init = PARAM_ADVISORY,                  ev = init 
        VAR Fault_data[3].label_data.stat,                init = PARAM_ADVISORY,                  ev = init 
        VAR Fault_data[4].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[5].label_data.stat,                init = PARAM_OK,            ev = init 
        
        VAR A429_data[0][0].label,                init = 1,            ev = init
        
        VAR A429_data[0][1].label,                init = 2,            ev = init    
        
        VAR Fault_data[0].fault_label,                init = 1,            ev = init
        
        VAR Fault_data[1].fault_label,                init = 2,            ev = init
        
        VAR Fault_data[2..5].fault_label,                init = 3,            ev = init 
        
        VAR Fault_data[0].label_data.r,                init = 0,            ev = 0
        
        VAR Fault_data[2].label_data.r,                init = 2,            ev = init   
        
        VAR Fault_data[2].label_data.fread,                init = 1,            ev = init   
                    
        VAR Fault_log_structure[0].param_data_present[0],      init = FALSE,            ev = TRUE   
        
        VAR Fault_log_structure[0].param_data_present[1],      init = TRUE,            ev = init    
        
        VAR Fault_log_structure[0].param_data_present[2],      init = FALSE,            ev = TRUE
        
        VAR Fault_log_structure[0].param_data_present[3..5],      init = TRUE,            ev = init 
        
        VAR Fault_log_structure[0].param_data[0],      init = 0,            ev = init   
        
        VAR Fault_log_structure[0].param_data[2],      init = 0,            ev = init   
        
        VAR Fault_timer[0..5],      init = 1001,            ev = init   
        
            

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = 16         
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
               STUB RTDGetParamDdw 1..6=>(1, &Fault_data[0].label_data)
               
               STUB RTDGetParam(2, &Fault_data[0].label_data)
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT     

            --ELEMENT 4
        
        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Fault_log_structure[0].fault_active_flag,                init = FALSE,                  ev = init
        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = init           
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT 
        

    END TEST -- TEST 9
    
    
    TEST 10
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-009]
    COMMENT The function set the Stop ft log and Stop log to FALSE when stat of 
    COMMENT label_data of Fault_data with index zero and one and two and three and 
    COMMENT four and five are equal to PARAM_OK otherwise set Stop log to TRUE.
    COMMENT (MCDC:FXXXXX)
    COMMENT Equivalence Class 69
    COMMENT
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU,                  ev = init
        
        VAR Scu_label_flag,                init = SEVEN,                  ev = init 
        
        VAR Fault_log_structure[0].data_present,                init = FALSE,                  ev = init    
        
        VAR Fault_log_structure[0].initial_fault_index,                init = TRUE,                  ev = init  
        
        VAR Port1_label_count,                init = 0,                  ev = init      
        
        
        VAR Fault_data[0].label_data.stat,                init = PARAM_ADVISORY,                  ev = init 
        VAR Fault_data[1].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[2].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[3].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[4].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[5].label_data.stat,                init = PARAM_OK,            ev = init 
                        
        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = 16         
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT 
        
        
        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Fault_log_structure[0].fault_active_flag,                init = FALSE,                  ev = init
        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = init           
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT         
                

    END TEST -- TEST 10 
    
    TEST 11
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-009]
    COMMENT The function set the Stop ft log and Stop log to FALSE when stat of 
    COMMENT label_data of Fault_data with index zero and one and two and three and 
    COMMENT four and five are equal to PARAM_OK otherwise set Stop log to TRUE.
    COMMENT (MCDC:TFXXXX)
    COMMENT Equivalence Class 69
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU,                  ev = init
        
        VAR Scu_label_flag,                init = SEVEN,                  ev = init 
        
        VAR Fault_log_structure[0].data_present,                init = FALSE,                  ev = init    
        
        VAR Fault_log_structure[0].initial_fault_index,                init = TRUE,                  ev = init  
        
        VAR Port1_label_count,                init = 0,                  ev = init      
        
        
        VAR Fault_data[0].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[1].label_data.stat,                init = PARAM_ADVISORY,                  ev = init 
        VAR Fault_data[2].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[3].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[4].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[5].label_data.stat,                init = PARAM_OK,            ev = init 
                            

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = 16         
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT 
        
        
        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Fault_log_structure[0].fault_active_flag,                init = FALSE,                  ev = init
        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = init           
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT         
                

    END TEST -- TEST 11 
    
    TEST 12
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-009]
    COMMENT The function set the Stop ft log and Stop log to FALSE when stat of 
    COMMENT label_data of Fault_data with index zero and one and two and three and 
    COMMENT four and five are equal to PARAM_OK otherwise set Stop log to TRUE.
    COMMENT (MCDC:TTFXXX)
    COMMENT Equivalence Class 69
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU,                  ev = init
        
        VAR Scu_label_flag,                init = SEVEN,                  ev = init 
        
        VAR Fault_log_structure[0].data_present,                init = FALSE,                  ev = init    
        
        VAR Fault_log_structure[0].initial_fault_index,                init = TRUE,                  ev = init  
        
        VAR Port1_label_count,                init = 0,                  ev = init      
        
        
        VAR Fault_data[0].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[1].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[2].label_data.stat,                init = PARAM_ADVISORY,                  ev = init 
        VAR Fault_data[3].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[4].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[5].label_data.stat,                init = PARAM_OK,            ev = init 
        
                    

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = 16         
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT 
        
        
        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Fault_log_structure[0].fault_active_flag,                init = FALSE,                  ev = init
        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = init           
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT         
                

    END TEST -- TEST 12 
    
    TEST 13
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-009]
    COMMENT The function set the Stop ft log and Stop log to FALSE when stat of 
    COMMENT label_data of Fault_data with index zero and one and two and three and 
    COMMENT four and five are equal to PARAM_OK otherwise set Stop log to TRUE.
    COMMENT (MCDC:TTTFXX)
    COMMENT Equivalence Class 69
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU,                  ev = init
        
        VAR Scu_label_flag,                init = SEVEN,                  ev = init 
        
        VAR Fault_log_structure[0].data_present,                init = FALSE,                  ev = init    
        
        VAR Fault_log_structure[0].initial_fault_index,                init = TRUE,                  ev = init  
        
        VAR Port1_label_count,                init = 0,                  ev = init      
        
        
        VAR Fault_data[0].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[1].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[2].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[3].label_data.stat,                init = PARAM_ADVISORY,                  ev = init 
        VAR Fault_data[4].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[5].label_data.stat,                init = PARAM_OK,            ev = init 
                    

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = 16         
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT 
        
        
        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Fault_log_structure[0].fault_active_flag,                init = FALSE,                  ev = init
        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = init           
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT         
                

    END TEST -- TEST 13 
    
    TEST 14
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-009]
    COMMENT The function set the Stop ft log and Stop log to FALSE when stat of 
    COMMENT label_data of Fault_data with index zero and one and two and three and 
    COMMENT four and five are equal to PARAM_OK otherwise set Stop log to TRUE.
    COMMENT (MCDC:TTTTFX)
    COMMENT Equivalence Class 69
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU,                  ev = init
        
        VAR Scu_label_flag,                init = SEVEN,                  ev = init 
        
        VAR Fault_log_structure[0].data_present,                init = FALSE,                  ev = init    
        
        VAR Fault_log_structure[0].initial_fault_index,                init = TRUE,                  ev = init  
        
        VAR Port1_label_count,                init = 0,                  ev = init      
        
        
        VAR Fault_data[0].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[1].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[2].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[3].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[4].label_data.stat,                init = PARAM_ADVISORY,                  ev = init 
        VAR Fault_data[5].label_data.stat,                init = PARAM_OK,            ev = init 
                    

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = 16         
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT 
        
        
        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Fault_log_structure[0].fault_active_flag,                init = FALSE,                  ev = init
        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = init           
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT         
                

    END TEST -- TEST 14 

    TEST 15
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-009]
    COMMENT The function set the Stop ft log and Stop log to FALSE when stat of 
    COMMENT label_data of Fault_data with index zero and one and two and three and 
    COMMENT four and five are equal to PARAM_OK otherwise set Stop log to TRUE.
    COMMENT (MCDC:TTTTTF)
    COMMENT Equivalence Class 69
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU,                  ev = init
        
        VAR Scu_label_flag,                init = SEVEN,                  ev = init 
        
        VAR Fault_log_structure[0].data_present,                init = FALSE,                  ev = init    
        
        VAR Fault_log_structure[0].initial_fault_index,                init = TRUE,                  ev = init  
        
        VAR Port1_label_count,                init = 0,                  ev = init      
        
        
        VAR Fault_data[0].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[1].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[2].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[3].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[4].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[5].label_data.stat,                init = PARAM_ADVISORY,            ev = init   
                    

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = 16         
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT 
        
        
        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Fault_log_structure[0].fault_active_flag,                init = FALSE,                  ev = init
        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = init           
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT         
                

    END TEST -- TEST 15 
    
    
    TEST 16
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-GetFaultParamData-DB-LLR-009]
    COMMENT The function set the Stop ft log and Stop log to FALSE when stat of 
    COMMENT label_data of Fault_data with index zero and one and two and three and 
    COMMENT four and five are equal to PARAM_OK otherwise set Stop log to TRUE.
    COMMENT (MCDC:TTTTTT)
    COMMENT Equivalence Class 68
    COMMENT
    COMMENT [hdudispflmsscu-StartProcessingFaultLog-DB-LLR-002]
    COMMENT The function do nothing when Ft log 
    COMMENT Size is equal to than fault id count.
    COMMENT Equivalence Class 47
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU+1,                  ev = init
        
        VAR Scu_label_flag,                init = SEVEN,                  ev = init 
        
        VAR Fault_log_structure[0].data_present,                init = FALSE,                  ev = TRUE    
        
        VAR Fault_log_structure[0].initial_fault_index,                init = FALSE,                  ev = TRUE 
        
        VAR Port1_label_count,                init = 0,                  ev = init  
        
        VAR Flight_count,                init = 1,                  ev = init   
        
        VAR Time_in_sec,                init = 5,                  ev = init    
        
        
        VAR Fault_data[0].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[1].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[2].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[3].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[4].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[5].label_data.stat,                init = PARAM_OK,                  ev = init   
        
        VAR Fault_log_structure[0].fault_active_flag,                init = FALSE,                  ev = TRUE   
        
        VAR Fault_log_structure[0].Fault_index,                init = 0,                  ev = 20
        
        VAR Flt_id_count,                init = 19,                  ev = 20    
        
        VAR Ft_log_overflow,                init = FALSE,                  ev = init    
        
      VAR Fault_log_structure[0].flight_number,         init = 0,       ev   = 1
      VAR Fault_log_structure[0].start_duration,        init = 0,       ev   = 1
      VAR Fault_log_structure[0].stop_duration,         init = 0,       ev   = 1
      VAR Fault_log_structure[0].fault_type,            init = 0,       ev   = 3
      VAR Fault_log_structure[0].error_code,            init = 0,       ev   = 1
      VAR Fault_log_structure[0].timestamp,             init = 0,       ev   = init
      VAR Fault_log_structure[0].Last_ft_record,        init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].fault_data_write,      init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].end_ft_transmission,   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[0],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[1],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[2],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[3],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[4],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[5],   init = 0,       ev   = FALSE        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = 16         
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT     
        
        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Fault_log_structure[0].fault_active_flag,                init = TRUE,                  ev = FALSE
        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = init           
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT         

    END TEST -- TEST 16
    
    TEST 17
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-StartProcessingFaultLog-DB-LLR-001]
    COMMENT The function perform the following when Stop log variable is equal to FALSE :
    COMMENT 1. initial_fault_index of Fault log structure with index as parameter arr_index to TRUE
    COMMENT 2. fault_active_flag of Fault log structure with index as parameter arr_index to TRUE
    COMMENT 3. increment the fault id count
    COMMENT 4. set to fault id count to modulus of fault id count and 65534 and set 
    COMMENT Fault_index of Fault log structure with index as parameter arr_index to 
    COMMENT fault id count when fault id count is equal to 65534 else set Fault_index 
    COMMENT of Fault log structure with index as parameter arr_index to fault id count.
    COMMENT Equivalence Class 45
    COMMENT 
    COMMENT [hdudispflmsscu-StartProcessingFaultLog-DB-LLR-002]
    COMMENT The function set the Ft log overflow to TRUE when Ft log 
    COMMENT Size is less than fault id count.
    COMMENT Equivalence Class 46
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU+1,                  ev = init
        
        VAR Scu_label_flag,                init = SEVEN,                  ev = init 
        
        VAR Fault_log_structure[0].data_present,                init = FALSE,                  ev = TRUE    
        
        VAR Fault_log_structure[0].initial_fault_index,                init = FALSE,                  ev = TRUE 
        
        VAR Port1_label_count,                init = 0,                  ev = init  
        
        VAR Flight_count,                init = 1,                  ev = init   
        
        VAR Time_in_sec,                init = 5,                  ev = init    
        
        
        VAR Fault_data[0].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[1].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[2].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[3].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[4].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[5].label_data.stat,                init = PARAM_OK,                  ev = init   
        
        VAR Fault_log_structure[0].fault_active_flag,                init = FALSE,                  ev = TRUE   
        
        VAR Fault_log_structure[0].Fault_index,                init = 0,                  ev = 65534    
        
        VAR Flt_id_count,                init = 65533,                  ev = 65534  
        
        VAR Ft_log_overflow,                init = FALSE,                  ev = TRUE    
        
      VAR Fault_log_structure[0].flight_number,         init = 0,       ev   = 1
      VAR Fault_log_structure[0].start_duration,        init = 0,       ev   = 1
      VAR Fault_log_structure[0].stop_duration,         init = 0,       ev   = 1
      VAR Fault_log_structure[0].fault_type,            init = 0,       ev   = 3
      VAR Fault_log_structure[0].error_code,            init = 0,       ev   = 1
      VAR Fault_log_structure[0].timestamp,             init = 0,       ev   = init
      VAR Fault_log_structure[0].Last_ft_record,        init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].fault_data_write,      init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].end_ft_transmission,   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[0],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[1],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[2],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[3],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[4],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[5],   init = 0,       ev   = FALSE        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = 16         
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT     
        
        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Fault_log_structure[0].fault_active_flag,                init = TRUE,                  ev = FALSE
        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = init           
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT         

    END TEST -- TEST 17 
    
    TEST 18
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-StartProcessingFaultLog-DB-LLR-001]
    COMMENT The function perform the following when Stop log variable is equal to FALSE :
    COMMENT 1. initial_fault_index of Fault log structure with index as parameter arr_index to TRUE
    COMMENT 2. fault_active_flag of Fault log structure with index as parameter arr_index to TRUE
    COMMENT 3. increment the fault id count
    COMMENT 4. set to fault id count to modulus of fault id count and 65534 and set 
    COMMENT Fault_index of Fault log structure with index as parameter arr_index to 
    COMMENT fault id count when fault id count is greater than to 65534 else set Fault_index 
    COMMENT of Fault log structure with index as parameter arr_index to fault id count.
    COMMENT Equivalence Class 43
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU+1,                  ev = init
        
        VAR Scu_label_flag,                init = SEVEN,                  ev = init 
        
        VAR Fault_log_structure[0].data_present,                init = FALSE,                  ev = TRUE    
        
        VAR Fault_log_structure[0].initial_fault_index,                init = FALSE,                  ev = TRUE 
        
        VAR Port1_label_count,                init = 0,                  ev = init  
        
        VAR Flight_count,                init = 1,                  ev = init   
        
        VAR Time_in_sec,                init = 5,                  ev = init    
        
        
        VAR Fault_data[0].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[1].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[2].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[3].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[4].label_data.stat,                init = PARAM_OK,                  ev = init   
        VAR Fault_data[5].label_data.stat,                init = PARAM_OK,                  ev = init   
        
        VAR Fault_log_structure[0].fault_active_flag,                init = FALSE,                  ev = TRUE   
        
        VAR Fault_log_structure[0].Fault_index,                init = 0,                  ev = 1    
        
        VAR Flt_id_count,                init = 65534,                  ev = 1  
        
        VAR Ft_log_overflow,                init = FALSE,                  ev = init    
        
      VAR Fault_log_structure[0].flight_number,         init = 0,       ev   = 1
      VAR Fault_log_structure[0].start_duration,        init = 0,       ev   = 1
      VAR Fault_log_structure[0].stop_duration,         init = 0,       ev   = 1
      VAR Fault_log_structure[0].fault_type,            init = 0,       ev   = 3
      VAR Fault_log_structure[0].error_code,            init = 0,       ev   = 1
      VAR Fault_log_structure[0].timestamp,             init = 0,       ev   = init
      VAR Fault_log_structure[0].Last_ft_record,        init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].fault_data_write,      init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].end_ft_transmission,   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[0],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[1],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[2],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[3],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[4],   init = 0,       ev   = FALSE
      VAR Fault_log_structure[0].param_data_write[5],   init = 0,       ev   = FALSE        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = 16         
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT     
        
        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Demo_mode,                init = FALSE,                  ev = init
        
        VAR Scu_timer[0],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[1],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        VAR Scu_timer[2],                init = RTD_MAX_INTERVAL_SCU-1,                  ev = init
        
        VAR Fault_log_structure[0].fault_active_flag,                init = TRUE,                  ev = FALSE
        

        COMMENT OUTPUT SECTION:     

        VAR U16_message_words[2],                init = 0,                  ev = init           
        
        COMMENT INPUT/OUTPUT SECTION:

        
        COMMENT Stub Calls:
        SIMUL   
               
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ProcessingArinc01Fault();
        END ELEMENT         

    END TEST -- TEST 18 
    
END SERVICE -- ProcessingArinc01Fault


--------------------------------------------------------------------------------
-- Declaration of the service PushFaultLog
--------------------------------------------------------------------------------
SERVICE PushFaultLog
SERVICE_TYPE extern
    
    TEST 1
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT 
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-001]
    COMMENT Thr function perform the following:
    COMMENT 1. Call the macro INIT_NOC_MESSAGE
    COMMENT 2. set u8PaySize of a825 message to EIGHT
    COMMENT 3. set rci of PID of sID of a825 message to Du_position bitwise AND with THREE.
    COMMENT Equivalence Class None
    COMMENT
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-002]
    COMMENT The function loop from fault index ZERO till index is less than 
    COMMENT MAX_FAULT_LOG and perform the following :
    COMMENT set the u8PayLoad of a825 message to Fault_index of Fault log structure 
    COMMENT with index as fault index count when Fault_index of Fault log structure 
    COMMENT with index as fault index is greater than ZERO and end_ft_transmission 
    COMMENT of Fault log structure with index as fault index count is equal to FALSE 
    COMMENT and Stop ft log is equal to FALSE.
    COMMENT Equivalence Class 70,72,74
    COMMENT 
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-003]
    COMMENT The function loop from fault index ZERO till index is less t
    COMMENT han MAX_FAULT_LOG and perform the following :
    COMMENT 1. set doc of BID of sID of a825 message to DIS_FAULT_LOG
    COMMENT 2. set second index of u8PayLoad of a825 message to fault_type of 
    COMMENT Fault log structure with index as fault index count
    COMMENT 3. set third index of u8PayLoad of a825 message to error_code of 
    COMMENT Fault log structure with index as fault index count
    COMMENT 4. set fourth index of u8PayLoad of a825 message to flight_number of 
    COMMENT Fault log structure with index as fault index count
    COMMENT 5. call A8251Xmit to transmit the fault log information to NVRAM
    COMMENT when below conditions are satisfied :
    COMMENT 1. Fault_index of Fault log structure with index as fault index is greater 
    COMMENT than ZERO and end_ft_transmission of Fault log structure with index as fault 
    COMMENT index count is equal to FALSE and Stop ft log is equal to FALSE else do nothing.
    COMMENT 2. fault_data_write of Fault log structure with index as fault index count 
    COMMENT is equal to FALSE
    COMMENT Equivalence Class 70,72,74,77
    COMMENT 
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-004]
    COMMENT The function loop from fault index ZERO till index is less 
    COMMENT than MAX_FAULT_LOG and perform the following :
    COMMENT Set test result to FIVE
    COMMENT when below conditions are satisfied :
    COMMENT 1. Fault_index of Fault log structure with index as fault index is
    COMMENT greater than ZERO and end_ft_transmission of Fault log structure 
    COMMENT with index as fault index count is equal to FALSE and 
    COMMENT Stop ft log is equal to FALSE 
    COMMENT 2. fault_data_write of Fault log structure with index as fault 
    COMMENT index count is equal to FALSE 
    COMMENT 3. test result is not equal to A825_XM_OK 
    COMMENT Equivalence Class 70,72,74,77,78
    COMMENT
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-006]
    COMMENT The function loop from fault index ZERO till index is less 
    COMMENT than MAX_FAULT_LOG and perform the following :
    COMMENT 1. set doc of BID of sID of a825 message to DIS_FAULT_TIMESTAMP
    COMMENT when below conditions are satisfied :
    COMMENT Fault_index of Fault log structure with index as fault index is 
    COMMENT greater than ZERO and end_ft_transmission of Fault log structure 
    COMMENT with index as fault index count is equal to FALSE and Stop ft log 
    COMMENT is equal to FALSE else no nothing.
    COMMENT Equivalence Class 70,72,74
    COMMENT
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-007]
    COMMENT The function loop from fault index ZERO till index is less than 
    COMMENT MAX_FAULT_LOG and perform the following :
    COMMENT 1. set timestamp of Fault log structure with index as fault index count 
    COMMENT is equal to difference of result of Time_in_sec by FIVE and start_duration 
    COMMENT of Fault log structure with index as fault index count
    COMMENT when below conditions are satisfied :
    COMMENT 1. Fault_index of Fault log structure with index as fault index is 
    COMMENT greater than ZERO and end_ft_transmission of Fault log structure with 
    COMMENT index as fault index count is equal to FALSE and Stop ft log is equal to FALSE else no nothing.
    COMMENT 2. fault_active_flag of Fault log structure with index as fault index is equal to TRUE.
    COMMENT Equivalence Class 70,72,74,80
    COMMENT 
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-009]
    COMMENT The function loop from fault index ZERO till index is less than 
    COMMENT MAX_FAULT_LOG and perform the following :
    COMMENT 1. set second index of u8PayLoad of a825 message to timestamp of 
    COMMENT Fault log structure with index as fault index count
    COMMENT 2. call A8251Xmit with parameter as reference of a825 message to 
    COMMENT transmit fault log information to NVRAM
    COMMENT when below conditions are satisfied :
    COMMENT Fault_index of Fault log structure with index as fault index is 
    COMMENT greater than ZERO and end_ft_transmission of Fault log structure with 
    COMMENT index as fault index count is equal to FALSE and Stop ft log is equal 
    COMMENT to FALSE
    COMMENT Equivalence Class 70,72,74
    COMMENT
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-010]
    COMMENT The function loop from fault index ZERO till index is less than 
    COMMENT MAX_FAULT_LOG and perform the following :
    COMMENT Set test result to FIVE
    COMMENT when below conditions are satisfied :
    COMMENT 1. Fault_index of Fault log structure with index as fault index is 
    COMMENT greater than ZERO and end_ft_transmission of Fault log structure 
    COMMENT with index as fault index count is equal to FALSE and Stop ft log 
    COMMENT is equal to FALSE else no nothing.
    COMMENT 2. test result is not equal to A825_XM_OK else do nothing.
    COMMENT Equivalence Class 70,72,74,78
    COMMENT
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-011]
    COMMENT The function loop from index ZERO till fault index is less than 
    COMMENT MAX_FAULT_LOG and loop data index from ZERO till less than SIX and 
    COMMENT perform the following :
    COMMENT 1. set doc of BID of sID of a825 message to DIS_FAULT_PARAM_WOG
    COMMENT 2. set second index of u8PayLoad of a825 message to param_data with 
    COMMENT index as data index of Fault log structure with index as fault index count
    COMMENT 3. call A8251Xmit with parameter as reference of a825 message to 
    COMMENT transmit fault log information to NVRAM
    COMMENT when below conditions are satisfied :
    COMMENT 1. Fault_index of Fault log structure with index as fault index is greater 
    COMMENT than ZERO and end_ft_transmission of Fault log structure with index as fault 
    COMMENT index count is equal to FALSE and Stop ft log is equal to FALSE else no nothing.
    COMMENT 2. param_data_present with index as data index count of Fault log structure 
    COMMENT with index as parameter arr_index is equal to TRUE and param_data_write with 
    COMMENT index as data index count of Fault log structure with index as parameter 
    COMMENT arr_index is equal to FALSE 
    COMMENT Equivalence Class 70,72,74,82,83
    COMMENT
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-012]
    COMMENT The function loop from fault index ZERO till index is less than 
    COMMENT MAX_FAULT_LOG and loop data index from ZERO till less than SIX and 
    COMMENT perform the following :
    COMMENT Set test result to FIVE
    COMMENT when below conditions are satisfied :
    COMMENT 1. Fault_index of Fault log structure with index as loop index is 
    COMMENT greater than ZERO and end_ft_transmission of Fault log structure 
    COMMENT with index as loop index count is equal to FALSE and Stop ft log is 
    COMMENT equal to FALSE else no nothing.
    COMMENT 2. param_data_present with index as data index count of Fault log 
    COMMENT structure with index as parameter arr_index is equal to TRUE and 
    COMMENT param_data_write with index as data index count of Fault log structure 
    COMMENT with index as parameter arr_index is equal to FALSE else do nothing
    COMMENT 3. test result is not equal to A825_XM_OK
    COMMENT Equivalence Class 70,72,74,78
    COMMENT 
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-013]
    COMMENT The function loop from index ZERO till index is less than 
    COMMENT MAX_FAULT_LOG and loop data index from ZERO till less than SIX 
    COMMENT and perform the following :
    COMMENT 1. set second index of u8PayLoad of a825 message to ZERO
    COMMENT 2. increment the DIS_FAULT_PARAM_WOG
    COMMENT 3. set param_data_write with index as second loop index count of 
    COMMENT Fault log structure with index as parameter arr_index to TRUE.
    COMMENT when below conditions are satisfied :
    COMMENT 1. Fault_index of Fault log structure with index as loop index is 
    COMMENT greater than ZERO and end_ft_transmission of Fault log structure 
    COMMENT with index as loop index count is equal to FALSE and Stop ft log 
    COMMENT is equal to FALSE else do nothing.
    COMMENT 2. param_data_present with index as data index count of Fault log 
    COMMENT structure with index as parameter arr_index is equal to TRUE and 
    COMMENT param_data_write with index as data index count of Fault log structure 
    COMMENT with index as parameter arr_index is equal to FALSE else do nothing
    COMMENT Equivalence Class 70,72,74,82
    COMMENT 
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-014]
    COMMENT The function loop from fault index ZERO till index is less 
    COMMENT than MAX_FAULT_LOG and perform the following :
    COMMENT set the end_ft_transmission of Fault log structure with index as 
    COMMENT fault index count to TRUE
    COMMENT when below conditions are satisfied :
    COMMENT 1. Fault_index of Fault log structure with index as fault index is 
    COMMENT greater than ZERO and end_ft_transmission of Fault log structure 
    COMMENT with index as fault index count is equal to FALSE and Stop ft log 
    COMMENT is equal to FALSE else do nothing.
    COMMENT 2. Last_ft_record of Fault log structure with index as fault index 
    COMMENT count is equal to TRUE 
    COMMENT Equivalence Class 70,72,74,85
    COMMENT 
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Fault_log_structure[0].Fault_index,                 init = 1,                  ev = init
                
        VAR Fault_log_structure[1..9].Fault_index,              init = 0,                  ev = init    
        
        VAR Fault_log_structure[1..9].end_ft_transmission,      init = TRUE,               ev = init        
        
        VAR Fault_log_structure[0].fault_active_flag,           init = TRUE,               ev = init    
        
        VAR Fault_log_structure[0].fault_type,                  init = 1,                  ev = init
        
        VAR Fault_log_structure[0].error_code,                  init = 1,                  ev = init    
        
        VAR Fault_log_structure[0].flight_number,               init = 1,                  ev = init    
        
        VAR Fault_log_structure[0].timestamp,                   init = 1,                  ev = init    
        
        VAR Fault_log_structure[0].start_duration,              init = 1,                  ev = init    
        
        VAR Fault_log_structure[0].param_data_present[0],       init = TRUE,               ev = init
        
        VAR Fault_log_structure[0].param_data_present[1..5],    init = FALSE,              ev = init
                
        VAR Fault_log_structure[0].param_data_write[1..5],      init = TRUE,               ev = init
        
        VAR Fault_log_structure[0].Last_ft_record,              init = TRUE,               ev = init
                
        VAR Fault_log_structure[0].param_data[0],               init = 1,                  ev = init    
        
        VAR Time_in_sec,                                        init = 10,                 ev = init        

        COMMENT OUTPUT SECTION: 

            VAR PTU_IN_ps_xm[0].u8PaySize,                 init = 1,                       ev = 8
            VAR PTU_IN_ps_xm[0].u8PayLoad[0],              init = (T_UINT8)NSC_SET_DOUT1,  ev = init
            VAR PTU_IN_ps_xm[0].lcc,                       init = EEC,                     ev = 2
            VAR PTU_IN_ps_xm[0].sID.PID.sid,               init = ANALOG_SID,              ev = 1
            VAR PTU_IN_ps_xm[0].sID.PID.rci,               init = 1,                       ev = 0
            VAR PTU_IN_ps_xm[0].sID.PID.smt,               init = 0,                       ev = init
            VAR PTU_IN_ps_xm[0].sID.PID.lcl,               init = 0,                       ev = 1
            VAR PTU_IN_ps_xm[0].sID.PID.pvt,               init = 0,                       ev = 1
            VAR PTU_IN_ps_xm[0].sID.PID.cfid,              init = 1,                       ev = 42
            VAR PTU_IN_ps_xm[0].sID.PID.sfid,              init = 1,                       ev = 52
            
            VAR PTU_IN_ps_xm[1].u8PaySize,                 init = 1,                       ev = 8
            VAR PTU_IN_ps_xm[1].u8PayLoad[0],              init = (T_UINT8)NSC_SET_DOUT1,  ev = init
            VAR PTU_IN_ps_xm[1].lcc,                       init = EEC,                     ev = 2
            VAR PTU_IN_ps_xm[1].sID.PID.sid,               init = ANALOG_SID,              ev = 1
            VAR PTU_IN_ps_xm[1].sID.PID.rci,               init = 1,                       ev = 0
            VAR PTU_IN_ps_xm[1].sID.PID.smt,               init = 0,                       ev = init
            VAR PTU_IN_ps_xm[1].sID.PID.lcl,               init = 0,                       ev = 1
            VAR PTU_IN_ps_xm[1].sID.PID.pvt,               init = 0,                       ev = 1
            VAR PTU_IN_ps_xm[1].sID.PID.cfid,              init = 1,                       ev = 42
            VAR PTU_IN_ps_xm[1].sID.PID.sfid,              init = 1,                       ev = 53      

            VAR PTU_IN_ps_xm[2].u8PaySize,                 init = 1,                       ev = 8
            VAR PTU_IN_ps_xm[2].u8PayLoad[0],              init = (T_UINT8)NSC_SET_DOUT1,  ev = init
            VAR PTU_IN_ps_xm[2].lcc,                       init = EEC,                     ev = 2
            VAR PTU_IN_ps_xm[2].sID.PID.sid,               init = ANALOG_SID,              ev = 1
            VAR PTU_IN_ps_xm[2].sID.PID.rci,               init = 1,                       ev = 0
            VAR PTU_IN_ps_xm[2].sID.PID.smt,               init = 0,                       ev = init
            VAR PTU_IN_ps_xm[2].sID.PID.lcl,               init = 0,                       ev = 1
            VAR PTU_IN_ps_xm[2].sID.PID.pvt,               init = 0,                       ev = 1
            VAR PTU_IN_ps_xm[2].sID.PID.cfid,              init = 1,                       ev = 42
            VAR PTU_IN_ps_xm[2].sID.PID.sfid,              init = 1,                       ev = 54              


        
        
        COMMENT INPUT/OUTPUT SECTION:

        VAR Fault_log_structure[0].end_ft_transmission,         init = FALSE,                  ev = TRUE        
        
        VAR Fault_log_structure[0].fault_data_write,            init = FALSE,                  ev = TRUE
        
        VAR Fault_log_structure[0].param_data_write[0],         init = FALSE,                  ev = TRUE        

        COMMENT Stub Calls:
        SIMUL   
        
            STUB A8251Xmit()A825_XM_OVERFLOW
            STUB A8251Xmit()A825_XM_OVERFLOW
            STUB A8251Xmit()A825_XM_OVERFLOW
                   
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #PushFaultLog();
        END ELEMENT

    END TEST -- TEST 1  
    
    
    TEST 2
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-002]
    COMMENT The function loop from fault index ZERO till index is less than 
    COMMENT MAX_FAULT_LOG and perform the following :
    COMMENT set the u8PayLoad of a825 message to Fault_index of Fault log structure 
    COMMENT with index as fault index count when Fault_index of Fault log structure 
    COMMENT with index as fault index is greater than ZERO and end_ft_transmission 
    COMMENT of Fault log structure with index as fault index count is equal to FALSE 
    COMMENT and Stop ft log is equal to FALSE.
    COMMENT Equivalence Class 70,72,74,71
    COMMENT 
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-004]
    COMMENT The function loop from fault index ZERO till index is less 
    COMMENT than MAX_FAULT_LOG and perform the following :
    COMMENT do nothing when
    COMMENT when below conditions are satisfied :
    COMMENT 1. Fault_index of Fault log structure with index as fault index is
    COMMENT greater than ZERO and end_ft_transmission of Fault log structure 
    COMMENT with index as fault index count is equal to FALSE and 
    COMMENT Stop ft log is equal to FALSE 
    COMMENT 2. fault_data_write of Fault log structure with index as fault 
    COMMENT index count is equal to FALSE 
    COMMENT 3. test result is equal to A825_XM_OK 
    COMMENT Equivalence Class 70,72,74,77,79
    COMMENT 
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-005]
    COMMENT The function loop from fault index ZERO till index is less  
    COMMENT than MAX_FAULT_LOG and perform the following : 
    COMMENT 1. set fault_data_write of Fault log structure with index as fault  
    COMMENT index count is equal to TRUE 
    COMMENT when below conditions are satisfied :
    COMMENT 1. Fault_index of Fault log structure with index as fault index is 
    COMMENT greater than ZERO and end_ft_transmission of Fault log structure 
    COMMENT with index as fault index count is equal to FALSE and Stop ft log 
    COMMENT is equal to FALSE else no nothing.
    COMMENT 2. fault_data_write of Fault log structure with index as fault index 
    COMMENT count is equal to FALSE
    COMMENT Equivalence Class 70,72,74,71
    COMMENT
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-008]
    COMMENT The function loop from fault index ZERO till index is less 
    COMMENT than MAX_FAULT_LOG and perform the following :
    COMMENT 1. set timestamp of Fault log structure with index as fault index 
    COMMENT count is equal to difference of stop_duration of Fault log structure 
    COMMENT with index as fault index count and start_duration of Fault log 
    COMMENT structure with index as fault index count
    COMMENT when below conditions are satisfied :
    COMMENT 1. Fault_index of Fault log structure with index as fault index is 
    COMMENT greater than ZERO and end_ft_transmission of Fault log structure 
    COMMENT with index as fault index count is equal to FALSE and Stop ft log 
    COMMENT is equal to FALSE else no nothing.
    COMMENT 2. fault_active_flag of Fault log structure with index as fault 
    COMMENT index is equal to FALSE.
    COMMENT Equivalence Class 70,72,74,81
    COMMENT
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-010]
    COMMENT The function loop from fault index ZERO till index is less than 
    COMMENT MAX_FAULT_LOG and perform the following :
    COMMENT do nothing
    COMMENT when below conditions are satisfied :
    COMMENT 1. Fault_index of Fault log structure with index as fault index is 
    COMMENT greater than ZERO and end_ft_transmission of Fault log structure 
    COMMENT with index as fault index count is equal to FALSE and Stop ft log 
    COMMENT is equal to FALSE else no nothing.
    COMMENT 2. test result is equal to A825_XM_OK else do nothing.
    COMMENT Equivalence Class 70,72,74,79
    COMMENT
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-012]
    COMMENT The function loop from fault index ZERO till index is less than 
    COMMENT MAX_FAULT_LOG and loop data index from ZERO till less than SIX and 
    COMMENT perform the following :
    COMMENT do nothing
    COMMENT when below conditions are satisfied :
    COMMENT 1. Fault_index of Fault log structure with index as loop index is 
    COMMENT greater than ZERO and end_ft_transmission of Fault log structure 
    COMMENT with index as loop index count is equal to FALSE and Stop ft log is 
    COMMENT equal to FALSE else no nothing.
    COMMENT 2. param_data_present with index as data index count of Fault log 
    COMMENT structure with index as parameter arr_index is equal to TRUE and 
    COMMENT param_data_write with index as data index count of Fault log structure 
    COMMENT with index as parameter arr_index is equal to FALSE else do nothing
    COMMENT 3. test result is equal to A825_XM_OK
    COMMENT Equivalence Class 70,72,74,79
    COMMENT
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-014]
    COMMENT The function loop from fault index ZERO till index is less 
    COMMENT than MAX_FAULT_LOG and perform the following :
    COMMENT do nothing
    COMMENT when below conditions are satisfied :
    COMMENT 1. Fault_index of Fault log structure with index as fault index is 
    COMMENT greater than ZERO and end_ft_transmission of Fault log structure 
    COMMENT with index as fault index count is equal to FALSE and Stop ft log 
    COMMENT is equal to FALSE else do nothing.
    COMMENT 2. Last_ft_record of Fault log structure with index as fault index 
    COMMENT count is equal to FALSE 
    COMMENT Equivalence Class 70,72,74,86
    COMMENT
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Fault_log_structure[0].Fault_index,                 init = 1,                  ev = init
                
        VAR Fault_log_structure[1..9].Fault_index,              init = 1,                  ev = init    
        
        VAR Fault_log_structure[1..9].end_ft_transmission,      init = TRUE,               ev = init        
        
        VAR Fault_log_structure[0].fault_active_flag,           init = FALSE,               ev = init   
        
        VAR Fault_log_structure[0].fault_type,                  init = 1,                  ev = init
        
        VAR Fault_log_structure[0].error_code,                  init = 1,                  ev = init    
        
        VAR Fault_log_structure[0].flight_number,               init = 1,                  ev = init    
        
        VAR Fault_log_structure[0].timestamp,                   init = 1,                  ev = 9   
        
        VAR Fault_log_structure[0].stop_duration,               init = 10,                  ev = init
        
        VAR Fault_log_structure[0].start_duration,              init = 1,                  ev = init    
        
        VAR Fault_log_structure[0].param_data_present[0],       init = TRUE,               ev = init
        
        VAR Fault_log_structure[0].param_data_present[1..5],    init = FALSE,              ev = init
                
        VAR Fault_log_structure[0].param_data_write[1..5],      init = TRUE,               ev = init
        
        VAR Fault_log_structure[0].Last_ft_record,              init = FALSE,               ev = init
                
        VAR Fault_log_structure[0].param_data[0],               init = 1,                  ev = init    
        
        VAR Time_in_sec,                                        init = 10,                 ev = init    
        
        VAR Index,                                      init = 0,                 ev = 3        

        COMMENT OUTPUT SECTION: 

            VAR PTU_IN_ps_xm[0].u8PaySize,                 init = 1,                       ev = 8
            VAR PTU_IN_ps_xm[0].u8PayLoad[0],              init = (T_UINT8)NSC_SET_DOUT1,  ev = init
            VAR PTU_IN_ps_xm[0].lcc,                       init = EEC,                     ev = 2
            VAR PTU_IN_ps_xm[0].sID.PID.sid,               init = ANALOG_SID,              ev = 1
            VAR PTU_IN_ps_xm[0].sID.PID.rci,               init = 1,                       ev = 0
            VAR PTU_IN_ps_xm[0].sID.PID.smt,               init = 0,                       ev = init
            VAR PTU_IN_ps_xm[0].sID.PID.lcl,               init = 0,                       ev = 1
            VAR PTU_IN_ps_xm[0].sID.PID.pvt,               init = 0,                       ev = 1
            VAR PTU_IN_ps_xm[0].sID.PID.cfid,              init = 1,                       ev = 42
            VAR PTU_IN_ps_xm[0].sID.PID.sfid,              init = 1,                       ev = 52
            
            VAR PTU_IN_ps_xm[1].u8PaySize,                 init = 1,                       ev = 8
            VAR PTU_IN_ps_xm[1].u8PayLoad[0],              init = (T_UINT8)NSC_SET_DOUT1,  ev = init
            VAR PTU_IN_ps_xm[1].lcc,                       init = EEC,                     ev = 2
            VAR PTU_IN_ps_xm[1].sID.PID.sid,               init = ANALOG_SID,              ev = 1
            VAR PTU_IN_ps_xm[1].sID.PID.rci,               init = 1,                       ev = 0
            VAR PTU_IN_ps_xm[1].sID.PID.smt,               init = 0,                       ev = init
            VAR PTU_IN_ps_xm[1].sID.PID.lcl,               init = 0,                       ev = 1
            VAR PTU_IN_ps_xm[1].sID.PID.pvt,               init = 0,                       ev = 1
            VAR PTU_IN_ps_xm[1].sID.PID.cfid,              init = 1,                       ev = 42
            VAR PTU_IN_ps_xm[1].sID.PID.sfid,              init = 1,                       ev = 53      

            VAR PTU_IN_ps_xm[2].u8PaySize,                 init = 1,                       ev = 8
            VAR PTU_IN_ps_xm[2].u8PayLoad[0],              init = (T_UINT8)NSC_SET_DOUT1,  ev = init
            VAR PTU_IN_ps_xm[2].lcc,                       init = EEC,                     ev = 2
            VAR PTU_IN_ps_xm[2].sID.PID.sid,               init = ANALOG_SID,              ev = 1
            VAR PTU_IN_ps_xm[2].sID.PID.rci,               init = 1,                       ev = 0
            VAR PTU_IN_ps_xm[2].sID.PID.smt,               init = 0,                       ev = init
            VAR PTU_IN_ps_xm[2].sID.PID.lcl,               init = 0,                       ev = 1
            VAR PTU_IN_ps_xm[2].sID.PID.pvt,               init = 0,                       ev = 1
            VAR PTU_IN_ps_xm[2].sID.PID.cfid,              init = 1,                       ev = 42
            VAR PTU_IN_ps_xm[2].sID.PID.sfid,              init = 1,                       ev = 54  

        
        
        COMMENT INPUT/OUTPUT SECTION:

        VAR Fault_log_structure[0].end_ft_transmission,         init = FALSE,                  ev = init        
        
        VAR Fault_log_structure[0].fault_data_write,            init = FALSE,                  ev = TRUE
        
        VAR Fault_log_structure[0].param_data_write[0],         init = FALSE,                  ev = TRUE        

        COMMENT Stub Calls:
        SIMUL   
        
            STUB A8251Xmit()A825_XM_OK
            STUB A8251Xmit()A825_XM_OK
            STUB A8251Xmit()A825_XM_OK
                   
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #PushFaultLog();
        END ELEMENT

    END TEST -- TEST 2  
    
    
    TEST 3
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT 
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-002]
    COMMENT The function loop from fault index ZERO till index is less than 
    COMMENT MAX_FAULT_LOG and perform the following :
    COMMENT set the u8PayLoad of a825 message to Fault_index of Fault log structure 
    COMMENT with index as fault index count when Fault_index of Fault log structure 
    COMMENT with index as fault index is greater than ZERO and end_ft_transmission 
    COMMENT of Fault log structure with index as fault index count is equal to FALSE 
    COMMENT and Stop ft log is equal to FALSE.
    COMMENT Equivalence Class 70,72,74,73
    COMMENT 
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-003]
    COMMENT The function loop from fault index ZERO till index is less t
    COMMENT han MAX_FAULT_LOG and perform the following :
    COMMENT do nothing 
    COMMENT when below conditions are satisfied :
    COMMENT 1. Fault_index of Fault log structure with index as fault index is greater 
    COMMENT than ZERO and end_ft_transmission of Fault log structure with index as fault 
    COMMENT index count is equal to FALSE and Stop ft log is equal to FALSE else do nothing.
    COMMENT 2. fault_data_write of Fault log structure with index as fault index count 
    COMMENT is equal to TRUE
    COMMENT Equivalence Class 70,72,74,78
    COMMENT 
    COMMENT [hdudispflmsscu-PushFaultLog-DB-LLR-011]
    COMMENT The function loop from index ZERO till fault index is less than 
    COMMENT MAX_FAULT_LOG and loop data index from ZERO till less than SIX and 
    COMMENT perform the following :
    COMMENT do nothing
    COMMENT when below conditions are satisfied :
    COMMENT 1. Fault_index of Fault log structure with index as fault index is greater 
    COMMENT than ZERO and end_ft_transmission of Fault log structure with index as fault 
    COMMENT index count is equal to FALSE and Stop ft log is equal to FALSE else no nothing.
    COMMENT 2. param_data_present with index as data index count of Fault log structure 
    COMMENT with index as parameter arr_index is equal to FALSE and param_data_write with 
    COMMENT index as data index count of Fault log structure with index as parameter 
    COMMENT arr_index is equal to TRUE 
    COMMENT Equivalence Class 70,72,74,84
    COMMENT 
    COMMENT
    COMMENT
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        VAR Fault_log_structure[0].Fault_index,                 init = 1,                  ev = init
                
        VAR Fault_log_structure[1..9].Fault_index,              init = 0,                  ev = init    
        
        VAR Fault_log_structure[1..9].end_ft_transmission,      init = TRUE,               ev = init        
        
        VAR Fault_log_structure[0].fault_active_flag,           init = TRUE,               ev = init    
        
        VAR Fault_log_structure[0].fault_type,                  init = 1,                  ev = init
        
        VAR Fault_log_structure[0].error_code,                  init = 1,                  ev = init    
        
        VAR Fault_log_structure[0].flight_number,               init = 1,                  ev = init    
        
        VAR Fault_log_structure[0].timestamp,                   init = 1,                  ev = init    
        
        VAR Fault_log_structure[0].start_duration,              init = 1,                  ev = init    
        
        VAR Fault_log_structure[0].param_data_present[0],       init = TRUE,               ev = init
        
        VAR Fault_log_structure[0].param_data_present[1..5],    init = FALSE,              ev = init
                
        VAR Fault_log_structure[0].param_data_write[1..5],      init = TRUE,               ev = init
        
        VAR Fault_log_structure[0].Last_ft_record,              init = TRUE,               ev = init
                
        VAR Fault_log_structure[0].param_data[0],               init = 1,                  ev = init    
        
        VAR Time_in_sec,                                        init = 10,                 ev = init    
        
        VAR Index,                                      init = 0,                 ev = 1        

        COMMENT OUTPUT SECTION: 

            
            VAR PTU_IN_ps_xm[0].u8PaySize,                 init = 1,                       ev = 8
            VAR PTU_IN_ps_xm[0].u8PayLoad[0],              init = (T_UINT8)NSC_SET_DOUT1,  ev = init
            VAR PTU_IN_ps_xm[0].lcc,                       init = EEC,                     ev = 2
            VAR PTU_IN_ps_xm[0].sID.PID.sid,               init = ANALOG_SID,              ev = 1
            VAR PTU_IN_ps_xm[0].sID.PID.rci,               init = 1,                       ev = 0
            VAR PTU_IN_ps_xm[0].sID.PID.smt,               init = 0,                       ev = init
            VAR PTU_IN_ps_xm[0].sID.PID.lcl,               init = 0,                       ev = 1
            VAR PTU_IN_ps_xm[0].sID.PID.pvt,               init = 0,                       ev = 1
            VAR PTU_IN_ps_xm[0].sID.PID.cfid,              init = 1,                       ev = 42
            VAR PTU_IN_ps_xm[0].sID.PID.sfid,              init = 1,                       ev = 53          


        
        
        COMMENT INPUT/OUTPUT SECTION:

        VAR Fault_log_structure[0].end_ft_transmission,         init = FALSE,                  ev = TRUE        
        
        VAR Fault_log_structure[0].fault_data_write,            init = TRUE,                  ev = init
        
        VAR Fault_log_structure[0].param_data_write[0],         init = TRUE,                  ev = init     

        COMMENT Stub Calls:
        SIMUL   
        
            STUB A8251Xmit()A825_XM_OVERFLOW
                   
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #PushFaultLog();
        END ELEMENT

    END TEST -- TEST 3  

END SERVICE -- PushFaultLog


--------------------------------------------------------------------------------
-- Declaration of the service ProcessLmsScuSysStatusErr
--------------------------------------------------------------------------------
SERVICE ProcessLmsScuSysStatusErr
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_UINT32 data;
    #T_UINT8 status;

    
    
    TEST 1
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-001]
    COMMENT The function loop from index ZERO till index is less than 
    COMMENT MAX_FAULT_LOG and perform the following :
    COMMENT Do nothing when data_present of Fault log structure with index as 
    COMMENT loop index count is equal to FALSE or TRUE.
    COMMENT Equivalence Class 87
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-002]
    COMMENT The function set the Arinc fault set with Arinc fault set and 
    COMMENT with 0xFD and SSM ncd with SSM ncd and with 0xFD when parameter 
    COMMENT status is equal to THREE
    COMMENT Equivalence Class 89
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-008]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to NINE and with HEX_ONE is not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with index 
    COMMENT zero is FALSE and index flag with index zero is equal to TRUE
    COMMENT Equivalence Class 89,91
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-015]
    COMMENT The function set the U16_message_words with index two to U16_message_words 
    COMMENT with index two AND with 65534 when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWELVE and with HEX_ONE is not equal to ONE.
    COMMENT Equivalence Class 89,93
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-016]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWELVE and with HEX_ONE is 
    COMMENT not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with 
    COMMENT index one is FALSE and index flag with index one is equal to TRUE 
    COMMENT Equivalence Class 89,91
    COMMENT 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-021]
    COMMENT The function set the U16_message_words with index two to 
    COMMENT U16_message_words with index two AND with 65533 when below 
    COMMENT conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THIRTEEN and with 
    COMMENT HEX_ONE is not equal to ONE.
    COMMENT Equivalence Class 89,93
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-022]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THIRTEEN and with HEX_ONE is not 
    COMMENT equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with 
    COMMENT index two is FALSE and index flag with index two is equal to TRUE
    COMMENT Equivalence Class 89,91 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-028]
    COMMENT The function set the U16_message_words with index two to U16_message_words 
    COMMENT with index two AND with 65531 when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FORTEEN and with HEX_ONE is not equal to ONE
    COMMENT Equivalence Class 89,93
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-035]
    COMMENT The function set the U16_message_words with index two to 
    COMMENT U16_message_words with index two AND with 65527 when below 
    COMMENT conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FIFTEEN and with 
    COMMENT HEX_ONE is not equal to ONE.
    COMMENT Equivalence Class 89,93
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-036]
    COMMENT The function do nothing when 
    COMMENT FALSE when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FIFTEEN and with HEX_ONE is not 
    COMMENT equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure is TRUE and index flag 
    COMMENT with index four is equal to FALSE 
    COMMENT Equivalence Class 89,91  
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-038]
    COMMENT The function set Fault set to Fault set or with ONE when 
    COMMENT err_stat is TRUE else set Fault set to Fault set and with 0xFE. 
    COMMENT Equivalence Class 96
    COMMENT 
    COMMENT 
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x0000,           ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR U16_message_words[1],           init= 0,            ev = init
            
            VAR U16_message_words[2],           init= 0,            ev = init
            
            VAR Fault_log_structure[0].fault_active_flag,           init= FALSE,            ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT     
        
    END TEST -- TEST 1  
    
    TEST 2
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-008]
    COMMENT The function  call the function StopProcessingFaultLog with index 
    COMMENT as index with index zero and set the index flag with index zero to 
    COMMENT FALSE when below conditions are satisfied :
    COMMENT 1. parameter status is equal to ZERO
    COMMENT 2. parameter data right shifting to NINE and with HEX_ONE is not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with index 
    COMMENT zero is TRUE and index flag with index zero is equal to FALSE
    COMMENT Equivalence Class 153,92
    COMMENT 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-016]
    COMMENT The function  call the function StopProcessingFaultLog with index 
    COMMENT as index with index one and set the index flag with index one to 
    COMMENT FALSE when below conditions are satisfied :
    COMMENT 1. parameter status is equal to ZERO
    COMMENT 2. parameter data right shifting to TWELVE and with HEX_ONE is 
    COMMENT not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with 
    COMMENT index one is TRUE and index flag with index one is equal to FALSE 
    COMMENT Equivalence Class 153,92
    COMMENT 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-022]
    COMMENT The function  call the function StopProcessingFaultLog with index 
    COMMENT as index with index two and set the index flag with index two to 
    COMMENT FALSE when below conditions are satisfied :
    COMMENT 1. parameter status is equal to ZERO
    COMMENT 2. parameter data right shifting to THIRTEEN and with HEX_ONE is not 
    COMMENT equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with 
    COMMENT index two is TRUE and index flag with index two is equal to FALSE
    COMMENT Equivalence Class 153,92 
    COMMENT 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-036]
    COMMENT The function  call the function StopProcessingFaultLog with index 
    COMMENT as index with index four and set the index flag with index four to 
    COMMENT FALSE when below conditions are satisfied :
    COMMENT 1. parameter status is equal to ZERO
    COMMENT 2. parameter data right shifting to FIFTEEN and with HEX_ONE is not 
    COMMENT equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure is TRUE and index flag 
    COMMENT with index four is equal to FALSE 
    COMMENT Equivalence Class 153,92 
    COMMENT 
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x0000,           ev = init
            
            VAR status,         init= ZERO,         ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR U16_message_words[1],           init= 0,            ev = init
            
            VAR U16_message_words[2],           init= 0,            ev = init
            
            VAR Fault_log_structure[0].fault_active_flag,           init= TRUE,         ev = init
        
        COMMENT OUTPUT SECTION:
        --NONE
        
        COMMENT INPUT/OUTPUT SECTION:
           --NONE
        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT     
        
    END TEST -- TEST 2  
    
    

    TEST 3
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-003]
    COMMENT The function sets the error state to TRUE and  set the U16_message_words with index one to bitwise 
    COMMENT or with 32768 when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to NINE and with HEX_ONE is equal to ONE.
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT Equivalence Class 89,94,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-004]
    COMMENT The function set the index with index zero to fault index and 
    COMMENT index flag with index zero to TRUE when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to NINE and with HEX_ONE  is equal to ONE
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT 4. index flag with index zero is equal to FALSE
    COMMENT Equivalence Class 89,97,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-005]
    COMMENT The function call the function GetFaultParamData with parameter 
    COMMENT index with index zero when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to NINE and with HEX_ONE is equal to ONE.
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT 4. index flag with index zero is equal to FALSE
    COMMENT Equivalence Class 89,94 ,154 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-006]
    COMMENT The function perform the following :
    COMMENT 1. call the function StartProcessingFaultLog with parameter 
    COMMENT SYS_STATUS_ERROR, POWER_SUPPLY_FAULT and index with index zero
    COMMENT when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to NINE and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with index zero is equal to FALSE.
    COMMENT 4. M_ENGSTART is  equal to n1 value
    COMMENT Equivalence Class 89,94,99 ,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-007]
    COMMENT The function increment the fault index when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to NINE and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index zero is equal to FALSE.
    COMMENT 4. M_ENGSTART is  equal to n1 value
    COMMENT 5. fault index is less than TEN and Stop log variable is equal to FALSE 
    COMMENT Equivalence Class 89,94,101,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-010]
    COMMENT The function set the U16_message_words with index two to bitwise or 
    COMMENT with 1 and error state to TRUE when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWELVE and with HEX_ONE is equal to ONE .
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT Equivalence Class 89,94,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-011]
    COMMENT The function set the index with index one to fault index and index 
    COMMENT flag with index one to TRUE when below condition are satisfied :
    COMMENT 1. parameter index with index one when parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWELVE and with HEX_ONE is equal to ONE
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT 3. index flag with index one is equal to FALSE.
    COMMENT Equivalence Class 89,97,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-012]
    COMMENT The function perform the following :
    COMMENT 1. call the function GetFaultParamData with parameter index with index one
    COMMENT when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWELVE and with HEX_ONE is equal to ONE.
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT Equivalence Class 89,94 ,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-013]
    COMMENT The function call the function StartProcessingFaultLog with parameter 
    COMMENT SYS_STATUS_ERROR, APP_CRC_ERROR and index with index one 
    COMMENT when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWELVE and with HEX_ONE is equal to ONE
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT 4. initial_fault_index of Fault log structure with index as index with 
    COMMENT index one is equal to FALSE.
    COMMENT Equivalence Class 89,94,99,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-014]
    COMMENT The function increment the fault index when below conditions 
    COMMENT are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWELVE and with HEX_ONE is 
    COMMENT equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index 
    COMMENT with index one is equal to FALSE.
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT 4. fault index is less than TEN and Stop log variable is equal to 
    COMMENT FALSE
    COMMENT Equivalence Class 89,94,101,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-017]
    COMMENT The function set the U16_message_words with index two to bitwise 
    COMMENT or with two and error state to TRUE when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THIRTEEN and with HEX_ONE is equal to ONE.
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT Equivalence Class 89,94,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-018]
    COMMENT The function set the index with index two to fault index and index 
    COMMENT flag with index two to TRUE when below condition are satisfied :
    COMMENT 1. parameter index with index one when parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THIRTEEN and with HEX_ONE is equal to ONE
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT 3. index flag with index two is equal to FALSE.
    COMMENT Equivalence Class 89,97,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-019]
    COMMENT The function perform the following :
    COMMENT 1. call the function GetFaultParamData with parameter index with index two
    COMMENT when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THIRTEEN and with HEX_ONE is equal to ONE.
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT Equivalence Class 89,94,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-039]
    COMMENT The function call the function StartProcessingFaultLog with parameter 
    COMMENT SYS_STATUS_ERROR, MFG_CRC_ERROR and index with index two
    COMMENT when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THIRTEEN and with HEX_ONE is equal to ONE
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index two is equal to FALSE.
    COMMENT Equivalence Class 89,94,99,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-020]
    COMMENT The function increment the fault index when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THIRTEEN and with HEX_ONE is equal to ONE
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT 3. initial_fault_index of Fault log structure with index as index with index two is equal to FALSE.
    COMMENT 4. fault index is less than TEN and Stop log variable is equal to FALSE else do nothing.
    COMMENT Equivalence Class 89,94,101,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-023]
    COMMENT The function set the U16_message_words with index two to 
    COMMENT bitwise or with four and error state to TRUE when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FORTEEN and with HEX_ONE  is equal to ONE.
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT Equivalence Class 89,94 ,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-024]
    COMMENT The function set the index with index three to fault index and index 
    COMMENT flag with index three to TRUE when below condition are satisfied :
    COMMENT 1. parameter index with index one when parameter status is equal to THREE
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT 2. parameter data right shifting to FORTEEN and with HEX_ONE  is equal to ONE
    COMMENT 3. index flag with index three is equal to FALSE
    COMMENT Equivalence Class 89,97,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-025]
    COMMENT The function perform the following :
    COMMENT 1. call the function GetFaultParamData with parameter index with index three
    COMMENT when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FORTEEN and with HEX_ONE  is equal to ONE.
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT Equivalence Class 89,94,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-026]
    COMMENT The function call the function StartProcessingFaultLog with parameter 
    COMMENT SYS_STATUS_ERROR, CONFIG_TABLE_CRC_ERROR and index with index
    COMMENT when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FORTEEN and with HEX_ONE  is equal to ONE
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT 4. initial_fault_index of Fault log structure with index as index with index three is equal to FALSE.
    COMMENT Equivalence Class 89,94,99 ,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-027]
    COMMENT The function increment the fault index when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FORTEEN and with HEX_ONE  is equal to ONE
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT 4. initial_fault_index of Fault log structure with index as index with index three is equal to FALSE.
    COMMENT 5. fault index is less than TEN and Stop log variable is equal to FALSE
    COMMENT Equivalence Class 89,94,101,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-030]
    COMMENT The function set the U16_message_words with index two to bitwise or 
    COMMENT with eight and error state to TRUE when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FIFTEEN and with HEX_ONE is equal to ONE.
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT Equivalence Class 89,94,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-031]
    COMMENT The function set the index with index four to fault index and 
    COMMENT index flag with index four to TRUE when below condition are satisfied :
    COMMENT 1. parameter index with index one when parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FIFTEEN and with HEX_ONE is equal to ONE
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT 4. index flag with index four is equal to FALSE
    COMMENT Equivalence Class 89,97,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-032]
    COMMENT The function perform the following :
    COMMENT 1. call the function GetFaultParamData with parameter index with index four
    COMMENT when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FIFTEEN and with HEX_ONE is equal to ONE.
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT Equivalence Class 89,94,154   
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-033]
    COMMENT The function call the function StartProcessingFaultLog with parameter 
    COMMENT SYS_STATUS_ERROR, INVALID_TANK_TABLE and index with index four
    COMMENT when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FIFTEEN and with HEX_ONE is equal to ONE
    COMMENT 3. M_ENGSTART is  equal to n1 value
    COMMENT 3. initial_fault_index of Fault log structure with index as index with index 
    COMMENT four is equal to FALSE.
    COMMENT Equivalence Class 89,94,99,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-034]
    COMMENT The function increment the fault index when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FIFTEEN and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with index four is equal to FALSE.
    COMMENT 4. M_ENGSTART is  equal to n1 value
    COMMENT 5. fault index is less than TEN and Stop log variable is equal to FALSE.
    COMMENT Equivalence Class 89,94,101 ,154
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-038]
    COMMENT The function set Fault set to Fault set or with ONE when 
    COMMENT err_stat is TRUE else set Fault set to Fault set and with 0xFE. 
    COMMENT Equivalence Class 95
    COMMENT 
    COMMENT ELEMENT 2
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-004]
    COMMENT The function set the index with index zero to fault index and 
    COMMENT index flag with index zero to TRUE when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to NINE and with HEX_ONE  is equal to ONE
    COMMENT 3. M_ENGSTART is  less than n1 value
    COMMENT 4. index flag with index zero is equal to FALSE else do nothing.
    COMMENT Equivalence Class 89,98,156
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-011]
    COMMENT The function set the index with index one to fault index and index 
    COMMENT flag with index one to TRUE when below condition are satisfied :
    COMMENT 1. parameter index with index one when parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWELVE and with HEX_ONE is equal to ONE
    COMMENT 3. M_ENGSTART is  less than n1 value
    COMMENT 4. index flag with index one is equal to FALSE else do nothing.
    COMMENT Equivalence Class 89,98 ,156
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-018]
    COMMENT The function set the index with index two to fault index and index 
    COMMENT flag with index two to TRUE when below condition are satisfied :
    COMMENT 1. parameter index with index one when parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THIRTEEN and with HEX_ONE is equal to ONE
    COMMENT 3. M_ENGSTART is  less than n1 value
    COMMENT 4. index flag with index two is equal to FALSE else do nothing.
    COMMENT Equivalence Class 89,98,156
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-024]
    COMMENT The function set the index with index three to fault index and index 
    COMMENT flag with index three to TRUE when below condition are satisfied :
    COMMENT 1. parameter index with index one when parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FORTEEN and with HEX_ONE  is equal to ONE
    COMMENT 3. M_ENGSTART is  less than n1 value
    COMMENT 4. index flag with index three is equal to FALSE else do nothing.
    COMMENT Equivalence Class 89,98,156 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-031]
    COMMENT The function set the index with index four to fault index and 
    COMMENT index flag with index four to TRUE when below condition are satisfied :
    COMMENT 1. parameter index with index one when parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FIFTEEN and with HEX_ONE is equal to ONE
    COMMENT 3. index flag with index four is equal to FALSE else do nothing.
    COMMENT Equivalence Class 89,98 
    COMMENT 
    COMMENT ELEMENT 3
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-008]
    COMMENT The function call the function StopProcessingFaultLog with index as 
    COMMENT index with index zero and set the index flag with index zero to FALSE 
    COMMENT when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to NINE and with HEX_ONE is not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with index 
    COMMENT zero is TRUE and index flag with index zero is equal to TRUE
    COMMENT Equivalence Class 89,91,97
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-016]
    COMMENT The function call the function StopProcessingFaultLog with index as 
    COMMENT index with index one and set the index flag with index one to FALSE when 
    COMMENT below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWELVE and with HEX_ONE is 
    COMMENT not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with 
    COMMENT index one is TRUE and index flag with index one is equal to TRUE 
    COMMENT Equivalence Class 89,91,97
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-022]
    COMMENT The function call the function StopProcessingFaultLog with index as 
    COMMENT index with index two and set the index flag with index two to FALSE 
    COMMENT when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THIRTEEN and with HEX_ONE is not 
    COMMENT equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with 
    COMMENT index two is TRUE and index flag with index two is equal to TRUE
    COMMENT Equivalence Class 89,91,97
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-029]
    COMMENT The function call the function StopProcessingFaultLog with index as index 
    COMMENT with index three and set the index flag with index three to FALSE when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FORTEEN and with HEX_ONE is not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with index three 
    COMMENT is TRUE and index flag with index three is equal to TRUE.
    COMMENT Equivalence Class 89,91,97 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-036]
    COMMENT The function shall call the function StopProcessingFaultLog with index 
    COMMENT as index with index four and set the index flag with index four to 
    COMMENT FALSE when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FIFTEEN and with HEX_ONE is not 
    COMMENT equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure is TRUE and index flag 
    COMMENT with index four is equal to TRUE.
    COMMENT Equivalence Class 89,91,97 
    COMMENT 
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0xFF00,           ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR N1_value,      init=M_ENGSTART,         ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = TRUE
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = TRUE
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Flt_id_count,           init= 5,            ev = 10
            
            VAR Flight_count,           init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_OK,         ev = init
            
            VAR U16_message_words[1],           init= 0,            ev = 32768
            
            VAR U16_message_words[2],           init= 0,            ev = 15         
        
        COMMENT OUTPUT SECTION:
        
            VAR Fault_log_structure[0].Fault_index,                   init = 0,       ev =6
            VAR Fault_log_structure[0].fault_type,          init = 0,       ev   = 2
            VAR Fault_log_structure[0].error_code,          init = 0,       ev   = 1
            VAR Fault_log_structure[0].Last_ft_record,      init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].fault_data_write,        init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].end_ft_transmission, init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[0], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[1], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[2], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[3], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[4], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[5], init = 0,       ev   = FALSE        
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT

        --ELEMENT 2
        
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0xFF00,           ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR N1_value,      init=FT_LOG_SIZE,      ev = init

            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= TRUE,         ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_OK,         ev = init
        
        COMMENT OUTPUT SECTION:
        
            VAR Fault_log_structure[0].Last_ft_record,      init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].fault_data_write,        init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].end_ft_transmission, init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[0], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[1], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[2], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[3], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[4], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[5], init = 0,       ev   = FALSE            
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT     

        -- ELEMENT 3
        
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x000,            ev = init
            
            VAR status,         init= THREE,            ev = init

            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR U16_message_words[1],           init= 0,            ev = init
            
            VAR U16_message_words[2],           init= 0,            ev = init
            
            VAR Fault_log_structure[0].fault_active_flag,           init= TRUE,         ev = FALSE
        
        COMMENT OUTPUT SECTION:
        
                VAR Fault_log_structure[0].Fault_index,                     init = 0,       ev  = ZERO
                VAR Fault_log_structure[0].flight_number,                   init = 0,       ev  = ZERO
                VAR Fault_log_structure[0].start_duration,                  init = 0,       ev  = ZERO
                VAR Fault_log_structure[0].stop_duration,                   init = 0,       ev  = ZERO
                VAR Fault_log_structure[0].fault_type,                      init = 0,       ev  = NO_ERROR
                VAR Fault_log_structure[0].error_code,                      init = 0,       ev  = ZERO
                VAR Fault_log_structure[0].end_ft_transmission,             init = 0,       ev  = TRUE
                VAR Fault_log_structure[0].Last_ft_record,                  init = 0,       ev  = TRUE
                VAR Fault_log_structure[0].initial_fault_index,             init = 0,       ev  = FALSE
                VAR Fault_log_structure[0].param_data_present[0],           init = 0,       ev  = FALSE
                VAR Fault_log_structure[0].param_data_present[1],           init = 0,       ev  = FALSE
                VAR Fault_log_structure[0].param_data_present[2],           init = 0,       ev  = FALSE
                VAR Fault_log_structure[0].param_data_present[3],           init = 0,       ev  = FALSE
                VAR Fault_log_structure[0].param_data_present[4],           init = 0,       ev  = FALSE
                VAR Fault_log_structure[0].param_data_present[5],           init = 0,       ev  = FALSE
                VAR Fault_log_structure[0].fault_data_write,                init = 0,       ev  = TRUE      
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT         
        
    END TEST -- TEST 3

    TEST 5
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-007]
    COMMENT The function don't increment the fault index when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to NINE and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index zero is equal to FALSE.
    COMMENT 4. fault index is less than TEN and Stop log variable is equal to TRUE 
    COMMENT else do nothing.
    COMMENT Equivalence Class 89,94,102
    COMMENT 
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x200,            ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT 
        
    END TEST -- TEST 5  
    
    TEST 6
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-014]
    COMMENT The function don't increment the fault index when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWELVE and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index one is equal to FALSE.
    COMMENT 4. fault index is less than TEN and Stop log variable is equal to TRUE 
    COMMENT else do nothing.
    COMMENT Equivalence Class 89,94,102
    COMMENT 
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x1000,           ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT 
        
    END TEST -- TEST 6  
    
    TEST 7
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-020]
    COMMENT The function don't increment the fault index when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THIRTEEN and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index two is equal to FALSE.
    COMMENT 4. fault index is less than TEN and Stop log variable is equal to TRUE 
    COMMENT else do nothing.
    COMMENT Equivalence Class 89,94,102
    COMMENT 
    COMMENT 
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x2000,           ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT 
        
    END TEST -- TEST 7  
    
    TEST 8
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-027]
    COMMENT The function don't increment the fault index when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FORTEEN and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index three is equal to FALSE.
    COMMENT 4. fault index is less than TEN and Stop log variable is equal to TRUE 
    COMMENT else do nothing.
    COMMENT Equivalence Class 89,94,102
    COMMENT 
    COMMENT 
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x4000,           ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT 
        
    END TEST -- TEST 8  
    
    TEST 9
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-007]
    COMMENT The function don't increment the fault index when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FORTEEN and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index zero is equal to FALSE.
    COMMENT 4. fault index is greater than TEN and Stop log variable is equal to TRUE 
    COMMENT else do nothing.
    COMMENT Equivalence Class 89,94,103
    COMMENT 
    COMMENT </TD>   

    
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x200,            ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT 
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x200,            ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0..9].data_present,         init= TRUE,         ev = init
            
            VAR Fault_log_structure[0..9].initial_fault_index,          init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT     
        
    END TEST -- TEST 9      
    
    TEST 10
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-014]
    COMMENT The function don't increment the fault index when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FORTEEN and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index two is equal to FALSE.
    COMMENT 4. fault index is greater than TEN and Stop log variable is equal to TRUE 
    COMMENT else do nothing.
    COMMENT Equivalence Class 89,94,103
    COMMENT 
    COMMENT </TD>   

    
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x1000,           ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT 
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x1000,           ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0..9].data_present,         init= TRUE,         ev = init
            
            VAR Fault_log_structure[0..9].initial_fault_index,          init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT     
        
    END TEST -- TEST 10 
    
    TEST 11
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-020]
    COMMENT The function don't increment the fault index when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FORTEEN and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index three is equal to FALSE.
    COMMENT 4. fault index is greater than TEN and Stop log variable is equal to TRUE 
    COMMENT else do nothing.
    COMMENT Equivalence Class 89,94,103
    COMMENT 
    COMMENT 
    COMMENT </TD>   

    
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x2000,           ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT 
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x2000,           ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0..9].data_present,         init= TRUE,         ev = init
            
            VAR Fault_log_structure[0..9].initial_fault_index,          init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT     
        
    END TEST -- TEST 11 

    TEST 12
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-027]
    COMMENT The function don't increment the fault index when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FORTEEN and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index three is equal to FALSE.
    COMMENT 4. fault index is greater than TEN and Stop log variable is equal to TRUE 
    COMMENT else do nothing.
    COMMENT Equivalence Class 89,94,103
    COMMENT 
    COMMENT </TD>   

    
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x4000,           ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT 
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x4000,           ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0..9].data_present,         init= TRUE,         ev = init
            
            VAR Fault_log_structure[0..9].initial_fault_index,          init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT     
        
    END TEST -- TEST 12 
    
    TEST 13
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-037]
    COMMENT The function do the following when  parameter status is not equal to THREE.
    COMMENT - Set Arinc fault set to Arinc fault set or with TWO
    COMMENT - Set SSM ncd to SSM ncd  or with TWO when status equal to ONE else
    COMMENT - Set SSM ncd to SSM ncd and with 0xFD
    COMMENT Equivalence Class 90
    COMMENT 
    COMMENT </TD>   

    
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x4000,           ev = init
            
            VAR status,         init= 2,            ev = init
                    
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT 
        
    END TEST -- TEST 13 
    
    TEST 14
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-037]
    COMMENT The function do the following when  parameter status is not equal to THREE.
    COMMENT - Set Arinc fault set to Arinc fault set or with TWO
    COMMENT - Set SSM ncd to SSM ncd  or with TWO when status equal to ONE else
    COMMENT - Set SSM ncd to SSM ncd and with 0xFD
    COMMENT Equivalence Class 90
    COMMENT 
    COMMENT </TD>   

    
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x4000,           ev = init
            
            VAR status,         init= 1,            ev = init
                    
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT 
        
    END TEST -- TEST 14 
    
    TEST 15
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-030]
    COMMENT The function set the U16_message_words with index two to bitwise or 
    COMMENT with eight and error state to TRUE when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FIFTEEN and with HEX_ONE is equal to ONE.
    COMMENT Equivalence Class 89,94  
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-034]
    COMMENT The function don't increment the fault index when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FIFTEEN and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with index four is equal to FALSE.
    COMMENT 4. fault index is less than TEN and Stop log variable is equal to TRUE else do nothing.
    COMMENT Equivalence Class 89,94,102
    COMMENT 
    COMMENT 
    COMMENT 
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x8000,           ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT 
        
    END TEST -- TEST 15
    
    TEST 16
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuSysStatusErr-DB-LLR-034]
    COMMENT The function don't increment the fault index when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to FIFTEEN and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with index four is equal to FALSE.
    COMMENT 4. fault index is greater than TEN and Stop log variable is equal to TRUE else do nothing.
    COMMENT Equivalence Class 89,94,103
    COMMENT 
    COMMENT </TD>   

    
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x8000,           ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT 
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x8000,           ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0..9].data_present,         init= TRUE,         ev = init
            
            VAR Fault_log_structure[0..9].initial_fault_index,          init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuSysStatusErr(data, status);
        END ELEMENT     
        
    END TEST -- TEST 16     
    
 
    

END SERVICE -- ProcessLmsScuSysStatusErr


--------------------------------------------------------------------------------
-- Declaration of the service ProcessLmsScuProbeErr
--------------------------------------------------------------------------------
SERVICE ProcessLmsScuProbeErr
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_UINT32 data;
    #T_UINT8 status;
    
    
    
    TEST 1
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-001]
    COMMENT The function loop from fault index ZERO till index is less 
    COMMENT than MAX_FAULT_LOG and perform the following :
    COMMENT Do nothing when data_present of Fault log structure with index as 
    COMMENT fault index count is equal to FALSE or TRUE.
    COMMENT Equivalence Class None
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-008]
    COMMENT The function set the U16_message_wordswith index one to U16_message_words 
    COMMENT with index one AND with 61439 when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE OR parameter status is equal to ZERO.
    COMMENT 2. parameter data right shifting to ZERO and with HEX_ONE is not equal to ONE.
    COMMENT Equivalence Class 104
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-009]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to THREE OR parameter status is equal to ZERO.
    COMMENT 2. parameter data right shifting to ZERO and with HEX_ONE is not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with index ZERO 
    COMMENT is FALSE and index flag with index ZERO is equal to TRUE
    COMMENT Equivalence Class 104,106,108 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-015]
    COMMENT The function set the U16_message_wordswith index one to U16_message_words 
    COMMENT with index one AND with 61439 when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE OR parameter status is equal to ZERO.
    COMMENT 2. parameter data right shifting to ONE and with HEX_ONE is not equal to ONE.
    COMMENT Equivalence Class 104
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-016]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to THREE OR parameter status is equal to ZERO.
    COMMENT 2. parameter data right shifting to ONE and with HEX_ONE is not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with index ONE 
    COMMENT is FALSE and index flag with index ONE is equal to TRUE
    COMMENT Equivalence Class 104,106,108 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-022]
    COMMENT The function set the U16_message_wordswith index one to U16_message_words 
    COMMENT with index one AND with 61439 when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE OR parameter status is equal to ZERO.
    COMMENT 2. parameter data right shifting to TWO and with HEX_ONE is not equal to ONE.
    COMMENT Equivalence Class 104
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-023]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to THREE OR parameter status is equal to ZERO.
    COMMENT 2. parameter data right shifting to TWO and with HEX_ONE is not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with index TWO 
    COMMENT is FALSE and index flag with index TWO is equal to TRUE
    COMMENT Equivalence Class 104,106,108 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-029]
    COMMENT The function set the U16_message_wordswith index one to U16_message_words 
    COMMENT with index one AND with 61439 when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE OR parameter status is equal to ZERO.
    COMMENT 2. parameter data right shifting to THREE and with HEX_ONE is not equal to ONE.
    COMMENT Equivalence Class 104
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-030]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to THREE OR parameter status is equal to ZERO.
    COMMENT 2. parameter data right shifting to THREE and with HEX_ONE is not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with index THREE 
    COMMENT is FALSE and index flag with index THREE is equal to TRUE
    COMMENT Equivalence Class 104,106,108
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-032]
    COMMENT The function shall set the Fault set to Fault set and with 0xFD when error 
    COMMENT state is equal to FALSE
    COMMENT Equivalence Class 151
    COMMENT 
    COMMENT 
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x00,         ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR U16_message_words[1],           init= 0,            ev = init
            
            VAR U16_message_words[2],           init= 0,            ev = init
            
            VAR Fault_log_structure[0].fault_active_flag,           init= FALSE,            ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT     
        
    END TEST -- TEST 1  
    
    TEST 2
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
	COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-002]
    COMMENT The function  do the following when parameter status is equal to ZERO
    COMMENT - Set Arinc fault set to Arinc fault set and with 0xFB.
    COMMENT - Set SSM ncd to SSM ncd and with 0xFB.
    COMMENT Equivalence Class 152
	COMMENT
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-008]
    COMMENT The function set the U16_message_wordswith index one to U16_message_words 
    COMMENT with index one AND with 61439 when below conditions are satisfied :
    COMMENT 1. parameter status is equal to ZERO 
    COMMENT 2. parameter data right shifting to ZERO and with HEX_ONE is not equal to ONE.
    COMMENT Equivalence Class 152,104
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-009]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to ZERO
    COMMENT 2. parameter data right shifting to ZERO and with HEX_ONE is not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with index ZERO 
    COMMENT is TRUE and index flag with index ZERO is equal to TRUE
    COMMENT Equivalence Class 152,104,107,108 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-015]
    COMMENT The function set the U16_message_wordswith index one to U16_message_words 
    COMMENT with index one AND with 61439 when below conditions are satisfied :
    COMMENT 1. parameter status is equal to ZERO
    COMMENT 2. parameter data right shifting to ONE and with HEX_ONE is not equal to ONE.
    COMMENT Equivalence Class 152,104
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-016]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to ZERO
    COMMENT 2. parameter data right shifting to ONE and with HEX_ONE is not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with index ONE 
    COMMENT is TRUE and index flag with index ONE is equal to TRUE
    COMMENT Equivalence Class 152,104,107,108 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-022]
    COMMENT The function set the U16_message_wordswith index one to U16_message_words 
    COMMENT with index one AND with 61439 when below conditions are satisfied :
    COMMENT 1. parameter status is equal to ZERO
    COMMENT 2. parameter data right shifting to TWO and with HEX_ONE is not equal to ONE.
    COMMENT Equivalence Class 152, 104
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-023]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to ZERO
    COMMENT 2. parameter data right shifting to TWO and with HEX_ONE is not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with index TWO 
    COMMENT is TRUE and index flag with index TWO is equal to TRUE
    COMMENT Equivalence Class 152,,107,108 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-029]
    COMMENT The function set the U16_message_wordswith index one to U16_message_words 
    COMMENT with index one AND with 61439 when below conditions are satisfied :
    COMMENT 1. parameter status is equal to ZERO
    COMMENT 2. parameter data right shifting to THREE and with HEX_ONE is not equal to ONE.
    COMMENT Equivalence Class 152,104
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-030]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to ZERO
    COMMENT 2. parameter data right shifting to THREE and with HEX_ONE is not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with index THREE 
    COMMENT is TRUE and index flag with index THREE is equal to TRUE
    COMMENT Equivalence Class 152,104,107,108
    COMMENT 
    COMMENT 
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x00,         ev = init
            
            VAR status,         init= ZERO,         ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR U16_message_words[1],           init= 0,            ev = init
            
            VAR U16_message_words[2],           init= 0,            ev = init
            
            VAR Fault_log_structure[0].fault_active_flag,           init= TRUE,         ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT     
        
    END TEST -- TEST 2  
    
    

    TEST 3
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-002]
    COMMENT The function  do the following when parameter status is equal to THREE
    COMMENT - Set Arinc fault set to Arinc fault set and with 0xFB.
    COMMENT - Set SSM ncd to SSM ncd and with 0xFB.
    COMMENT Equivalence Class 110
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-003]
    COMMENT The function set the U16_message_words with index one to bitwise or 
    COMMENT with 4096 and error state to TRUE when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to ZERO and with HEX_ONE is equal to ONE.
    COMMENT Equivalence Class 110,105
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-004]
    COMMENT The function set the index with index zero to fault index and index flag with 
    COMMENT index zero to TRUE when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to ZERO and with HEX_ONE is equal to ONE
    COMMENT 3. index flag with index zero is equal to FALSE.
    COMMENT Equivalence Class 110,105,109
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-005]
    COMMENT The function call the function GetFaultParamData with parameter index 
    COMMENT with index zero when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to ZERO and with HEX_ONE is equal to ONE.
    COMMENT Equivalence Class 110,105
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-006]
    COMMENT The function perform the following :
    COMMENT 1. call the function StartProcessingFaultLog with parameter PROBE_ERROR, 
    COMMENT MISSING_PROBE_ERROR and index with index zero
    COMMENT when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to ZERO and with HEX_ONE  is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with index
    COMMENT  zero is equal to FALSE.
    COMMENT Equivalence Class 110,105,112
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-007]
    COMMENT The function increment the fault index when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to ZERO and with HEX_ONE  is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index zero is equal to FALSE.
    COMMENT 4. fault index is less than TEN and Stop log variable is equal to FALSE.
    COMMENT Equivalence Class 110,105,112,114 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-010]
    COMMENT The function set the U16_message_words with index one to bitwise or 
    COMMENT with 8192 and error state to TRUE when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to ONE and with HEX_ONE is equal to ONE.
    COMMENT Equivalence Class 110,105
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-011]
    COMMENT The function set the index with index one to fault index and index flag 
    COMMENT with index one to TRUE when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to ONE and with HEX_ONE is equal to ONE
    COMMENT 3. index flag with index one is equal to FALSE.
    COMMENT Equivalence Class 110,105,109 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-012]
    COMMENT The function call the function GetFaultParamData with parameter index 
    COMMENT with index one when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to ONE and with HEX_ONE is equal to ONE.
    COMMENT Equivalence Class 110,105
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-013]
    COMMENT The function perform the following :
    COMMENT 1. call the function StartProcessingFaultLog with parameter PROBE_ERROR, 
    COMMENT SHORTED_PROBE_ERROR and index with index one
    COMMENT when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to ONE and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index one is equal to FALSE.
    COMMENT Equivalence Class 110,105,112 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-014]
    COMMENT The function increment the fault index when below conditions 
    COMMENT are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to ONE and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index 
    COMMENT with index one is equal to FALSE.
    COMMENT 4. fault index is less than TEN and Stop log variable is equal to FALSE.
    COMMENT Equivalence Class 110,105,112,114 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-017]
    COMMENT The function set the U16_message_words with index two to bitwise or 
    COMMENT with 32 and error state to TRUE when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWO and with HEX_ONE is equal to ONE.
    COMMENT Equivalence Class 110,105
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-018]
    COMMENT The function set the index with index two to fault index and index flag 
    COMMENT with index two to TRUE when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWO and with HEX_ONE is equal to ONE
    COMMENT 3. index flag with index two is equal to FALSE
    COMMENT Equivalence Class 110,105,109 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-019]
    COMMENT The function call the function GetFaultParamData with parameter index 
    COMMENT with index two when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWO and with HEX_ONE is equal to ONE.
    COMMENT Equivalence Class 110,105
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-020]
    COMMENT The function perform the following :
    COMMENT 1. call the function StartProcessingFaultLog with parameter ARINC_ERROR, 
    COMMENT DATA_OUT_OF_RANGE and index with index two
    COMMENT when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWO and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index two is equal to FALSE.
    COMMENT Equivalence Class 110,105,112 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-021]
    COMMENT The function increment the fault index when below conditions 
    COMMENT are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWO and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index 
    COMMENT with index two is equal to FALSE.
    COMMENT 4. fault index is less than TEN and Stop log variable is equal to 
    COMMENT FALSE
    COMMENT Equivalence Class 110,105,112,114 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-024]
    COMMENT The function set the U16_message_words with index one to bitwise or 
    COMMENT with 16384 and error state to TRUE when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THREE and with HEX_ONE is equal to ONE.
    COMMENT Equivalence Class 110,105
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-025]
    COMMENT The function set the index with index three to fault index and index 
    COMMENT flag with index three to TRUE when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THREE and with HEX_ONE is equal to ONE
    COMMENT 3. index flag with index three is equal to FALSE
    COMMENT Equivalence Class 110,105,109 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-026]
    COMMENT The function call the function GetFaultParamData with parameter 
    COMMENT index with index three when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THREE and with HEX_ONE is equal to ONE.
    COMMENT Equivalence Class 110,105
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-027]
    COMMENT The function perform the following :
    COMMENT 1. call the function StartProcessingFaultLog with parameter 
    COMMENT PROBE_ERROR, FUEL_EXCITATION_ERROR and index with index three
    COMMENT when below condition are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THREE and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index 
    COMMENT with index three is equal to FALSE.
    COMMENT Equivalence Class 110,105,112 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-028]
    COMMENT The function increment the fault index when below conditions 
    COMMENT are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THREE and with HEX_ONE is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index 
    COMMENT with index three is equal to FALSE.
    COMMENT 4. fault index is less than TEN and Stop log variable is equal to FALSE.
    COMMENT Equivalence Class 110,105,112,114 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-032]
    COMMENT The function shall set the Fault set to Fault set or with TWO when error 
    COMMENT state is equal to TRUE
    COMMENT Equivalence Class 150
    COMMENT
    COMMENT 
    COMMENT ELEMENT 2
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-004]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to ZERO and with HEX_ONE is equal to ONE
    COMMENT 3. index flag with index zero is equal to TRUE.
    COMMENT Equivalence Class 110,105,108
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-011]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to ONE and with HEX_ONE is equal to ONE
    COMMENT 3. index flag with index one is equal to TRUE.
    COMMENT Equivalence Class 110,105,108
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-018]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWO and with HEX_ONE is equal to ONE
    COMMENT 3. index flag with index two is equal to TRUE
    COMMENT Equivalence Class 110,105,108
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-025]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THREE and with HEX_ONE is equal to ONE
    COMMENT 3. index flag with index three is equal to FALSE
    COMMENT Equivalence Class 110,105,108
    COMMENT 
    COMMENT ELEMENT 3
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-009]
    COMMENT The function call the function StopProcessingFaultLog with index as index 
    COMMENT with index ZERO and set the index flag with index ZERO to FALSE when below 
    COMMENT conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to ZERO and with HEX_ONE is not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with index ZERO 
    COMMENT is TRUE and index flag with index ZERO is equal to TRUE
    COMMENT Equivalence Class 104,107,109
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-016]
    COMMENT The function call the function StopProcessingFaultLog with index as index 
    COMMENT with index one and set the index flag with index one to FALSE when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to ONE and with HEX_ONE is not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with index 
    COMMENT one is TRUE and index flag with index one is equal to TRUE.
    COMMENT Equivalence Class 104,107,109
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-023]
    COMMENT The function call the function StopProcessingFaultLog with index as 
    COMMENT index with index two and set the index flag with index one to FALSE when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWO and with HEX_ONE is not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with 
    COMMENT index two is TRUE and index flag with index one is equal to TRUE else do nothing.
    COMMENT Equivalence Class 104,107,109
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-030]
    COMMENT The function call the function StopProcessingFaultLog with index as 
    COMMENT index with index three and set the index flag with index one to FALSE when below conditions are satisfied :
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THREE and with HEX_ONE is not equal to ONE
    COMMENT 3. fault_active_flag of Fault log structure with index as index with index 
    COMMENT three is TRUE and index flag with index THREE is equal to TRUE else do nothing.
    COMMENT Equivalence Class 104,107,109
    COMMENT 
    COMMENT 
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0xFF,         ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = TRUE
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = TRUE
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Flt_id_count,           init= 0,            ev = 4
            
            VAR Flight_count,           init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_OK,         ev = init
            
            VAR U16_message_words[1],           init= 0,            ev = 28672
            
            VAR U16_message_words[2],           init= 0,            ev = 32         
        
        COMMENT OUTPUT SECTION:
        
            VAR Fault_log_structure[0].Fault_index,                   init = 0,       ev = 1      
            VAR Fault_log_structure[0].fault_type,          init = 0,       ev   = 1
            VAR Fault_log_structure[0].error_code,          init = 0,       ev   = 1
            VAR Fault_log_structure[0].Last_ft_record,      init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].fault_data_write,        init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].end_ft_transmission, init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[0], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[1], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[2], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[3], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[4], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[5], init = 0,       ev   = FALSE        
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT

        
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0xFF,         ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= TRUE,         ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_OK,         ev = init
        
        COMMENT OUTPUT SECTION:
        
            VAR Fault_log_structure[0].Last_ft_record,      init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].fault_data_write,        init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].end_ft_transmission, init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[0], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[1], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[2], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[3], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[4], init = 0,       ev   = FALSE
            VAR Fault_log_structure[0].param_data_write[5], init = 0,       ev   = FALSE            
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT     
        
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x00,         ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR U16_message_words[1],           init= 0,            ev = init
            
            VAR U16_message_words[2],           init= 0,            ev = init
            
            VAR Fault_log_structure[0].fault_active_flag,           init= TRUE,         ev = FALSE
        
        COMMENT OUTPUT SECTION:
        
                VAR Fault_log_structure[0].Fault_index,                     init = 0,       ev  = ZERO
                VAR Fault_log_structure[0].flight_number,                   init = 0,       ev  = ZERO
                VAR Fault_log_structure[0].start_duration,                  init = 0,       ev  = ZERO
                VAR Fault_log_structure[0].stop_duration,                   init = 0,       ev  = ZERO
                VAR Fault_log_structure[0].fault_type,                      init = 0,       ev  = NO_ERROR
                VAR Fault_log_structure[0].error_code,                      init = 0,       ev  = ZERO
                VAR Fault_log_structure[0].end_ft_transmission,             init = 0,       ev  = TRUE
                VAR Fault_log_structure[0].Last_ft_record,                  init = 0,       ev  = TRUE
                VAR Fault_log_structure[0].initial_fault_index,             init = 0,       ev  = FALSE
                VAR Fault_log_structure[0].param_data_present[0],           init = 0,       ev  = FALSE
                VAR Fault_log_structure[0].param_data_present[1],           init = 0,       ev  = FALSE
                VAR Fault_log_structure[0].param_data_present[2],           init = 0,       ev  = FALSE
                VAR Fault_log_structure[0].param_data_present[3],           init = 0,       ev  = FALSE
                VAR Fault_log_structure[0].param_data_present[4],           init = 0,       ev  = FALSE
                VAR Fault_log_structure[0].param_data_present[5],           init = 0,       ev  = FALSE
                VAR Fault_log_structure[0].fault_data_write,                init = 0,       ev  = TRUE      
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT         
        
    END TEST -- TEST 3

    
    TEST 5
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-007]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to ZERO
    COMMENT 2. parameter data right shifting to ZERO and with HEX_ONE  is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index zero is equal to FALSE.
    COMMENT 4. fault index is less than TEN and Stop log variable is equal to TRUE.
    COMMENT Equivalence Class 152,105,112,116 
    COMMENT 
    COMMENT 
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x1,          ev = init
            
            VAR status,         init= ZERO,         ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT 
        
    END TEST -- TEST 5  
    
    TEST 6
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-014]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to ONE and with HEX_ONE  is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index one is equal to FALSE.
    COMMENT 4. fault index is less than TEN and Stop log variable is equal to TRUE.
    COMMENT Equivalence Class 110,105,112,116 
    COMMENT 
    COMMENT 
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x2,          ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT 
        
    END TEST -- TEST 6  
    
    TEST 7
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-021]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWO and with HEX_ONE  is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index two is equal to FALSE.
    COMMENT 4. fault index is less than TEN and Stop log variable is equal to TRUE.
    COMMENT Equivalence Class 110,105,112,116 
    COMMENT 
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x4,          ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT 
        
    END TEST -- TEST 7  
    
    TEST 8
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-028]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THREE and with HEX_ONE  is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index three is equal to FALSE.
    COMMENT 4. fault index is less than TEN and Stop log variable is equal to TRUE.
    COMMENT Equivalence Class 110,105,112,116
    COMMENT 
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x8,          ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT 
        
    END TEST -- TEST 8  
    
    TEST 9
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-007]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to ZERO and with HEX_ONE  is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index zero is equal to FALSE.
    COMMENT 4. fault index is greater than TEN and Stop log variable is equal to FALSE.
    COMMENT Equivalence Class 110,105,112,115
    COMMENT 
    COMMENT </TD>   

    
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x1,          ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT 
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x1,          ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0..9].data_present,         init= TRUE,         ev = init
            
            VAR Fault_log_structure[0..9].initial_fault_index,          init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT     
        
    END TEST -- TEST 9      
    
    TEST 10
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-014]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to ONE and with HEX_ONE  is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index one is equal to FALSE.
    COMMENT 4. fault index is greater than TEN and Stop log variable is equal to FALSE.
    COMMENT Equivalence Class 110,105,112,115
    COMMENT 
    COMMENT </TD>   

    
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x2,          ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT 
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x2,          ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0..9].data_present,         init= TRUE,         ev = init
            
            VAR Fault_log_structure[0..9].initial_fault_index,          init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT     
        
    END TEST -- TEST 10 
    
    TEST 11
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-021]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to TWO and with HEX_ONE  is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index two is equal to FALSE.
    COMMENT 4. fault index is greater than TEN and Stop log variable is equal to FALSE.
    COMMENT Equivalence Class 110,105,112,115
    COMMENT 
    COMMENT </TD>   

    
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x4,          ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT 
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x4,          ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0..9].data_present,         init= TRUE,         ev = init
            
            VAR Fault_log_structure[0..9].initial_fault_index,          init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT     
        
    END TEST -- TEST 11 

    TEST 12
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-028]
    COMMENT The function do nothing when
    COMMENT 1. parameter status is equal to THREE
    COMMENT 2. parameter data right shifting to THREE and with HEX_ONE  is equal to ONE
    COMMENT 3. initial_fault_index of Fault log structure with index as index with 
    COMMENT index three is equal to FALSE.
    COMMENT 4. fault index is greater than TEN and Stop log variable is equal to FALSE.
    COMMENT Equivalence Class 110,105,112,115
    COMMENT 
    COMMENT </TD>   

    
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x8,          ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0].data_present,            init= FALSE,            ev = init
            
            VAR Fault_log_structure[0].initial_fault_index,         init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT 
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x8,          ev = init
            
            VAR status,         init= THREE,            ev = init
            
            VAR Fault_log_structure[0..9].data_present,         init= TRUE,         ev = init
            
            VAR Fault_log_structure[0..9].initial_fault_index,          init= FALSE,            ev = init
            
            VAR Port1_label_count,          init= 0,            ev = init
            
            VAR Fault_data[0].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[1].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[2].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[3].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[4].label_data.stat,          init= PARAM_OK,         ev = init
            VAR Fault_data[5].label_data.stat,          init= PARAM_ADVISORY,           ev = init
        
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT     
        
    END TEST -- TEST 12 
    
    TEST 13
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-031]
    COMMENT The function  do the following when parameter status is not equal to THREE and parameter status is not equal to ZERO.
    COMMENT - Set Arinc fault set to Arinc fault set or with FOUR.
    COMMENT - Set SSM ncd to SSM ncd or with FOUR when status is ONE.
    COMMENT - Set SSM ncd to SSM ncd and with 0xFB when status is not equal to ONE.
    COMMENT Equivalence Class 111
    COMMENT 
    COMMENT 
    COMMENT 
    COMMENT </TD>   

    
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x8,          ev = init
            
            VAR status,         init= 2,            ev = init
                    
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT 
        
    END TEST -- TEST 13 
    
    TEST 14
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdudispflmsscu-ProcessLmsScuProbeErr-DB-LLR-031]
    COMMENT The function  do the following when parameter status is not equal to THREE and parameter status is not equal to ZERO.
    COMMENT - Set SSM ncd to SSM ncd and with 0xFB when status is not equal to ONE.
    COMMENT Equivalence Class 111
    COMMENT 
    COMMENT </TD>   

    
    
        ELEMENT
        
        COMMENT INPUT SECTION:

            VAR data,           init= 0x8,          ev = init
            
            VAR status,         init= 1,            ev = init
                    
        COMMENT OUTPUT SECTION:
        
        COMMENT INPUT/OUTPUT SECTION:

        
        -- Stub Calls:
        SIMUL
                    
    
        END SIMUL

        -- Calling the Unit Under Test :        
        #ProcessLmsScuProbeErr(data, status);
        END ELEMENT 
        
    END TEST -- TEST 14 
    
END SERVICE -- ProcessLmsScuProbeErr


--------------------------------------------------------------------------------
-- Declaration of the service ScuRTDInit
--------------------------------------------------------------------------------
SERVICE ScuRTDInit
SERVICE_TYPE extern

    TEST 1
    FAMILY nominal
    
    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispflmsscu-ScuRTDInit-DB-LLR-001]
    COMMENT The function shall loop from index ONE till index is less than 
    COMMENT SCU_RTDMAX_PARAM and perform the following.
    COMMENT 1. Call the macro OS_ENTER_CRITICAL.
    COMMENT 2. Set usRTimer of Storage for Real Time Data with index as 
    COMMENT loop index count to RTD_MAX_INTERVAL_SCU.
    COMMENT 3. Call the macro OS_EXIT_CRITICAL.
    COMMENT Equivalence Class None
    COMMENT     
    COMMENT </TD>   

        ELEMENT
        
        COMMENT INPUT SECTION:
        
        --None

        COMMENT OUTPUT SECTION:     

            VAR U32_critical_sr,            init = 0,       ev = 1
        
        COMMENT INPUT/OUTPUT SECTION:

        --None      
        
        COMMENT Stub Calls:
        SIMUL   
             
            STUB SaveStatusReg()1
            STUB SaveStatusReg()1
            STUB RestoreStatusReg(1)
            STUB RestoreStatusReg(1)
            
        END SIMUL
        
        COMMENT Calling the Unit Under Test:            
        #ScuRTDInit();
        END ELEMENT

    END TEST -- TEST 1  

END SERVICE -- ScuRTDInit

















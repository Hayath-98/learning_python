HEADER hdudispfpbit,Source Code Ver :1.8,TestScript Ver : 1.2
--------------------------------------------------------------------------------
-- Author Name         : Kavya M 
--
-- File Name           :hdudispfpbit.ptu
--
-- Test Creation Date  : 30.10.2017
--
-- Tested Functions    : RamTest
--                       ProcessorTest
--                       SDRamTest
--                       PdiIntegrityCheck
--                       PbitCheck
--
-- Version History     :
--
--  TEST-VERSION        TEST-DATE               TESTER NAME        MODIFICATIONS
--  ------------        ---------               -----------        -------------
--     1.1              30.10.2017              Kavya M         created the ptu file
--     1.2              11.11.2017              Kavya M         updated the ptu as per PR1000171
-------------------------------------------------------------------------------
--
-- TESTED FILE INCLUDE DIRECTIVES 
--
--------------------------------------------------------------------------------

#/*============================================================================*/
#/* Module specific includes                                                   */
#/*============================================================================*/

##include "hdudispfpbit.h"        
##include "hdulibbasictypes.h" 
##include "hdudispfpara.h"        
##include "hdudispfpolygon2.h"    
##include "hdudispfcrc.h"

##define PDI_CRC               0xF4EA5EB2
##define BITMAP_CRC            0XA27C4CEA
##define BIT_SHIFT_BY_64       64
##define BIT_SHIFT_BY_16       16
##define BITMAP_SECTOR_OFFSET  6

--------------------------------------------------------------------------------
--
-- TESTED FILE DECLARATIONS 
--
--------------------------------------------------------------------------------

-- Declarations of the global variables of the tested file
        
    #extern T_SPDIFILE Pdi_file_code;
    #extern T_UINT16 Sdram_buffer_check[10];
    #extern T_UINT32 PTU_BMP_START_ADDR[200];
    #T_UINT16   U16_message_words[MAX_MESSAGE_WORDS];
    #T_UINT8    PTU_PAGE_NUM_BASE_ADDR[200];
    #T_UINT32   PTU_BMP_CRC_ADDR[100];
     
--Declaration of temporary variable

    --Variables declared to verify the stub CrcCalculate.
    #T_UINT32 PTU_u32_buffer[25],PTU_index;

--------------------------------------------------------------------------------

BEGIN

    COMMENT Author Name      : Kavya M
    COMMENT
    COMMENT File Name        : hdudispfpbit_1.ptu
    COMMENT
    COMMENT Tested Functions : RamTest
    COMMENT                    ProcessorTest
    COMMENT                    SDRamTest
    COMMENT                    PdiIntegrityCheck
    COMMENT                    PbitCheck
    COMMENT
    COMMENT Assumptions and Constraints
    COMMENT <AC>
    COMMENT
    COMMENT Assumption(s):
    COMMENT None
    COMMENT
    COMMENT Constraint(s):
    COMMENT 
    COMMENT 1. Header file 'hdudispfpbit.h' is modified for testing purpose
    COMMENT     /*Commented for testing purpose */
    COMMENT     /*#define PDI_ADDR 0x61410000*/
    COMMENT     /*Modified macro by stubbing hardware address for testing purpose*/
    COMMENT     T_UINT32                    PTU_PDI_ADDR[100];
    COMMENT     #define PDI_ADDR            &PTU_PDI_ADDR[0]    
    COMMENT 
    COMMENT 2. Header file 'hdudispfpbit.h' is modified for testing purpose 
    COMMENT     /*Commented for testing purpose*/
    COMMENT     /*#define PDI_SIZE 0x1A0000*/
    COMMENT     /*Macro value is reduced for the purpose of testing*/
    COMMENT     #define PDI_SIZE 16
    COMMENT
    COMMENT 3.Source file 'hdudispfpbit.c' is modified for testing purpose  
    COMMENT     /*Commented for testing purpose*/
    COMMENT     /*#define BMP_CRC_ADDR          0x6281FFFC*/
    COMMENT     /*Modified macro by stubbing hardware address for testing purpose*/
    COMMENT     T_UINT32                    PTU_BMP_CRC_ADDR[100];    
    COMMENT     #define BMP_CRC_ADDR (T_UINT32 *)PTU_BMP_CRC_ADDR
    COMMENT  
    COMMENT 4.Source file 'hdudispfpbit.c' is modified for testing purpose  
    COMMENT     /*Commented for testing purpose*/
    COMMENT     /*#define BMP_START_ADDR        0x60000000*/
    COMMENT     /*Modified macro by stubbing hardware address for testing purpose*/
    COMMENT     T_UINT32 PTU_BMP_START_ADDR[200];    
    COMMENT     #define BMP_START_ADDR        &PTU_BMP_START_ADDR[0]
    COMMENT 
    COMMENT 5. Source file 'hdudispfpbit.c' is modified for testing purpose 
    COMMENT     /*Commented for testing purpose*/
    COMMENT     /*#define BITMAP_SECTOR_OFFSET  0x200000*/
    COMMENT    /*Macro value is reduced for the purpose of testing*/
    COMMENT     #define BITMAP_SECTOR_OFFSET 6
    COMMENT
    COMMENT 6. Header file 'hdudispfpdidata.h' is modified for testing purpose
    COMMENT     /*Commented for testing purpose */
    COMMENT     /*#define PAGE_NUM_BASE_ADDR          0x628A0000UL*/  
    COMMENT     /*Modified macro by stubbing hardware address for testing purpose*/
    COMMENT     T_UINT8 PTU_PAGE_NUM_BASE_ADDR[200];;
    COMMENT     #define PAGE_NUM_BASE_ADDR          &PTU_PAGE_NUM_BASE_ADDR[0]    
    COMMENT
    COMMENT 7. Header file 'hdudispfpdidata.h' is modified for testing purpose
    COMMENT     /*Commented for testing purpose*/
    COMMENT     /*#define SECTOR_SIZE               0x20000U*/
    COMMENT     /*Macro value is reduced for the purpose of testing*/
    COMMENT      #define SECTOR_SIZE                 2 
    COMMENT </AC>
    
    COMMENT Equivalence Class Description
    COMMENT <ECD>
    COMMENT
    COMMENT Valid Class(es)
    COMMENT Class 1     
    COMMENT The function 'PbitCheck' calls the function 'ProcessorTest'.
    COMMENT 
    COMMENT Class 2 
    COMMENT The function 'PbitCheck' calls the function 'RamTest'.
    COMMENT 
    COMMENT Class 3 
    COMMENT The function 'PbitCheck' calls the function 'SDRamTest'.
    COMMENT 
    COMMENT Class 4 
    COMMENT The function 'PbitCheck' calls the function 'PdiIntegrityCheck'.
    COMMENT 
    COMMENT Class 5 
    COMMENT The function 'ProcessorTest' calls the function 'AluTest'.
    COMMENT     
    COMMENT Class 6
    COMMENT The  function 'PdiIntegrityCheck' calls the function 'CrcCalculate'
    COMMENT 
    COMMENT Class 7
    COMMENT In function 'PdiIntegrityCheck' CRC(stored in FLASH) and calculated CRC are not equal
    COMMENT
    COMMENT Class 8
    COMMENT In function 'PdiIntegrityCheck' CRC(stored in FLASH) and calculated CRC are equal
    COMMENT 
    COMMENT Class 9
    COMMENT In function 'SDRamTest' ,Sdram_buffer_check location is equal to CHECK_5A5A
    COMMENT
    COMMENT Class 10
    COMMENT In function 'SDRamTest' ,Sdram_buffer_check location is equal to CHECK_A5A5
    COMMENT
    COMMENT Class 11
    COMMENT In function 'RamTest' ,Sram_buffer_check location is equal to CHECK_5A5A
    COMMENT
    COMMENT Class 12
    COMMENT In function 'RamTest' ,Sram_buffer_check location is equal to CHECK_A5A5
    COMMENT
    COMMENT Class 16
    COMMENT In function 'ProcessorTest' the value of 'Proc_test_res' is equal to 'FAILED'
    COMMENT
    COMMENT Class 19
    COMMENT In function 'PbitCheck' The value of 'PDI CRC'  is not equal to macro 'PDI_CRC'
    COMMENT
    COMMENT Class 20
    COMMENT In function 'PbitCheck' The value of 'PDI CRC'  is equal to macro 'PDI_CRC'
    COMMENT
    COMMENT Class 21
    COMMENT In function 'PbitCheck' BITMAP CRC is not equal to macro 'BITMAP_CRC'
    COMMENT
    COMMENT Class 13
    COMMENT In function 'RamTest'Sram_buffer_check location is NOT equal to CHECK_5A5A
    COMMENT 
    COMMENT Class 14
    COMMENT In function 'RamTest'Sram_buffer_check location is NOT equal to CHECK_A5A5
    COMMENT 
    COMMENT Class 15
    COMMENT In function 'ProcessorTest' the value of 'Proc_test_res' is not equal to 'FAILED'
    COMMENT
    COMMENT Class 17
    COMMENT In function 'SDRamTest'Sram_buffer_check location is NOT equal to CHECK_5A5A
    COMMENT
    COMMENT Class 18
    COMMENT In function 'SDRamTest'Sram_buffer_check location is NOT equal to CHECK_A5A5
    COMMENT
    COMMENT Class 22
    COMMENT In function 'PdiIntegrityCheck',page counter is lesser than TWENTY.
    COMMENT
    COMMENT Class 23
    COMMENT In function 'PdiIntegrityCheck',page counter is greater than TWENTY. 
    COMMENT
    COMMENT Class 24
    COMMENT In function 'PdiIntegrityCheck',page counter is equal to TWENTY.     
    COMMENT
    COMMENT Class 25
    COMMENT In function 'PdiIntegrityCheck', page number  is lesser than TWENTY.
    COMMENT
    COMMENT Class 26
    COMMENT In function 'PdiIntegrityCheck', page number  is greater than TWENTY. 
    COMMENT
    COMMENT Class 27
    COMMENT In function 'PdiIntegrityCheck', page number  is equal to TWENTY.
    COMMENT
    COMMENT Invalid Class(es)
    COMMENT None
    COMMENT </ECD>
--------------------------------------------------------------------------------
--
-- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
--
--------------------------------------------------------------------------------

DEFINE STUB hdudispfpbit_c

    --Variable u32_buffer is made as _no since hardware address of a variable cannot be verified.
    #T_UINT32 CrcCalculate(T_UINT32  _no *u32_buffer, T_UINT32  _in u32_buffer_length)
    #{
    # PTU_u32_buffer[PTU_index++]= *u32_buffer;
    #}
    
    #void AluTest();
  
END DEFINE

--------------------------------------------------------------------------------
--
-- ENVIRONMENTS DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- TESTED FILE ENVIRONEMENT
--------------------------------------------------------------------------------

-- Environment of the file hdudispfpbit_c
ENVIRONMENT ENV_hdudispfpbit_c
 
    VAR Proc_test_res,              init = 0,                   ev = init
    
    ARRAY Sram_buffer_check,        init = { others => 0 },     ev = init
    
    ARRAY Sdram_buffer_check,       init = { others => 0 },     ev = init
    
    ARRAY PTU_PDI_ADDR,             init = {others=>1},         ev = init
    
    VAR Pbit_test_result,           init = 0,                   ev = init
        
END ENVIRONMENT -- ENV_hdudispfpbit_c

USE ENV_hdudispfpbit_c

--------------------------------------------------------------------------------
--
-- SERVICES DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Declaration of the service PdiIntegrityCheck
--------------------------------------------------------------------------------
SERVICE PdiIntegrityCheck
SERVICE_TYPE extern

TEST 1
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfpbit-PdiIntegrityCheck-DB-LLR-001]
    COMMENT The function calls 'CrcCalculate' with parameters load address
    COMMENT (u32LoadAddr of Pdi_file_code) and load size(u32LoadSize of Pdi_file_code 
    COMMENT divided by four and subtracted by one).
    COMMENT Eqvivalence class 6
    COMMENT 
    COMMENT [hdudispfpbit-PdiIntegrityCheck-DB-LLR-002]
    COMMENT The function stores content of (u32LoadAddr of Pdi_file_code added with u32LoadSize
    COMMENT of Pdi_file_code subtracted by four) to 32 bit CRC value(actual CRC which is stored in FLASH).
    COMMENT Equivalence class None
    COMMENT
    COMMENT [hdudispfpbit-PdiIntegrityCheck-DB-LLR-003]
    COMMENT The function Do the following
    COMMENT set Error_status.pdi_test_fail as TRUE ,
    COMMENT set Pbit_Test_result as 1 and 
    COMMENT set U16_message_words of index zero to U16_message_words of index zero logical OR with BIT_SHIFT_BY_32
    COMMENT since actual CRC(stored in FLASH) and calculated CRC are not equal.
    COMMENT Equivalence class 7
    COMMENT 
    COMMENT [hdudispfpbit-PdiIntegrityCheck-DB-LLR-004]
    COMMENT The function loops till page counter is less than TWENTY and
    COMMENT does the following:
    COMMENT  a) Sets page number to content present at location which is sum of 
    COMMENT    (page counter multiplied by SECTOR_SIZE added with PAGE_NUM_BASE_ADDR) and two
    COMMENT  b) Does nothing when page number is equal to TWENTY.
    COMMENT Equivalence Class 27
    COMMENT </TD>
           
    ELEMENT
    
        COMMENT INPUT SECTION:
        
            --  Initialising the PDI address array
            ARRAY PTU_PDI_ADDR,             init = {others=>10},            ev = init
            
            -- Initialising the pdi file code
            STRUCTURE Pdi_file_code,        init = { u32LoadAddr =>(T_UINT32) PTU_PDI_ADDR, 
            &                               u32LoadSize => 16 },            ev = init
             
            --Sets the page number value
            ARRAY PTU_PAGE_NUM_BASE_ADDR[0..199], 
            &                               init = 20,                      ev = init

            
        COMMENT INPUT/OUTPUT SECTION:
        
            -- Index value of PTU_u32_buffer
            VAR PTU_index,                  init = 0,                       ev = 1
            
        COMMENT OUTPUT SECTION: 
        
            -- Expecting pdit test results using Pbit_test_result
            VAR Pbit_test_result,           init = 0,                       ev = 1
            
            -- Expecting the message word using the variable U16_message_words
            VAR U16_message_words[0],       init = 0,                       ev = BIT_SHIFT_BY_64
            
            -- Parameter u32_buffer of CrcCalculate is expected using PTU_u32_buffer
            VAR PTU_u32_buffer[0],          init = 0,                       ev = 10            
        
         -- Stub Calls :
        SIMUL
        
            --Calculates the CRC value
            STUB CrcCalculate(((Pdi_file_code.u32LoadSize)/4)-1) 5
               
        END SIMUL
        
            -- Calling the Unit Under Test :
        #PdiIntegrityCheck();
                
        END ELEMENT

END TEST -- TEST 1

TEST 2
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD>    
    COMMENT [hdudispfpbit-PdiIntegrityCheck-DB-LLR-001]
    COMMENT The function calls 'CrcCalculate' with parameters load address
    COMMENT(u32LoadAddr of Pdi_file_code) and load size(u32LoadSize of Pdi_file_code 
    COMMENT divided by four and subtracted by one).
    COMMENT Eqvivalence class 6
    COMMENT 
    COMMENT [hdudispfpbit-PdiIntegrityCheck-DB-LLR-002]
    COMMENT The function stores content of (u32LoadAddr of Pdi_file_code added with u32LoadSize
    COMMENT of Pdi_file_code subtracted by four) to 32 bit CRC value(actual CRC which is stored in FLASH).
    COMMENT Equivalence class None
    COMMENT
    COMMENT[hdudispfpbit-PdiIntegrityCheck-DB-LLR-003]
    COMMENT The function Does the following
    COMMENT set Error_status.pdi_test_fail as TRUE ,
    COMMENT set Pbit_Test_result as 1 and 
    COMMENT set U16_message_words of index zero to U16_message_words of index zero logical OR with BIT_SHIFT_BY_32
    COMMENT since actual CRC(stored in FLASH) and calculated CRC are not equal.
    COMMENT Equivalence class 8
    COMMENT 
    COMMENT [hdudispfpbit-PdiIntegrityCheck-DB-LLR-004]
    COMMENT The function loops till page counter is less than TWENTY and
    COMMENT does the following:
    COMMENT  a) Sets page number to content present at location which is sum of 
    COMMENT    (page counter multiplied by SECTOR_SIZE added with PAGE_NUM_BASE_ADDR) and two
    COMMENT  b) Does nothing when page number is greater than TWENTY.
    COMMENT Equivalence Class 26        
    COMMENT </TD>
        
    ELEMENT

        COMMENT INPUT SECTION:
        
            --  Initialising the PDI address array
            ARRAY PTU_PDI_ADDR,             init = {others=>10},            ev = init

            -- Initialising the pdi file code
            STRUCTURE Pdi_file_code,        init = { u32LoadAddr =>(T_UINT32) PTU_PDI_ADDR, 
            &                               u32LoadSize => 16 },            ev = init

            --Sets the page number value
            ARRAY PTU_PAGE_NUM_BASE_ADDR[0..199], 
            &                               init = 21,                      ev = init


        COMMENT INPUT/OUTPUT SECTION:

            -- Index value of PTU_u32_buffer
            VAR PTU_index,                  init = 0,                       ev = 1

        COMMENT OUTPUT SECTION: 

            -- Parameter u32_buffer of CrcCalculate is expected using PTU_u32_buffer
            VAR PTU_u32_buffer[0],          init = 0,                       ev = 10    

         -- Stub Calls :
        SIMUL
                --Calling the stub CrcCalculate
            STUB CrcCalculate(((Pdi_file_code.u32LoadSize)/4)-1) 10

        END SIMUL

    -- Calling the Unit Under Test :
    #PdiIntegrityCheck();

    END ELEMENT

END TEST -- TEST 2
    
TEST 3
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD>    
    COMMENT [hdudispfpbit-PdiIntegrityCheck-DB-LLR-004]
    COMMENT The function loops from till page counter is less than TWENTY 
    COMMENT and does the following
    COMMENT a)Sets page number to content present at location which is sum of (page counter multiplied  
    COMMENT by SECTOR_SIZE added with PAGE_NUM_BASE_ADDR) and two.
    COMMENT b)Does the following when page number is less than TWENTY
    COMMENT - Calculates CRC value by calling 'CrcCalculate' function with parameter ((BMP_START_ADDR added 
    COMMENT   with page number multiplied by BITMAP_SECTOR_OFFSET) and ((BITMAP_SECTOR_OFFSET divided by four)
    COMMENT   and subtracted by one)) and store it to bitmap CRC value.
    COMMENT - Stores content of ((sum of BMP_START_ADDR, page number and BITMAP_CRC_OFFSET) added with 
    COMMENT   BITMAP_CRC_OFFSET and subtracted by four) to 32 bit CRC value(actual CRC which is stored in FLASH).
    COMMENT - Does nothing when actual CRC(stored in FLASH) and calculated CRC are equal 
    COMMENT c) increment the page counter by one.
    COMMENT For iteration 20 -  page counter is equal to TWENTY,hence the loop is terminated.  
    COMMENT The loop is executed in this test case for two or more times.
    COMMENT Equivalence Class 6,8,22,24
    COMMENT </TD>
           
    ELEMENT
    
        COMMENT INPUT SECTION:
        
            --  Initialising the PDI address array
            ARRAY PTU_PDI_ADDR,                 init = {others=>10},        ev = init

            -- Initialising the pdi file code
            STRUCTURE Pdi_file_code,            init = { u32LoadAddr =>(T_UINT32) PTU_PDI_ADDR, 
            &                                   u32LoadSize => 16 },        ev = init

            --Sets the page number value
            ARRAY PTU_PAGE_NUM_BASE_ADDR[0..199], 
            &                                   init = 0,                   ev = init
            
            --Sets the value of actual bitmap CRC 
            ARRAY PTU_BMP_START_ADDR[0..199],   init = 0xFFFFFFFF,          ev = init
                
            
        COMMENT INPUT/OUTPUT SECTION:
        
            -- Index value of PTU_u32_buffer
            VAR PTU_index,                  init = 0,                       ev = 21
            
        COMMENT OUTPUT SECTION: 
        
            --  Expecting pdit test results using Pbit_test_result
            VAR Pbit_test_result,           init = 0,                       ev = 1
            
            -- Expecting the message word using the variable U16_message_words
            VAR U16_message_words[0],       init = 0,                       ev = BIT_SHIFT_BY_64
            
            -- Parameter u32_buffer of CrcCalculate is expected using PTU_u32_buffer
            VAR PTU_u32_buffer[0],          init = 0,                       ev = 10                    

            VAR PTU_u32_buffer[1..20],      init = 0,                       ev = 0xFFFFFFFF  
            
        -- Stub Calls :        
        SIMUL
            --Calculates the CRC value
            STUB CrcCalculate(((Pdi_file_code.u32LoadSize)/4)-1) 5
            STUB CrcCalculate 2..21 =>(((T_UINT32)((BITMAP_SECTOR_OFFSET/(T_UINT32)4)-(T_UINT32)1))) 0xFFFFFFFF
            
        END SIMUL
        
    -- Calling the Unit Under Test :
    #PdiIntegrityCheck();

    END ELEMENT

END TEST -- TEST 3 

TEST 4
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD>    
    COMMENT [hdudispfpbit-PdiIntegrityCheck-DB-LLR-004]
    COMMENT The function loops from till page counter is less than TWENTY 
    COMMENT and does the following
    COMMENT a)Sets page number to content present at location which is sum of (page counter multiplied  
    COMMENT by SECTOR_SIZE added with PAGE_NUM_BASE_ADDR) and two.
    COMMENT b)Does the following when page number is less than TWENTY
    COMMENT - Calculates CRC value by calling 'CrcCalculate' function with parameter ((BMP_START_ADDR added 
    COMMENT   with page number multiplied by BITMAP_SECTOR_OFFSET) and ((BITMAP_SECTOR_OFFSET divided by four)
    COMMENT   and subtracted by one)) and store it to bitmap CRC value.
    COMMENT - Stores content of ((sum of BMP_START_ADDR, page number and BITMAP_CRC_OFFSET) added with 
    COMMENT   BITMAP_CRC_OFFSET and subtracted by four) to 32 bit CRC value(actual CRC which is stored in FLASH).
    COMMENT - Does following when actual CRC(stored in FLASH) and calculated CRC are not equal 
    COMMENT 1. set Pbit_Test_result as one
    COMMENT 2. set U16_message_words of index one to U16_message_words of index one logical OR with THIRTY_TWO
    COMMENT 3. break the loop
    COMMENT The loop is executed in this test case for one time.    
    COMMENT Equivalence Class 6,7,22
    COMMENT </TD>
           
    ELEMENT
    
        COMMENT INPUT SECTION:
        
            --  Initialising the PDI address array
            ARRAY PTU_PDI_ADDR,                 init = {others=>5},         ev = init

            -- Initialising the pdi file code
            STRUCTURE Pdi_file_code,            init = { u32LoadAddr =>(T_UINT32) PTU_PDI_ADDR, 
            &                                   u32LoadSize => 16 },        ev = init

            --Sets the page number value
            ARRAY PTU_PAGE_NUM_BASE_ADDR[0..199], 
            &                                   init = 10,                  ev = init
            
            --Sets the value of actual bitmap CRC 
            ARRAY PTU_BMP_START_ADDR[0..199],   init = 0xFFF,               ev = init
                
            
        COMMENT INPUT/OUTPUT SECTION:
        
            -- Index value of PTU_u32_buffer
            VAR PTU_index,                  init = 0,                       ev = 2
            
        COMMENT OUTPUT SECTION: 
        
            --  Expecting pdit test results using Pbit_test_result
            VAR Pbit_test_result,           init= 0,                        ev = 1
            
            -- Expecting the message word using the variable U16_message_words
            VAR U16_message_words[1],       init = 0,                       ev = THIRTY_TWO

            -- Parameter u32_buffer of CrcCalculate is expected using PTU_u32_buffer
            VAR PTU_u32_buffer[0],          init = 0,                       ev = 5                    

            VAR PTU_u32_buffer[1],          init = 0,                       ev = 0xFFF  
            
         -- Stub Calls :       
        SIMUL
       
            --Calculates the CRC value
            STUB CrcCalculate(((Pdi_file_code.u32LoadSize)/4)-1) 5
            STUB CrcCalculate(((T_UINT32)((BITMAP_SECTOR_OFFSET/(T_UINT32)4)-(T_UINT32)1)))0xFFFFFF
               
        END SIMUL
        
    -- Calling the Unit Under Test :
    #PdiIntegrityCheck();

    END ELEMENT

END TEST -- TEST 4

END SERVICE -- PdiIntegrityCheck

--------------------------------------------------------------------------------
-- Declaration of the service RamTest
--------------------------------------------------------------------------------
SERVICE RamTest
SERVICE_TYPE extern

TEST 1
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfpbit-RamTest-DB-LLR-001]
    COMMENT The function do the following for each Sram_buffer_check location(ZERO to RAM_SIZE)
    COMMENT Set Sram_buffer_check location to CHECK_5A5A.
    COMMENT Do the follwing since, Sram_buffer_check location is equal to CHECK_5A5A
    COMMENT set Sram_buffer_check location to CHECK_A5A5.
    COMMENT Eqvivalence Class 12,11
    COMMENT </TD>

    ELEMENT

        COMMENT INPUT SECTION:
        
            --None

        COMMENT INPUT/OUTPUT SECTION:

            --initialise sram buffer check variable
            ARRAY Sram_buffer_check,            init = { others => CHECK_5A5A},
            &                                    ev = { others => CHECK_A5A5}

        COMMENT OUTPUT SECTION:
        
            --None
        
        -- Stub Calls :
        SIMUL
           
           --None
               
        END SIMUL            

        -- Calling the Unit Under Test :
        #RamTest();
        
    END ELEMENT

END TEST -- TEST 1
    
-- TEST 2
-- FAMILY nominal
-- 
--  COMMENT Test Description
--  COMMENT <TD>
--  COMMENT [hdudispfpbit-RamTest-DB-LLR-001]
--  COMMENT The function does the following for each Sram_buffer_check location(ZERO to RAM_SIZE)
--  COMMENT Set Sram_buffer_check location is not equal to CHECK_5A5A.
--  COMMENT Eqvivalence Class 13
--  COMMENT </TD>
-- 
--  ELEMENT
-- 
--      COMMENT INPUT SECTION:
--      
--          --initialise sram buffer check variable
--          ARRAY Sram_buffer_check,            init = { others =>0} ,    ev = init
-- 
--      COMMENT INPUT/OUTPUT SECTION:
-- 
--          --None
-- 
--      COMMENT OUTPUT SECTION:
-- 
--          --initialise message words
--          VAR U16_message_words[0],       init = 0,                     ev = BIT_SHIFT_BY_8192
--          
--          --Initialising test result variable.
--          VAR Pbit_test_result,           init = 0,                     ev = 1
-- 
--      -- Stub Calls :
--      SIMUL
-- 
--      --No Stubs
-- 
--      END SIMUL  
-- 
--  -- Calling the Unit Under Test :
--  #RamTest();
-- 
--  END ELEMENT
-- 
-- END TEST -- TEST 2
-- 
-- TEST 3
-- FAMILY nominal
-- 
--  COMMENT Test Description
--  COMMENT <TD>
--  COMMENT [hdudispfpbit-RamTest-DB-LLR-001]
--  COMMENT The function do the following for each Sram_buffer_check location(ZERO to RAM_SIZE)
--  COMMENT Set Sram_buffer_check location is  equal to CHECK_5A5A.
--  COMMENT Also do the following since, Sram_buffer_check location is not equal to CHECK_5A5A
--  COMMENT set Sram_buffer_check location to CHECK_A5A5.
--  COMMENT Eqvivalence Class 13,14
--  COMMENT </TD>
-- 
--  ELEMENT
-- 
--      COMMENT INPUT SECTION:
-- 
--          --initialise sram buffer check variable
--          ARRAY Sram_buffer_check,        init = { others =>0} ,      ev = init   
-- 
--      COMMENT INPUT/OUTPUT SECTION:
-- 
--          --None
-- 
--      COMMENT OUTPUT SECTION:
-- 
--          --initialise message words
--          VAR U16_message_words[0],       init = 0,                   ev = BIT_SHIFT_BY_8192
-- 
--          --Initialising test result variable.
--          VAR Pbit_test_result,           init = 0,                   ev = 1
-- 
--      -- Stub Calls :
--      SIMUL
-- 
--      --No Stubs
-- 
--      END SIMUL  
-- 
--  -- Calling the Unit Under Test :
--  #RamTest();
-- 
--  END ELEMENT
-- 
-- END TEST -- TEST 3

END SERVICE -- RamTest
--------------------------------------------------------------------------------
-- Declaration of the service SDRamTest
--------------------------------------------------------------------------------
SERVICE SDRamTest
SERVICE_TYPE extern

TEST 1
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfpbit-SDRamTest-LLR-001]
    COMMENT The function does the following for each Sdram_buffer_check location(ZERO to RAM_SIZE)
    COMMENT 1.Set Sdram_buffer_check location to CHECK_5A5A.
    COMMENT 2.Do the following when Sdram_buffer_check location is equal to CHECK_5A5A
    COMMENT 3.set Sdram_buffer_check location to CHECK_A5A5.
    COMMENT since Sdram_buffer_check location is equal to CHECK_A5A5 does nothing.
    COMMENT Eqvivalence class 9,10
    COMMENT </TD>

    ELEMENT
    
        COMMENT INPUT SECTION:

            --None

        COMMENT INPUT/OUTPUT SECTION:

            --initialise sram buffer check variable
            ARRAY Sdram_buffer_check,       init = { others => CHECK_5A5A },    
            &                               ev = { others => CHECK_A5A5 }

        COMMENT OUTPUT SECTION:

            --None

        -- Stub Calls :
        SIMUL

            --No stub calls

        END SIMUL

        -- Calling the Unit Under Test :
        #SDRamTest();

    END ELEMENT

END TEST -- TEST 1

-- TEST 2
-- FAMILY nominal
--
--  COMMENT Test Description
--  COMMENT <TD>
--  COMMENT [hdudispfpbit-SDRamTest-DB-LLR-001]
--  COMMENT The function does the following for each Sdram_buffer_check location
--  COMMENT (ZERO to RAM_SIZE).Set Sdram_buffer_check location is not equal to CHECK_5A5A.
--  COMMENT Eqvivalence Class 17
--  COMMENT </TD>
--
--  ELEMENT
--
--      COMMENT INPUT SECTION:
--
--          --Initialise sdram buffer check variable
--          ARRAY Sdram_buffer_check,      init = { others =>0} ,   ev = init
--
--      COMMENT INPUT/OUTPUT SECTION:
--
--          --None
--
--      COMMENT OUTPUT SECTION:
--
--          --Initialise message words
--          VAR U16_message_words[0],       init = 0,             ev = BIT_SHIFT_BY_8
--
--          --Initialising test result variable.
--          VAR Pbit_test_result,           init = 0,             ev = 1
--
--        -- Stub Calls :
--        SIMUL
--           
--           --No Stubs
--               
--        END SIMUL  
--
--  --Calling the Unit Under Test:
--  #SDRamTest();
--
--  END ELEMENT
--
-- END TEST -- TEST 2
--
-- TEST 3
-- FAMILY nominal
--
--  COMMENT Test Description
--  COMMENT <TD>
--  COMMENT [hdudispfpbit-SDRamTest-DB-LLR-001]
--  COMMENT The function does the following for each Sram_buffer_check location
--  COMMENT (ZERO to RAM_SIZE) Set Sdram_buffer_check location is  equal to CHECK_5A5A.
--  COMMENT Does the follwing since, Sdram_buffer_check location is not equal to CHECK_A5A5
--  COMMENT set Sdram_buffer_check location to CHECK_A5A5.
--  COMMENT Eqvivalence Class 18
--  COMMENT </TD>
--
--  ELEMENT
--
--      COMMENT INPUT SECTION:
--
--          --Initialise sdram buffer check variable
--          ARRAY Sdram_buffer_check,       init = { others =>0},           ev = init   
--
--      COMMENT INPUT/OUTPUT SECTION:
--          
--          --None
--
--      COMMENT OUTPUT SECTION:
--
--          --Initialise message words
--          VAR U16_message_words[0],       init = 0,                       ev = BIT_SHIFT_BY_8
--
--          --Initialising test result variable.
--          VAR Pbit_test_result,           init = 0,                       ev = 1
--
--        -- Stub Calls :
--        SIMUL
--           
--           --No Stubs
--               
--        END SIMUL  
--
--  --Calling the Unit Under Test:
--  #SDRamTest();
--
--  END ELEMENT
--
-- END TEST -- TEST 3

END SERVICE -- SDRamTest

--------------------------------------------------------------------------------
-- Declaration of the service ProcessorTest
--------------------------------------------------------------------------------
SERVICE ProcessorTest
SERVICE_TYPE extern

TEST 1
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfpbit-ProcessorTest-LLR-001]
    COMMENT The function calls 'AluTest' to perform the arithmetical and logical operations
    COMMENT on registers.Sets U16_message_words[0] Bitwise OR  with 1 and itself
    COMMENT and sets Pbit_test_result to 1.
    COMMENT Eqvivalence class 5,16
    COMMENT </TD>

    ELEMENT

        COMMENT  INPUT SECTION:
        
            --None

        COMMENT  INPUT/OUTPUT SECTION:

            --holds global value 
            VAR Proc_test_res,              init = PASSED ,           ev = FAILED


        COMMENT  OUTPUT SECTION:

            --Initializing the message words
            VAR U16_message_words[0],       init = 0 ,                ev = BIT_SHIFT_BY_16

            --Initialising the test result pdit 
            VAR Pbit_test_result,           init = 0,                 ev = 1

        -- Stub Calls :
        SIMUL

            STUB    AluTest()

        END SIMUL

    -- Calling the Unit Under Test :
    #ProcessorTest();
    
    END ELEMENT

END TEST -- TEST 1

TEST 2
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfpbit-ProcessorTest-LLR-001]
    COMMENT The function calls 'AluTest' to perform the arithmetical and logical operations on registers.
    COMMENT 'Proc_test_res' is not equal to 'FAILED' hence does nothing
    COMMENT Eqvivalence class 5,15
    COMMENT </TD>

    ELEMENT

        COMMENT  INPUT SECTION:
        
            --holds the value of process test result.
            VAR Proc_test_res,              init = FAILED ,          ev = init

        COMMENT  INPUT/OUTPUT SECTION:
        
            --None
                    
        COMMENT  OUTPUT SECTION:
        
            --holds the value of message words
            VAR U16_message_words[0],       init = 0 ,                ev = BIT_SHIFT_BY_16

            --holds the value of test results
            VAR Pbit_test_result,           init = 0,                 ev = 1

        -- Stub Calls :
        SIMUL

            STUB    AluTest()

        END SIMUL

    -- Calling the Unit Under Test :
    #ProcessorTest();
    
    END ELEMENT

END TEST -- TEST 2
   
END SERVICE -- ProcessorTest


--------------------------------------------------------------------------------
-- Declaration of the service PbitCheck
--------------------------------------------------------------------------------
SERVICE PbitCheck
SERVICE_TYPE extern

TEST 1
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD>
    COMMENT [hdudispfpbit-PbitCheck-LLR-001]
    COMMENT The function 'PbitCheck' calls the following functions.
    COMMENT - ProcessorTest
    COMMENT - RamTest
    COMMENT - SDRamTest
    COMMENT - PdiIntegrityCheck.
    COMMENT Eqvivalence class 1,2,3,4
    COMMENT 
    COMMENT [hdudispfpbit-PbitCheck-DB-LLR-002]
    COMMENT The function does the following when  'PDI CRC'  is not equal to 'PDI_CRC'
    COMMENT 1.Set PDI CRC to content of sum of u32LoadAddr of Pdi_file_code and u32LoadSize of
    COMMENT Pdi_file_code subtracted by FOUR.
    COMMENT 2.Set Pbit_test_result and 4th bit of U16_message_words with index one to ONE 
    COMMENT Equivalence Class 19
    COMMENT
    COMMENT [hdudispfpbit-PbitCheck-DB-LLR-003]
    COMMENT The function does the following:
    COMMENT 1.Set BITMAP CRC to content at address BMP_CRC_ADDR.
    COMMENT 2.Set Pbit_test_result and 5th bit of U16_message_words with index one to ONE 
    COMMENT since BITMAP CRC is not equal to BITMAP_CRC.
    COMMENT Equivalence Class 21
    COMMENT </TD>

    ELEMENT
    
        COMMENT INPUT SECTION:
    
              --Initalising the pdi address.
            ARRAY PTU_PDI_ADDR,             init={others=>10},                         ev = init

            --Initialising the sturcture Pdi_file_code.
            STRUCTURE Pdi_file_code,        init = { u32LoadAddr =>(T_UINT32) PTU_PDI_ADDR,        
            &                                      u32LoadSize => 16 },                ev = init

            --Initialising the crc address of BMP.
            VAR PTU_BMP_CRC_ADDR,           init={others=>0} ,                         ev = init     


            --Sets the page number value
            ARRAY PTU_PAGE_NUM_BASE_ADDR[0..199], 
            &                               init = 21,                                 ev = init
            
        COMMENT INPUT/OUTPUT  SECTION :
    
            -- Index value of PTU_u32_buffer
            VAR PTU_index,                          init = 0,                   ev = 1
        
        COMMENT OUTPUT SECTION :
        
            --Initialising  Sram buffer check array
            ARRAY Sram_buffer_check,                init = { others => 0 },     ev = 0xA5A5

            --Initialising  Sdram buffer check array
            ARRAY Sdram_buffer_check,               init = { others => 0 },     ev = 0xA5A5

            --Initialising test result pdit
            VAR Pbit_test_result,                   init = 0,                   ev = 1

            --Initialising the message word
            VAR U16_message_words[0],               init = 0,                   ev = 80

            -- Parameter u32_buffer of CrcCalculate is expected using PTU_u32_buffer
            VAR PTU_u32_buffer[0],                  init = 0,                   ev = 10     

        -- Stub Calls :
        SIMUL

            --Performs Arithematic operations
            STUB AluTest()  

            --Calculates the CRC value
            STUB CrcCalculate(((Pdi_file_code.u32LoadSize)/4)-1) 16

        END SIMUL

        -- Calling the Unit Under Test :
        #PbitCheck();
        
    END ELEMENT

END TEST -- TEST 1

END SERVICE -- PbitCheck


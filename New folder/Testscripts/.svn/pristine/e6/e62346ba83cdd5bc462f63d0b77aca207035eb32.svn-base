HEADER hdulibstm32f7xxit,Source Code Ver : 1.5,TestScript Ver : 1.4
--------------------------------------------------------------------------------
-- Author Name         : Santosh Mithari
--
-- File Name           : hdulibstm32f7xxit.ptu
--
-- Test Creation Date  : 25.10.2017
--
-- Tested Functions    : UsageFaultHandler
--                       SvcHandler
--                       PendSVHandler
--                       HardFaultHandler
--                       NmiHandler
--                       MemManasysTickgeHandler
--                       DebugMonHandler
--                       BusFaultHandler
--						 ITInterrupsInit
--						 Dma2Stream0IrqHandler
--						 LtdcIrqHandler
--                       
--
-- Version History     :
--
-- TEST-VERSION         TEST-DATE         TESTER NAME           MODIFICATIONS
-- ------------        -----------        -----------           -------------
--    1.1               25.10.2017        Santosh Mithari       Created the PTU file.
--    1.2               10.11.2017        Santosh Mithari       Updated as per #PR100171
--    1.3               14.11.2017        Santosh Mithari       Updated as per #PR100171
--	  1.4			   03.10.2020          Harshitha R        Updated as per PR#100281	

--------------------------------------------------------------------------------
--
-- TESTED FILE INCLUDE DIRECTIVES
--
--------------------------------------------------------------------------------
#/*============================================================================*/
#/* Module specific includes*/
#/*============================================================================*/
##include "hdulibstm32f7xxhaldma2d.h"
##include "hdulibstmcorecomm.h" 
##include "hdulibstm32f7xxhal.h"
##include "hdudispfucos.h"  
##include "hdulibbasictypes.h" 
##include "hdulibstm32f7xxit.h" 
##include "hdulibstm32f746xx.h" 
##include "hdulibcorecm7.h"     
##include "hdulibstm32f7xxhaldma.h"  
--------------------------------------------------------------------------------
--
-- TESTED FILE DECLARATIONS 
--
--------------------------------------------------------------------------------

-- Declarations of the global variables of the tested file

	 #T_DMA_HANDLE Dma_handle; 
	 #T_OS_EVENT *Sem_app_task; 
	 #T_BOOL Init_b_done; 
	 
---- Declarations of the temporary varaiable
	
	--Temporary veriable to pass in input section.
	#T_UINT32 PTU_tmp;  	
--------------------------------------------------------------------------------

BEGIN

	COMMENT Author Name         : 	Santosh Mithari 
	COMMENT
	COMMENT File Name           : 	hdulibstm32f7xxit.ptu
	COMMENT 
	COMMENT Tested Functions    :  	UsageFaultHandler
	COMMENT 						SvcHandler
	COMMENT 						PendSVHandler
	COMMENT 						HardFaultHandler
	COMMENT 						NmiHandler
	COMMENT 						MemManageHandler
	COMMENT 						DebugMonHandler
	COMMENT 						BusFaultHandler
	COMMENT 						ITInterrupsInit
	COMMENT 						Dma2Stream0IrqHandler
	COMMENT							LtdcIrqHandler
	COMMENT 						
	COMMENT Assumptions and Constraints
	COMMENT <AC>
	COMMENT 
	COMMENT Assumption(s): 
	COMMENT None
	COMMENT
	COMMENT Constraint(s):
	COMMENT 
	COMMENT  1.Source file "hdulibstm32f7xxit.c" is modified for testing purpose.    
	COMMENT    The function 'HardFaultHandler' is modified to break infinte loop.
	COMMENT   
	COMMENT     /*local variable declared for testing purpose*/
	COMMENT		T_UINT16 PTU_count =0;
	COMMENT		
	COMMENT		while (ONE)
	COMMENT	   	{ 
	COMMENT		   /*Modified for testing purpose to terminate infinite loop*/
	COMMENT	   	 PTU_count++;
	COMMENT	   	 	if(PTU_count == 4)
	COMMENT	   	  	{
	COMMENT	 		break;
	COMMENT	   	  	}
	COMMENT	    	else
	COMMENT	    	{
	COMMENT	    		:  	
	COMMENT	        }
	COMMENT     }	
	COMMENT	Hence while loop cannot be tested for 0 and 1 times and FALSE condition cannot be achieved.
	COMMENT   
	COMMENT
	COMMENT  2.Source file "hdulibstm32f7xxit.c" is modified for testing purpose.    
	COMMENT    The function 'MemManageHandler' is modified to break infinte loop.
	COMMENT   
	COMMENT     /*local variable declared for testing purpose*/
	COMMENT		T_UINT16 PTU_count =0;
	COMMENT		
	COMMENT		while (ONE)
	COMMENT	   	{ 
	COMMENT		   /*Modified for testing purpose to terminate infinite loop*/
	COMMENT	   	 PTU_count++;
	COMMENT	   	 	if(PTU_count == 4)
	COMMENT	   	  	{
	COMMENT	 		break;
	COMMENT	   	  	}
	COMMENT	    	else
	COMMENT	    	{
	COMMENT	    		:  	
	COMMENT	        }
	COMMENT     }	
	COMMENT Hence while loop cannot be tested for 0 and 1 times and FALSE condition cannot be achieved.
	COMMENT
	COMMENT  3.Source file "hdulibstm32f7xxit.c" is modified for testing purpose.    
	COMMENT    The function 'BusFaultHandler' is modified to break infinte loop.
	COMMENT   
	COMMENT     /*local variable declared for testing purpose*/
	COMMENT		T_UINT16 PTU_count =0;
	COMMENT		
	COMMENT		while (ONE)
	COMMENT	   	{ 
	COMMENT		   /*Modified for testing purpose to terminate infinite loop*/
	COMMENT	   	 PTU_count++;
	COMMENT	   	 	if(PTU_count == 4)
	COMMENT	   	  	{
	COMMENT	 		break;
	COMMENT	   	  	}
	COMMENT	    	else
	COMMENT	    	{
	COMMENT	    		:  	
	COMMENT	        }
	COMMENT		}	
	COMMENT	Hence while loop cannot be tested for 0 and 1 times and FALSE condition cannot be achieved.
	COMMENT   
	COMMENT  4.Source file "hdulibstm32f7xxit.c" is modified for testing purpose.    
	COMMENT    The function 'UsageFaultHandler' is modified to break infinte loop.
	COMMENT   
	COMMENT     /*local variable declared for testing purpose*/
	COMMENT		T_UINT16 PTU_count =0;
	COMMENT		
	COMMENT		while (ONE)
	COMMENT	   	{ 
	COMMENT		   /*Modified for testing purpose to terminate infinite loop*/
	COMMENT	   	 PTU_count++;
	COMMENT	   	 	if(PTU_count == 4)
	COMMENT	   	  	{
	COMMENT	 			break;
	COMMENT	   	  	}
	COMMENT	    	else
	COMMENT	   		{
	COMMENT	    	  	;
	COMMENT	   		}
	COMMENT    }	
	COMMENT Hence while loop cannot be tested for 0 and 1 times and FALSE condition cannot be achieved.
	COMMENT
	COMMENT 5. Header file 'hdulibstm32f746xx.h' is modified for testing purpose.
	COMMENT		
	COMMENT		/*Commented for testing*/
	COMMENT		/*#define LTDC                ((T_LTDC *)LTDC_BASE)*/
	COMMENT		
	COMMENT		/*modified macro by hardware stubbing for testing*/
	COMMENT		T_LTDC PTU_LTDC;
	COMMENT		#define LTDC                ((T_LTDC *)&PTU_LTDC)
	COMMENT
	COMMENT 6. Header file 'hdulibcorecm7.h' is modifies for testing purpose.
	COMMENT		
	COMMENT		/*Commented for testing*/
	COMMENT			/*#define NVIC     ((T_NVIC*)     NVIC_BASE )*/
	COMMENT
	COMMENT			/*modified macro by hardware stubbing for testing*/
	COMMENT			T_NVIC PTU_NVIC;
	COMMENT			#define NVIC  ((T_NVIC      *)&PTU_NVIC)
	COMMENT		
	COMMENT	7. In function 'LtdcIrqHandler' for loop can not be covered for 0 and 1 times
	COMMENT		since it is controlled by macro 'TEN'
	COMMENT 
	COMMENT  Code Snippet -
	COMMENT   /*hdulibstm32f7xxit-LtdcIrqHandler-DB-LLR-002*/
	COMMENT   for(loop_cntr=0; loop_cntr<TEN; loop_cntr++)
	COMMENT   {
	COMMENT      ;/*Do nothing */
    COMMENT   }
	COMMENT
	COMMENT 8. Following Test script related warnings are observed during Target Execution for volatile keyword member/variable:
	COMMENT warning #191-D: type qualifier is meaningless on cast type
	COMMENT
	COMMENT </AC>

	COMMENT Equivalence Class Description
	COMMENT <ECD>
	COMMENT
	COMMENT Valid Class(es)
	COMMENT 
	COMMENT Class 1
	COMMENT The the Function 'UsageFaultHandler' goes in to infinite loop when usage fault exception occurs.
	COMMENT
	COMMENT Class 2
	COMMENT The the Function 'HardFaultHandler' goes in to infinite loop when Hard Fault exception occurs.
	COMMENT
	COMMENT Class 3
	COMMENT The function 'MemManageHandler',goes in to infinite loop when Memory Manage exception occurs.
	COMMENT
	COMMENT Class 4
	COMMENT The Function 'Dma2Stream0IrqHandler',calls 'HALDmaIrqHandler'.
	COMMENT
	COMMENT Class 5
	COMMENT The the Function "BusFaultHandler" goes in to infinite loop when Bus Fault exception occurs
	COMMENT
	COMMENT Class 6
	COMMENT The Function 'ITInterrupsInit' calls  'NVICSetPriority' 
	COMMENT
	COMMENT Class 7
	COMMENT The Function 'ITInterrupsInit' calls  'NVICEnableIRQ' 
	COMMENT
	COMMENT Class 8
	COMMENT In the Function 'LtdcIrqHandler' Init_b_done is TRUE.
	COMMENT
	COMMENT Class 9
	COMMENT In the Function 'LtdcIrqHandler' Init_b_done is FALSE.
	COMMENT
	COMMENT Class 10
	COMMENT The Function 'LtdcIrqHandler' calls  'OsIntEnter' 
	COMMENT
	COMMENT Class 11
	COMMENT The Function 'LtdcIrqHandler' calls  'OsSemPost'.
	COMMENT
	COMMENT Class 12
	COMMENT The Function 'LtdcIrqHandler' calls  'OsIntExit'.
	COMMENT
	COMMENT Invalid Class(es)
	COMMENT None
	COMMENT
	COMMENT </ECD>

--------------------------------------------------------------------------------
--
-- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
--
--------------------------------------------------------------------------------
SIMUL

	DEFINE STUB hdulibstm32f7xxit_c
   
    	#void HALDmaIrqHandler(T_DMA_HANDLE _in *hdma); 
    	#void OsIntExit(void); 
    	#T_UBYTE OsSemPost(T_OS_EVENT _in *param_event); 
    	#void OsIntEnter(void); 
 
	END DEFINE

ELSE_SIMUL

    --No action defined as of now if the module is not simulated

END SIMUL
--------------------------------------------------------------------------------
--
-- ENVIRONMENTS DECLARATIONS
--
--------------------------------------------------------------------------------
--IF HOST

--No special things that have to be done on the host to run the test.

--ELSE

--No action defined for the target execution as of now

--END IF
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
-- TESTED FILE ENVIRONMENT
--------------------------------------------------------------------------------

--Environment of the hdulibstm32f7xxit.c

--ENVIRONMENT ENV_hdulibstm32f7xxit_c

    --None

--END ENVIRONMENT -- ENV_hdulibstm32f7xxit_c

--USE ENV_hdulibstm32f7xxit_c

--------------------------------------------------------------------------------
--
-- SERVICES DECLARATIONS
--
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
-- Declaration of the service UsageFaultHandler
--------------------------------------------------------------------------------
SERVICE UsageFaultHandler
SERVICE_TYPE extern

TEST 1
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT
    COMMENT [hdulibstm32f7xxit-UsageFaultHandler-DB-LLR-001]
    COMMENT The function 'UsageFaultHandler' goes to infinite loop
    COMMENT when usage fault exception occurs.
    COMMENT Equivalence Class 1
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
			
			--Temporary variable 
			VAR PTU_tmp,			init=0,			ev=init
		
        COMMENT OUTPUT SECTION:

            --None

        COMMENT INPUT/OUTPUT SECTION:
            
			--None
        
        -- Stub Calls:
        SIMUL
            
			--None
    
        END SIMUL

        -- Calling the Unit Under Test :
 	#UsageFaultHandler();

    END ELEMENT

END TEST -- TEST 1   
END SERVICE -- UsageFaultHandler


--------------------------------------------------------------------------------
-- Declaration of the service SvcHandler
--------------------------------------------------------------------------------
SERVICE SvcHandler
SERVICE_TYPE extern


TEST 1
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibstm32f7xxit-SvcHandler-DB-LLR-001]
    COMMENT The function 'SvcHandler',does nothing.
    COMMENT Equivalence Class None
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

			--Temporary variable 
			VAR PTU_tmp,			init=0,			ev=init
		
        COMMENT OUTPUT SECTION:

        	--None

        COMMENT INPUT/OUTPUT SECTION:
            
		--None
        
        -- Stub Calls:
        SIMUL
            
		--None
    
        END SIMUL

        -- Calling the Unit Under Test :
	#SvcHandler();

    END ELEMENT

END TEST -- TEST 1

END SERVICE -- SvcHandler


--------------------------------------------------------------------------------
-- Declaration of the service PendSVHandler
--------------------------------------------------------------------------------
SERVICE PendSVHandler
SERVICE_TYPE extern

TEST 1	
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdulibstm32f7xxit-PendSVHandler-DB-LLR-001]
    COMMENT The function 'PendSVHandler' does nothing.
    COMMENT Equivalence Class None
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

			--Temporary variable 
			VAR PTU_tmp,			init=0,			ev=init
		
        COMMENT OUTPUT SECTION:

        	--None

        COMMENT INPUT/OUTPUT SECTION:
            
		--None
        
        -- Stub Calls:
        SIMUL
            
			--None
    
        END SIMUL

        -- Calling the Unit Under Test :
		#PendSVHandler();

    END ELEMENT
    
END TEST -- TEST 1

END SERVICE -- PendSVHandler


--------------------------------------------------------------------------------
-- Declaration of the service LtdcIrqHandler
--------------------------------------------------------------------------------
SERVICE LtdcIrqHandler
SERVICE_TYPE extern

--Temporary variable declared to give input to Sem_app_task
#T_OS_EVENT *PTU_Sem_app_task;

TEST 1
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibstm32f7xxit-LtdcIrqHandler-DB-LLR-001]
    COMMENT The function clear the line interrupt flag by setting ICR register 
    COMMENT of LTDC to LTDC_ICR_CLIF.
    COMMENT Equivalence Class None
    COMMENT
    COMMENT [hdulibstm32f7xxit-LtdcIrqHandler-DB-LLR-002]
    COMMENT The function loops ten times and does nothing.
    COMMENT Equivalence Class None
    COMMENT
    COMMENT [hdulibstm32f7xxit-LtdcIrqHandler-DB-LLR-003]
    COMMENT The function calls function OsIntEnter, function OsSemPost with Sem_app_task as 
    COMMENT parameter and function OsIntExit when Init_b_done is equal to TRUE.
    COMMENT Equivalence Class 8,10,11,12
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
        
        	--Temporary varible initialised before usage
        	VAR PTU_Sem_app_task,	init = NULL,						ev = init
        
			--Global Variable set to true	
			VAR Init_b_done,		init = TRUE,					ev = init
			
			--stack for the appliication task
			VAR Sem_app_task,		init = PTU_Sem_app_task,		ev = init
		
        COMMENT OUTPUT SECTION:
			
			--ICR register of LTDC 
			VAR LTDC->ICR,		init=0x20,		ev = LTDC_ICR_CLIF
		
        COMMENT INPUT/OUTPUT SECTION:
            
			--None
        
        -- Stub Calls:
       	SIMUL
            
    		STUB OsIntEnter()
    	
    		STUB OsSemPost(Sem_app_task) 0x10
    	
    		STUB OsIntExit()
    	
        END SIMUL

        -- Calling the Unit Under Test :
 		#LtdcIrqHandler();

    END ELEMENT

END TEST -- TEST 1   

TEST 2
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibstm32f7xxit-LtdcIrqHandler-DB-LLR-003]
    COMMENT The function does nothing when Init_b_done is not equal to TRUE. 
    COMMENT Equivalence Class 9
    COMMENT </TD> 

    ELEMENT

		COMMENT INPUT SECTION:
			
			--Global Variable set to FALSE
			VAR Init_b_done,	init=FALSE,		ev = init
		
        COMMENT OUTPUT SECTION:
	
			--None
		
        COMMENT INPUT/OUTPUT SECTION:
            
		--None
        
        -- Stub Calls:
       	SIMUL
            
			--None
		
        END SIMUL

        -- Calling the Unit Under Test :
 		#LtdcIrqHandler();

    END ELEMENT

END TEST -- TEST 2

END SERVICE -- LtdcIrqHandler


--------------------------------------------------------------------------------
-- Declaration of the service ITInterrupsInit
--------------------------------------------------------------------------------
SERVICE ITInterrupsInit
SERVICE_TYPE extern

TEST 1
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibstm32f7xxit-ITInterrupsInit-DB-LLR-001]
    COMMENT The function does the following,
	COMMENT a)	set register LIPCR of LTDC to DISPLAY_END
	COMMENT b)	set register IER of LTDC to LTDC_IER_LIE
	COMMENT c)	calls function NVICSetPriority with parameters LTDC_IRQN and LTDC_LI_PRIORITY as parameters.
  	COMMENT d)  calls function NVICEnableIRQ with parameters LTDC_IRQN as parameter.
    COMMENT Equivalence Class 6,7
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
			
			--None
		
        COMMENT OUTPUT SECTION:
		
			--register LIPCR of LTDC
        	VAR LTDC->LIPCR,	init=0x10,		ev = DISPLAY_END

        	--register IER of LTDC
			VAR LTDC->IER,		init=0x10,		ev = LTDC_IER_LIE

			--register ISER of NVIC
			VAR NVIC->ISER[2],	init=0x10,		ev = 0x1000000

			--register IP of NVIC
			VAR NVIC->IP[LTDC_IRQN],	init=0x10,		ev = 0x30
		
        COMMENT INPUT/OUTPUT SECTION:
            
			--None
        
        -- Stub Calls:
        SIMUL
         	
         	--None
    	
        END SIMUL

        -- Calling the Unit Under Test :
 		#ITInterrupsInit();

    END ELEMENT

END TEST -- TEST 1        

END SERVICE -- ITInterrupsInit


--------------------------------------------------------------------------------
-- Declaration of the service HardFaultHandler
--------------------------------------------------------------------------------
SERVICE HardFaultHandler
SERVICE_TYPE extern

TEST 1	
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibstm32f7xxit-HardFaultHandler-DB-LLR-001]
    COMMENT The function 'HardFaultHandler' goes in to
    COMMENT infinite loop when Hard Fault exception occurs.
    COMMENT Equivalence Class 2
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

			--Temporary variable
			VAR PTU_tmp,			init=0,			ev=init
		
        COMMENT OUTPUT SECTION:

        	--None

        COMMENT INPUT/OUTPUT SECTION:
            
			--None
        
        -- Stub Calls:
        SIMUL
            
			--None
    
        END SIMUL

        -- Calling the Unit Under Test :
	#HardFaultHandler();  

    END ELEMENT
    
END TEST -- TEST 1

END SERVICE -- HardFaultHandler


--------------------------------------------------------------------------------
-- Declaration of the service NmiHandler
--------------------------------------------------------------------------------
SERVICE NmiHandler
SERVICE_TYPE extern

TEST 1	
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdulibstm32f7xxit-NmiHandler-DB-LLR-001]
    COMMENT The function 'NmiHandler'does nothing.
    COMMENT Equivalence Class None
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
			
			--Temporary variable
			VAR PTU_tmp,			init=0,			ev=init
		
        COMMENT OUTPUT SECTION:

        	--None

        COMMENT INPUT/OUTPUT SECTION:
            
			--None
        
        -- Stub Calls:
        SIMUL
            
		--None
    
        END SIMUL

        -- Calling the Unit Under Test :
		#NmiHandler();

    END ELEMENT
    
END TEST -- TEST 1

END SERVICE -- NmiHandler


--------------------------------------------------------------------------------
-- Declaration of the service Dma2Stream0IrqHandler
--------------------------------------------------------------------------------
SERVICE Dma2Stream0IrqHandler
SERVICE_TYPE extern


TEST 1
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT [hdulibstm32f7xxit-Dma2Stream0IrqHandler-DB-LLR-001]
    COMMENT The function calls function HALDmaIrqHandler with Dma_handle as parameter.
    COMMENT Equivalence Class 4 
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:
			
			--Structure that Handles the DMA
			STRUCTURE Dma_handle,		init = { Instance => NIL, Init => { Channel => 0, Direction => 0, 
			& 							PeriphInc => 0, MemInc => 0, PeriphDataAlignment => 0, MemDataAlignment => 0, 
			& 							Mode => 0, Priority => 0, FIFOMode => 0, FIFOThreshold => 0, MemBurst => 0, 
			&							PeriphBurst=> 0 }, Lock => HAL_UNLOCKED, State => HAL_DMA_STATE_RESET, 
			& 							Parent => NIL, XferCpltCallback => NIL,XferHalfCpltCallback => NIL, 
			&							XferM1HalfCpltCallback => NIL, XferErrorCallback => NIL, XferAbortCallback => NIL, 
			&							XferM1CpltCallback => NIL, ErrorCode => 0, StreamBaseAddress=> 0, StreamIndex => 0 },		
			&							ev = init
		
        COMMENT OUTPUT SECTION:

           	--None

        COMMENT INPUT/OUTPUT SECTION:
            
			--None
        
        -- Stub Calls:
        SIMUL
            
			STUB HALDmaIrqHandler(&Dma_handle)
    
        END SIMUL

        -- Calling the Unit Under Test :
 		#Dma2Stream0IrqHandler();

    END ELEMENT

END TEST -- TEST 1

END SERVICE -- Dma2Stream0IrqHandler


--------------------------------------------------------------------------------
-- Declaration of the service MemManageHandler
--------------------------------------------------------------------------------
SERVICE MemManageHandler
SERVICE_TYPE extern

TEST 1	
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdulibstm32f7xxit-MemManageHandler-DB-LLR-001]
    COMMENT The function 'MemManageHandler'goes in to
    COMMENT infinite loop when Memory Manage exception occurs.
    COMMENT Equivalence Class 3
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

			--Temporary variable
			VAR PTU_tmp,			init=0,			ev=init
		
        COMMENT OUTPUT SECTION:

        	--None

        COMMENT INPUT/OUTPUT SECTION:
            
		--None
        
        -- Stub Calls:
        SIMUL
            
		--None
    
        END SIMUL

        -- Calling the Unit Under Test :
		#MemManageHandler();

    END ELEMENT
    
END TEST -- TEST 1
END SERVICE -- MemManageHandler


--------------------------------------------------------------------------------
-- Declaration of the service DebugMonHandler
--------------------------------------------------------------------------------
SERVICE DebugMonHandler
SERVICE_TYPE extern

TEST 1	
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdulibstm32f7xxit-DebugMonHandler-DB-LLR-001]
    COMMENT The function 'DebugMonHandler'does nothing.
    COMMENT Equivalence Class None
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

			--Temporary variable
			VAR PTU_tmp,			init=0,			ev=init
		
        COMMENT OUTPUT SECTION:

        	--None

        COMMENT INPUT/OUTPUT SECTION:
            
		--None
        
        -- Stub Calls:
        SIMUL
            
			--None
    
        END SIMUL

        -- Calling the Unit Under Test :
		#DebugMonHandler();
	
    END ELEMENT
    
END TEST -- TEST 1

END SERVICE -- DebugMonHandler


--------------------------------------------------------------------------------
-- Declaration of the service BusFaultHandler
--------------------------------------------------------------------------------
SERVICE BusFaultHandler
SERVICE_TYPE extern

TEST 1	
FAMILY nominal

    COMMENT Test Description
    COMMENT <TD> 
    COMMENT 
    COMMENT [hdulibstm32f7xxit-BusFaultHandler-DB-LLR-001]
    COMMENT The function 'BusFaultHandler'goes in to infinite loop when Bus Fault exception occurs.
    COMMENT 
    COMMENT Equivalence Class 5
    COMMENT </TD> 

    ELEMENT

        COMMENT INPUT SECTION:

			--Temporary variable
			VAR PTU_tmp,			init=0,			ev=init
		
        COMMENT OUTPUT SECTION:

        	--None

        COMMENT INPUT/OUTPUT SECTION:
            
		--None
        
	-- Stub Calls:
    SIMUL
            
		--None
    
    END SIMUL

   	-- Calling the Unit Under Test :
	#BusFaultHandler();
	
    END ELEMENT
    
END TEST -- TEST 1

END SERVICE -- BusFaultHandler



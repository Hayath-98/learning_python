HEADER hdulibstm32f7xxhalrccex, Source Code Ver : 1.2,TestScript Ver : 1.3
--------------------------------------------------------------------------------
-- Author Name        	: Neelu Vaishnav
--
-- File Name           	: hdulibstm32f7xxhalrccex.ptu
--
-- Test Creation Date  	: 22.09.2017
--
-- Tested Functions    	: HalRccExPeriphCLKConfig
--
-- Version History     	:
--
--  TEST-VERSION        TEST-DATE        TESTER NAME        MODIFICATIONS
--  ------------        ---------        -----------        -------------
--      1.1             22.09.2017      Neelu Vaishnav     	Created the ptu file.
--      1.2             10.11.2017      Lakshmi Kumari K    Updated as per PR 100171
--      1.3             14.11.2017      Lakshmi Kumari K    Updated as per PR 100171
--------------------------------------------------------------------------------
--
-- TESTED FILE INCLUDE DIRECTIVES 
--
--------------------------------------------------------------------------------

#/*============================================================================*/
#/* Module specific includes                                                   */
#/*============================================================================*/

##include "hdulibstm32f7xxhal.h"           
##include "hdulibbasictypes.h"             
##include "hdulibstm32f7xxhalrccex.h"     
##include "hdulibstm32f7xxhalrcc.h"       
##include "hdulibstm32f746xx.h"           
##include "hdulibstm32f7xxhaldef.h"       
##include "hdulibstm32f7xx.h"              
##include "hdulibcmsisgcc.h"              
--------------------------------------------------------------------------------
--
-- TESTED FILE DECLARATIONS 
--
--------------------------------------------------------------------------------

-- Declarations of the global variables of the tested file
		--None

-- Declarations of the temporary variable
		--None

--------------------------------------------------------------------------------

BEGIN

	COMMENT 	Author Name      : Neelu Vaishnav
	COMMENT	
	COMMENT 	File Name        : hdulibstm32f7xxhalrccex.ptu
	COMMENT	
	COMMENT 	Tested Functions : HalRccExPeriphCLKConfig
	COMMENT	
	COMMENT 	Assumptions and Constraints
	COMMENT 	<AC>
	COMMENT	
	COMMENT 	Assumption(s):
	COMMENT 	None	
	COMMENT	
	COMMENT 	Constraint(s):
    COMMENT 	1.Header file "hdulibstm32f746xx.h" is modified for testing purpose. The macro 'PWR' is modified for stubbing hardware address.
	COMMENT 	/*Commented for testing purpose*/
	COMMENT 	/*#define PWR     ((T_PWR *) PWR_BASE )*/
	COMMENT 	/* Modified macro by stubbing hardware address for testing purpose*/
	COMMENT 	T_PWR PTU_PWR_BASE;
	COMMENT 	#define PWR    ((T_PWR *)& PTU_PWR_BASE)
	COMMENT	
    COMMENT 	2.Header file "hdulibstm32f746xx.h" is modified for testing purpose. The macro 'RCC' is modified for stubbing hardware address.
	COMMENT 	/*Commented for testing purpose*/
	COMMENT 	/*#define RCC     ((T_RCC *) RCC_BASE )*/
	COMMENT 	/* Modified macro by stubbing hardware address for testing purpose*/
	COMMENT 	T_RCC PTU_RCC_BASE;
	COMMENT 	#define RCC    ((T_RCC *)& PTU_RCC_BASE)
	COMMENT
	COMMENT     3.Following Test script related warnings are observed during Target Execution for volatile keyword member/variable:
	COMMENT      warning #191-D: type qualifier is meaningless on cast type
	COMMENT 
	COMMENT     4. In the function 'HalRccExPeriphCLKConfig',‘do-while’ loop present inside the below specified macros cannot be covered for '2 loops or more' condition.
	COMMENT         since it is controlled by constant value 
 	COMMENT        __HAL_RCC_I2S_CONFIG,__HAL_RCC_PWR_CLK_ENABLE and _HAL_RCC_RTC_CONFIG.
 	COMMENT
 	COMMENT     5.In the function 'HalRccExPeriphCLKConfig'.while loop can not be covered for 0 time, 
    COMMENT       Since it is controlled by macro values.
 	COMMENT
	COMMENT	  	</AC>
	COMMENT
	COMMENT  	Equivalence Class Description
	COMMENT  	<ECD>
	COMMENT 
	COMMENT  	Valid Class(es)    
	COMMENT
	COMMENT		Class 1
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_I2S.
	COMMENT 	
	COMMENT	 	Class 2
	COMMENT  	In function'HalRccExPeriphCLKConfig',I2sClockSelection of periph_clk_init is equal to RCC_I2SCLKSOURCE_PLLI2S.
	COMMENT	
	COMMENT  	Class 3
	COMMENT  	In function'HalRccExPeriphCLKConfig',I2sClockSelection  of periph_clk_init is not equal to RCC_I2SCLKSOURCE_PLLI2S.
	COMMENT	
	COMMENT  	Class 4
	COMMENT  	In function'HalRccExPeriphCLKConfig',PeriphClockSelection  of periph_clk_init is not equal to RCC_PERIPHCLK_I2S.
	COMMENT 	
	COMMENT  	Class 5
	COMMENT  	In function'HalRccExPeriphCLKConfig',PeriphClockSelection  of periph_clk_init is equal to RCC_PERIPHCLK_SAI1 .
	COMMENT 	
	COMMENT  	Class 6
	COMMENT  	In function'HalRccExPeriphCLKConfig',Sai1ClockSelection  of periph_clk_init is equal to RCC_SAI1CLKSOURCE_PLLI2S.
	COMMENT 	
	COMMENT  	Class 7
	COMMENT  	In function'HalRccExPeriphCLKConfig',Sai1ClockSelection  of periph_clk_init is not equal to RCC_SAI1CLKSOURCE_PLLI2S.
	COMMENT 	
	COMMENT  	Class 8
	COMMENT  	In function'HalRccExPeriphCLKConfig',Sai1ClockSelection  of periph_clk_init is equal to RCC_SAI1CLKSOURCE_PLLSAI.
	COMMENT 	
	COMMENT  	Class 9
	COMMENT  	In function'HalRccExPeriphCLKConfig',Sai1ClockSelection  of periph_clk_init is not equal to RCC_SAI1CLKSOURCE_PLLSAI.
	COMMENT 	
	COMMENT  	Class 10
	COMMENT  	In function'HalRccExPeriphCLKConfig',PeriphClockSelection  of periph_clk_init is not equal to RCC_PERIPHCLK_SAI1 .
	COMMENT 	
	COMMENT  	Class 11
	COMMENT  	In function'HalRccExPeriphCLKConfig',PeriphClockSelection  of periph_clk_init is equal to RCC_PERIPHCLK_SAI2 .
	COMMENT 	
	COMMENT  	Class 12
	COMMENT  	In function'HalRccExPeriphCLKConfig',Sai2ClockSelection  of periph_clk_init is equal to RCC_SAI2CLKSOURCE_PLLI2S.
	COMMENT 	
	COMMENT  	Class 13
	COMMENT  	In function'HalRccExPeriphCLKConfig',Sai2ClockSelection  of periph_clk_init is not equal to RCC_SAI2CLKSOURCE_PLLI2S.
	COMMENT 	
	COMMENT  	Class 14
	COMMENT  	In function'HalRccExPeriphCLKConfig',Sai2ClockSelection  of periph_clk_init is equal to RCC_SAI2CLKSOURCE_PLLSAI.
	COMMENT 	
	COMMENT  	Class 15
	COMMENT  	In function'HalRccExPeriphCLKConfig',Sai2ClockSelection  of periph_clk_init is not equal to RCC_SAI2CLKSOURCE_PLLSAI.
	COMMENT 	
	COMMENT  	Class 16
	COMMENT  	In function'HalRccExPeriphCLKConfig',PeriphClockSelection  of periph_clk_init is not equal to RCC_PERIPHCLK_SAI2 . 
	COMMENT 	
	COMMENT	 	Class 17
	COMMENT  	In function'HalRccExPeriphCLKConfig',PeriphClockSelection  of periph_clk_init is equal to RCC_PERIPHCLK_SPDIFRX.
	COMMENT 	
	COMMENT	 	Class 18
	COMMENT  	In function'HalRccExPeriphCLKConfig',PeriphClockSelection  of periph_clk_init is not equal to RCC_PERIPHCLK_SPDIFRX.
	COMMENT 	
	COMMENT	 	Class 19
	COMMENT  	In function'HalRccExPeriphCLKConfig',PeriphClockSelection  of periph_clk_init is equal to RCC_PERIPHCLK_RTC.
	COMMENT 	
	COMMENT	 	Class 20
	COMMENT  	In function'HalRccExPeriphCLKConfig',PeriphClockSelection  of periph_clk_init is not equal to RCC_PERIPHCLK_RTC.	
	COMMENT	
	COMMENT  	Class 21
	COMMENT  	In function'HalRccExPeriphCLKConfig',dbp field in CR reg is equal to 1 
	COMMENT	
	COMMENT  	Class 22
	COMMENT  	In function'HalRccExPeriphCLKConfig',dbp field in CR reg is equal to 0 
	COMMENT 	
	COMMENT  	Class 23
	COMMENT  	In function'HalRccExPeriphCLKConfig', difference of the return value of HALGetTick and tick_start is greater than RCC_DBP_TIMEOUT_VALUE
	COMMENT 	
	COMMENT  	Class 24
	COMMENT  	In function'HalRccExPeriphCLKConfig',difference of the return value of HALGetTick and tick_start is less than RCC_DBP_TIMEOUT_VALUE
	COMMENT 	
	COMMENT  	Class 25
	COMMENT  	In function'HalRccExPeriphCLKConfig',difference of the  return value of HALGetTick and tick_start is equal to RCC_DBP_TIMEOUT_VALUE	
	COMMENT	
	COMMENT  	Class 26
	COMMENT  	In function'HalRccExPeriphCLKConfig',register 0 is not equal to ZERO 	
	COMMENT	
	COMMENT  	Class 27
	COMMENT  	In function'HalRccExPeriphCLKConfig',register 0 is equal to ZERO 
	COMMENT	
	COMMENT  	Class 28
	COMMENT  	In function'HalRccExPeriphCLKConfig',register 0 is not equal to result of bitwise AND operation of RTCClockSelection of periph_clk_init and RCC_BDCR_RTCSEL 
	COMMENT	
	COMMENT  	Class 29
	COMMENT  	In function'HalRccExPeriphCLKConfig',register 0 is equal to result of bitwise AND operation of RTCClockSelection of periph_clk_init and RCC_BDCR_RTCSEL 
	COMMENT	
	COMMENT  	Class 30
	COMMENT  	In function'HalRccExPeriphCLKConfig',return value of the macro HAL_IS_BIT_SET with BDCR of RCC and RCC_BDCR_LSEON is not equal to RESET.
	COMMENT	
	COMMENT  	Class 31
	COMMENT  	In function'HalRccExPeriphCLKConfig',return value of the macro HAL_IS_BIT_SET with BDCR of RCC and RCC_BDCR_LSEON is equal to RESET.    	
	COMMENT	
	COMMENT  	Class 32
	COMMENT  	In function'HalRccExPeriphCLKConfig',return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSERDY is equal to RESET.
	COMMENT	
	COMMENT  	Class 33
	COMMENT  	In function'HalRccExPeriphCLKConfig',return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSERDY is not equal to RESET.  
	COMMENT 	
	COMMENT  	Class 34
	COMMENT  	In function'HalRccExPeriphCLKConfig',difference of the  return value of HALGetTick and tick_start is greater than RCC_LSE_TIMEOUT_VALUE
	COMMENT 	
	COMMENT  	Class 35
	COMMENT  	In function'HalRccExPeriphCLKConfig',difference of the return value of HALGetTick and tick_start is less than RCC_LSE_TIMEOUT_VALUE
	COMMENT 	
	COMMENT  	Class 36
	COMMENT  	In function'HalRccExPeriphCLKConfig',difference of the  return value of HALGetTick and tick_start is equal to RCC_LSE_TIMEOUT_VALUE		
	COMMENT 	
	COMMENT	 	Class 37
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_TIM.
	COMMENT 	
	COMMENT	 	Class 38
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_TIM.
	COMMENT 	
	COMMENT	 	Class 39
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_I2C1.
	COMMENT 	
	COMMENT	 	Class 40
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_I2C1.
	COMMENT 	
	COMMENT	 	Class 41
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_I2C2.
	COMMENT 	
	COMMENT	 	Class 42
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_I2C2.
	COMMENT 	
	COMMENT	 	Class 43
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_I2C3.
	COMMENT 	
	COMMENT	 	Class 44
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_I2C3.
	COMMENT 	
	COMMENT	 	Class 45
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_I2C4.
	COMMENT 	
	COMMENT	 	Class 46
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_I2C4.
	COMMENT 	
	COMMENT	 	Class 47
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_USART1.
	COMMENT 	
	COMMENT	 	Class 48
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_USART1.
	COMMENT 	
	COMMENT	 	Class 49
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_USART2.
	COMMENT 	
	COMMENT	 	Class 50
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_USART2.
	COMMENT 	
	COMMENT	 	Class 51
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_USART3.
	COMMENT 	
	COMMENT	 	Class 52
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_USART3.
	COMMENT 	
	COMMENT	 	Class 53
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_UART4.
	COMMENT 	
	COMMENT	 	Class 54
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_UART4.
	COMMENT 	
	COMMENT	 	Class 55
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_UART5.
	COMMENT 	
	COMMENT	 	Class 56
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_UART5.
	COMMENT 	
	COMMENT	 	Class 57
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_USART6.
	COMMENT 	
	COMMENT	 	Class 58
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_USART6.
	COMMENT 	
	COMMENT	 	Class 59
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_UART7.
	COMMENT 	
	COMMENT	 	Class 60
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_UART7.
	COMMENT 	
	COMMENT	 	Class 61
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_UART8.
	COMMENT 	
	COMMENT	 	Class 62
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_UART8.
	COMMENT 	
	COMMENT	 	Class 63
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_CEC.
	COMMENT 	
	COMMENT	 	Class 64
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_CEC.
	COMMENT 	
	COMMENT	 	Class 65
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_CLK48.
	COMMENT 	
	COMMENT	 	Class 66
	COMMENT	 	In function'HalRccExPeriphCLKConfig',Clk48ClockSelection of periph_clk_init is equal to RCC_CLK48SOURCE_PLLSAIP.
	COMMENT 	
	COMMENT	 	Class 67
	COMMENT	 	In function'HalRccExPeriphCLKConfig',Clk48ClockSelection of periph_clk_init is not equal to RCC_CLK48SOURCE_PLLSAIP.
	COMMENT 	
	COMMENT	 	Class 68
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_CLK48.
	COMMENT 	
	COMMENT	 	Class 69
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_LTDC.
	COMMENT 	
	COMMENT	 	Class 70
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_LTDC.
	COMMENT 	
	COMMENT	 	Class 71
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_LPTIM1.
	COMMENT 	
	COMMENT	 	Class 72
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_LPTIM1.
	COMMENT 	
	COMMENT	 	Class 73
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_SDMMC1.
	COMMENT 	
	COMMENT	 	Class 74
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_SDMMC1.
	COMMENT 	
	COMMENT	 	Class 75
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PLL I2S is equal to ONE 
	COMMENT 	
	COMMENT	 	Class 76
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PLL I2S is not equal to ONE 
	COMMENT 	
	COMMENT	 	Class 77
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_PLLI2S
	COMMENT 	
	COMMENT	 	Class 78
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_PLLI2S
	COMMENT 	
	COMMENT  	Class 79
	COMMENT	 	In function'HalRccExPeriphCLKConfig',return value of __HAL_RCC_GET_FLAG with RCC_FLAG_PLLI2SRDY is not equal to RESET 
	COMMENT 	
	COMMENT  	Class 80
	COMMENT	 	In function'HalRccExPeriphCLKConfig',return value of __HAL_RCC_GET_FLAG with RCC_FLAG_PLLI2SRDY is equal to RESET 
	COMMENT 	
	COMMENT  	Class 81
	COMMENT  	In function'HalRccExPeriphCLKConfig', difference of the return value of HALGetTick and tick_start is greater than PLLI2S_TIMEOUT_VALUE
	COMMENT 	
	COMMENT  	Class 82
	COMMENT  	In function'HalRccExPeriphCLKConfig',difference of the return value of HALGetTick and tick_start is less than PLLI2S_TIMEOUT_VALUE
	COMMENT 	
	COMMENT  	Class 83
	COMMENT  	In function'HalRccExPeriphCLKConfig',difference of the  return value of HALGetTick and tick_start is equal to PLLI2S_TIMEOUT_VALUE	
	COMMENT 	
	COMMENT	 	Class 84
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PLL SAI is equal to ONE
	COMMENT 	
	COMMENT	 	Class 85
	COMMENT	 	In function'HalRccExPeriphCLKConfig',PLL SAI is not equal to ONE
	COMMENT 	
	COMMENT	 	Class 86
	COMMENT	 	In function'HalRccExPeriphCLKConfig',return value of __HAL_RCC_PLLSAI_GET_FLAG is not equal to RESET 
	COMMENT 	
	COMMENT	 	Class 87
	COMMENT	 	In function'HalRccExPeriphCLKConfig',return value of __HAL_RCC_PLLSAI_GET_FLAG is equal to RESET 
	COMMENT 	
	COMMENT  	Class 88
	COMMENT  	In function'HalRccExPeriphCLKConfig',difference of the return value of HALGetTick and tick_start is greater than PLLSAI_TIMEOUT_VALUE
	COMMENT 	
	COMMENT  	Class 89
	COMMENT  	In function'HalRccExPeriphCLKConfig',difference of the  return value of HALGetTick and tick_start is less than PLLSAI_TIMEOUT_VALUE
	COMMENT 	
	COMMENT  	Class 90
	COMMENT  	In function'HalRccExPeriphCLKConfig',difference of the return value of HALGetTick and tick_start is equal to PLLSAI_TIMEOUT_VALUE
	COMMENT 	
	COMMENT  	Class 91
	COMMENT  	Function'HalRccExPeriphCLKConfig',returns HAL_TIMEOUT.
	COMMENT 	
	COMMENT  	Class 92
	COMMENT  	Function'HalRccExPeriphCLKConfig',returns HAL_OK.
	COMMENT 	
	COMMENT  	Class 93
	COMMENT  	Function'HalRccExPeriphCLKConfig', function HALGetTick is called.
	COMMENT 	
	COMMENT  	Invalid Class(es)
	COMMENT	
    COMMENT  	Class 94
    COMMENT  	In function 'HalRccExPeriphCLKConfig', Invalid Reference is passed to periph_clk_init parameter.
	COMMENT
	COMMENT 	</ECD>    

--------------------------------------------------------------------------------
--
-- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
--
--------------------------------------------------------------------------------
SIMUL 

	DEFINE STUB hdulibstm32f7xxhalrccex_c	

			#T_UINT32 HALGetTick(void); 
			# volatile  T_INT32 Itm_rx_buffer; 
		
	END DEFINE
	
ELSE_SIMUL

   --No action defined as of now if the module is not simulated
   
END SIMUL
--------------------------------------------------------------------------------
--
-- ENVIRONMENTS DECLARATIONS
--
--------------------------------------------------------------------------------
--IF HOST

-- No special things that have to be done on the host to run the test.

--ELSE

-- No action defined for the target execution as of now

--END IF
--------------------------------------------------------------------------------
-- TESTED FILE ENVIRONNEMENT
--------------------------------------------------------------------------------
--Environment of the file hdulibstm32f7xxhalrccex_c

--ENVIRONMENT  ENV_hdulibstm32f7xxhalrccex_c

      --None

--END ENVIRONMENT -- ENV_hdulibstm32f7xxhalrccex_c

--USE ENV_hdulibstm32f7xxhalrccex_c
--------------------------------------------------------------------------------
--
-- SERVICES DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Declaration of the service HalRccExPeriphCLKConfig
--------------------------------------------------------------------------------
SERVICE HalRccExPeriphCLKConfig
SERVICE_TYPE extern

    -- Tested service parameters declarations
    #T_RCC_PERIPH_CLK periph_clk_init;
    -- By function returned type declaration
    #T_HAL_STATUS ret_HalRccExPeriphCLKConfig;

    ENVIRONMENT ENV_HalRccExPeriphCLKConfig
    STRUCTURE periph_clk_init,      		init = { PeriphClockSelection => 0, PLLI2S => { PLLI2SN => 0, PLLI2SR => 0, PLLI2SQ => 0, PLLI2SP => 0 }, PLLSAI => { PLLSAIN => 0, PLLSAIQ => 0, PLLSAIR => 0, PLLSAIP => 0 }, PLLI2SDivQ => 0, PLLSAIDivQ => 0, PLLSAIDivR => 0, RTCClockSelection
	&=> 0, I2sClockSelection => 0, TIMPresSelection => 0, Sai1ClockSelection => 0, Sai2ClockSelection => 0, Usart1ClockSelection => 0, Usart2ClockSelection => 0, Usart3ClockSelection => 0, Uart4ClockSelection => 0, Uart5ClockSelection => 0, Usart6ClockSelection
	&=> 0, Uart7ClockSelection => 0, Uart8ClockSelection => 0, I2c1ClockSelection => 0, I2c2ClockSelection => 0, I2c3ClockSelection => 0, I2c4ClockSelection => 0, Lptim1ClockSelection => 0, CecClockSelection => 0, Clk48ClockSelection => 0, Sdmmc1ClockSelection
	&=> 0 },        													ev = init
    VAR ret_HalRccExPeriphCLKConfig,        init = HAL_OK,      		ev = init
    END ENVIRONMENT -- ENV_HalRccExPeriphCLKConfig
    USE ENV_HalRccExPeriphCLKConfig

TEST 1
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-001]
	COMMENT The function does the following when result of bitwise AND operation of PeriphClockSelection of periph_clk_init and 
	COMMENT RCC_PERIPHCLK_I2S is equal to RCC_PERIPHCLK_I2S.
	COMMENT 1.Configure I2S clock source by calling the macro __HAL_RCC_I2S_CONFIG with I2sClockSelection of periph_clk_init as its parameter.
	COMMENT 2.Sets PLL I2S to ONE when I2sClockSelection of periph_clk_init is equal to RCC_I2SCLKSOURCE_PLLI2S.
	COMMENT Equivalence Class 1, 2
	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-027]
	COMMENT The function does the following when PLL I2S is equal to ONE or PeriphClockSelection of  periph_clk_init is equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT 1.Call the macro __HAL_RCC_PLLI2S_DISABLE to disable the PLLI2S.
	COMMENT 2.Set tick start to return value of  HALGetTick.
	COMMENT 3.do not loop when return value of __HAL_RCC_GET_FLAG with RCC_FLAG_PLLI2SRDY is equal to RESET.
	COMMENT while loop is covered for 0 time.
	COMMENT modified and multiple conditions TX.
	COMMENT Equivalence Class 5, 6 , 75, 80,93	
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-028]
	COMMENT The function calls the macro __HAL_RCC_PLLI2S_CONFIG to Configure the PLLI2S division factor with below parameters
	COMMENT - PLLI2SN of PLLI2S  of periph_clk_init.
	COMMENT - PLLI2SCFGR of RCC bitwise AND with RCC_PLLI2SCFGR_PLLI2SP right shifted by  POSITION_VAL with parameter RCC_PLLI2SCFGR_PLLI2SP.
	COMMENT - PLLI2SCFGR of RCC  bitwise AND with RCC_PLLI2SCFGR_PLLI2SQ right shifted by
	COMMENT POSITION_VAL with parameter RCC_PLLI2SCFGR_PLLI2SQ.
	COMMENT - PLLI2SR of PLLI2S of periph_clk_init
	COMMENT when
	COMMENT 1.PLL I2S is equal to ONE or PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT 2.COND1 and COND2 is TRUE.
	COMMENT Where,
	COMMENT COND1 :RCC_PERIPHCLK_I2S is equal to result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_I2S.
	COMMENT COND2 : RCC_I2SCLKSOURCE_PLLI2S is equal to I2sClockSelection of periph_clk_init.
	COMMENT modified and multiple conditions TT.	
	COMMENT Equivalence Class 1, 2
	COMMENT	
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-031]
	COMMENT The function does nothing
	COMMENT when
	COMMENT 1.PLL I2S is equal to ONE 
	COMMENT 2.result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_PLLI2S is not equal to RCC_PERIPHCLK_PLLI2S 
	COMMENT Equivalence Class 77, 78
	COMMENT	
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-032]
	COMMENT The function does the following:
	COMMENT 1. Calls the macro __HAL_RCC_PLLI2S_ENABLE to enable the PLLI2S clock source.
	COMMENT 2. Sets tick start to return value of HALGetTick.
	COMMENT 3. loop till __HAL_RCC_GET_FLAG with parameter RCC_FLAG_PLLI2SRDY is equal to RESET and does the following 
	COMMENT    a) returns HAL_TIMEOUT if difference of return value of  HALGetTick and tick start is greater than PLLI2S_TIMEOUT_VALUE.
	COMMENT When PLL I2S is equal to ONE or PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT while loop is covered for 1 times.
	COMMENT Equivalence Class 80, 81		
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--The Extended Clock to be configured.
					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_I2S,                  	ev = init

					--Specifies I2S Clock source Selection.
					VAR periph_clk_init.I2sClockSelection,      	init = RCC_I2SCLKSOURCE_PLLI2S,             ev = init           
				
					--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)
					VAR periph_clk_init.PLLI2S.PLLI2SN,         	init = 50,                             		ev = init   

					--Specifies the division factor for I2S clock (Min_Data = 2)     
					VAR periph_clk_init.PLLI2S.PLLI2SR,         	init = 2,                             		ev = init
            
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for minimum value

					--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG
					VAR PTU_RCC_BASE.CFGR,                  		init = 0x0,                             	ev = init

					--Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register 	
					VAR PTU_RCC_BASE.PLLI2SCFGR,            		init = 0x0,                             	ev = 0x20000C80
			
					--Disable the PLLI2S/Enable the PLLI2S  	
					VAR PTU_RCC_BASE.CR,                    		init = 0x0,                             	ev = 0x4000000

			COMMENT OUTPUT SECTION:         	
		
					--holds the return value of the function ret_HalRccExPeriphCLKConfig	
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           ev = HAL_TIMEOUT
               
         SIMUL
            --Get Start Tick
            STUB  HALGetTick() 100
               
            STUB  HALGetTick() 50
               
            STUB  HALGetTick() 200               
                     
        END SIMUL
               
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
    END ELEMENT

END TEST -- TEST 1

TEST 64
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-001]
	COMMENT The function does nothing when I2sClockSelection of periph_clk_init is not equal to RCC_I2SCLKSOURCE_PLLI2S. 
	COMMENT Equivalence Class 3
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
				--The Extended Clock to be configured.
				VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_I2S,                   	ev = init

			--Specifies I2S Clock source Selection.
				VAR periph_clk_init.I2sClockSelection,      	init = (T_UINT32)0x00000001U,             		ev = init           
		
			   
			COMMENT INPUT/OUTPUT SECTION:

				--RCC members tested for minimum value

			--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG
				VAR PTU_RCC_BASE.CFGR,                  		init = 0x0,                             		ev = (T_UINT32)0x00000001U
			
			COMMENT OUTPUT SECTION:         
					
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
				VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
		 
			--None               
                     
        END SIMUL               
        
		-- Calling the Unit Under Test :		
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
    END ELEMENT

END TEST -- TEST 64

TEST 2
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-027]
	COMMENT The function does the following when PLL I2S is equal to ONE or PeriphClockSelection of  periph_clk_init is equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT 1.Call the macro __HAL_RCC_PLLI2S_DISABLE to disable the PLLI2S.
	COMMENT 2.Set tick start to return value of  HALGetTick.
	COMMENT 3.loop till return value of __HAL_RCC_GET_FLAG with RCC_FLAG_PLLI2SRDY is not equal to RESET.
	COMMENT 	a) Returns HAL_TIMEOUT when difference of return value of HALGetTick and tick start is greater than PLLI2S_TIMEOUT_VALUE
	COMMENT 	b) does nothing when difference of return value of HALGetTick and tick start is less than PLLI2S_TIMEOUT_VALUE
	COMMENT while loop is covered for 1 or more times.
	COMMENT modified and multiple conditions TX.
	COMMENT Equivalence Class 1, 2 , 75, 79, 81, 82,20
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--The Extended Clock to be configured.
					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_I2S,                   	ev = init

					--Specifies I2S Clock source Selection.
						VAR periph_clk_init.I2sClockSelection,      init = RCC_I2SCLKSOURCE_PLLI2S,             	ev = init           
					
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for nominal value
					--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG	
					VAR PTU_RCC_BASE.CFGR,                  		init = 0x2000000,                           	ev = init
					
					--Disable the PLLI2S/Enable the PLLI2S  
					VAR PTU_RCC_BASE.CR,                    		init = 0x8000000,                           	ev = init
			
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,            	init = HAL_ERROR,                           	ev = HAL_TIMEOUT
               
        SIMUL
			--Get Start Tick
		   
			STUB  HALGetTick() 240
						
			STUB  HALGetTick() 250
					   
			STUB  HALGetTick() 260
					   
			STUB  HALGetTick() 4000
               
                     
        END SIMUL
               
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
    END ELEMENT

END TEST -- TEST 2

TEST 3
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-027]
	COMMENT The function does the following when PLL I2S is equal to ONE or PeriphClockSelection of  periph_clk_init is equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT 1.Call the macro __HAL_RCC_PLLI2S_DISABLE to disable the PLLI2S.
	COMMENT 2.Set tick start to return value of  HALGetTick.
	COMMENT 3.loop till return value of __HAL_RCC_GET_FLAG with RCC_FLAG_PLLI2SRDY is not equal to RESET.
	COMMENT 	a) Returns HAL_TIMEOUT when difference of return value of HALGetTick and tick start is greater than PLLI2S_TIMEOUT_VALUE
	COMMENT while loop is covered for 1 time.
	COMMENT modified and multiple conditions TX.
	COMMENT Equivalence Class 1, 2 , 75, 79, 81
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:

					--The Extended Clock to be configured.
					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_I2S,                   	ev = init

					--Specifies I2S Clock source Selection.
					VAR periph_clk_init.I2sClockSelection,      	init = RCC_I2SCLKSOURCE_PLLI2S,             	ev = init           
						
			COMMENT INPUT/OUTPUT SECTION:
			
					--RCC members tested for nominal value
					--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG	
					VAR PTU_RCC_BASE.CFGR,                  		init = 0x2000000,                           	ev = init
						
					--Disable the PLLI2S/Enable the PLLI2S 
					VAR PTU_RCC_BASE.CR,                    		init = (T_UINT32)0xFFFFFFFF,                      		ev = 0xFBFFFFFF
			
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,            	init = HAL_ERROR,                           	ev = HAL_TIMEOUT
				   
        SIMUL
               
            --Get Start Tick
            STUB  HALGetTick() 100
               
            STUB  HALGetTick() 250        
                          
                     
        END SIMUL
               
		-- Calling the Unit Under Test :              
		#ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
    END ELEMENT

END TEST -- TEST 3

TEST 4
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-001]
	COMMENT The function does nothing when result of bitwise AND operation of PeriphClockSelection of periph_clk_init and 
	COMMENT RCC_PERIPHCLK_SAI1 is not equal to RCC_PERIPHCLK_SAI1.
	COMMENT Equivalence Class 4
	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-002]
	COMMENT The function does the following when result of bitwise AND operation of PeriphClockSelection of periph_clk_init and 
	COMMENT RCC_PERIPHCLK_SAI1 is equal to RCC_PERIPHCLK_SAI1.
	COMMENT 1.Configure SAI1 clock source by calling the macro __HAL_RCC_SAI1_CONFIG with Sai1ClockSelection of periph_clk_init as its parameter.
	COMMENT 2.Set PLL I2S to ONE when Sai1ClockSelection of periph_clk_init is equal to RCC_SAI1CLKSOURCE_PLLI2S.
	COMMENT Equivalence Class 5, 6
	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-027]
	COMMENT The function does the following when PLL I2S is equal to ONE or PeriphClockSelection of  periph_clk_init is equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT 1.Call the macro __HAL_RCC_PLLI2S_DISABLE to disable the PLLI2S.
	COMMENT 2.Set tick start to return value of  HALGetTick.
	COMMENT 3.do not loop when return value of __HAL_RCC_GET_FLAG with RCC_FLAG_PLLI2SRDY is equal to RESET.
	COMMENT while loop is covered for 0 time.
	COMMENT modified and multiple conditions TX.
	COMMENT Equivalence Class 5, 6 , 75, 80	
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-028]
	COMMENT The function does nothing
	COMMENT when
	COMMENT 1.PLL I2S is equal to ONE
	COMMENT 2.RCC_PERIPHCLK_I2S is not equal to result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_I2S.
	COMMENT modified and multiple conditions FX.	
	COMMENT Equivalence Class 75, 4
	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-032]
	COMMENT The function does the following:
	COMMENT 1. Calls the macro __HAL_RCC_PLLI2S_ENABLE to enable the PLLI2S clock source.
	COMMENT 2. Sets tick start to return value of HALGetTick.
	COMMENT 3. loop till __HAL_RCC_GET_FLAG with parameter RCC_FLAG_PLLI2SRDY is equal to RESET and does the following 
	COMMENT    a) returns HAL_TIMEOUT if difference of return value of  HALGetTick and tick start is greater than PLLI2S_TIMEOUT_VALUE.
	COMMENT When PLL I2S is equal to ONE or PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT while loop is covered for 1 times.
	COMMENT Equivalence Class 80, 81	
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:

					--The Extended Clock to be configured.
					VAR periph_clk_init.PeriphClockSelection,    	init = RCC_PERIPHCLK_SAI1,                  	ev = init
		 
					--Specifies SAI1 Clock Prescalers Selection
					VAR periph_clk_init.Sai1ClockSelection,     	init = RCC_SAI1CLKSOURCE_PLLI2S,                ev = init
					
					--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)       
					VAR periph_clk_init.PLLSAI.PLLSAIN,         	init = 50,                              		ev= init    
					
					--Specifies he division factor for SAI1 clock (Min_Data = 2)
					VAR periph_clk_init.PLLSAI.PLLSAIQ,         	init = 2,                               		ev= init
					 
			COMMENT INPUT/OUTPUT SECTION:
					   
					VAR PTU_RCC_BASE.CR,                    		init = 0x0,                             		ev = 0x04000000U
					
					VAR PTU_RCC_BASE.PLLSAICFGR,            		init = RCC_PLLSAICFGR_PLLSAIP,              	ev = init
					
					VAR PTU_RCC_BASE.DCKCFGR1,              		init = 0x0,                             		ev = 0xFFFFFFFF
			
			COMMENT OUTPUT SECTION:
					--holds the return value of the function HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,      			init = HAL_ERROR,       						ev = HAL_TIMEOUT
             
        SIMUL
			--Get Start Tick          
			STUB  HALGetTick() 100
					
			STUB  HALGetTick() 50
					
			STUB  HALGetTick() 200						
                                                        
        END SIMUL
           
        -- Calling the Unit Under Test :             
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

END TEST -- TEST 4   

TEST 5
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-002]
	COMMENT The function does the following when result of bitwise AND operation of PeriphClockSelection of periph_clk_init and 
	COMMENT RCC_PERIPHCLK_SAI1 is equal to RCC_PERIPHCLK_SAI1.
	COMMENT 1.Configure SAI1 clock source by calling the macro __HAL_RCC_SAI1_CONFIG with Sai1ClockSelection of periph_clk_init as its parameter.
	COMMENT 2.does nothing when Sai1ClockSelection of periph_clk_init is not equal to RCC_SAI1CLKSOURCE_PLLI2S.
	COMMENT 3.Sets PLL SAI to ONE if Sai1ClockSelection of periph_clk_init is equal to RCC_SAI1CLKSOURCE_PLLSAI else do nothing.
	COMMENT Equivalence Class 7, 8
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-027]
	COMMENT The function does nothing when PLL I2S is not equal to ONE or PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT modified and multiple conditions FF.
	COMMENT Equivalence Class 76, 78
	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-033]
	COMMENT The function does the following if PLL SAI is equal to ONE.
	COMMENT 1.Calls the macro __HAL_RCC_PLLSAI_DISABLE to disable the PLLSAI clock source.
	COMMENT 2.Sets tick start to return value of HALGetTick.
	COMMENT 3. loop till return value of __HAL_RCC_PLLSAI_GET_FLAG is not equal to RESET and does the following returns HAL_TIMEOUT
    COMMENT when difference of HALGetTick and tick start is greater than PLLSAI_TIMEOUT_VALUE. 
	COMMENT while loop is covered for 1 times.
	COMMENT Equivalence Class 84, 86, 88, 91
	COMMENT </TD>


    ELEMENT
        
			COMMENT INPUT SECTION:

					--The Extended Clock to be configured.
					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_SAI1,               	ev = init
		 
					--Specifies SAI1 Clock Prescalers Selection
					VAR periph_clk_init.Sai1ClockSelection,     	init = RCC_SAI1CLKSOURCE_PLLSAI,         	ev = init
					
					--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)       
					VAR periph_clk_init.PLLSAI.PLLSAIN,         	init = 50,                              	ev= init    
					
					--Specifies he division factor for SAI1 clock (Min_Data = 2)
					VAR periph_clk_init.PLLSAI.PLLSAIQ,         	init = 2,                               	ev= init
				
	 
			COMMENT INPUT/OUTPUT SECTION:

					--Configure SAI1 Clock source by calling macro __HAL_RCC_SAI1_CONFIG
					VAR PTU_RCC_BASE.DCKCFGR1,               		init = 0x0,                             	ev = init
					
					-- Disable PLLSAI Clock 
					VAR PTU_RCC_BASE.CR,                    		init = 0x20000000U,                      	ev = init
						
			COMMENT OUTPUT SECTION:
					--holds the return value of the function HalRccExPeriphCLKConfig
					 VAR ret_HalRccExPeriphCLKConfig,      			init = HAL_ERROR,       					ev = HAL_TIMEOUT
             
        SIMUL
            --Get Start Tick          
            STUB  HALGetTick() 100
                            
            STUB  HALGetTick() 250        
                                         
        END SIMUL
           
    -- Calling the Unit Under Test :                  
    #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
    END ELEMENT

END TEST -- TEST 5 

TEST 6
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-033]
	COMMENT The function does the following if PLL SAI is equal to ONE.
	COMMENT 1.Calls the macro __HAL_RCC_PLLSAI_DISABLE to disable the PLLSAI clock source.
	COMMENT 2.Sets tick start to return value of HALGetTick.
	COMMENT 3. loop till return value of __HAL_RCC_PLLSAI_GET_FLAG is not equal to RESET and does the following 
	COMMENT 	a) does nothing when difference of HALGetTick and tick start is less than PLLSAI_TIMEOUT_VALUE.
    COMMENT  	b) returns HAL_TIMEOUT when difference of HALGetTick and tick start is greater than PLLSAI_TIMEOUT_VALUE.
	COMMENT while loop is covered for 2 or more times.
	COMMENT Equivalence Class 84, 86, 87, 88, 89, 91,90
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:

					--The Extended Clock to be configured.
					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_SAI1,                  	ev = init
		
					--Specifies SAI1 Clock Prescalers Selection
					VAR periph_clk_init.Sai1ClockSelection,     	init = RCC_SAI1CLKSOURCE_PLLSAI,                ev = init
					
					--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)       
					VAR periph_clk_init.PLLSAI.PLLSAIN,         	init = 50,                              		ev= init    
					
					--Specifies he division factor for SAI1 clock (Min_Data = 2)
					VAR periph_clk_init.PLLSAI.PLLSAIQ,         	init = 2,                               		ev= init				
	 
			COMMENT INPUT/OUTPUT SECTION:

					--Configure SAI1 Clock source by calling macro __HAL_RCC_SAI1_CONFIG
					VAR PTU_RCC_BASE.DCKCFGR1,               		init = 0x0,                             		ev = init

					--holds the member value of the structure RCC
					VAR PTU_RCC_BASE.CFGR,                  		init = 0x0,                             		ev = init
					
					VAR PTU_RCC_BASE.CR,                    		init = 0x20000000U,                         	ev = init
						
			COMMENT OUTPUT SECTION:
					--holds the return value of the function HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,      			init = HAL_ERROR,       						ev = HAL_TIMEOUT
             
        SIMUL
			--Get Start Tick          
			STUB  HALGetTick() 240
						
			STUB  HALGetTick() 250
			
			STUB  HALGetTick() 340			
					   
			STUB  HALGetTick() 400
                                                        
        END SIMUL
           
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
    END ELEMENT

END TEST -- TEST 6 

TEST 7
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-002]
	COMMENT The function does nothing when result of bitwise AND operation of PeriphClockSelection of periph_clk_init and 
	COMMENT RCC_PERIPHCLK_SAI1 is not equal to RCC_PERIPHCLK_SAI1.
	COMMENT Equivalence Class 10
	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-003]
	COMMENT The function does the following when result of bitwise AND operation of PeriphClockSelection of periph_clk_init and 
	COMMENT RCC_PERIPHCLK_SAI2 is equal to RCC_PERIPHCLK_SAI2.
	COMMENT 1.Configure SAI2 clock source by calling the macro __HAL_RCC_SAI2_CONFIG with Sai2ClockSelection of  periph_clk_init as its parameter.
	COMMENT 2.Sets PLL I2S to ONE when Sai2ClockSelection of periph_clk_init is equal to RCC_SAI2CLKSOURCE_PLLI2S.
	COMMENT Equivalence Class 11, 12, 15
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:

					--The Extended Clock to be configured.
					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_SAI2,                  	ev = init
		 
					--Specifies SAI1 Clock Prescalers Selection
					VAR periph_clk_init.Sai2ClockSelection,     	init = RCC_SAI2CLKSOURCE_PLLI2S ,               ev = init
					
					--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)       
					VAR periph_clk_init.PLLI2S.PLLI2SN,         	init = 50,                              		ev= init    
					
					--Specifies he division factor for SAI1 clock (Min_Data = 2)
					VAR periph_clk_init.PLLI2S.PLLI2SQ,         	init = 2,                               		ev= init
				
	 
			COMMENT INPUT/OUTPUT SECTION:

					--Configure SAI1 Clock source by calling macro __HAL_RCC_SAI1_CONFIG
					VAR PTU_RCC_BASE.DCKCFGR1,               		init = 0x1,                             		ev = 0xFFFFFFFF

					--holds the member value of the structure RCC
					VAR PTU_RCC_BASE.CFGR,                  		init = 0x0,                             		ev = init
					
					VAR PTU_RCC_BASE.CR,                    		init = 0x20000000U,                         	ev = 0x24000000

				VAR PTU_RCC_BASE.PLLI2SCFGR,            			init = 0x1,              						ev = 0x2000C80
				
						
			COMMENT OUTPUT SECTION:
					--holds the return value of the function HalRccExPeriphCLKConfig
					  VAR ret_HalRccExPeriphCLKConfig,      		init = HAL_ERROR,       						ev = HAL_TIMEOUT
             
        SIMUL
			--Get Start Tick          
			STUB  HALGetTick() 240
						
			STUB  HALGetTick() 250
					   
			STUB  HALGetTick() 400
                                                        
        END SIMUL
           
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

END TEST -- TEST 7
  
TEST 8
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>	
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-003]
	COMMENT The function does the following when result of bitwise AND operation of PeriphClockSelection of periph_clk_init and 
	COMMENT RCC_PERIPHCLK_SAI2 is equal to RCC_PERIPHCLK_SAI2.
	COMMENT 1.Configure SAI2 clock source by calling the macro __HAL_RCC_SAI2_CONFIG with Sai2ClockSelection of  periph_clk_init as its parameter.
	COMMENT 2.does nothing when Sai2ClockSelection of periph_clk_init is not equal to RCC_SAI2CLKSOURCE_PLLI2S.
	COMMENT 3.Set PLL SAI to ONE if Sai2ClockSelection of periph_clk_init is equal to RCC_SAI2CLKSOURCE_PLLSAI 
	COMMENT Equivalence Class 11, 13, 14
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:

					--The Extended Clock to be configured.
					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_SAI2,                  	ev = init
		 
					--Specifies SAI1 Clock Prescalers Selection
					VAR periph_clk_init.Sai2ClockSelection,     	init = RCC_SAI2CLKSOURCE_PLLSAI,               	ev = init
					
					--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)       
					VAR periph_clk_init.PLLI2S.PLLI2SN,         	init = 50,                              		ev= init    
					
					--Specifies he division factor for SAI1 clock (Min_Data = 2)
					VAR periph_clk_init.PLLI2S.PLLI2SQ,         	init = 2,                               		ev= init
				
	 
			COMMENT INPUT/OUTPUT SECTION:

				--Configure SAI1 Clock source by calling macro __HAL_RCC_SAI1_CONFIG
					VAR PTU_RCC_BASE.DCKCFGR1,               		init = 0x1,                             		ev = init

					--holds the member value of the structure RCC
					VAR PTU_RCC_BASE.CFGR,                  		init = 0x0,                             		ev = init
					
					VAR PTU_RCC_BASE.CR,                    		init = 0x20000000U,                         	ev = 0x20000000

					VAR PTU_RCC_BASE.PLLI2SCFGR,            		init = 0x1,              						ev = init
				
						
			COMMENT OUTPUT SECTION:
					--holds the return value of the function HalRccExPeriphCLKConfig
					  VAR ret_HalRccExPeriphCLKConfig,      		init = HAL_ERROR,       						ev = HAL_TIMEOUT
             
        SIMUL
               	--Get Start Tick          
              	STUB  HALGetTick() 240
                            
              	STUB  HALGetTick() 250
                           
             	STUB  HALGetTick() 400
                                                        
        END SIMUL
           
         -- Calling the Unit Under Test :             
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 8

TEST 9
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-003]
	COMMENT The function does nothing when result of bitwise AND operation of PeriphClockSelection of periph_clk_init and 
	COMMENT RCC_PERIPHCLK_SAI2 is not equal to RCC_PERIPHCLK_SAI2.
	COMMENT Equivalence Class 16
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-004]
	COMMENT The function sets PLL I2S to ONE when result of PeriphClockSelection of periph_clk_init bitwise AND 
	COMMENT RCC_PERIPHCLK_SPDIFRX is equal to RCC_PERIPHCLK_SPDIFRX.
	COMMENT Equivalence Class 17
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-030]
	COMMENT The function calls the macro __HAL_RCC_PLLI2S_CONFIG to configure PLLI2S clock source with the below parameters 
	COMMENT -	 PLLI2SN of PLLI2S of periph_clk_init 
	COMMENT -	 PLLI2SP of PLLI2S of periph_clk_init
	COMMENT -	 PLLI2SCFGR of RCC bitwise AND with RCC_PLLI2SCFGR_PLLI2SQ right shifted by POSITION_VAL with parameter RCC_PLLI2SCFGR_PLLI2SQ.
	COMMENT -	 PLLI2SCFGR of RCC bitwise AND with RCC_PLLI2SCFGR_PLLI2SR right shifted by POSITION_VAL with parameter RCC_PLLI2SCFGR_PLLI2SR.
	COMMENT when
	COMMENT 1.PLL I2S is equal to ONE or PeriphClockSelection of  periph_clk_init is equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT 2.result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SPDIFRX is equal to RCC_PERIPHCLK_SPDIFRX.
	COMMENT Equivalence Class 17	
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--The Extended Clock to be configured.
					VAR periph_clk_init.PeriphClockSelection,      	 	init = RCC_PERIPHCLK_SPDIFRX,             	ev = init
					   
					--Configure the PLLI2S division factors by calling macro  __HAL_RCC_PLLI2S_CONFIG (Min_Data = 50)
					VAR periph_clk_init.PLLI2S.PLLI2SN,         		init = 50,                             		ev = init          
					VAR periph_clk_init.PLLI2S.PLLI2SR,         		init = 50,                             		ev = init
				
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for minimum value

					--Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register 
					VAR PTU_RCC_BASE.PLLI2SCFGR ,            			init = 0x0,                             	ev = 0xC80
					
					--Disable the PLLI2S/Enable the PLLI2S  
					VAR PTU_RCC_BASE.CR,                    			init = 0x0,                             	ev = 0x4000000
			
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
						VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           ev = HAL_TIMEOUT
               
        SIMUL
                --Get Start Tick
                STUB  HALGetTick() 100
               
                STUB  HALGetTick() 50
               
                STUB  HALGetTick() 200
           
        END SIMUL
               
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

END TEST -- TEST 9

TEST 10
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-004]
	COMMENT The function does nothing when result of PeriphClockSelection of periph_clk_init bitwise AND 
	COMMENT RCC_PERIPHCLK_SPDIFRX is not equal to RCC_PERIPHCLK_SPDIFRX.
	COMMENT Equivalence Class 18
	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-005]
	COMMENT The function does the following when result of PeriphClockSelection of periph_clk_init bitwise AND RCC_PERIPHCLK_RTC is equal to RCC_PERIPHCLK_RTC.
	COMMENT 1.Enable Power Clock by calling the macro __HAL_RCC_PWR_CLK_ENABLE.
	COMMENT 2.Sets CR1 of PWR to result of bitwise OR operation of CR1 of PWR and PWR_CR1_DBP.
	COMMENT 3.Tick start is set to return value of function HALGetTick.
	COMMENT while loop is covered for 0 times.
	COMMENT Equivalence Class 19, 21
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-006]
	COMMENT The function does the following if result of PeriphClockSelection of periph_clk_init bitwise AND RCC_PERIPHCLK_RTC is equal to RCC_PERIPHCLK_RTC.
	COMMENT 1.Set register 0 to result of BDCR  of RCC bitwise AND with RCC_BDCR_RTCSEL.
	COMMENT 2.Does nothing when register 0 is equal to ZERO.
	COMMENT Equivalence Class 27
	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-008]
	COMMENT The function calls the macro __HAL_RCC_RTC_CONFIG to configure the real time clock with RTCClockSelection of periph_clk_init as parameter 
	COMMENT when result of PeriphClockSelection of periph_clk_init bitwise AND RCC_PERIPHCLK_RTC is equal to RCC_PERIPHCLK_RTC.
	COMMENT Equivalence Class None
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--The Extended Clock to be configured.
					VAR periph_clk_init.PeriphClockSelection,  	init = RCC_PERIPHCLK_RTC,                   ev = init
			   
					--Configure the PLLI2S division factors by calling macro  __HAL_RCC_PLLI2S_CONFIG (Min_Data = 50)
					VAR periph_clk_init.PLLI2S.PLLI2SN,         init = 50,                             		ev = init          
					VAR periph_clk_init.PLLI2S.PLLI2SR,         init = 50,                             		ev = init
            
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for minimum value

					--Enable Power Clock
					VAR PTU_RCC_BASE.APB1ENR ,            		init = 0x0,                             	ev = (T_UINT32)0x10000000U

					--Enable write access to Backup domain
					VAR PTU_PWR_BASE.CR1 ,            			init = 0x0,                             	ev = (T_UINT32)0x00000100U

					--Enable Power Clock
					VAR PTU_RCC_BASE.BDCR ,            			init = 0x0,                             	ev = init

        
        COMMENT OUTPUT SECTION:         
                
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        	init = HAL_ERROR,                           ev = HAL_OK
               
        SIMUL
                --Get Start Tick
                STUB  HALGetTick() 100              
                             
        END SIMUL
               
        --Callling under unit test              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

END TEST -- TEST 10

TEST 11
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-006]
	COMMENT The function does the following when result of PeriphClockSelection of periph_clk_init bitwise AND RCC_PERIPHCLK_RTC is equal to RCC_PERIPHCLK_RTC.
	COMMENT 1.Sets register 0 to result of BDCR  of RCC bitwise AND with RCC_BDCR_RTCSEL.
	COMMENT 2.Does the following when register 0 is not equal to ZERO and register 0 is not equal to result of bitwise AND 
	COMMENT operation of RTCClockSelection of periph_clk_init and RCC_BDCR_RTCSEL.
	COMMENT 	a.Set register 0 to result of BDCR of RCC bitwise AND with negation of RCC_BDCR_RTCSEL.
	COMMENT 	b.Calls the macro __HAL_RCC_BACKUPRESET_FORCE to set the backup domain  register of RCC.
	COMMENT 	c.Calls the macro __HAL_RCC_BACKUPRESET_RELEASE to reset the backup domain  register of RCC.
	COMMENT 	d.Restores the contents of BDCR register with register 0.
	COMMENT Equivalence Class None	
	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-007]
	COMMENT The function does nothing when 
	COMMENT 1.Result of PeriphClockSelection of periph_clk_init bitwise AND RCC_PERIPHCLK_RTC is equal to RCC_PERIPHCLK_RTC.
	COMMENT 2.register 0 is not equal to ZERO and register 0 is not equal to result of 
	COMMENT bitwise AND operation of RTCClockSelection of periph_clk_init and RCC_BDCR_RTCSEL
	COMMENT 3.Return value of the macro HAL_IS_BIT_SET with  BDCR of RCC and RCC_BDCR_LSEON is equal to RESET.
	COMMENT Equivalence Class 26, 28, 31	
	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-008]
	COMMENT The function calls the macro __HAL_RCC_RTC_CONFIG to configure the real time clock with RTCClockSelection of periph_clk_init as parameter 
	COMMENT when result of PeriphClockSelection of periph_clk_init bitwise AND RCC_PERIPHCLK_RTC is equal to RCC_PERIPHCLK_RTC.
	COMMENT Equivalence Class None
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--The Extended Clock to be configured.
					VAR periph_clk_init.PeriphClockSelection,    	init = RCC_PERIPHCLK_RTC,                   	ev = init

					--The Extended Clock to be configured.
					VAR periph_clk_init.RTCClockSelection,      	init = 0,                   					ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for minimum value

					--Enable Power Clock
					VAR PTU_RCC_BASE.APB1ENR ,            			init = 0x1,                             		ev = (T_UINT32)0x10000001U

					--Enable write access to Backup domain
					VAR PTU_PWR_BASE.CR1 ,            				init = 0x1,                             		ev = (T_UINT32)0x00000101U

					--Enable Power Clock
					VAR PTU_RCC_BASE.BDCR ,            				init = RCC_BDCR_RTCSEL,                         ev = 0

			COMMENT OUTPUT SECTION:         
							
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
						VAR ret_HalRccExPeriphCLKConfig,        	init = HAL_ERROR,                          		ev = HAL_OK
               
         SIMUL
                --Get Start Tick
                STUB  HALGetTick() 100          
                              
        END SIMUL
               
        --Calling unit under test              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

END TEST -- TEST 11
	
TEST 82
FAMILY nominal

	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-007]
	COMMENT The function does the following 
	COMMENT a.Set tick start to return value of the function HALGetTick.
	COMMENT b.Loops till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSERDY is equal to RESET and does the following,
	COMMENT 	a) does nothing when difference of return value of HALGetTick and tick start is equal to RCC_LSE_TIMEOUT_VALUE.
	COMMENT 	b) returns HAL_TIMEOUT when difference of return value of HALGetTick and tick start is greater than RCC_LSE_TIMEOUT_VALUE otherwise do nothing. 
	COMMENT when 
	COMMENT 1.Result of PeriphClockSelection of periph_clk_init bitwise AND RCC_PERIPHCLK_RTC is equal to RCC_PERIPHCLK_RTC.
	COMMENT 2. register 0 is not equal to ZERO and register 0 is not equal to result of 
	COMMENT bitwise AND operation of RTCClockSelection of periph_clk_init and RCC_BDCR_RTCSEL
	COMMENT 3.Return value of the macro HAL_IS_BIT_SET with  BDCR of RCC and RCC_BDCR_LSEON is not equal to RESET.
	COMMENT while loop is covered 2 or more times.
	COMMENT Equivalence Class 26, 28, 30, 32,34, 35,36	
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--The Extended Clock to be configured.
					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_RTC,                   	ev = init

					--The Extended Clock to be configured.
					VAR periph_clk_init.RTCClockSelection,       	init = 0,                   					ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for minimum value

					--Enable Power Clock
					VAR PTU_RCC_BASE.APB1ENR ,            			init = 0x1,                             		ev = (T_UINT32)0x10000001U

					--Enable write access to Backup domain
					VAR PTU_PWR_BASE.CR1 ,            				init = 0x1,                             		ev = (T_UINT32)0x00000101U

					--Enable Power Clock
					VAR PTU_RCC_BASE.BDCR ,            				init = 0x301,                         			ev = 0x00000001U

			COMMENT OUTPUT SECTION:         
							
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
						VAR ret_HalRccExPeriphCLKConfig,        	init = HAL_ERROR,                          		ev = HAL_TIMEOUT
               
         SIMUL
                --Get Start Tick
			--Get Start Tick
		   
            STUB  HALGetTick() 100
               
            STUB  HALGetTick() 4000
               
            STUB  HALGetTick() 4000 

 		STUB  HALGetTick() 10000
                                
        END SIMUL
               
        --Calling unit under test              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

END TEST -- TEST 82

TEST 83
FAMILY nominal

	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-007]
	COMMENT The function does the following 
	COMMENT a.Set tick start to return value of the function HALGetTick.
	COMMENT b.Loops till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSERDY is equal to RESET and does the following,
	COMMENT 	i) returns HAL_TIMEOUT when difference of return value of HALGetTick and tick start is greater than RCC_LSE_TIMEOUT_VALUE otherwise do nothing. 
	COMMENT when 
	COMMENT 1.Result of PeriphClockSelection of periph_clk_init bitwise AND RCC_PERIPHCLK_RTC is equal to RCC_PERIPHCLK_RTC.
	COMMENT 2. register 0 is not equal to ZERO and register 0 is not equal to result of 
	COMMENT bitwise AND operation of RTCClockSelection of periph_clk_init and RCC_BDCR_RTCSEL
	COMMENT 3.Return value of the macro HAL_IS_BIT_SET with  BDCR of RCC and RCC_BDCR_LSEON is not equal to RESET.
	COMMENT while loop is covered 1 time.
	COMMENT Equivalence Class 26, 28, 30, 32,34	
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--The Extended Clock to be configured.
					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_RTC,                   	ev = init

					--The Extended Clock to be configured.
					VAR periph_clk_init.RTCClockSelection,       	init = 0,                   					ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for minimum value

					--Enable Power Clock
					VAR PTU_RCC_BASE.APB1ENR ,            			init = 0x1,                             		ev = (T_UINT32)0x10000001U

					--Enable write access to Backup domain
					VAR PTU_PWR_BASE.CR1 ,            				init = 0x1,                             		ev = (T_UINT32)0x00000101U

					--Enable Power Clock
					VAR PTU_RCC_BASE.BDCR ,            				init = 0x301,                         			ev = 0x00000001U

			
			COMMENT OUTPUT SECTION:         
							
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                          		ev = HAL_TIMEOUT
               
         SIMUL
                --Get Start Tick
			--Get Start Tick
		   
            STUB  HALGetTick() 100
               
            STUB  HALGetTick() 4000
               
            STUB  HALGetTick() 10000                        
                                    
        END SIMUL
               
        --Calling unit under test              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 83

TEST 12
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-006]
	COMMENT does nothing when register 0 is not equal to ZERO and register 0 is not equal to result of 
	COMMENT bitwise AND operation of RTCClockSelection of periph_clk_init and RCC_BDCR_RTCSEL
	COMMENT Equivalence Class 26 29
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--The Extended Clock to be configured.
					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_RTC,                   	ev = init
					
					--The Extended Clock to be configured.
					VAR periph_clk_init.RTCClockSelection,       	init = RCC_BDCR_RTCSEL+1,                   	ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for minimum value

				--Enable Power Clock
					VAR PTU_RCC_BASE.APB1ENR ,            			init = (T_UINT32)0xFFFFFFFF,                    ev = init

				--Enable write access to Backup domain
					VAR PTU_PWR_BASE.CR1 ,            				init = (T_UINT32)0xFFFFFFFF,                    ev = init

					--Enable Power Clock
					VAR PTU_RCC_BASE.BDCR ,            				init = RCC_BDCR_RTCSEL,                         ev = 0x00000301U
			
			COMMENT OUTPUT SECTION:         
					
				--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
				   
        SIMUL
                --Get Start Tick
                STUB  HALGetTick() 100              
                          
                                    
        END SIMUL
               
        -- Calling the Unit Under Test :             
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 12

TEST 13
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-009]
	COMMENT The function calls the macro __HAL_RCC_TIMCLKPRESCALER to configure Timer Prescaler with TIMPresSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_TIM is equal to RCC_PERIPHCLK_TIM. 
	COMMENT Equivalence Class 37
	COMMENT 	
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-033]
	COMMENT The function  does nothing,when PLL SAI is not equal to ONE.
	COMMENT Equivalence Class 85
	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-038]
	COMMENT The function returns HAL_OK from the function
	COMMENT Equivalence Class 92
	COMMENT This test case is evaluated by giving the minimum values to inputs.
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of structure periph_clk_init 

					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_TIM,                   	ev = init
					VAR periph_clk_init.TIMPresSelection,       	init = 0,                   					ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for minimum value

					--Holds the member values of structure T_RCC
					VAR PTU_RCC_BASE.DCKCFGR1,            			init = 0x0,                             		ev = init
					   
        COMMENT OUTPUT SECTION:         
                
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
						VAR ret_HalRccExPeriphCLKConfig,        	init = HAL_ERROR,                           	ev = HAL_OK
               
        SIMUL
                --No stub calls            
                       
        END SIMUL
               
        -- Calling the Unit Under Test :             
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 13

TEST 14
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-009]
	COMMENT The function calls the macro __HAL_RCC_TIMCLKPRESCALER to configure Timer Prescaler with TIMPresSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_TIM is equal to RCC_PERIPHCLK_TIM. 
	COMMENT Equivalence Class 37
	COMMENT This test case is evaluated by giving the nominal values to inputs.
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of structure periph_clk_init 

					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_TIM,                   	ev = init

					VAR periph_clk_init.TIMPresSelection,       	init = 0x100,                   				ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for nominal value

					--Holds the member values of structure T_RCC
					VAR PTU_RCC_BASE.DCKCFGR1,            			init = 0x100,                             		ev = init
				   
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
        SIMUL
                --No stub calls              
                             
        END SIMUL
               
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 14

TEST 15
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-009]
	COMMENT The function calls the macro __HAL_RCC_TIMCLKPRESCALER to configure Timer Prescaler with TIMPresSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_TIM is equal to RCC_PERIPHCLK_TIM. 
	COMMENT Equivalence Class 37
	COMMENT This test case is evaluated by giving the maximum values to inputs.
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of structure periph_clk_init 

					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_TIM,                   	ev = init

					VAR periph_clk_init.TIMPresSelection,       	init = (T_UINT32)0xFFFFFFFF,                   	ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for maximum value

					--Holds the member values of structure T_RCC
					VAR PTU_RCC_BASE.DCKCFGR1,            			init = (T_UINT32)0xFFFFFFFF,                    ev = init
				   
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                          
                                    
         END SIMUL
               
         -- Calling the Unit Under Test :             
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 15

TEST 16
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-009]
	COMMENT The function does nothing when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_TIM is equal to RCC_PERIPHCLK_TIM. 
	COMMENT Equivalence Class 38
	COMMENT	
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-010]
	COMMENT The function calls the macro __HAL_RCC_I2C1_CONFIG to configure the I2C1 clock source with  I2c1ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_I2C1 is equal to RCC_PERIPHCLK_I2C1
	COMMENT Equivalence Class 39
	COMMENT This test case is evaluated by giving the minimum values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
				--Holds the member values of structure periph_clk_init 

				VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_I2C1,                   	ev = init

				VAR periph_clk_init.I2c1ClockSelection,       	init = 0,                   					ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

				--RCC members tested for minimum value

				--Holds the member values of structure T_RCC
				VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x0,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
				--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        	init = HAL_ERROR,                           	ev = HAL_OK
               
        SIMUL
                --No stub calls          
                              
        END SIMUL
               
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 16

TEST 17
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-010]
	COMMENT The function calls the macro __HAL_RCC_I2C1_CONFIG to configure the I2C1 clock source with  I2c1ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_I2C1 is equal to RCC_PERIPHCLK_I2C1
	COMMENT Equivalence Class 39
	COMMENT This test case is evaluated by giving the nominal values to inputs.
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of structure periph_clk_init 

					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_I2C1,                   	ev = init

					VAR periph_clk_init.I2c1ClockSelection,       	init = 0x100,                   				ev = init
					 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for nominal value

					--Holds the member values of structure T_RCC
					VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x100,                             		ev = init
				   
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                          
                                    
         END SIMUL
               
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 17

TEST 18
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-010]
	COMMENT The function calls the macro __HAL_RCC_I2C1_CONFIG to configure the I2C1 clock source with  I2c1ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_I2C1 is equal to RCC_PERIPHCLK_I2C1
	COMMENT Equivalence Class 39
	COMMENT This test case is evaluated by giving the maximum values to inputs.
	COMMENT </TD>

    ELEMENT
			
			COMMENT INPUT SECTION:
					--Holds the member values of structure periph_clk_init 

					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_I2C1,                   	ev = init

					VAR periph_clk_init.I2c1ClockSelection,       	init = (T_UINT32)0xFFFFFFFF,                   	ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for maximum value

					--Holds the member values of structure T_RCC
					VAR PTU_RCC_BASE.DCKCFGR2,            			init = (T_UINT32)0xFFFFFFFF,                    ev = init
				   
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                                 
         END SIMUL
               
        -- Calling the Unit Under Test :             
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 18

TEST 19
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-010]
	COMMENT The function does nothing when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_I2C1 is equal to RCC_PERIPHCLK_I2C1
	COMMENT Equivalence Class 40
	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-011]
	COMMENT The function calls the macro __HAL_RCC_I2C2_CONFIG to configure the I2C2 clock source  with  I2c2ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_I2C2 is equal to RCC_PERIPHCLK_I2C2 
	COMMENT Equivalence Class 41
	COMMENT This test case is evaluated by giving the minimum values to inputs.
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of structure periph_clk_init 

					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_I2C2,                   	ev = init

					VAR periph_clk_init.I2c2ClockSelection,       	init = 0x0,                   					ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for minimum value

					--Holds the member values of structure T_RCC
					VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x0,                             		ev = init
				   
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
        SIMUL
                --No stub calls              
                            
         END SIMUL
               
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 19

TEST 20
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-011]
	COMMENT The function calls the macro __HAL_RCC_I2C2_CONFIG to configure the I2C2 clock source  with  I2c2ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_I2C2 is equal to RCC_PERIPHCLK_I2C2 
	COMMENT Equivalence Class 41
	COMMENT This test case is evaluated by giving the nominal values to inputs.
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of structure periph_clk_init 

					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_I2C2,                   	ev = init

					VAR periph_clk_init.I2c2ClockSelection,       	init = 0x100,                   				ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for nominal value

					--Holds the member values of structure T_RCC
					VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x100,                             		ev = init
					   
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                          
                                    
         END SIMUL
               
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 20

TEST 21
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-011]
	COMMENT The function calls the macro __HAL_RCC_I2C2_CONFIG to configure the I2C2 clock source  with  I2c2ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_I2C2 is equal to RCC_PERIPHCLK_I2C2 
	COMMENT Equivalence Class 41	
	COMMENT This test case is evaluated by giving the maximum values to inputs.
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of structure periph_clk_init 

					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_I2C2,                   	ev = init

					VAR periph_clk_init.I2c2ClockSelection,       	init = (T_UINT32)0xFFFFFFFF,                   	ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for maximum value

					--Holds the member values of structure T_RCC
					VAR PTU_RCC_BASE.DCKCFGR2,            			init = (T_UINT32)0xFFFFFFFF,                    ev = init
				   
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
        SIMUL
                --No stub calls              
                             
        END SIMUL
               
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 21

TEST 22
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-011]
	COMMENT The function does nothing when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_I2C2 is equal to RCC_PERIPHCLK_I2C2 
	COMMENT Equivalence Class  42
	COMMENT 	
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-012]
	COMMENT The function calls the macro __HAL_RCC_I2C3_CONFIG to configure the I2C3 clock source with  I2c3ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_I2C3 is equal to RCC_PERIPHCLK_I2C3
	COMMENT Equivalence Class 43
	COMMENT This test case is evaluated by giving the minimum values to inputs.
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of structure periph_clk_init 

					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_I2C3,                   	ev = init

					VAR periph_clk_init.I2c3ClockSelection,       	init = 0x0,                   					ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for minimum value

					--Holds the member values of structure T_RCC
					VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x0,                             		ev = init
				   
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                          
                                    
         END SIMUL
               
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 22

TEST 23
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-012]
	COMMENT The function calls the macro __HAL_RCC_I2C3_CONFIG to configure the I2C3 clock source with  I2c3ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_I2C3 is equal to RCC_PERIPHCLK_I2C3
	COMMENT Equivalence Class 43
	COMMENT This test case is evaluated by giving the nominal values to inputs.
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of structure periph_clk_init 

					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_I2C3,                   	ev = init

					VAR periph_clk_init.I2c3ClockSelection,       	init = 0x100,                   				ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for nominal value

					--Holds the member values of structure T_RCC
					VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x100,                             		ev = init
				   
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
				   
         SIMUL
                --No stub calls              
                             
         END SIMUL
               
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 23

TEST 24
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-012]
	COMMENT The function calls the macro __HAL_RCC_I2C3_CONFIG to configure the I2C3 clock source with  I2c3ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_I2C3 is equal to RCC_PERIPHCLK_I2C3
	COMMENT Equivalence Class 43
	COMMENT This test case is evaluated by giving the maximum values to inputs.
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of structure periph_clk_init 

					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_I2C3,                   	ev = init

					VAR periph_clk_init.I2c3ClockSelection,       	init = (T_UINT32)0xFFFFFFFF,                   	ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for maximum value

					--Holds the member values of structure T_RCC
					VAR PTU_RCC_BASE.DCKCFGR2,            			init = (T_UINT32)0xFFFFFFFF,                    ev = init
				   
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                          
                                    
         END SIMUL
               
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 24

TEST 25
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-012]
	COMMENT The function calls the macro __HAL_RCC_I2C3_CONFIG to configure the I2C3 clock source with  I2c3ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_I2C3 is equal to RCC_PERIPHCLK_I2C3
	COMMENT Equivalence Class 44	
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-013]
	COMMENT The function calls the macro __HAL_RCC_I2C4_CONFIG to configure the I2C4 clock source with  I2c4ClockSelection  of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_I2C4 is equal to RCC_PERIPHCLK_I2C4
	COMMENT Equivalence Class 45
	COMMENT This test case is evaluated by giving the minimum values to inputs.
	COMMENT </TD>

    ELEMENT
			
			COMMENT INPUT SECTION:
					--Holds the member values of structure periph_clk_init 

					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_I2C4,                   	ev = init

					VAR periph_clk_init.I2c4ClockSelection,       	init = 0x0,                   					ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for minimum value

					--Holds the member values of structure T_RCC
					VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x0,                             		ev = init
				   
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                           
         END SIMUL
               
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 25

TEST 26
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-013]
	COMMENT The function calls the macro __HAL_RCC_I2C4_CONFIG to configure the I2C4 clock source with  I2c4ClockSelection  of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_I2C4 is equal to RCC_PERIPHCLK_I2C4 
	COMMENT Equivalence Class 45
	COMMENT This test case is evaluated by giving the nominal values to inputs.
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of structure periph_clk_init 

					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_I2C4,                   	ev = init

					VAR periph_clk_init.I2c4ClockSelection,       	init = 0x100,                   				ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for nominal value

					--Holds the member values of structure T_RCC
					VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x100,                             		ev = init
				   
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                             
         END SIMUL
               
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 26

TEST 27
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-013]
	COMMENT The function calls the macro __HAL_RCC_I2C4_CONFIG to configure the I2C4 clock source with  I2c4ClockSelection  of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_I2C4 is equal to RCC_PERIPHCLK_I2C4
	COMMENT Equivalence Class 45
	COMMENT This test case is evaluated by giving the maximum values to inputs.
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of structure periph_clk_init 

					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_I2C4,                   	ev = init


					VAR periph_clk_init.I2c4ClockSelection,       	init = (T_UINT32)0xFFFFFFFF,                   	ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for maximum value

					--Holds the member values of structure T_RCC
					VAR PTU_RCC_BASE.DCKCFGR2,            			init = (T_UINT32)0xFFFFFFFF,                    ev = init
				   
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                          
         END SIMUL
               
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 27

TEST 28
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-013]
	COMMENT The function does nothing when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_I2C4 is equal to RCC_PERIPHCLK_I2C4
	COMMENT Equivalence Class 46
	COMMENT 	
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-014]
	COMMENT The function calls the macro __HAL_RCC_USART1_CONFIG to configure the USART1 clock source with  Usart1ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_USART1 is equal to RCC_PERIPHCLK_USART1 
	COMMENT Equivalence Class 47
	COMMENT This test case is evaluated by giving the minimum values to inputs.
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of structure periph_clk_init 

					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_USART1,                   	ev = init

					VAR periph_clk_init.Usart1ClockSelection,       init = 0x0,                   					ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for minimum value

					--Holds the member values of structure T_RCC
					VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x0,                             		ev = init
				   
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                            
        END SIMUL
               
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 28

TEST 29
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-014]
	COMMENT The function calls the macro __HAL_RCC_USART1_CONFIG to configure the USART1 clock source with  Usart1ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_USART1 is equal to RCC_PERIPHCLK_USART1 
	COMMENT Equivalence Class 47
	COMMENT This test case is evaluated by giving the nominal values to inputs.
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of structure periph_clk_init 

					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_USART1,                   	ev = init

					VAR periph_clk_init.Usart1ClockSelection,       init = 0x100,                   				ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for nominal value

					--Holds the member values of structure T_RCC
					VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x100,                             		ev = init
				   
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
        SIMUL
                --No stub calls              
                              
        END SIMUL               
                      
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 29

TEST 30
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-014]
	COMMENT The function calls the macro __HAL_RCC_USART1_CONFIG to configure the USART1 clock source with  Usart1ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_USART1 is equal to RCC_PERIPHCLK_USART1 
	COMMENT Equivalence Class 47
	COMMENT This test case is evaluated by giving the maximum values to inputs.
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of structure periph_clk_init 

					VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_USART1,                   	ev = init


					VAR periph_clk_init.Usart1ClockSelection,       init = (T_UINT32)0xFFFFFFFF,                   	ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for maximum value

					--Holds the member values of structure T_RCC
					VAR PTU_RCC_BASE.DCKCFGR2,            			init = (T_UINT32)0xFFFFFFFF,                    ev = init
				   
			COMMENT OUTPUT SECTION:         
					
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                           
         END SIMUL
               
         -- Calling the Unit Under Test :             
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 30

TEST 31
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-014]
	COMMENT The function does nothing when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_USART1 is equal to RCC_PERIPHCLK_USART1 
	COMMENT Equivalence Class 48
	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-015]
	COMMENT The function calls the macro __HAL_RCC_USART2_CONFIG to configure the USART2 clock source with  Usart2ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_USART2 is equal to RCC_PERIPHCLK_USART2 
	COMMENT Equivalence Class 49
	COMMENT This test case is evaluated by giving the minimum values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_USART2,                   	ev = init

            VAR periph_clk_init.Usart2ClockSelection,       init = 0x0,                   					ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

		--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x0,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
		--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                          
                                    
         END SIMUL               
                      
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 31

TEST 32
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-015]
	COMMENT The function calls the macro __HAL_RCC_USART2_CONFIG to configure the USART2 clock source with  Usart2ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_USART2 is equal to RCC_PERIPHCLK_USART2 
	COMMENT Equivalence Class 49
	COMMENT This test case is evaluated by giving the nominal values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_USART2,                   	ev = init


            VAR periph_clk_init.Usart2ClockSelection,       init = 0x100,                   				ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for nominal value

		--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x100,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
		--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls             
                            
         END SIMUL               
                      
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 32

TEST 33
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-015]
	COMMENT The function calls the macro __HAL_RCC_USART2_CONFIG to configure the USART2 clock source with  Usart2ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_USART2 is equal to RCC_PERIPHCLK_USART2 
	COMMENT Equivalence Class 49
	COMMENT This test case is evaluated by giving the maximum values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_USART2,                   	ev = init

            VAR periph_clk_init.Usart2ClockSelection,       init = (T_UINT32)0xFFFFFFFF,                   	ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for maximum value

		--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = (T_UINT32)0xFFFFFFFF,                    ev = init
		       
        COMMENT OUTPUT SECTION:         
                
		--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                                 
         END SIMUL
                   
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 33

TEST 34
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-015]
	COMMENT The function does nothing when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_USART2 is equal to RCC_PERIPHCLK_USART2 
	COMMENT Equivalence Class 50
	COMMENT 	
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-016]
	COMMENT The function calls the macro __HAL_RCC_USART3_CONFIG to configure the USART3 clock source with  Usart3ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_USART3 is equal to RCC_PERIPHCLK_USART3
	COMMENT Equivalence Class 51
	COMMENT This test case is evaluated by giving the minimum values to inputs.
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
				--Holds the member values of structure periph_clk_init 

				VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_USART3,                   	ev = init

				VAR periph_clk_init.Usart3ClockSelection,       init = 0x0,                   					ev = init
				 
			COMMENT INPUT/OUTPUT SECTION:

				--RCC members tested for minimum value

				--Holds the member values of structure T_RCC
				VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x0,                             		ev = init
				   
			COMMENT OUTPUT SECTION:         
					
				--holds the return value of the function ret_HalRccExPeriphCLKConfig
				VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                          
                                    
         END SIMUL
               
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 34

TEST 35
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-016]
	COMMENT The function calls the macro __HAL_RCC_USART3_CONFIG to configure the USART3 clock source with  Usart3ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_USART3 is equal to RCC_PERIPHCLK_USART3
	COMMENT Equivalence Class 51
	COMMENT This test case is evaluated by giving the nominal values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_USART3,                   	ev = init

            VAR periph_clk_init.Usart3ClockSelection,       init = 0x100,                   				ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for nominal value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x100,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                          
                                    
         END SIMUL
               
                      
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 35

TEST 36
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-016]
	COMMENT The function calls the macro __HAL_RCC_USART3_CONFIG to configure the USART3 clock source with  Usart3ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_USART3 is equal to RCC_PERIPHCLK_USART3 
	COMMENT This test case is evaluated by giving the maximum values to inputs.
	COMMENT Equivalence Class 51
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_USART3,                   	ev = init


            VAR periph_clk_init.Usart3ClockSelection,       init = (T_UINT32)0xFFFFFFFF,                    ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for maximum value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = (T_UINT32)0xFFFFFFFF,                    ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                              
         END SIMUL
                 
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 36
TEST 37
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-016]
	COMMENT The function does nothing when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_USART3 is equal to RCC_PERIPHCLK_USART3 
	COMMENT Equivalence Class 52
	COMMENT	
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-017]
	COMMENT The function calls the macro __HAL_RCC_UART4_CONFIG to configure the UART4 clock source with  Uart4ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_UART4
	COMMENT Equivalence Class 53
	COMMENT This test case is evaluated by giving the minimum values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_UART4,                   	ev = init


            VAR periph_clk_init.Uart4ClockSelection,       	init = 0x0,                   					ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x0,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                            
         END SIMUL
                   
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 37

TEST 38
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-017]
	COMMENT The function calls the macro __HAL_RCC_UART4_CONFIG to configure the UART4 clock source with  Uart4ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_UART4
	COMMENT Equivalence Class 53
	COMMENT This test case is evaluated by giving the nominal values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_UART4,                   	ev = init

            VAR periph_clk_init.Uart4ClockSelection,       	init = 0x100,                   				ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for nominal value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x100,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
        SIMUL
                --No stub calls              
                              
         END SIMUL               
                      
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 38

TEST 39
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-017]
	COMMENT The function calls the macro __HAL_RCC_UART4_CONFIG to configure the UART4 clock source with  Uart4ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_UART4 
	COMMENT Equivalence Class 53
	COMMENT This test case is evaluated by giving the maximum values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_UART4,                   	ev = init


            VAR periph_clk_init.Uart4ClockSelection,       	init = (T_UINT32)0xFFFFFFFF,                   	ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for maximum value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = (T_UINT32)0xFFFFFFFF,                    ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                                
         END SIMUL
                  
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 39

TEST 40
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-017]
	COMMENT The function does nothing when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_UART4 
	COMMENT Equivalence Class 54
	COMMENT	
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-018]
	COMMENT The function calls the macro __HAL_RCC_UART5_CONFIG to configure the UART5 clock source with  Uart5ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_UART5 is equal to RCC_PERIPHCLK_UART5 
	COMMENT Equivalence Class 55
	COMMENT This test case is evaluated by giving the minimum values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_UART5,                   	ev = init


            VAR periph_clk_init.Uart5ClockSelection,       	init = 0x0,                   					ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x0,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                            
         END SIMUL
             
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 40

TEST 41
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-018]
	COMMENT The function calls the macro __HAL_RCC_UART5_CONFIG to configure the UART5 clock source with  Uart5ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_UART5 is equal to RCC_PERIPHCLK_UART5 
	COMMENT Equivalence Class 55
	COMMENT This test case is evaluated by giving the nominal values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_UART5,                   	ev = init


            VAR periph_clk_init.Uart5ClockSelection,       	init = 0x100,                   				ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for nominal value

		--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x100,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
		--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                            
         END SIMUL
                
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 41

TEST 42
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-018]
	COMMENT The function calls the macro __HAL_RCC_UART5_CONFIG to configure the UART5 clock source with  Uart5ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_UART5 is equal to RCC_PERIPHCLK_UART5 
	COMMENT Equivalence Class 55
	COMMENT This test case is evaluated by giving the maximum values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_UART5,                   	ev = init

            VAR periph_clk_init.Uart5ClockSelection,       	init = (T_UINT32)0xFFFFFFFF,                    ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for maximum value

		--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = (T_UINT32)0xFFFFFFFF,                    ev = init
		       
        COMMENT OUTPUT SECTION:         
                
		--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                                  
         END SIMUL
                   
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 42
TEST 43
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-018]
	COMMENT The function does nothing when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_UART5 is equal to RCC_PERIPHCLK_UART5 
	COMMENT Equivalence Class 56
	COMMENT 	
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-019]
	COMMENT The function calls the macro __HAL_RCC_USART6_CONFIG to configure the USART6 clock source with  Uart6ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_USART6 is equal to RCC_PERIPHCLK_USART6
	COMMENT Equivalence Class 57
	COMMENT This test case is evaluated by giving the minimum values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_USART6,                   	ev = init


            VAR periph_clk_init.Usart6ClockSelection,       init = 0x0,                   					ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x0,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                            
         END SIMUL               
                      
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 43

TEST 44
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-019]
	COMMENT The function calls the macro __HAL_RCC_USART6_CONFIG to configure the USART6 clock source with  Uart6ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_USART6 is equal to RCC_PERIPHCLK_USART6
	COMMENT Equivalence Class 57
	COMMENT This test case is evaluated by giving the nominal values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_USART6,                   	ev = init


            VAR periph_clk_init.Usart6ClockSelection,       init = 0x100,                   				ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for nominal value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x100,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                                 
         END SIMUL
                   
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 44

TEST 45
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-019]
	COMMENT The function calls the macro __HAL_RCC_USART6_CONFIG to configure the USART6 clock source with  Uart6ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_USART6 is equal to RCC_PERIPHCLK_USART6
	COMMENT Equivalence Class 57
	COMMENT This test case is evaluated by giving the maximum values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_USART6,                   	ev = init

            VAR periph_clk_init.Usart6ClockSelection,       init = (T_UINT32)0xFFFFFFFF,                   	ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for maximum value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = (T_UINT32)0xFFFFFFFF,                     ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                                
         END SIMUL              
                      
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 45
TEST 46
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-019]
	COMMENT The function does nothing when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_USART6 is equal to RCC_PERIPHCLK_USART6
	COMMENT Equivalence Class 58
	COMMENT	
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-020]
	COMMENT The function calls the macro __HAL_RCC_UART7_CONFIG to configure the UART7 clock source with  Uart7ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_UART7 is equal to RCC_PERIPHCLK_UART7 
	COMMENT Equivalence Class 59
	COMMENT This test case is evaluated by giving the minimum values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_UART7,                   	ev = init

            VAR periph_clk_init.Uart7ClockSelection,       	init = 0x0,                   					ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x0,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                               
         END SIMUL
                   
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 46

TEST 47
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-020]
	COMMENT The function calls the macro __HAL_RCC_UART7_CONFIG to configure the UART7 clock source with  Uart7ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_UART7 is equal to RCC_PERIPHCLK_UART7 
	COMMENT Equivalence Class 59
	COMMENT This test case is evaluated by giving the nominal values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_UART7,                   	ev = init


            VAR periph_clk_init.Uart7ClockSelection,       	init = 0x100,                   				ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for nominal value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x100,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                                 
         END SIMUL
                  
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 47

TEST 48
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-020]
	COMMENT The function calls the macro __HAL_RCC_UART7_CONFIG to configure the UART7 clock source with  Uart7ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_UART7 is equal to RCC_PERIPHCLK_UART7 
	COMMENT Equivalence Class 59
	COMMENT This test case is evaluated by giving the maximum values to inputs.
	COMMENT </TD>
    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_UART7,                   	ev = init

            VAR periph_clk_init.Uart7ClockSelection,       	init = (T_UINT32)0xFFFFFFFF,                   	ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for maximum value

		--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = (T_UINT32)0xFFFFFFFF,                    ev = init
		       
        COMMENT OUTPUT SECTION:         
                
		--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                            
         END SIMUL              
                      
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 48

TEST 49
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-020]
	COMMENT The function does nothing result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_UART7 is equal to RCC_PERIPHCLK_UART7 
	COMMENT Equivalence Class 60
	COMMENT 	
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-021]
	COMMENT The function calls the macro __HAL_RCC_UART8_CONFIG to configure the UART8 clock source with  Uart8ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_UART8 is equal to RCC_PERIPHCLK_UART8 
	COMMENT Equivalence Class 61
	COMMENT This test case is evaluated by giving the minimum values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_UART8,                   	ev = init

            VAR periph_clk_init.Uart8ClockSelection,       	init = 0x0,                   					ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x0,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                              
         END SIMUL
                                     
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 49

TEST 50
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-021]
	COMMENT The function calls the macro __HAL_RCC_UART8_CONFIG to configure the UART8 clock source with  Uart8ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_UART8 is equal to RCC_PERIPHCLK_UART8 
	COMMENT Equivalence Class 61
	COMMENT This test case is evaluated by giving the nominal values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_UART8,                   	ev = init


            VAR periph_clk_init.Uart8ClockSelection,       	init = 0x100,                   				ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for nominal value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x100,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls             
                                
         END SIMUL               
                      
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 50

TEST 51
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-021]
	COMMENT The function calls the macro __HAL_RCC_UART8_CONFIG to configure the UART8 clock source with  Uart8ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_UART8 is equal to RCC_PERIPHCLK_UART8 
	COMMENT Equivalence Class 61
	COMMENT This test case is evaluated by giving the maximum values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_UART8,                   	ev = init


            VAR periph_clk_init.Uart8ClockSelection,       init = (T_UINT32)0xFFFFFFFF,                     ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for maximum value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = (T_UINT32)0xFFFFFFFF,                    ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                             
         END SIMUL
                 
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 51

TEST 52
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-021]
	COMMENT The function does nothing when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_UART8 is equal to RCC_PERIPHCLK_UART8 
	COMMENT Equivalence Class 62
	COMMENT 	
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-022]
	COMMENT The function calls the macro __HAL_RCC_CEC_CONFIG to configure the CEC clock source with  CecClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_CEC is equal to RCC_PERIPHCLK_CEC 
	COMMENT Equivalence Class 63
	COMMENT This test case is evaluated by giving the minimum values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_CEC,                   	ev = init

            VAR periph_clk_init.CecClockSelection,       	init = 0x0,                   					ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

		--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x0,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
		--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls             
                                
         END SIMUL
                 
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 52

TEST 53
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-022]
	COMMENT The function calls the macro __HAL_RCC_CEC_CONFIG to configure the CEC clock source with  CecClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_CEC is equal to RCC_PERIPHCLK_CEC 
	COMMENT Equivalence Class 63
	COMMENT This test case is evaluated by giving the nominal values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_CEC,                   	ev = init


            VAR periph_clk_init.CecClockSelection,       	init = 0x100,                   				ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for nominal value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x100,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                            
         END SIMUL
                   
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 53

TEST 54
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-022]
	COMMENT The function calls the macro __HAL_RCC_CEC_CONFIG to configure the CEC clock source with  CecClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_CEC is equal to RCC_PERIPHCLK_CEC 
	COMMENT Equivalence Class 63
	COMMENT This test case is evaluated by giving the maximum values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_CEC,                   	ev = init


            VAR periph_clk_init.CecClockSelection,       	init = (T_UINT32)0xFFFFFFFF,                   	ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for maximum value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = (T_UINT32)0xFFFFFFFF,                    ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                               
         END SIMUL
                 
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 54

TEST 55
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-022]
	COMMENT The function does nothing when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_CEC is equal to RCC_PERIPHCLK_CEC 
	COMMENT Equivalence Class 64 
	COMMENT	
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-023]
	COMMENT The function does the following if result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_CLK48 is equal to 
	COMMENT RCC_PERIPHCLK_CLK48.
	COMMENT 1.Calls the macro __HAL_RCC_CLK48_CONFIG to configure the 48Mhz clock source with Clk48ClockSelection of periph_clk_init as parameter.
	COMMENT 2.Sets PLL SAI to ONE if Clk48ClockSelection of periph_clk_init is equal to RCC_CLK48SOURCE_PLLSAIP.
	COMMENT Equivalence Class 65, 66
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-035]
	COMMENT The function calls the macro __HAL_RCC_PLLSAI_CONFIG to configure PLLSAI with the below parameters
	COMMENT -	 PLLSAIN of PLLSAI of periph_clk_init
	COMMENT -	 PLLSAIP of PLLSAI of periph_clk_init
	COMMENT -	 Result of PLLSAICFGR of RCC bitwise AND  RCC_PLLSAICFGR_PLLSAIQ right shifted by POSITION_VAL with RCC_PLLSAICFGR_PLLSAIQ as parameter.
	COMMENT -	 Result of PLLSAICFGR of RCC bitwise AND RCC_PLLSAICFGR_PLLSAIR right shifted by POSITION_VAL with RCC_PLLSAICFGR_PLLSAIR as parameter.
	COMMENT If 
	COMMENT 1.PLL SAI is equal to ONE
	COMMENT 2. COND1 and COND2 are TRUE
	COMMENT COND1 : Result of bitwise AND operation PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_CLK48 is equal to RCC_PERIPHCLK_CLK48.
	COMMENT COND2 : Clk48ClockSelection of periph_clk_init is equal to RCC_CLK48SOURCE_PLLSAIP.
	COMMENT Equivalence Class 65, 66
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-037]
	COMMENT The function does the following when PLL SAI is equal to ONE.
	COMMENT 1.Call the macro __HAL_RCC_PLLSAI_ENABLE to enable PLLSAI clock source.
	COMMENT 2.Set tick start to return value of HALGetTick.
	COMMENT 3.loop till return value of __HAL_RCC_PLLSAI_GET_FLAG is not equal to RESET and does the following
	COMMENT    returns HAL_TIMEOUT when difference of HALGetTick and tick start is greater than PLLSAI_TIMEOUT_VALUE.
	COMMENT while loop is covered for 1 time
	COMMENT Equivalence Class 87, 88
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       	init = RCC_PERIPHCLK_CLK48,                   	ev = init


            VAR periph_clk_init.Clk48ClockSelection,       		init = RCC_CLK48SOURCE_PLLSAIP,                	ev = init

			--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50 )
            VAR periph_clk_init.PLLSAI.PLLSAIN ,         		init = 50,                             			ev = init   
       
			--Specifies the division factor for SAI1 clock(Min_Data = 2)
            VAR periph_clk_init.PLLSAI.PLLSAIP,         		init = 2,                             			ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

			--Holds the member values of structure T_RCC (Configure the CLK48 source)
            VAR PTU_RCC_BASE.DCKCFGR2,            				init = 0x0,                             		ev = (T_UINT32)0x8000000

			--Disable the PLLI2S/Enable the PLLI2S  
            VAR PTU_RCC_BASE.CR,                    			init = 0x0,                             		ev = (T_UINT32)0x10000000

			--Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register 
            VAR PTU_RCC_BASE.PLLSAICFGR,            			init = 0x0,                             		ev = 0x20C80
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        			init = HAL_ERROR,                           	ev = HAL_TIMEOUT
               
         SIMUL

                 --Get Start Tick
                STUB  HALGetTick() 50
               
                STUB  HALGetTick() 250
               
                STUB  HALGetTick() 200            
                              
         END SIMUL
                
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 55

TEST 56
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-023]
	COMMENT The function does nothing when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_CLK48 is not equal to 
	COMMENT RCC_PERIPHCLK_CLK48.
	COMMENT Equivalence Class 68
	COMMENT 	
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-024]
	COMMENT The function sets  PLL SAI to ONE when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_LTDC is equal to RCC_PERIPHCLK_LTDC
	COMMENT Equivalence Class 69
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-035]
	COMMENT The function does nothing
	COMMENT when 
	COMMENT 1.PLL SAI is equal to ONE
	COMMENT 2. COND1 and COND2 are TRUE
	COMMENT COND1 : Result of bitwise AND operation PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_CLK48 is equal to RCC_PERIPHCLK_CLK48.
	COMMENT COND2 : Clk48ClockSelection of periph_clk_init is equal to RCC_CLK48SOURCE_PLLSAIP.
	COMMENT Equivalence Class None
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-037]
	COMMENT The function does the following when PLL SAI is equal to ONE.
	COMMENT 1.Call the macro __HAL_RCC_PLLSAI_ENABLE to enable PLLSAI clock source.
	COMMENT 2.Set tick start to return value of HALGetTick.
	COMMENT 3.loop till return value of __HAL_RCC_PLLSAI_GET_FLAG is not equal to RESET and does the following
	COMMENT    a) does nothing when difference of HALGetTick and tick start is less than PLLSAI_TIMEOUT_VALUE.
	COMMENT    b) returns HAL_TIMEOUT when difference of HALGetTick and tick start is greater than PLLSAI_TIMEOUT_VALUE.
	COMMENT while loop is covered for (2 loops and more)
	COMMENT Equivalence Class 87, 88, 89
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
				--Holds the member values of structure periph_clk_init 

				VAR periph_clk_init.PeriphClockSelection,       	init = RCC_PERIPHCLK_LTDC,                   	ev = init


				--Specifies the multiplication factor for PLLI2S VCO output clock (Max_Data = 432 )
				VAR periph_clk_init.PLLSAI.PLLSAIN ,         		init = 432,                             		ev = init   
		   
				--Specifies the division factor for SAI1 clock(Max_Data = 15)
				VAR periph_clk_init.PLLSAI.PLLSAIP,         		init = 15,                             			ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

				--RCC members tested for minimum value
			
				--Disable the PLLI2S/Enable the PLLI2S  
				VAR PTU_RCC_BASE.CR,                    			init = 0x0,                             		ev = (T_UINT32)0x10000000

				--Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register 
				VAR PTU_RCC_BASE.PLLSAICFGR,            			init = 0x0,                             		ev = 0x6C00
		       
        COMMENT OUTPUT SECTION:         
                
				--holds the return value of the function ret_HalRccExPeriphCLKConfig
				VAR ret_HalRccExPeriphCLKConfig,        			init = HAL_ERROR,                           	ev = HAL_TIMEOUT
               
         SIMUL

                 --Get Start Tick

              	STUB  HALGetTick() 240
                            
              	STUB  HALGetTick() 250
                           
             	STUB  HALGetTick() 260
                           
             	STUB  HALGetTick() 400       
                             
         END SIMUL
              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 56

TEST 57
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-024]
	COMMENT The function does nothing when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_LTDC is not equal to RCC_PERIPHCLK_LTDC
	COMMENT Equivalence Class 70
	COMMENT 	
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-025]
	COMMENT The function calls the macro __HAL_RCC_LPTIM1_CONFIG to configure the LTPIM1 clock source with  Lptim1ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_LPTIM1 is equal to RCC_PERIPHCLK_LPTIM1
	COMMENT Equivalence Class 71
	COMMENT This test case is evaluated by giving the nominal values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_LPTIM1,                   	ev = init


            VAR periph_clk_init.Lptim1ClockSelection,       init = 0x0,                   					ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x0,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                           
         END SIMUL
                  
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 57

TEST 58
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-025]
	COMMENT The function calls the macro __HAL_RCC_LPTIM1_CONFIG to configure the LTPIM1 clock source with  Lptim1ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_LPTIM1 is equal to RCC_PERIPHCLK_LPTIM1
	COMMENT Equivalence Class 71
	COMMENT This test case is evaluated by giving the nominal values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_LPTIM1,                   	ev = init

            VAR periph_clk_init.Lptim1ClockSelection,       init = 0x1,                   					ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x1,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                               
         END SIMUL
              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 58

TEST 59
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-025]
	COMMENT The function calls the macro __HAL_RCC_LPTIM1_CONFIG to configure the LTPIM1 clock source with  Lptim1ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_LPTIM1 is equal to RCC_PERIPHCLK_LPTIM1
	COMMENT Equivalence Class 71
	COMMENT This test case is evaluated by giving the maximum values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_LPTIM1,                   	ev = init

            VAR periph_clk_init.Lptim1ClockSelection,       init = (T_UINT32)0xFFFFFFFF,                   	ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = (T_UINT32)0xFFFFFFFF,                    ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                                
         END SIMUL
                  
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 59

TEST 60
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-025]
	COMMENT The function does nothing when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_LPTIM1 is not equal to RCC_PERIPHCLK_LPTIM1
	COMMENT Equivalence Class 72
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-026]
	COMMENT The function calls the macro __HAL_RCC_SDMMC1_CONFIG to configure the SDMMC1 clock source with  Sdmmc1ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SDMMC1 is equal to RCC_PERIPHCLK_SDMMC1
	COMMENT Equivalence Class 73
	COMMENT This test case is evaluated by giving the nominal values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_SDMMC1,                   	ev = init


            VAR periph_clk_init.Sdmmc1ClockSelection,       init = 0x0,                   					ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x0,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                            
         END SIMUL
                    
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 60

TEST 61
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-026]
	COMMENT The function calls the macro __HAL_RCC_SDMMC1_CONFIG to configure the SDMMC1 clock source with  Sdmmc1ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SDMMC1 is equal to RCC_PERIPHCLK_SDMMC1
	COMMENT Equivalence Class 73
	COMMENT This test case is evaluated by giving the nominal values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_SDMMC1,                   	ev = init

            VAR periph_clk_init.Sdmmc1ClockSelection,       init = 0x1,                   					ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x1,                             		ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                              
         END SIMUL
                   
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 61

TEST 62
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-026]	
	COMMENT The function calls the macro __HAL_RCC_SDMMC1_CONFIG to configure the SDMMC1 clock source with  Sdmmc1ClockSelection of periph_clk_init as parameter 
	COMMENT when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SDMMC1 is equal to RCC_PERIPHCLK_SDMMC1
	COMMENT Equivalence Class 73
	COMMENT This test case is evaluated by giving the maximum values to inputs.
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_SDMMC1,                   	ev = init


            VAR periph_clk_init.Sdmmc1ClockSelection,       init = (T_UINT32)0xFFFFFFFF,                   	ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

			--Holds the member values of structure T_RCC
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = (T_UINT32)0xFFFFFFFF,                    ev = init
		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
                --No stub calls              
                             
         END SIMUL
                   
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 62

TEST 63
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-026]
	COMMENT The function does nothing when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SDMMC1 is not equal to RCC_PERIPHCLK_SDMMC1
	COMMENT Equivalence Class 74
	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-027]
	COMMENT The function does the following when PLL I2S is equal to ONE or PeriphClockSelection of  periph_clk_init is equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT 1.Call the macro __HAL_RCC_PLLI2S_DISABLE to disable the PLLI2S.
	COMMENT 2.Set tick start to return value of  HALGetTick.
	COMMENT 3.do not loop when return value of __HAL_RCC_GET_FLAG with RCC_FLAG_PLLI2SRDY is equal to RESET.
	COMMENT while loop is covered for 0 time.
	COMMENT modified and multiple conditions TX.
	COMMENT Equivalence Class 5, 6 , 75, 80
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-032]
	COMMENT The function does the following:
	COMMENT 1. Calls the macro __HAL_RCC_PLLI2S_ENABLE to enable the PLLI2S clock source.
	COMMENT 2. Sets tick start to return value of HALGetTick.
	COMMENT 3. loops till __HAL_RCC_GET_FLAG with parameter RCC_FLAG_PLLI2SRDY is equal to RESET and does the following 
	COMMENT 	a) do nothing if difference of return value of  HALGetTick and tick start is less than PLLI2S_TIMEOUT_VALUE.
	COMMENT 	b) returns HAL_TIMEOUT if difference of return value of  HALGetTick and tick start is equal to and greater than PLLI2S_TIMEOUT_VALUE.
	COMMENT When PLL I2S is equal to ONE or PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT while loop is covered for 2 or more times.
	COMMENT Equivalence Class 80,81,83	
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --The Extended Clock to be configured.
            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_I2S,                   	ev = init

			--Specifies I2S Clock source Selection.
            VAR periph_clk_init.I2sClockSelection,      	init = RCC_I2SCLKSOURCE_PLLI2S,             	ev = init           
    
			--Configure the PLLI2S division factors by calling macro  __HAL_RCC_PLLI2S_CONFIG
            VAR periph_clk_init.PLLI2S.PLLI2SN,         	init = 0x100,                             		ev = init          
            VAR periph_clk_init.PLLI2S.PLLI2SR,         	init = 0x100,                             		ev = init
            
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for nominal value
			--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG	
            VAR PTU_RCC_BASE.CFGR,                  		init = 0x2000000,                           	ev = 0x2000000

			--Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register
            VAR PTU_RCC_BASE.PLLI2SCFGR,            		init = 0x2000000,                           	ev = 0x2004000
            
			--Disable the PLLI2S/Enable the PLLI2S  
            VAR PTU_RCC_BASE.CR,                    		init = 0x2000000,                           	ev = 0x6000000
        
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,            	init = HAL_ERROR,                           	ev = HAL_TIMEOUT
               
         SIMUL
            	--Get Start Tick               
             
                STUB  HALGetTick() 200

              	STUB  HALGetTick() 240
                            
              	STUB  HALGetTick() 250
                           
             	STUB  HALGetTick() 260
                           
             	STUB  HALGetTick() 4000
               
         END SIMUL
                  
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 63

TEST 65
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-035]
	COMMENT The function does the following when result of bitwise AND of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_CLK48 is equal to RCC_PERIPHCLK_CLK48.
	COMMENT 1.Call the macro __HAL_RCC_CLK48_CONFIG to configure the 48Mhz clock source with Clk48ClockSelection of periph_clk_init as parameter.
	COMMENT 2.does nothing when Clk48ClockSelection of periph_clk_init is not equal to RCC_CLK48SOURCE_PLLSAIP.
	COMMENT Equivalence Class 67
	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-027]
	COMMENT The function does the following when PLL I2S is not equal to ONE or PeriphClockSelection of periph_clk_init is not equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT modified and multiple conditions FF.
	COMMENT Equivalence Class 76, 78
	COMMENT		
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_CLK48,                   	ev = init


            VAR periph_clk_init.Clk48ClockSelection,       	init = 0x01000000U,                				ev = init


        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

			--Holds the member values of structure T_RCC (Configure the CLK48 source)
            VAR PTU_RCC_BASE.DCKCFGR2,            			init = 0x0,                             		ev = 0x01000000U

		       
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_OK
               
         SIMUL
               --None           
                              
         END SIMUL
               
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 65

TEST 66
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-027]
	COMMENT The function does the following when PLL I2S is not equal to ONE or PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT 1.Call the macro __HAL_RCC_PLLI2S_DISABLE to disable the PLLI2S.
	COMMENT 2.Set tick start to return value of  HALGetTick.
	COMMENT 3.do not loop when return value of __HAL_RCC_GET_FLAG with RCC_FLAG_PLLI2SRDY is equal to RESET.
	COMMENT while loop is covered for 0 time.
	COMMENT modified and multiple conditions FT.
	COMMENT Equivalence Class 5, 6 , 75, 77
	COMMENT		
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-031]
	COMMENT The function calls the macro __HAL_RCC_PLLI2S_CONFIG to configure PLLI2S clock source with the below parameters
	COMMENT - PLLI2SN of PLLI2S of periph_clk_init.
	COMMENT - PLLI2SP of PLLI2S of periph_clk_init.
	COMMENT - PLLI2SQ of PLLI2S of periph_clk_init.
	COMMENT - PLLI2SR of PLLI2S of periph_clk_init.
	COMMENT when
	COMMENT 1.PLL I2S is equal to ONE or PeriphClockSelection of  periph_clk_init is equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT 2.result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_PLLI2S is equal to RCC_PERIPHCLK_PLLI2S 
	COMMENT Equivalence Class 77
	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-032]
	COMMENT The function does the following:
	COMMENT 1. Calls the macro __HAL_RCC_PLLI2S_ENABLE to enable the PLLI2S clock source.
	COMMENT 2. Sets tick start to return value of HALGetTick.
	COMMENT 3. loop till __HAL_RCC_GET_FLAG with parameter RCC_FLAG_PLLI2SRDY is equal to RESET and does the following 
	COMMENT    a) returns HAL_TIMEOUT if difference of return value of  HALGetTick and tick start is greater than PLLI2S_TIMEOUT_VALUE.
	COMMENT When PLL I2S is not equal to ONE or PeriphClockSelection of periph_clk_init is equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT while loop is covered for 1 times.
	COMMENT Equivalence Class 80, 81	
	COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of the structure periph_clk_init
            VAR periph_clk_init.PeriphClockSelection,       init = RCC_PERIPHCLK_PLLI2S,              	ev = init      
    
			--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)
            VAR periph_clk_init.PLLI2S.PLLI2SN,         	init = 50,                             		ev = init   

			--Specifies the division factor for I2S clock (Min_Data = 2)     
            VAR periph_clk_init.PLLI2S.PLLI2SR,         	init = 2,                             		ev = init
            
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

			--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG
            VAR PTU_RCC_BASE.CFGR,                  		init = 0x0,                             		ev = init

			--Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register 
            VAR PTU_RCC_BASE.PLLI2SCFGR,            		init = 0x0,                             		ev = 0x20000C80
            
			--Disable the PLLI2S/Enable the PLLI2S  
            VAR PTU_RCC_BASE.CR,                    		init = 0x0,                             		ev = 0x4000000
        
        COMMENT OUTPUT SECTION:         
                
			--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_TIMEOUT
               
         SIMUL
                --Get Start Tick
                STUB  HALGetTick() 100
               
                STUB  HALGetTick() 50
               
                STUB  HALGetTick() 200             
                     
         END SIMUL
               
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 66

TEST 67
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-033]
	COMMENT The function does the following if PLL SAI is equal to ONE.
	COMMENT 1. Calls the macro __HAL_RCC_PLLSAI_DISABLE to disable the PLLSAI clock source.
	COMMENT 2. Sets tick start to return value of HALGetTick.
	COMMENT 3. does not loop when return value of __HAL_RCC_PLLSAI_GET_FLAG is equal to RESET. 
	COMMENT while loop is covered for 0 times.
	COMMENT Equivalence Class 84, 87
	COMMENT
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-034]
	COMMENT The function does the following
	COMMENT 1.Calls the macro __HAL_RCC_PLLSAI_CONFIG to configure PLLSAI clock source with the below parameters
	COMMENT - PLLSAIN of PLLSAI of periph_clk_init.
	COMMENT - Result of PLLSAICFGR of RCC bitwise AND RCC_PLLSAICFGR_PLLSAIP right shifted by POSITION_VAL with RCC_PLLSAICFGR_PLLSAIP as parameter.
	COMMENT - PLLSAIQ of PLLSAI of periph_clk_init.
	COMMENT - Result of PLLSAICFGR of RCC bitwise AND  RCC_PLLI2SCFGR_PLLI2SR right shifted by POSITION_VAL with RCC_PLLSAICFGR_PLLSAIR as parameter.
	COMMENT 2.Calls the macro __HAL_RCC_PLLSAI_CLKDIVQ_CFG to configure PLLSAI clock division factor with PLLSAIDivQ of periph_clk_init as parameter.
	COMMENT when	
	COMMENT 1.	 PLL SAI is equal to ONE
	COMMENT 2.	 (COND1 and COND2) or ( COND3 and COND4) is TRUE.
	COMMENT Where
	COMMENT COND1 : Result  of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI1 is equal to RCC_PERIPHCLK_SAI1.
	COMMENT COND2: Sai1ClockSelection of periph_clk_init is equal to RCC_SAI1CLKSOURCE_PLLSAI.
	COMMENT COND3: Result  of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI2 is equal to RCC_PERIPHCLK_SAI2.
	COMMENT COND4: Sai2ClockSelection of periph_clk_init is equal to RCC_SAI2CLKSOURCE_PLLSAI.
	COMMENT modified and multiple conditions  covered for TTXX
	COMMENT Equivalence Class 5, 8, 16, 15
	COMMENT	
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-037]
	COMMENT The function does the following when PLL SAI is equal to ONE.
	COMMENT 1.Call the macro __HAL_RCC_PLLSAI_ENABLE to enable PLLSAI clock source.
	COMMENT 2.Set tick start to return value of HALGetTick.
	COMMENT 3.loop till return value of __HAL_RCC_PLLSAI_GET_FLAG is not equal to RESET and does the following
	COMMENT    returns HAL_TIMEOUT when difference of HALGetTick and tick start is greater than PLLSAI_TIMEOUT_VALUE.
	COMMENT while loop is covered for 1 time
	COMMENT Equivalence Class 87, 88
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of the structure periph_clk_init
					VAR periph_clk_init.PeriphClockSelection,       	init = RCC_PERIPHCLK_SAI1,              ev = init   
					VAR periph_clk_init.Sai1ClockSelection,       		init = RCC_SAI1CLKSOURCE_PLLSAI,        ev = init  				
					VAR periph_clk_init.PLLSAIDivQ,       				init = RCC_SAI2CLKSOURCE_PLLSAI,        ev = init     
		
					--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)
					VAR periph_clk_init.PLLSAI.PLLSAIN,         		init = 50,                             	ev = init   

					--Specifies the division factor for I2S clock (Min_Data = 2)     
					VAR periph_clk_init.PLLSAI.PLLSAIQ,         		init = 2,                             	ev = init
            
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for minimum value

					--SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ  by calling macro __HAL_RCC_PLLSAI_CLKDIVQ_CFG
					VAR PTU_RCC_BASE.DCKCFGR1,                  		init = 0x0,                             ev = (T_UINT32)0xFFFFFF00

					--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG
					VAR PTU_RCC_BASE.CFGR,                  			init = 0x0,                             ev = init

					--Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register 
					VAR PTU_RCC_BASE.PLLSAICFGR,            			init = 0x0,                             ev = 0x2000C80
						
					--Disable the PLLI2S/Enable the PLLI2S  
					VAR PTU_RCC_BASE.CR,                    			init = 0x0,                             ev = RCC_CR_PLLSAION
				
			COMMENT OUTPUT SECTION:         
						
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        			init = HAL_ERROR,                    	ev = HAL_TIMEOUT
               
        SIMUL
			--Get Start Tick
			STUB  HALGetTick() 100
		   
			STUB  HALGetTick() 50
		   
			STUB  HALGetTick() 200		             
                     
         END SIMUL   
		 
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
		
    END ELEMENT

    END TEST -- TEST 67

TEST 68
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-034]
	COMMENT The function does the following
	COMMENT 1.Calls the macro __HAL_RCC_PLLSAI_CONFIG to configure PLLSAI clock source with the below parameters
	COMMENT - PLLSAIN of PLLSAI of periph_clk_init.
	COMMENT - Result of PLLSAICFGR of RCC bitwise AND RCC_PLLSAICFGR_PLLSAIP right shifted by POSITION_VAL with RCC_PLLSAICFGR_PLLSAIP as parameter.
	COMMENT - PLLSAIQ of PLLSAI of periph_clk_init.
	COMMENT - Result of PLLSAICFGR of RCC bitwise AND  RCC_PLLI2SCFGR_PLLI2SR right shifted by POSITION_VAL with RCC_PLLSAICFGR_PLLSAIR as parameter.
	COMMENT 2.Calls the macro __HAL_RCC_PLLSAI_CLKDIVQ_CFG to configure PLLSAI clock division factor with PLLSAIDivQ of periph_clk_init as parameter.
	COMMENT when	
	COMMENT 1.	 PLL SAI is equal to ONE
	COMMENT 2.	 (COND1 and COND2) or ( COND3 and COND4) is TRUE.
	COMMENT Where
	COMMENT COND1: Result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI1 is not equal to RCC_PERIPHCLK_SAI1.
	COMMENT COND2: Sai1ClockSelection of periph_clk_init is equal to RCC_SAI1CLKSOURCE_PLLSAI.
	COMMENT COND3: Result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI2 is equal to RCC_PERIPHCLK_SAI2.
	COMMENT COND4: Sai2ClockSelection of periph_clk_init is equal to RCC_SAI2CLKSOURCE_PLLSAI.
	COMMENT modified and multiple conditions is covered for FXTT.
	COMMENT Equivalence Class 10, 9, 11, 14
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of the structure periph_clk_init
					VAR periph_clk_init.PeriphClockSelection,       	init = RCC_PERIPHCLK_SAI2,              ev = init  
					VAR periph_clk_init.Sai1ClockSelection,       		init = RCC_SAI1CLKSOURCE_PLLSAI,        ev = init
					VAR periph_clk_init.Sai2ClockSelection,       		init = RCC_SAI2CLKSOURCE_PLLSAI,        ev = init 

					VAR periph_clk_init.PLLSAIDivQ,       				init = RCC_SAI2CLKSOURCE_PLLSAI,        ev = init     
		
					--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)
					VAR periph_clk_init.PLLSAI.PLLSAIN,         		init = 50,                             	ev = init   

					--Specifies the division factor for I2S clock (Min_Data = 2)     
					VAR periph_clk_init.PLLSAI.PLLSAIQ,         		init = 2,                             	ev = init
            
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for minimum value

					--SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ  by calling macro __HAL_RCC_PLLSAI_CLKDIVQ_CFG
					VAR PTU_RCC_BASE.DCKCFGR1,                  		init = 0x0,                             ev = (T_UINT32)0xFFFFFF00

					--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG
					VAR PTU_RCC_BASE.CFGR,                  			init = 0x0,                             ev = init

					--Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register 
					VAR PTU_RCC_BASE.PLLSAICFGR,            			init = 0x0,                             ev = 0x2000C80
						
					--Disable the PLLI2S/Enable the PLLI2S  
					VAR PTU_RCC_BASE.CR,                    			init = 0x0,                             ev = RCC_CR_PLLSAION
				
			COMMENT OUTPUT SECTION:         
						
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        			init = HAL_ERROR,                      	ev = HAL_TIMEOUT
               
        SIMUL
			--Get Start Tick
			STUB  HALGetTick() 100
		   
			STUB  HALGetTick() 50
		   
			STUB  HALGetTick() 200		             
                     
        END SIMUL   
		 
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
		
    END ELEMENT

    END TEST -- TEST 68

TEST 69
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-034]
	COMMENT The function does nothing when	
	COMMENT 1.	 PLL SAI is not equal to ONE
	COMMENT 2.	 (COND1 and COND2) or ( COND3 and COND4) is FALSE.
	COMMENT Where
	COMMENT COND1 : Result  of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI1 is not equal to RCC_PERIPHCLK_SAI1.
	COMMENT COND2: Sai1ClockSelection of periph_clk_init is equal to RCC_SAI1CLKSOURCE_PLLSAI.
	COMMENT COND3: Result  of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI2 is not equal to RCC_PERIPHCLK_SAI2.
	COMMENT COND4: Sai2ClockSelection of periph_clk_init is equal to RCC_SAI2CLKSOURCE_PLLSAI.
	COMMENT modified and multiple conditions is covered for FXFX.
	COMMENT Equivalence Class 10, 9, 16, 15
	COMMENT </TD>
	
    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of the structure periph_clk_init
					VAR periph_clk_init.PeriphClockSelection,       	init = RCC_PERIPHCLK_LTDC,              ev = init   
					VAR periph_clk_init.Sai1ClockSelection,       		init = RCC_SAI1CLKSOURCE_PLLSAI,        ev = init 
					VAR periph_clk_init.Sai2ClockSelection,       		init = RCC_SAI2CLKSOURCE_PLLSAI,        ev = init					

					VAR periph_clk_init.PLLSAIDivQ,       				init = RCC_SAI2CLKSOURCE_PLLSAI,        ev = init     
		
					--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)
					VAR periph_clk_init.PLLSAI.PLLSAIN,         		init = 50,                             	ev = init   

					--Specifies the division factor for I2S clock (Min_Data = 2)     
					VAR periph_clk_init.PLLSAI.PLLSAIQ,         		init = 2,                             	ev = init
            
			COMMENT INPUT/OUTPUT SECTION:

					--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG
					VAR PTU_RCC_BASE.CFGR,                  			init = 0x0,                             ev = init

					--Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register 
					VAR PTU_RCC_BASE.PLLSAICFGR,            			init = 0x0,                             ev = 0xC80
						
					--Disable the PLLI2S/Enable the PLLI2S  
					VAR PTU_RCC_BASE.CR,                    			init = 0x0,                             ev = RCC_CR_PLLSAION
				
			COMMENT OUTPUT SECTION:         
						
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        			init = HAL_ERROR,                     	ev = HAL_TIMEOUT
               
        SIMUL
			--Get Start Tick
			STUB  HALGetTick() 100
		   
			STUB  HALGetTick() 50
		   
			STUB  HALGetTick() 200		             
                     
         END SIMUL   
		 
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
		
    END ELEMENT

    END TEST -- TEST 69

TEST 73
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-034]
	COMMENT The function does nothing when	
	COMMENT 1.	 PLL SAI is not equal to ONE
	COMMENT 2.	 (COND1 and COND2) or ( COND3 and COND4) is FALSE.
	COMMENT Where
	COMMENT COND1 : Result  of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI1 is not equal to RCC_PERIPHCLK_SAI1.
	COMMENT COND2: Sai1ClockSelection of periph_clk_init is equal to RCC_SAI1CLKSOURCE_PLLSAI.
	COMMENT COND3: Result  of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI2 is equal to RCC_PERIPHCLK_SAI2.
	COMMENT COND4: Sai2ClockSelection of periph_clk_init is not equal to RCC_SAI2CLKSOURCE_PLLSAI.
	COMMENT modified and multiple conditions is covered for FXTF.
	COMMENT Equivalence Class 10, 9, 11, 15
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of the structure periph_clk_init
					VAR periph_clk_init.PeriphClockSelection,       	init = 0x00300000U,              			ev = init   
					VAR periph_clk_init.Sai1ClockSelection,       		init = RCC_SAI1CLKSOURCE_PLLSAI,        	ev = init  
					VAR periph_clk_init.Sai2ClockSelection,       		init = RCC_SAI2CLKSOURCE_PLLSAI+1,        	ev = init
					VAR periph_clk_init.PLLSAIDivQ,       				init = RCC_SAI2CLKSOURCE_PLLSAI,        	ev = init     
		            	VAR periph_clk_init.Clk48ClockSelection,       	init = RCC_CLK48SOURCE_PLLSAIP,            	ev = init

					--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)
					VAR periph_clk_init.PLLSAI.PLLSAIN,         		init = 50,                             		ev = init   

					--Specifies the division factor for 48MHz clock.    
					VAR periph_clk_init.PLLSAI.PLLSAIP,         		init = 2,                             		ev = init
            
			COMMENT INPUT/OUTPUT SECTION:

					--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG
					VAR PTU_RCC_BASE.CFGR,                  			init = 0x0,                             	ev = init

					--Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register 
					VAR PTU_RCC_BASE.PLLSAICFGR,            			init = 0x0,                             	ev = 0x20C80
						
					--Disable the PLLI2S/Enable the PLLI2S  
					VAR PTU_RCC_BASE.CR,                    			init = 0x0,                             	ev = RCC_CR_PLLSAION
				
			COMMENT OUTPUT SECTION:         
						
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        			init = HAL_ERROR,                          ev = HAL_TIMEOUT
               
        SIMUL
			--Get Start Tick
			STUB  HALGetTick() 100
		   
			STUB  HALGetTick() 50
		   
			STUB  HALGetTick() 200		             
                     
         END SIMUL   
		 
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
		
    END ELEMENT

    END TEST -- TEST 73

TEST 74
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-034]
	COMMENT The function does nothing when	
	COMMENT 1.	 PLL SAI is not equal to ONE
	COMMENT 2.	 (COND1 and COND2) or ( COND3 and COND4) is FALSE.
	COMMENT Where
	COMMENT COND1 : Result  of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI1 is equal to RCC_PERIPHCLK_SAI1.
	COMMENT COND2: Sai1ClockSelection of periph_clk_init is equal to RCC_SAI1CLKSOURCE_PLLSAI.
	COMMENT COND3: Result  of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI2 is equal to RCC_PERIPHCLK_SAI2.
	COMMENT COND4: Sai2ClockSelection of periph_clk_init is equal to RCC_SAI2CLKSOURCE_PLLSAI.
	COMMENT modified and multiple conditions is covered for TFTF.
	COMMENT Equivalence Class 5, 9, 11, 15
	COMMENT </TD>


    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of the structure periph_clk_init
					VAR periph_clk_init.PeriphClockSelection,       	init = 0x00380000U,              			ev = init   
					VAR periph_clk_init.Sai1ClockSelection,       		init = (T_UINT32)0x00000000U+1,        		ev = init  
					VAR periph_clk_init.Sai2ClockSelection,       		init = RCC_SAI2CLKSOURCE_PLLSAI+1,        	ev = init
					VAR periph_clk_init.PLLSAIDivQ,       				init = RCC_SAI2CLKSOURCE_PLLSAI,        	ev = init     
					VAR periph_clk_init.Clk48ClockSelection,       		init = RCC_CLK48SOURCE_PLLSAIP,             ev = init

					--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)
					VAR periph_clk_init.PLLSAI.PLLSAIN,         		init = 50,                             		ev = init   

					--Specifies the division factor for 48MHz clock.     
					VAR periph_clk_init.PLLSAI.PLLSAIP,         		init = 0x0,                             	ev = init
            
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for minimum value

					--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG
					VAR PTU_RCC_BASE.CFGR,                  			init = 0x0,                             	ev = init

					--Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register 
					VAR PTU_RCC_BASE.PLLSAICFGR,            			init = 0x0,                             	ev = 0xC80
						
					--Disable the PLLI2S/Enable the PLLI2S  
					VAR PTU_RCC_BASE.CR,                    			init = 0x0,                             	ev = RCC_CR_PLLSAION
				
			COMMENT OUTPUT SECTION:         
						
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        			init = HAL_ERROR,                          ev = HAL_TIMEOUT
               
        SIMUL
			--Get Start Tick
			STUB  HALGetTick() 100
		   
			STUB  HALGetTick() 50
		   
			STUB  HALGetTick() 200		             
                     
         END SIMUL   
		 
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
		
    END ELEMENT

    END TEST -- TEST 74

TEST 75
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-034]
	COMMENT The function does nothing when	
	COMMENT 1.	 PLL SAI is not equal to ONE
	COMMENT 2.	 (COND1 and COND2) or ( COND3 and COND4) is FALSE.
	COMMENT Where
	COMMENT COND1 : Result  of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI1 is equal to RCC_PERIPHCLK_SAI1.
	COMMENT COND2: Sai1ClockSelection of periph_clk_init is not equal to RCC_SAI1CLKSOURCE_PLLSAI.
	COMMENT COND3: Result  of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI2 is not equal to RCC_PERIPHCLK_SAI2.
	COMMENT COND4: Sai2ClockSelection of periph_clk_init is not equal to RCC_SAI2CLKSOURCE_PLLSAI.
	COMMENT modified and multiple conditions is covered for TFFX.
	COMMENT Equivalence Class 5, 9, 16, 15

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of the structure periph_clk_init
					VAR periph_clk_init.PeriphClockSelection,       	init = 0x00280000U,              			ev = init   
					VAR periph_clk_init.Sai1ClockSelection,       		init = (T_UINT32)0x00000000U+1,        		ev = init  
					VAR periph_clk_init.Sai2ClockSelection,       		init = RCC_SAI2CLKSOURCE_PLLSAI+1,        	ev = init
					VAR periph_clk_init.PLLSAIDivQ,       				init = RCC_SAI2CLKSOURCE_PLLSAI,        	ev = init     
		            VAR periph_clk_init.Clk48ClockSelection,       		init = RCC_CLK48SOURCE_PLLSAIP,             ev = init

					--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)
					VAR periph_clk_init.PLLSAI.PLLSAIN,         		init = 50,                             		ev = init   

					--Specifies the division factor for 48MHz clock.      
					VAR periph_clk_init.PLLSAI.PLLSAIP,         		init = 0x100,                            	ev = init
            
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for minimum value

					--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG
					VAR PTU_RCC_BASE.CFGR,                  			init = 0x0,                             	ev = init

					--Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register 
					VAR PTU_RCC_BASE.PLLSAICFGR,            			init = 0x0,                             	ev = 0x1000C80
						
					--Disable the PLLI2S/Enable the PLLI2S  
					VAR PTU_RCC_BASE.CR,                    			init = 0x0,                             	ev = RCC_CR_PLLSAION
				
			COMMENT OUTPUT SECTION:         
						
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
					VAR ret_HalRccExPeriphCLKConfig,        			init = HAL_ERROR,                          	ev = HAL_TIMEOUT
               
        SIMUL
			--Get Start Tick
			STUB  HALGetTick() 100
		   
			STUB  HALGetTick() 50
		   
			STUB  HALGetTick() 200		             
                     
         END SIMUL   
		 
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
		
    END ELEMENT

    END TEST -- TEST 75

TEST 76
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD>
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-034]
	COMMENT The function does the following
	COMMENT 1.Calls the macro __HAL_RCC_PLLSAI_CONFIG to configure PLLSAI clock source with the below parameters
	COMMENT - PLLSAIN of PLLSAI of periph_clk_init.
	COMMENT - Result of PLLSAICFGR of RCC bitwise AND RCC_PLLSAICFGR_PLLSAIP right shifted by POSITION_VAL with RCC_PLLSAICFGR_PLLSAIP as parameter.
	COMMENT - PLLSAIQ of PLLSAI of periph_clk_init.
	COMMENT - Result of PLLSAICFGR of RCC bitwise AND  RCC_PLLI2SCFGR_PLLI2SR right shifted by POSITION_VAL with RCC_PLLSAICFGR_PLLSAIR as parameter.
	COMMENT 2.Calls the macro __HAL_RCC_PLLSAI_CLKDIVQ_CFG to configure PLLSAI clock division factor with PLLSAIDivQ of periph_clk_init as parameter.
	COMMENT when	
	COMMENT 1.	 PLL SAI is equal to ONE
	COMMENT 2.	 (COND1 and COND2) or ( COND3 and COND4) is TRUE.
	COMMENT Where
	COMMENT COND1 : Result  of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI1 is equal to RCC_PERIPHCLK_SAI1.
	COMMENT COND2: Sai1ClockSelection of periph_clk_init is not equal to RCC_SAI1CLKSOURCE_PLLSAI.
	COMMENT COND3: Result  of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI2 is equal to RCC_PERIPHCLK_SAI2.
	COMMENT COND4: Sai2ClockSelection of periph_clk_init is equal to RCC_SAI2CLKSOURCE_PLLSAI.
	COMMENT modified and multiple conditions is covered for TFTT.
	COMMENT Equivalence Class 5, 9, 11, 14
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--Holds the member values of the structure periph_clk_init
					VAR periph_clk_init.PeriphClockSelection,       	init = 0x00380000U,              ev = init   
					VAR periph_clk_init.Sai1ClockSelection,       		init = (T_UINT32)0x00000000U+1,        	ev = init  
					VAR periph_clk_init.Sai2ClockSelection,       	init = RCC_SAI2CLKSOURCE_PLLSAI,        ev = init
					VAR periph_clk_init.PLLSAIDivQ,       				init = RCC_SAI2CLKSOURCE_PLLSAI,        ev = init     
		            VAR periph_clk_init.Clk48ClockSelection,       	init = RCC_CLK48SOURCE_PLLSAIP,                ev = init

					--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)
					VAR periph_clk_init.PLLSAI.PLLSAIN,         	init = 50,                             	ev = init   

					--Specifies the division factor for 48MHz clock.      
					VAR periph_clk_init.PLLSAI.PLLSAIP,         	init = (T_UINT32)0xFFFFFFFF,                      ev = init
            
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for minimum value

					--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG
						VAR PTU_RCC_BASE.CFGR,                  		init = 0x0,                             ev = init

					--Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register 
						VAR PTU_RCC_BASE.PLLSAICFGR,            		init = 0x0,                             ev = 0xFFFF0C80
						
					--Disable the PLLI2S/Enable the PLLI2S  
						VAR PTU_RCC_BASE.CR,                    		init = 0x0,                             ev = RCC_CR_PLLSAION
				
			COMMENT OUTPUT SECTION:         
						
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
						VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                          ev = HAL_TIMEOUT
               
        SIMUL
			--Get Start Tick
			STUB  HALGetTick() 100
		   
			STUB  HALGetTick() 50
		   
			STUB  HALGetTick() 200		             
                     
         END SIMUL   
		 
        -- Calling the Unit Under Test :              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
		
    END ELEMENT

    END TEST -- TEST 76


TEST 70
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD> 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-029]
	COMMENT The function does nothing
	COMMENT when
	COMMENT 1.PLL I2S is equal to ONE or PeriphClockSelection of  periph_clk_init is not equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT 2.(COND1 and COND2) or ( COND3 and COND4) is FALSE.
	COMMENT Where
	COMMENT COND1: Result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI1 is not equal to RCC_PERIPHCLK_SAI1.
	COMMENT COND2: Sai1ClockSelection of  periph_clk_init is equal to RCC_SAI1CLKSOURCE_PLLI2S.
	COMMENT COND3:Result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI2 is not equal to RCC_PERIPHCLK_SAI2.
	COMMENT COND4: Sai2ClockSelection of periph_clk_init is equal to RCC_SAI2CLKSOURCE_PLLI2S. 
	COMMENT modified and multiple conditions is covered for FXFX.
	COMMENT Equivalence Class 10, 9, 16, 15
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --The Extended Clock to be configured.
            VAR periph_clk_init.PeriphClockSelection,       init = 0x1000001,                   	ev = init

		--Specifies I2S Clock source Selection.
            VAR periph_clk_init.Sai1ClockSelection,      	init = RCC_SAI1CLKSOURCE_PLLI2S,             	ev = init   
			VAR periph_clk_init.Sai2ClockSelection,      	init = RCC_SAI2CLKSOURCE_PLLI2S,             	ev = init  			
    
		--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)
            VAR periph_clk_init.PLLI2S.PLLI2SN,         	init = 50,                             		ev = init   

		--SSpecifies the division factor for SPDIF-RX clock  
            VAR periph_clk_init.PLLI2S.PLLI2SP,         	init = 2,                             		ev = init
            
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

		--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG
            VAR PTU_RCC_BASE.CFGR,                  		init = 0x0,                             		ev = 0x0

		--Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register 
            VAR PTU_RCC_BASE.PLLI2SCFGR,            		init = 0x0,                             		ev = 0x20C80
            
		--Disable the PLLI2S/Enable the PLLI2S  
            VAR PTU_RCC_BASE.CR,                    		init = 0x0,                             		ev = 0x4000000
        
        COMMENT OUTPUT SECTION:         
                
		--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_TIMEOUT
               
         SIMUL
                --Get Start Tick
                STUB  HALGetTick() 100
               
                STUB  HALGetTick() 50
               
                STUB  HALGetTick() 200
               
                     
         END SIMUL
               
                      
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 70

TEST 71
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD> 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-036]
	COMMENT The function does the following :
	COMMENT 1.Calls the macro __HAL_RCC_PLLI2S_CONFIG to configure PLLI2S clock source with its parameters as mentioned below:
	COMMENT  - PLLI2SN  of PLLI2S of periph_clk_init.
	COMMENT  - PLLI2SCFGR of RCC bitwise AND with RCC_PLLI2SCFGR_PLLI2SP right shifted by  POSITION_VAL with parameter RCC_PLLI2SCFGR_PLLI2SP.
	COMMENT - PLLI2SQ of PLLI2S of periph_clk_init
	COMMENT - PLLI2SCFGR of RCC bitwise AND with RCC_PLLI2SCFGR_PLLI2SR right shifted by     POSITION_VAL with parameter RCC_PLLI2SCFGR_PLLI2SR.
	COMMENT 2.Calls the macro __HAL_RCC_PLLI2S_CLKDIVQ_CFG to configure the PLLI2S division factor with PLLI2SDivQ of periph_clk_init as its parameter.
	COMMENT when
	COMMENT 1.PLL I2S is not equal to ONE or PeriphClockSelection of  periph_clk_init is not equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT 2.(COND1 and COND2) or ( COND3 and COND4) is TRUE.
	COMMENT Where
	COMMENT COND1: Result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI1 is equal to RCC_PERIPHCLK_SAI1.
	COMMENT COND2: Sai1ClockSelection of  periph_clk_init is equal to RCC_SAI1CLKSOURCE_PLLI2S.
	COMMENT COND3: Result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI2 is equal to RCC_PERIPHCLK_SAI2.
	COMMENT COND4: Sai2ClockSelection of periph_clk_init is equal to RCC_SAI2CLKSOURCE_PLLI2S. 
	COMMENT modified and multiple conditions is covered for FXFX.
	COMMENT Equivalence Class 10, 7, 16, 13
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --Holds the member values of structure periph_clk_init 

            VAR periph_clk_init.PeriphClockSelection,       init = 0x00200008U,                   	ev = init


            VAR periph_clk_init.Clk48ClockSelection,       	init = RCC_CLK48SOURCE_PLLSAIP+1,                ev = init

		--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50 )
            VAR periph_clk_init.PLLSAI.PLLSAIN ,         	init = 50,                             		ev = init   
       
		--Specifies the division factor for SAI1 clock(Min_Data = 2)
            VAR periph_clk_init.PLLSAI.PLLSAIR,         	init = 2,                             		ev = init

		--Specifies the PLLSAI division factor for LTDC clock
            VAR periph_clk_init.PLLSAIDivR,         	init = 2,                             		ev = init
             
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

		--Holds the member values of structure T_RCC (Configure the CLK48 source)
            VAR PTU_RCC_BASE.DCKCFGR2,            		init = 0x0,                             		ev = (T_UINT32)0x8000001

		--Disable the PLLI2S/Enable the PLLI2S  
            VAR PTU_RCC_BASE.CR,                    		init = 0x0,                             		ev = (T_UINT32)0x10000000

		--Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register 
            VAR PTU_RCC_BASE.PLLSAICFGR,            		init = 0x0,                             		ev = 0x20000C80
		       
        COMMENT OUTPUT SECTION:         
                
		--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_TIMEOUT
               
         SIMUL

                 --Get Start Tick
                STUB  HALGetTick() 50
               
                STUB  HALGetTick() 250
               
                STUB  HALGetTick() 200             
                          
                                    
         END SIMUL
               
                      
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 71

TEST 77
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD> 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-029]
	COMMENT The function does nothing
	COMMENT when
	COMMENT 1.PLL I2S is equal to ONE or PeriphClockSelection of  periph_clk_init is equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT 2.(COND1 and COND2) or ( COND3 and COND4) is TRUE.
	COMMENT Where
	COMMENT COND1: Result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI1 is equal to RCC_PERIPHCLK_SAI1.
	COMMENT COND2: Sai1ClockSelection of  periph_clk_init is not equal to RCC_SAI1CLKSOURCE_PLLI2S.
	COMMENT COND3: Result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI2 is not equal to RCC_PERIPHCLK_SAI2.
	COMMENT COND4: Sai2ClockSelection of periph_clk_init is not equal to RCC_SAI2CLKSOURCE_PLLI2S. 
	COMMENT modified and multiple conditions is covered for TFFX.
	COMMENT Equivalence Class 5, 7, 16, 13
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-030]
	COMMENT The function calls the macro __HAL_RCC_PLLI2S_CONFIG to configure PLLI2S clock source with the below parameters 
	COMMENT -	PLLI2SN of PLLI2S of periph_clk_init 
	COMMENT -	PLLI2SP of PLLI2S of periph_clk_init
	COMMENT -	PLLI2SCFGR of RCC bitwise AND with RCC_PLLI2SCFGR_PLLI2SQ right shifted by POSITION_VAL with parameter RCC_PLLI2SCFGR_PLLI2SQ.
	COMMENT -	PLLI2SCFGR of RCC bitwise AND with RCC_PLLI2SCFGR_PLLI2SR right shifted by POSITION_VAL with parameter RCC_PLLI2SCFGR_PLLI2SR.
	COMMENT when
	COMMENT 1.PLL I2S is equal to ONE.
	COMMENT 2.result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SPDIFRX is equal to RCC_PERIPHCLK_SPDIFRX.
	COMMENT Equivalence Class 17	
	COMMENT </TD>


    ELEMENT
        
        COMMENT INPUT SECTION:
            --The Extended Clock to be configured.
            VAR periph_clk_init.PeriphClockSelection,       init = 0x01080000U,                   	ev = init

		--Specifies I2S Clock source Selection.
            VAR periph_clk_init.Sai1ClockSelection,      	init = RCC_SAI1CLKSOURCE_PLLI2S+1,             	ev = init  

		--Specifies I2S Clock source Selection.
            VAR periph_clk_init.Sai2ClockSelection,      	init = RCC_SAI2CLKSOURCE_PLLI2S+1,             	ev = init          
    
		--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)
            VAR periph_clk_init.PLLI2S.PLLI2SN,         	init = 50,                             		ev = init   

		--Specifies the division factor for SPDIF-RX clock.     
            VAR periph_clk_init.PLLI2S.PLLI2SP,         	init = 2,                             		ev = init
            
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

		--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG
            VAR PTU_RCC_BASE.CFGR,                  		init = 0x0,                             		ev = init

		--Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register 
            VAR PTU_RCC_BASE.PLLI2SCFGR,            		init = 0x0,                             		ev = 0x20C80
            
		--Disable the PLLI2S/Enable the PLLI2S  
            VAR PTU_RCC_BASE.CR,                    		init = 0x0,                             		ev = 0x4000000
        
        COMMENT OUTPUT SECTION:         
                
		--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_TIMEOUT
               
         SIMUL
                --Get Start Tick
                STUB  HALGetTick() 100
               
                STUB  HALGetTick() 50
               
                STUB  HALGetTick() 200
               
                     
         END SIMUL
               
                      
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 77

TEST 78
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD> 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-029]
	COMMENT The function does nothing
	COMMENT when
	COMMENT 1.PLL I2S is equal to ONE or PeriphClockSelection of  periph_clk_init is not equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT 2.(COND1 and COND2) or ( COND3 and COND4) is FALSE.
	COMMENT Where
	COMMENT COND1: Result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI1 is equal to RCC_PERIPHCLK_SAI1.
	COMMENT COND2: Sai1ClockSelection of  periph_clk_init is not equal to RCC_SAI1CLKSOURCE_PLLI2S.
	COMMENT COND3: Result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI2 is equal to RCC_PERIPHCLK_SAI2.
	COMMENT COND4: Sai2ClockSelection of periph_clk_init is not equal to RCC_SAI2CLKSOURCE_PLLI2S. 
	COMMENT modified and multiple conditions is covered for TFTF.
	COMMENT Equivalence Class 5, 7, 11, 13
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-030]
	COMMENT The function calls the macro __HAL_RCC_PLLI2S_CONFIG to configure PLLI2S clock source with the below parameters 
	COMMENT -	PLLI2SN of PLLI2S of periph_clk_init 
	COMMENT -	PLLI2SP of PLLI2S of periph_clk_init
	COMMENT -	PLLI2SCFGR of RCC bitwise AND with RCC_PLLI2SCFGR_PLLI2SQ right shifted by POSITION_VAL with parameter RCC_PLLI2SCFGR_PLLI2SQ.
	COMMENT -	PLLI2SCFGR of RCC bitwise AND with RCC_PLLI2SCFGR_PLLI2SR right shifted by POSITION_VAL with parameter RCC_PLLI2SCFGR_PLLI2SR.
	COMMENT when
	COMMENT 1.PLL I2S is equal to ONE.
	COMMENT 2.result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SPDIFRX is equal to RCC_PERIPHCLK_SPDIFRX.
	COMMENT Equivalence Class 17			
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --The Extended Clock to be configured.
            VAR periph_clk_init.PeriphClockSelection,       init = 0x01180000U,                   	ev = init

		--Specifies I2S Clock source Selection.
            VAR periph_clk_init.Sai1ClockSelection,      	init = RCC_SAI1CLKSOURCE_PLLI2S+1,             	ev = init  

		--Specifies I2S Clock source Selection.
            VAR periph_clk_init.Sai2ClockSelection,      	init = RCC_SAI2CLKSOURCE_PLLI2S+1,             	ev = init          
    
		--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)
            VAR periph_clk_init.PLLI2S.PLLI2SN,         	init = 50,                             		ev = init   

		--Specifies the division factor for SPDIF-RX clock.     
            VAR periph_clk_init.PLLI2S.PLLI2SP,         	init = 2,                             		ev = init
            
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

		--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG
            VAR PTU_RCC_BASE.CFGR,                  		init = 0x0,                             		ev = init

		--Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register 
            VAR PTU_RCC_BASE.PLLI2SCFGR,            		init = 0x0,                             		ev = 0x20C80
            
		--Disable the PLLI2S/Enable the PLLI2S  
            VAR PTU_RCC_BASE.CR,                    		init = 0x0,                             		ev = 0x4000000
        
        COMMENT OUTPUT SECTION:         
                
		--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_TIMEOUT
               
         SIMUL
                --Get Start Tick
                STUB  HALGetTick() 100
               
                STUB  HALGetTick() 50
               
                STUB  HALGetTick() 200
               
                     
         END SIMUL
               
                      
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 78


TEST 79
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD> 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-029]
	COMMENT The function does nothing
	COMMENT when
	COMMENT 1.PLL I2S is equal to ONE or PeriphClockSelection of  periph_clk_init is not equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT 2.(COND1 and COND2) or ( COND3 and COND4) is FALSE.
	COMMENT Where
	COMMENT COND1 : Result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI1 is equal to RCC_PERIPHCLK_SAI1.
	COMMENT COND2: Sai1ClockSelection of  periph_clk_init is not equal to RCC_SAI1CLKSOURCE_PLLI2S.
	COMMENT COND3:Result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI2 is equal to RCC_PERIPHCLK_SAI2.
	COMMENT COND4: Sai2ClockSelection of periph_clk_init is not equal to RCC_SAI2CLKSOURCE_PLLI2S. 
	COMMENT modified and multiple conditions is covered for TFXF.
	COMMENT Equivalence Class 5, 7, 16, 13
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-030]
	COMMENT The function calls the macro __HAL_RCC_PLLI2S_CONFIG to configure PLLI2S clock source with the below parameters 
	COMMENT -	PLLI2SN of PLLI2S of periph_clk_init 
	COMMENT -	PLLI2SP of PLLI2S of periph_clk_init
	COMMENT -	PLLI2SCFGR of RCC bitwise AND with RCC_PLLI2SCFGR_PLLI2SQ right shifted by POSITION_VAL with parameter RCC_PLLI2SCFGR_PLLI2SQ.
	COMMENT -	PLLI2SCFGR of RCC bitwise AND with RCC_PLLI2SCFGR_PLLI2SR right shifted by POSITION_VAL with parameter RCC_PLLI2SCFGR_PLLI2SR.
	COMMENT when
	COMMENT 1.PLL I2S is equal to ONE.
	COMMENT 2.result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SPDIFRX is equal to RCC_PERIPHCLK_SPDIFRX.
	COMMENT Equivalence Class 17	
	COMMENT </TD>

    ELEMENT
        
        COMMENT INPUT SECTION:
            --The Extended Clock to be configured.
            VAR periph_clk_init.PeriphClockSelection,       init = 0x01100000U,                   	ev = init

		--Specifies I2S Clock source Selection.
            VAR periph_clk_init.Sai1ClockSelection,      	init = RCC_SAI1CLKSOURCE_PLLI2S+1,             	ev = init  

		--Specifies I2S Clock source Selection.
            VAR periph_clk_init.Sai2ClockSelection,      	init = RCC_SAI2CLKSOURCE_PLLI2S+1,             	ev = init          
    
		--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)
            VAR periph_clk_init.PLLI2S.PLLI2SN,         	init = 50,                             		ev = init   

		--Specifies the division factor for SPDIF-RX clock.     
            VAR periph_clk_init.PLLI2S.PLLI2SP,         	init = 2,                             		ev = init
            
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

		--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG
            VAR PTU_RCC_BASE.CFGR,                  		init = 0x0,                             		ev = init

		--Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register 
            VAR PTU_RCC_BASE.PLLI2SCFGR,            		init = 0x0,                             		ev = 0x20C80
            
		--Disable the PLLI2S/Enable the PLLI2S  
            VAR PTU_RCC_BASE.CR,                    		init = 0x0,                             		ev = 0x4000000
        
        COMMENT OUTPUT SECTION:         
                
		--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_TIMEOUT
               
         SIMUL
                --Get Start Tick
                STUB  HALGetTick() 100
               
                STUB  HALGetTick() 50
               
                STUB  HALGetTick() 200
               
                     
         END SIMUL
               
                      
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 79

TEST 80
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD> 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-029]
	COMMENT The function does nothing
	COMMENT when
	COMMENT 1.PLL I2S is equal to ONE or PeriphClockSelection of  periph_clk_init is not equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT 2.(COND1 and COND2) or ( COND3 and COND4) is FALSE.
	COMMENT Where
	COMMENT COND1 : Result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI1 is equal to RCC_PERIPHCLK_SAI1.
	COMMENT COND2: Sai1ClockSelection of  periph_clk_init is equal to RCC_SAI1CLKSOURCE_PLLI2S.
	COMMENT COND3:Result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI2 is equal to RCC_PERIPHCLK_SAI2.
	COMMENT COND4: Sai2ClockSelection of periph_clk_init is not equal to RCC_SAI2CLKSOURCE_PLLI2S. 
	COMMENT modified and multiple conditions is covered for TFTF.
	COMMENT Equivalence Class 5, 7, 11, 13
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-030]
	COMMENT The function calls the macro __HAL_RCC_PLLI2S_CONFIG to configure PLLI2S clock source with the below parameters 
	COMMENT -	PLLI2SN of PLLI2S of periph_clk_init 
	COMMENT -	PLLI2SP of PLLI2S of periph_clk_init
	COMMENT -	PLLI2SCFGR of RCC bitwise AND with RCC_PLLI2SCFGR_PLLI2SQ right shifted by POSITION_VAL with parameter RCC_PLLI2SCFGR_PLLI2SQ.
	COMMENT -	PLLI2SCFGR of RCC bitwise AND with RCC_PLLI2SCFGR_PLLI2SR right shifted by POSITION_VAL with parameter RCC_PLLI2SCFGR_PLLI2SR.
	COMMENT when
	COMMENT 1.PLL I2S is equal to ONE.
	COMMENT 2.result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SPDIFRX is equal to RCC_PERIPHCLK_SPDIFRX.
	COMMENT Equivalence Class 17	
	COMMENT </TD>	

    ELEMENT
        
        COMMENT INPUT SECTION:
            --The Extended Clock to be configured.
            VAR periph_clk_init.PeriphClockSelection,       init = 0x01180000U,                   	ev = init

		--Specifies I2S Clock source Selection.
            VAR periph_clk_init.Sai1ClockSelection,      	init = RCC_SAI1CLKSOURCE_PLLI2S+1,             	ev = init  

		--Specifies I2S Clock source Selection.
            VAR periph_clk_init.Sai2ClockSelection,      	init = RCC_SAI2CLKSOURCE_PLLI2S+1,             	ev = init          
    
		--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)
            VAR periph_clk_init.PLLI2S.PLLI2SN,         	init = 50,                             		ev = init   

		--Specifies the division factor for SPDIF-RX clock.     
            VAR periph_clk_init.PLLI2S.PLLI2SP,         	init = 2,                             		ev = init
            
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

		--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG
            VAR PTU_RCC_BASE.CFGR,                  		init = 0x0,                             		ev = init

		--Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register 
            VAR PTU_RCC_BASE.PLLI2SCFGR,            		init = 0x0,                             		ev = 0x20C80
            
		--Disable the PLLI2S/Enable the PLLI2S  
            VAR PTU_RCC_BASE.CR,                    		init = 0x0,                             		ev = 0x4000000
        
        COMMENT OUTPUT SECTION:         
                
		--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_TIMEOUT
               
         SIMUL
                --Get Start Tick
                STUB  HALGetTick() 100
               
                STUB  HALGetTick() 50
               
                STUB  HALGetTick() 200
               
                     
         END SIMUL
               
                      
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 80

TEST 81
FAMILY nominal
	COMMENT Test Description 
	COMMENT <TD> 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-029]
	COMMENT The function does the following :
	COMMENT 1.Calls the macro __HAL_RCC_PLLI2S_CONFIG to configure PLLI2S clock source with its parameters as mentioned below:
	COMMENT  - PLLI2SN  of PLLI2S of periph_clk_init.
	COMMENT  - PLLI2SCFGR of RCC bitwise AND with RCC_PLLI2SCFGR_PLLI2SP right shifted by  POSITION_VAL with parameter RCC_PLLI2SCFGR_PLLI2SP.
	COMMENT - PLLI2SQ of PLLI2S of periph_clk_init
	COMMENT - PLLI2SCFGR of RCC bitwise AND with RCC_PLLI2SCFGR_PLLI2SR right shifted by     POSITION_VAL with parameter RCC_PLLI2SCFGR_PLLI2SR.
	COMMENT 2.Calls the macro __HAL_RCC_PLLI2S_CLKDIVQ_CFG to configure the PLLI2S division factor with PLLI2SDivQ of periph_clk_init as its parameter.
	COMMENT when
	COMMENT 1.PLL I2S is equal to ONE or PeriphClockSelection of  periph_clk_init is equal to RCC_PERIPHCLK_PLLI2S.
	COMMENT 2.(COND1 and COND2) or ( COND3 and COND4) is TRUE.
	COMMENT Where
	COMMENT COND1: Result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI1 is equal to RCC_PERIPHCLK_SAI1.
	COMMENT COND2: Sai1ClockSelection of  periph_clk_init is equal to RCC_SAI1CLKSOURCE_PLLI2S.
	COMMENT COND3: Result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SAI2 is equal to RCC_PERIPHCLK_SAI2.
	COMMENT COND4: Sai2ClockSelection of periph_clk_init is equal to RCC_SAI2CLKSOURCE_PLLI2S. 
	COMMENT modified and multiple conditions is covered for TFTT.
	COMMENT Equivalence Class 5, 7, 11, 12
	COMMENT 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-030]
	COMMENT The function calls the macro __HAL_RCC_PLLI2S_CONFIG to configure PLLI2S clock source with the below parameters 
	COMMENT -	PLLI2SN of PLLI2S of periph_clk_init 
	COMMENT -	PLLI2SP of PLLI2S of periph_clk_init
	COMMENT -	PLLI2SCFGR of RCC bitwise AND with RCC_PLLI2SCFGR_PLLI2SQ right shifted by POSITION_VAL with parameter RCC_PLLI2SCFGR_PLLI2SQ.
	COMMENT -	PLLI2SCFGR of RCC bitwise AND with RCC_PLLI2SCFGR_PLLI2SR right shifted by POSITION_VAL with parameter RCC_PLLI2SCFGR_PLLI2SR.
	COMMENT when
	COMMENT 1.PLL I2S is equal to ONE.
	COMMENT 2.result of bitwise AND operation of PeriphClockSelection of periph_clk_init and RCC_PERIPHCLK_SPDIFRX is equal to RCC_PERIPHCLK_SPDIFRX.
	COMMENT Equivalence Class 17	
	
	COMMENT </TD>
	
    ELEMENT
        
        COMMENT INPUT SECTION:
            --The Extended Clock to be configured.
            VAR periph_clk_init.PeriphClockSelection,       init = 0x01180000U,                   	ev = init

		--Specifies I2S Clock source Selection.
            VAR periph_clk_init.Sai1ClockSelection,      	init = RCC_SAI1CLKSOURCE_PLLI2S+1,             	ev = init  

		--Specifies I2S Clock source Selection.
            VAR periph_clk_init.Sai2ClockSelection,      	init = RCC_SAI2CLKSOURCE_PLLI2S,             	ev = init          
    
		--Specifies the multiplication factor for PLLI2S VCO output clock (Min_Data = 50)
            VAR periph_clk_init.PLLI2S.PLLI2SN,         	init = 50,                             		ev = init   

		--Specifies the division factor for I2S clock (Min_Data = 2)     
            VAR periph_clk_init.PLLI2S.PLLI2SR,         	init = 2,                             		ev = init
			
				--Specifies the division factor for SPDIF-RX clock.     
            VAR periph_clk_init.PLLI2S.PLLI2SP,         	init = 2,                             		ev = init
            
        COMMENT INPUT/OUTPUT SECTION:

            --RCC members tested for minimum value

		--Configure I2S Clock source by calling macro __HAL_RCC_I2S_CONFIG
            VAR PTU_RCC_BASE.CFGR,                  		init = 0x0,                             		ev = init

		--Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register 
            VAR PTU_RCC_BASE.PLLI2SCFGR,            		init = 0x0,                             		ev = 0x20C80
            
		--Disable the PLLI2S/Enable the PLLI2S  
            VAR PTU_RCC_BASE.CR,                    		init = 0x0,                             		ev = 0x4000000
        
        COMMENT OUTPUT SECTION:         
                
		--holds the return value of the function ret_HalRccExPeriphCLKConfig
            VAR ret_HalRccExPeriphCLKConfig,        		init = HAL_ERROR,                           	ev = HAL_TIMEOUT
               
         SIMUL
                --Get Start Tick
                STUB  HALGetTick() 100
               
                STUB  HALGetTick() 50
               
                STUB  HALGetTick() 200
               
                     
         END SIMUL
               
                      
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

    END TEST -- TEST 81
	
--TEST 84
--FAMILY nominal
--
--	COMMENT Test Description 
--	COMMENT <TD>
--	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-001]
--	COMMENT This test case is evaluated by passing Invalid Reference to periph_clk_init parameter.
--	COMMENT Equivalence Class 94
--	COMMENT </TD>
--
--    ELEMENT
--        
--			COMMENT INPUT SECTION:
--			
--					--None
--            
--			COMMENT INPUT/OUTPUT SECTION:
--
--					--None
--
--			COMMENT OUTPUT SECTION:         	
--		
--					--None
--               
--         SIMUL
--            --No stub calls             
--                     
--        END SIMUL
--               
--        -- Calling the Unit Under Test :              
--        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(NULL);
--    END ELEMENT
--
--END TEST -- TEST 84

TEST 85
FAMILY nominal

	COMMENT Test Description 
	COMMENT <TD> 
	COMMENT [hdulibstm32f7xxhalrccex-HalRccExPeriphCLKConfig-DB-LLR-007]
	COMMENT The function does the following 
	COMMENT a.Set tick start to return value of the function HALGetTick.
	COMMENT b.Loops till return value of macro __HAL_RCC_GET_FLAG with parameter RCC_FLAG_LSERDY is equal to RESET and does the following,
	COMMENT 	a) does nothing when difference of return value of HALGetTick and tick start is equal to RCC_LSE_TIMEOUT_VALUE.
	COMMENT 	b) returns HAL_TIMEOUT when difference of return value of HALGetTick and tick start is greater than RCC_LSE_TIMEOUT_VALUE otherwise do nothing. 
	COMMENT when 
	COMMENT 1.Result of PeriphClockSelection of periph_clk_init bitwise AND RCC_PERIPHCLK_RTC is equal to RCC_PERIPHCLK_RTC.
	COMMENT 2. register 0 is not equal to ZERO and register 0 is not equal to result of 
	COMMENT bitwise AND operation of RTCClockSelection of periph_clk_init and RCC_BDCR_RTCSEL
	COMMENT 3.Return value of the macro HAL_IS_BIT_SET with  BDCR of RCC and RCC_BDCR_LSEON is not equal to RESET.
	COMMENT while loop is covered 2 or more times.
	COMMENT Equivalence Class 26, 28, 30, 32,34, 35	
	COMMENT </TD>

    ELEMENT
        
			COMMENT INPUT SECTION:
					--holds the member value of the structure periph_clk_init
					VAR periph_clk_init.PeriphClockSelection,       init = (T_UINT32)0xFFFFFFFF,                   			ev = init
					VAR periph_clk_init.RTCClockSelection,       	init = 0,                   					ev = init
					VAR periph_clk_init.I2sClockSelection,       	init = 1,                   					ev = init
					VAR periph_clk_init.Sai1ClockSelection,       	init = 1,                   					ev = init
					VAR periph_clk_init.Sai2ClockSelection,       	init = 1,                   					ev = init
					
				 
			COMMENT INPUT/OUTPUT SECTION:

					--RCC members tested for minimum value

					--Enable Power Clock
					VAR PTU_RCC_BASE.APB1ENR ,            			init = (T_UINT32)0xFFFFFFFF,                    ev = init

					--Enable write access to Backup domain
					VAR PTU_PWR_BASE.CR1 ,            				init = (T_UINT32)0xFFFFFFFF,                    ev = init

					--Enable Power Clock
					VAR PTU_RCC_BASE.BDCR ,            				init = 0x301,                         			ev = 0x00000001U

			COMMENT OUTPUT SECTION:         
							
					--holds the return value of the function ret_HalRccExPeriphCLKConfig
						VAR ret_HalRccExPeriphCLKConfig,        	init = HAL_ERROR,                          		ev = HAL_TIMEOUT
               
         SIMUL
                --Get Start Tick
			--Get Start Tick
		   
            STUB  HALGetTick() 100
               
            STUB  HALGetTick() 4000
               
            STUB  HALGetTick() 4000 

 		STUB  HALGetTick() 10000
                                
        END SIMUL
               
        --Calling unit under test              
        #ret_HalRccExPeriphCLKConfig = HalRccExPeriphCLKConfig(&periph_clk_init);
        END ELEMENT

END TEST -- TEST 85

END SERVICE -- HalRccExPeriphCLKConfig
